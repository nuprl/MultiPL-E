name: HumanEval_160_do_algebra
language: php
results:
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        if ($value == 0) {\n            continue;\n        }\n        $result\
    \ = $result + ($operand[$key] * $value);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkb9cfrm3.php:36\n\
    Stack trace:\n#0 /tmp/tmpkb9cfrm3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkb9cfrm3.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n}\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptn_lyxcq.php:28\n\
    Stack trace:\n#0 /tmp/tmptn_lyxcq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptn_lyxcq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result = $result\
    \ + $operand[$key];\n        } elseif ($key == '-') {\n            $result = $result\
    \ - $operand[$key];\n        } elseif ($key == '*') {\n            $result = $result\
    \ * $operand[$key];\n        } elseif ($key == '/') {\n            $result = $result\
    \ / $operand[$key];\n        } elseif ($key == '**') {\n            $result =\
    \ $result ** $operand[$key];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub903f0l.php:44\n\
    Stack trace:\n#0 /tmp/tmpub903f0l.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpub903f0l.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81tbrice.php:28\n\
    Stack trace:\n#0 /tmp/tmp81tbrice.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp81tbrice.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result += $operand[$key] * $value;\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp2juqd66r.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp2juqd66r.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp2juqd66r.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2juqd66r.php:32\n\
    Stack trace:\n#0 /tmp/tmp2juqd66r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2juqd66r.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8f1zp5nh.php:28\n\
    Stack trace:\n#0 /tmp/tmp8f1zp5nh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8f1zp5nh.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnbkuvfg.php:28\n\
    Stack trace:\n#0 /tmp/tmphnbkuvfg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphnbkuvfg.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        $result[$key] = $operand[$key];\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvx55yc1.php:33\n\
    Stack trace:\n#0 /tmp/tmpnvx55yc1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnvx55yc1.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70w2igoq.php:28\n\
    Stack trace:\n#0 /tmp/tmp70w2igoq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp70w2igoq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8k8ufj4g.php:28\n\
    Stack trace:\n#0 /tmp/tmp8k8ufj4g.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8k8ufj4g.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = $operand[0];\n    for ($i\
    \ = 1; $i < count($operand); $i++) {\n        $result = $result . $operator[$i\
    \ - 1] * $operand[$i];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfztkfao4.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpfztkfao4.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpfztkfao4.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfztkfao4.php:33\n\
    Stack trace:\n#0 /tmp/tmpfztkfao4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfztkfao4.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixkdrd6b.php:28\n\
    Stack trace:\n#0 /tmp/tmpixkdrd6b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpixkdrd6b.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kakxj39.php:28\n\
    Stack trace:\n#0 /tmp/tmp3kakxj39.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3kakxj39.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpca4nbmrf.php:28\n\
    Stack trace:\n#0 /tmp/tmpca4nbmrf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpca4nbmrf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g7nfd7p.php:28\n\
    Stack trace:\n#0 /tmp/tmp8g7nfd7p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8g7nfd7p.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wdhnhhw.php:28\n\
    Stack trace:\n#0 /tmp/tmp6wdhnhhw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6wdhnhhw.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmphk0fmmma.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmphk0fmmma.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmphk0fmmma.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphk0fmmma.php:32\n\
    Stack trace:\n#0 /tmp/tmphk0fmmma.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphk0fmmma.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpr54own53.php:23\n\
    Stack trace:\n#0 /tmp/tmpr54own53.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpr54own53.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpr54own53.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpr54own53.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmp_eku58ma.php:23\n\
    Stack trace:\n#0 /tmp/tmp_eku58ma.php(28): do_algebra(Array, Array)\n#1 /tmp/tmp_eku58ma.php(32):\
    \ candidate(Array, Array)\n#2 /tmp/tmp_eku58ma.php(37): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp_eku58ma.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplv0cfep0.php:28\n\
    Stack trace:\n#0 /tmp/tmplv0cfep0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplv0cfep0.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        if (in_array($value,\
    \ $operators)) {\n            $result[$key] = $operand[$key];\n        } else\
    \ {\n            $result[$key] = $operand[$key] * $operand[$key];\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyeeb5v6a.php:38\n\
    Stack trace:\n#0 /tmp/tmpyeeb5v6a.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyeeb5v6a.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4k1y78c.php:28\n\
    Stack trace:\n#0 /tmp/tmps4k1y78c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmps4k1y78c.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5lmtg8q.php:28\n\
    Stack trace:\n#0 /tmp/tmpk5lmtg8q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk5lmtg8q.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmp8my3nr9z.php:23\n\
    Stack trace:\n#0 /tmp/tmp8my3nr9z.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp8my3nr9z.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp8my3nr9z.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp8my3nr9z.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n}\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvk_ad7s4.php:28\n\
    Stack trace:\n#0 /tmp/tmpvk_ad7s4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvk_ad7s4.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6r9i0owi.php:28\n\
    Stack trace:\n#0 /tmp/tmp6r9i0owi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6r9i0owi.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpkwrmewxz.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpkwrmewxz.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpkwrmewxz.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwrmewxz.php:33\n\
    Stack trace:\n#0 /tmp/tmpkwrmewxz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkwrmewxz.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbin1iiv7.php:29\n\
    Stack trace:\n#0 /tmp/tmpbin1iiv7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbin1iiv7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpout9ddg0.php:28\n\
    Stack trace:\n#0 /tmp/tmpout9ddg0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpout9ddg0.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpjqvvw9iz.php:23\n\
    Stack trace:\n#0 /tmp/tmpjqvvw9iz.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpjqvvw9iz.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpjqvvw9iz.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpjqvvw9iz.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operand as $key => $value) {\n\
    \        $result += (array_key_exists($key, $operator) ? $operator[$key]($value)\
    \ : $value);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpddtdm64q.php:23\n\
    Stack trace:\n#0 /tmp/tmpddtdm64q.php(28): do_algebra(Array, Array)\n#1 /tmp/tmpddtdm64q.php(32):\
    \ candidate(Array, Array)\n#2 /tmp/tmpddtdm64q.php(37): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpddtdm64q.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        switch\
    \ ($op) {\n            case '+':\n                $result = $result + $operand[0];\n\
    \                break;\n            case '-':\n                $result = $result\
    \ - $operand[0];\n                break;\n            case '*':\n            \
    \    $result = $result * $operand[0];\n                break;\n            case\
    \ '/':\n                $result = $result / $operand[0];\n                break;\n\
    \            case '**':\n                $result = $result ** $operand[0];\n \
    \               break;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhbro9f1.php:48\n\
    Stack trace:\n#0 /tmp/tmplhbro9f1.php(53): test()\n#1 {main}\n  thrown in /tmp/tmplhbro9f1.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    $length = count($operator);\n    $operands = array_slice($operand,\
    \ 0, $length-1);\n    foreach ($operators as $key => $value) {\n        switch\
    \ ($value) {\n            case '+':\n                $result[] = $operands[0]\
    \ + $operands[$length-1];\n                break;\n            case '-':\n   \
    \             $result[] = $operands[0] - $operands[$length-1];\n             \
    \   break;\n            case '*':\n                $result[] = $operands[0] *\
    \ $operands[$length-1];\n                break;\n            case '/':\n     \
    \           $result[] = $operands[0] / $operands[$length-1];\n               \
    \ break;\n            case '//':\n                $result[] = $operands[0] //\
    \ $operands[$length-1];\n                break;\n            case '**':\n    \
    \            $result[] = $operands[0] ** $operands[$length-1];\n             \
    \   break;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp64l8yt3h.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6svfkde5.php:28\n\
    Stack trace:\n#0 /tmp/tmp6svfkde5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6svfkde5.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\n\n$operator = array('+', '*', '-');\n\
    $operand = array(2, 3, 4, 5);\necho do_algebra($operator, $operand);\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktu_3oyr.php:32\n\
    Stack trace:\n#0 /tmp/tmpktu_3oyr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpktu_3oyr.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    $result[0] = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result[$i] = $operand[$i];\n        for ($j = 0; $j < count($operator);\
    \ $j++) {\n            $result[$i] -= $operand[$i] * $operators[$j];\n       \
    \ }\n    }\n    return $result[0];\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpp1azm17o.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmpp1azm17o.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmpp1azm17o.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmpp1azm17o.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmpp1azm17o.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmpp1azm17o.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmpp1azm17o.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmpp1azm17o.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmpp1azm17o.php on line\
    \ 27\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp1azm17o.php:37\n\
    Stack trace:\n#0 /tmp/tmpp1azm17o.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp1azm17o.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key === 0) {\n            $result = $operand[0];\n\
    \        } else {\n            $result = $operand[$key] + $result;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9ghtyjo.php:38\n\
    Stack trace:\n#0 /tmp/tmpw9ghtyjo.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpw9ghtyjo.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmp0wdvva52.php:23\n\
    Stack trace:\n#0 /tmp/tmp0wdvva52.php(28): do_algebra(Array, Array)\n#1 /tmp/tmp0wdvva52.php(32):\
    \ candidate(Array, Array)\n#2 /tmp/tmp0wdvva52.php(37): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp0wdvva52.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        switch ($value) {\n            case '+':\n   \
    \             $result = $result + $operand[$key];\n                break;\n  \
    \          case '-':\n                $result = $result - $operand[$key];\n  \
    \              break;\n            case '*':\n                $result = $result\
    \ * $operand[$key];\n                break;\n            case '/':\n         \
    \       $result = $result / $operand[$key];\n                break;\n        \
    \    case '**':\n                $result = $result ** $operand[$key];\n      \
    \          break;\n            default:\n                break;\n        }\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdebztc14.php:52\n\
    Stack trace:\n#0 /tmp/tmpdebztc14.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpdebztc14.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6n5lfdx9.php:28\n\
    Stack trace:\n#0 /tmp/tmp6n5lfdx9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6n5lfdx9.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnin4gkxb.php:28\n\
    Stack trace:\n#0 /tmp/tmpnin4gkxb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnin4gkxb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        if ($key <\
    \ 0 || $key >= count($operators)) {\n            echo \"Invalid operator: $value\\\
    n\";\n            return false;\n        }\n        $result[$key] = $operand[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28xyucr1.php:38\n\
    Stack trace:\n#0 /tmp/tmp28xyucr1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp28xyucr1.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        $result[$key]\
    \ = $operand[$key];\n    }\n    foreach ($operator as $key => $value) {\n    \
    \    $result[$key] = $operators[$key];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb7je6k42.php:37\n\
    Stack trace:\n#0 /tmp/tmpb7je6k42.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb7je6k42.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepugu_tj.php:28\n\
    Stack trace:\n#0 /tmp/tmpepugu_tj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpepugu_tj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1moko9i3.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp1moko9i3.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp1moko9i3.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1moko9i3.php:33\n\
    Stack trace:\n#0 /tmp/tmp1moko9i3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1moko9i3.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt2yfl2q.php:28\n\
    Stack trace:\n#0 /tmp/tmpdt2yfl2q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdt2yfl2q.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    $stack = array();\n    $stack[] = $operand[0];\n    $stack[]\
    \ = $operand[1];\n    foreach ($operator as $op) {\n        if (in_array($op,\
    \ $operators)) {\n            $result[] = $stack[$stackCount - 1];\n         \
    \   $stack[] = $stack[$stackCount - 1] + $stack[$stackCount - 2];\n          \
    \  $stackCount--;\n        } else {\n            $stack[] = $stack[$stackCount\
    \ - 1];\n            $stackCount--;\n        }\n    }\n    $result[] = $stack[$stackCount\
    \ - 1];\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudnlcsjt.php:45\n\
    Stack trace:\n#0 /tmp/tmpudnlcsjt.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpudnlcsjt.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpbzmyh99o.php:23\n\
    Stack trace:\n#0 /tmp/tmpbzmyh99o.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpbzmyh99o.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpbzmyh99o.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpbzmyh99o.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n    $result = 0;\n    foreach ($operand\
    \ as $key => $value) {\n        $result += (array_key_exists($key, $operator)\
    \ ? $operator[$key]($operand[$key]) : 0);\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmp53cfozo7.php:24\n\
    Stack trace:\n#0 /tmp/tmp53cfozo7.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp53cfozo7.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp53cfozo7.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp53cfozo7.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    $operators = array('+', '-', '*', '/', '//',\
    \ '**');\n    $operators_length = count($operators);\n    $operands_length = count($operand)\
    \ - 1;\n    \n    // If the operator list has more operators than operand list,\
    \ then throw an error.\n    if ($operators_length > $operands_length) {\n    \
    \    die('Invalid operator or operand list');\n    }\n    \n    // If the operator\
    \ list has more operands than operator list, then throw an error.\n    if ($operands_length\
    \ > $operators_length) {\n        die('Invalid operator or operand list');\n \
    \   }\n    \n    // If the operator list has more operators than operand list,\
    \ then throw an error.\n    if ($operators_length > $operands_length) {\n    \
    \    die('Invalid operator or operand list');\n    }\n    \n    // If the operator\
    \ list has more operands than operator list, then throw an error.\n    if ($operators_length\
    \ > $operands_length) {\n        die('Invalid operator or operand list');\n  \
    \  }\n    \n    // If the operator list has more operators than operand list,\
    \ then throw an error.\n    if ($operators_length > $operands_length) {\n    \
    \    die('Invalid operator or operand list');\n    }\n    \n    // If the operator\
    \ list has more operators than operand list, then throw an error.\n    if ($operators_length\
    \ > $operands_length) {\n        die('Invalid operator or operand list');\n  \
    \  }\n    \n    // If the operator list has more operators than operand list,\
    \ then throw an error.\n    if ($operators_length > $operands_length) {\n    \
    \    die('Invalid operator or operand list');\n    }\n    \n    // If the operator\
    \ list has more operators than operand list, then throw an error.\n    if ($operators_length\
    \ > $operands_length) {\n        die('Invalid operator or operand list');\n  \
    \  }\n    \n    // If the operator list has more operators than operand list,\
    \ then throw an error.\n    if ($operators_length > $operands_length) {\n    \
    \    die('Invalid operator or operand list');\n    }\n    \n    // If the operator\
    \ list has more operators than operand list, then throw an error.\n    if ($operators_length\
    \ > $operands_length) {\n        die('Invalid operator or operand list');\n  \
    \  }\n    \n    // If the operator list has more operators than operand list,\
    \ then throw an error.\n    if ($operators_length > $operands_length) {\n    \
    \    die('Invalid operator or operand list');\n    }\n    \n    // If the operator\
    \ list has more operators than operand list, then throw an error.\n    if ($operators_length\
    \ > $operands_length) {\n        die('Invalid operator or operand list');\n  \
    \  }\n    \n    // \nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj7vhft0_.php on line 97\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    $stack = array();\n    $stack[] = $operand[0];\n    $stack[]\
    \ = $operand[1];\n    foreach ($stack as $key => $value) {\n        foreach ($operators\
    \ as $operator) {\n            if ($operator == '**') {\n                $result[$key]\
    \ = $stack[$key] * $stack[$key + 1];\n            } else {\n                $result[$key]\
    \ = $stack[$key] . $operator;\n            }\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,algorithm,math |>\n<| c |>\nThanks for your answer!\
    \ I appreciate it! But I still don't understand how this works. Could you please\
    \ explain it a little more? Thanks!\n<|/ c |>\n<| c |>\nI added some comments\
    \ to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer! I appreciate\
    \ it! But I still don't understand how this works. Could you please explain it\
    \ a little more? Thanks!\n<|/ c |>\n<| c |>\nI added some comments to my answer.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer! I appreciate it!\
    \ But I still don't understand how this works. Could you please explain it a little\
    \ more? Thanks!\n<|/ c |>\n<| a tags=php,algorithm,math |>\nI wrote a recursive\
    \ function which solves your problem in O(n) time. \n<code>\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpof6kq15p.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = array();\n    $operators = array();\n    $operators[]\
    \ = '+';\n    $operators[] = '-';\n    $operators[] = '*';\n    $operators[] =\
    \ '//';\n    $operators[] = '**';\n    $operators[] = '=';\n    $operators[] =\
    \ '!=';\n    $operators[] = '<';\n    $operators[] = '<=';\n    $operators[] =\
    \ '>';\n    $operators[] = '>=';\n    $operators[] = '!';\n    $operators[] =\
    \ '&&';\n    $operators[] = '||';\n    $operators[] = '&';\n    $operators[] =\
    \ '^';\n    $operators[] = '|';\n    $operators[] = '!=';\n    $operators[] =\
    \ '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!=';\n    $operators[] = '!=';\n    $operators[]\
    \ = '!=';\n    $operators[\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp416u1zj8.php on line 88\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        switch\
    \ ($op) {\n            case '+':\n                $result = $result + $operand[0];\n\
    \                break;\n            case '-':\n                $result = $result\
    \ - $operand[0];\n                break;\n            case '*':\n            \
    \    $result = $result * $operand[0];\n                break;\n            case\
    \ '/':\n                $result = $result / $operand[0];\n                break;\n\
    \            case '**':\n                $result = $result ** $operand[0];\n \
    \               break;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporgcrzuv.php:48\n\
    Stack trace:\n#0 /tmp/tmporgcrzuv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmporgcrzuv.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[0]($result, $operand[$i]);\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpxkne2fvh.php:23\n\
    Stack trace:\n#0 /tmp/tmpxkne2fvh.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpxkne2fvh.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpxkne2fvh.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpxkne2fvh.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5l7mh6dq.php:28\n\
    Stack trace:\n#0 /tmp/tmp5l7mh6dq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5l7mh6dq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = $operand[0];\n    for ($i\
    \ = 1; $i < count($operand); $i++) {\n        $result = $result . $operator[$i\
    \ - 1] * $operand[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpxn7_3o0h.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpxn7_3o0h.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpxn7_3o0h.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxn7_3o0h.php:34\n\
    Stack trace:\n#0 /tmp/tmpxn7_3o0h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxn7_3o0h.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpjvlbthu5.php:23\n\
    Stack trace:\n#0 /tmp/tmpjvlbthu5.php(28): do_algebra(Array, Array)\n#1 /tmp/tmpjvlbthu5.php(32):\
    \ candidate(Array, Array)\n#2 /tmp/tmpjvlbthu5.php(37): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpjvlbthu5.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ = $result + $operand[$op - 1];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpi95zc0bi.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpi95zc0bi.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpi95zc0bi.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi95zc0bi.php:32\n\
    Stack trace:\n#0 /tmp/tmpi95zc0bi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi95zc0bi.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n}\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3iu00_p.php:28\n\
    Stack trace:\n#0 /tmp/tmpe3iu00_p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpe3iu00_p.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmp12m73c_k.php:23\n\
    Stack trace:\n#0 /tmp/tmp12m73c_k.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp12m73c_k.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp12m73c_k.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp12m73c_k.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl69przz.php:28\n\
    Stack trace:\n#0 /tmp/tmpzl69przz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzl69przz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '**');\n    $result\
    \ = array();\n    $stack = array();\n    $stack[] = $operand[0];\n    $stack[]\
    \ = $operand[1];\n    for($i = 0; $i < count($operator); $i++) {\n        $operator\
    \ = $operators[$i];\n        if($operator == '**') {\n            $result[$i]\
    \ = $operand[0] ** $operand[1];\n        } else {\n            $result[$i] = $operand[$i];\n\
    \        }\n        while($stack) {\n            $operator = $operators[array_pop($stack)];\n\
    \            if($operator == '**') {\n                $result[$i] .= $operand[0]\
    \ ** $operand[1];\n            } else {\n                $result[$i] .= $operand[$i];\n\
    \            }\n            $stack[] = $operator;\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpewr739ei.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpewr739ei.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpewr739ei.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewr739ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpewr739ei.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpewr739ei.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operator = array_flip($operator);\n    $operand = array_flip($operand);\n\
    \    $expression = '';\n    foreach ($operator as $key => $value) {\n        $expression\
    \ .= $operand[$key] * $value;\n    }\n    return $expression;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecowdg8m.php:35\n\
    Stack trace:\n#0 /tmp/tmpecowdg8m.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpecowdg8m.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        if (in_array($value,\
    \ $operators)) {\n            $result[] = $operand[$key];\n        } else {\n\
    \            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp528xmpc4.php:38\n\
    Stack trace:\n#0 /tmp/tmp528xmpc4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp528xmpc4.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    $operators = array('+', '-', '*', '/', '//',\
    \ '**');\n    $operands = array($operand, $operand);\n    $length = count($operators);\n\
    \    $i = 0;\n    foreach ($operators as $op) {\n        if ($op == '**') {\n\
    \            $result = $result * $operands[$i];\n        } else {\n          \
    \  $result = $result + $operands[$i] * $op;\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp7sa0lkno.php on line\
    \ 30\n\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp7sa0lkno.php:30\n\
    Stack trace:\n#0 /tmp/tmp7sa0lkno.php(37): do_algebra(Array, Array)\n#1 /tmp/tmp7sa0lkno.php(41):\
    \ candidate(Array, Array)\n#2 /tmp/tmp7sa0lkno.php(46): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp7sa0lkno.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    $operators = array('+', '-', '*', '/', '//',\
    \ '**');\n    $operands = array($operand);\n    $operators_length = count($operators);\n\
    \    $operands_length = count($operands) - 1;\n    for($i = 0; $i < $operators_length;\
    \ $i++) {\n        $operator = $operators[$i];\n        $operand = $operands[$i];\n\
    \        $result = $result + $operand * $operator;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpjhx8z75a.php on line\
    \ 29\n\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpjhx8z75a.php:29\n\
    Stack trace:\n#0 /tmp/tmpjhx8z75a.php(34): do_algebra('+', Array)\n#1 /tmp/tmpjhx8z75a.php(38):\
    \ candidate(Array, Array)\n#2 /tmp/tmpjhx8z75a.php(43): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpjhx8z75a.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ += (array_key_exists($op, $operand) ? $operand[$op] : $operand[0]);\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpupau0fn4.php:32\n\
    Stack trace:\n#0 /tmp/tmpupau0fn4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpupau0fn4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + ($operand[$key] * $operand[$key]);\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbnaso8dp.php:33\n\
    Stack trace:\n#0 /tmp/tmpbnaso8dp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbnaso8dp.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = $operand[0];\n    for ($i\
    \ = 1; $i < count($operand); $i++) {\n        $result = $result . $operator[$i]\
    \ . $operand[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvk16ttsn.php:34\n\
    Stack trace:\n#0 /tmp/tmpvk16ttsn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvk16ttsn.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$operand[$i - 1]]($result, $operand[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function +() in /tmp/tmpko5mxvl8.php:23\n\
    Stack trace:\n#0 /tmp/tmpko5mxvl8.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpko5mxvl8.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpko5mxvl8.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpko5mxvl8.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operand as $operand) {\n      \
    \  switch ($operator) {\n            case '+':\n                $result += $operand;\n\
    \                break;\n            case '-':\n                $result -= $operand;\n\
    \                break;\n            case '*':\n                $result *= $operand;\n\
    \                break;\n            case '/':\n                $result /= $operand;\n\
    \                break;\n            case '**':\n                $result **= $operand;\n\
    \                break;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx64rhf4o.php:48\n\
    Stack trace:\n#0 /tmp/tmpx64rhf4o.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpx64rhf4o.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpgut99j7_.php:23\n\
    Stack trace:\n#0 /tmp/tmpgut99j7_.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpgut99j7_.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpgut99j7_.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpgut99j7_.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        if ($value == '+') {\n            $result = $result + $operand[$key];\n\
    \        } elseif ($value == '-') {\n            $result = $result - $operand[$key];\n\
    \        } elseif ($value == '*') {\n            $result = $result * $operand[$key];\n\
    \        } elseif ($value == '/') {\n            $result = $result / $operand[$key];\n\
    \        } elseif ($value == '**') {\n            $result = $result ** $operand[$key];\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx421j56a.php:42\n\
    Stack trace:\n#0 /tmp/tmpx421j56a.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpx421j56a.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7xbjjn42.php:28\n\
    Stack trace:\n#0 /tmp/tmp7xbjjn42.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7xbjjn42.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ += (array_key_exists($op, $operand) ? $operand[$op] : 0);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl1r52oh.php:33\n\
    Stack trace:\n#0 /tmp/tmpzl1r52oh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzl1r52oh.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $operators = array();\n    $operands\
    \ = array();\n    foreach ($operator as $key => $value) {\n        $operators[$key]\
    \ = $value;\n    }\n    foreach ($operand as $key => $value) {\n        $operands[$key]\
    \ = $value;\n    }\n    $operator = array_reverse($operators);\n    $operand =\
    \ array_reverse($operands);\n    $result = $operand[0];\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result . $value;\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmhz3553k.php:43\n\
    Stack trace:\n#0 /tmp/tmpmhz3553k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmhz3553k.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpx15dq4s1.php:23\n\
    Stack trace:\n#0 /tmp/tmpx15dq4s1.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpx15dq4s1.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpx15dq4s1.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpx15dq4s1.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        if (in_array($value,\
    \ $operators)) {\n            $result[] = $operand[$key];\n        } else {\n\
    \            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_ua5gaw.php:38\n\
    Stack trace:\n#0 /tmp/tmp8_ua5gaw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8_ua5gaw.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        $result[$key]\
    \ = $operand[$key];\n        foreach ($operators as $operator) {\n           \
    \ $result[$key] = $result[$key] . $operator;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8bjge2b.php:37\n\
    Stack trace:\n#0 /tmp/tmpo8bjge2b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo8bjge2b.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptc7xllaa.php:28\n\
    Stack trace:\n#0 /tmp/tmptc7xllaa.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptc7xllaa.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    $stack = array();\n    foreach ($operator as $key => $value)\
    \ {\n        if (in_array($value, $operators)) {\n            $stack[] = $value;\n\
    \        } else {\n            $result[] = $value;\n        }\n    }\n    foreach\
    \ ($operand as $key => $value) {\n        if ($key > 0) {\n            $stack[]\
    \ = $value;\n        } else {\n            $result[] = $value;\n        }\n  \
    \  }\n    foreach ($stack as $key => $value) {\n        if ($key > 0) {\n    \
    \        $result[] = $value;\n        } else {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9r21dhm.php:53\n\
    Stack trace:\n#0 /tmp/tmpt9r21dhm.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpt9r21dhm.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$operand[$i - 1]]($result, $operand[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function +() in /tmp/tmpa04hgo26.php:23\n\
    Stack trace:\n#0 /tmp/tmpa04hgo26.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpa04hgo26.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpa04hgo26.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpa04hgo26.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n    $result = $operand[0];\n    for($i\
    \ = 1; $i < count($operand); $i++) {\n        $result = $result . $operator[$i]\
    \ . $operand[$i];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph564bu46.php:33\n\
    Stack trace:\n#0 /tmp/tmph564bu46.php(38): test()\n#1 {main}\n  thrown in /tmp/tmph564bu46.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmprpi60osg.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmprpi60osg.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmprpi60osg.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprpi60osg.php:32\n\
    Stack trace:\n#0 /tmp/tmprpi60osg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprpi60osg.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    $i = 0;\n    foreach ($operator as $key => $value) {\n     \
    \   $result[$key] = $operand[$i];\n        $i++;\n    }\n    foreach ($operator\
    \ as $key => $value) {\n        $result[$key] = $result[$key] . $operand[$i];\n\
    \        $i++;\n    }\n    foreach ($operator as $key => $value) {\n        $result[$key]\
    \ = $result[$key] . ' ' . $operand[$i];\n        $i++;\n    }\n    foreach ($operator\
    \ as $key => $value) {\n        $result[$key] = $result[$key] . ' ' . $operand[$i];\n\
    \        $i++;\n    }\n    foreach ($operator as $key => $value) {\n        $result[$key]\
    \ = $result[$key] . ' ' . $operand[$i];\n        $i++;\n    }\n    foreach ($operator\
    \ as $key => $value) {\n        $result[$key] = $result[$key] . ' ' . $operand[$i];\n\
    \        $i++;\n    }\n    foreach ($operator as $key => $value) {\n        $result[$key]\
    \ = $result[$key] . ' ' . $operand[$i];\n        $i++;\n    }\n    foreach ($operator\
    \ as $key => $value) {\n        $result[$key] = $result[$key] . ' ' . $operand[$i];\n\
    \        $i++;\n    }\n    foreach ($operator as $key => $value) {\n        $result[$key]\
    \ = $result[$key] . ' ' . $operand[$i];\n        $i++;\n    }\n    foreach ($operator\
    \ as $key => $value) {\n        $result[$key] = $result[$key] . ' ' . $operand[$i];\n\
    \        $i++;\n    }\n    foreach ($operator as $key => $value) {\n        $result[$key]\
    \ = $result[$key] . ' ' . $operand[$i];\n        $i++;\n    }\n    foreach ($operator\
    \ as $key => $value) {\n        $result[$key] = $result[$key] . ' ' . $operand[$i];\n\
    \        $i++;\n    }\n    foreach ($operator as $key => $value) {\n        $result[$key]\
    \ = $result[$key] . ' ' . $operand[$i];\n        $i++;\n    }\n    foreach ($operator\
    \ as $key => $value) {\n        $result[$key] = $result[$key] . ' ' . $operand[$i];\n\
    \        $\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmjq4nu9c.php on line 79\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdc8m_ek8.php:29\n\
    Stack trace:\n#0 /tmp/tmpdc8m_ek8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdc8m_ek8.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        switch ($value) {\n            case '+':\n   \
    \             $result = $result + $operand[$key];\n                break;\n  \
    \          case '-':\n                $result = $result - $operand[$key];\n  \
    \              break;\n            case '*':\n                $result = $result\
    \ * $operand[$key];\n                break;\n            case '/':\n         \
    \       $result = $result / $operand[$key];\n                break;\n        \
    \    case '**':\n                $result = $result ** $operand[$key];\n      \
    \          break;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThank you very much for your answer! I really appreciate it. I\
    \ will try this out and let you know if it works.\n<|/ c |>\n<| c |>\nI tested\
    \ it out and it works perfectly! Thank you very much!\n<|/ c |>\n<| c |>\nYou're\
    \ welcome. Glad I could help. If you feel this answer solved your problem, please\
    \ mark it as accepted by clicking the check mark to the left of the answer. see:\
    \ [How does accepting an answer work?](https://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work)\n\
    <|/ c |>\n<| c |>\nI did mark it as accepted, but since I am a new user it says\
    \ I have to wait 2 minutes before I can mark it as accepted.\n<|/ c |>\n<| c |>\n\
    Oh okay. Thanks for letting me know. :)\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8uyyxwvg.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array();\n    $operators[] = '+';\n    $operators[]\
    \ = '-';\n    $operators[] = '*';\n    $operators[] = '//';\n    $operators[]\
    \ = '**';\n    $operators[] = '=';\n    $operators[] = '<>';\n    $operators[]\
    \ = '!=';\n    $operators[] = '<';\n    $operators[] = '<=';\n    $operators[]\
    \ = '>';\n    $operators[] = '>=';\n    $operators[] = '!';\n    $operators[]\
    \ = '&&';\n    $operators[] = '||';\n    $operators[] = '!=';\n    $operators[]\
    \ = '<';\n    $operators[] = '<=';\n    $operators[] = '>';\n    $operators[]\
    \ = '>=';\n    $operators[] = '!';\n    $operators[] = '&&';\n    $operators[]\
    \ = '||';\n    $operators[] = '!=';\n    $operators[] = '<';\n    $operators[]\
    \ = '<=';\n    $operators[] = '>';\n    $operators[] = '>=';\n    $operators[]\
    \ = '!';\n    $operators[] = '&&';\n    $operators[] = '||';\n    $operators[]\
    \ = '!=';\n    $operators[] = '<';\n    $operators[] = '<=';\n    $operators[]\
    \ = '>';\n    $operators[] = '>=';\n    $operators[] = '!';\n    $operators[]\
    \ = '&&';\n    $operators[] = '||';\n    $operators[] = '!=';\n    $operators[]\
    \ = '<';\n    $operators[] = '<=';\n    $operators[] = '>';\n    $operators[]\
    \ = '>=';\n    $operators[] = '!';\n    $operators[] = '&&';\n    $operators[]\
    \ = '||';\n    $operators[] = '!=';\n    $operators[] = '<';\n    $operators[]\
    \ = '<=';\n    $operators[] = '>';\n    $operators[] = '>=';\n    $operators[]\
    \ = '!';\n    $operators[] = '&&';\n    $operators[] = '||';\n    $operators[]\
    \ = '!=';\n    $operators[] = '<';\n    $operators[] = '<=';\n    $operators[]\
    \ = '>';\n    $operators[] = '>=';\n    $operators[] = '!';\n    $operators[]\
    \ = '&&';\n    $operators[] = '||';\n    $operators[] = '!=';\n    $operators[]\
    \ = '<';\n    $operators[] = '<=';\n    $operators[] = '>';\n    $operators[]\
    \ = '>=';\n    $operators[] = '!';\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmh5fz8ok.php on line 101\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result += (isset($operand[$key]) ? $operand[$key] : 0);\n    }\n   \
    \ return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgyfgeico.php:32\n\
    Stack trace:\n#0 /tmp/tmpgyfgeico.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgyfgeico.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ = $result + $operand[$op - 1];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0im1sxeh.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp0im1sxeh.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp0im1sxeh.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0im1sxeh.php:32\n\
    Stack trace:\n#0 /tmp/tmp0im1sxeh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0im1sxeh.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operand\
    \ as $key => $value) {\n        $result = $result + $value * $operator[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp2ju_5zq3.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp2ju_5zq3.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp2ju_5zq3.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ju_5zq3.php:34\n\
    Stack trace:\n#0 /tmp/tmp2ju_5zq3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2ju_5zq3.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3559c5ql.php:29\n\
    Stack trace:\n#0 /tmp/tmp3559c5ql.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3559c5ql.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array();\n    $operators[] = '+';\n    $operators[]\
    \ = '-';\n    $operators[] = '*';\n    $operators[] = '//';\n    $operators[]\
    \ = '**';\n    $operators[] = '=';\n    $operators[] = '<';\n    $operators[]\
    \ = '<=';\n    $operators[] = '>';\n    $operators[] = '>=';\n    $operators[]\
    \ = '!=';\n    $operators[] = '!';\n    $operators[] = '&&';\n    $operators[]\
    \ = '||';\n    $operators[] = '&';\n    $operators[] = '|';\n    $operators[]\
    \ = '^';\n    $operators[] = '~';\n    $operators[] = '!~';\n    $operators[]\
    \ = '<<';\n    $operators[] = '>>';\n    $operators[] = '&';\n    $operators[]\
    \ = '^';\n    $operators[] = '|';\n    $operators[] = '~';\n    $operators[] =\
    \ '!~';\n    $operators[] = '<<';\n    $operators[] = '>>';\n    $operators[]\
    \ = '&';\n    $operators[] = '^';\n    $operators[] = '|';\n    $operators[] =\
    \ '~';\n    $operators[] = '!~';\n    $operators[] = '<<';\n    $operators[] =\
    \ '>>';\n    $operators[] = '&';\n    $operators[] = '^';\n    $operators[] =\
    \ '|';\n    $operators[] = '~';\n    $operators[] = '!~';\n    $operators[] =\
    \ '<<';\n    $operators[] = '>>';\n    $operators[] = '&';\n    $operators[] =\
    \ '^';\n    $operators[] = '|';\n    $operators[] = '~';\n    $operators[] = '!~';\n\
    \    $operators[] = '<<';\n    $operators[] = '>>';\n    $operators[] = '&';\n\
    \    $operators[] = '^';\n    $operators[] = '|';\n    $operators[] = '~';\n \
    \   $operators[] = '!~';\n    $operators[] = '<<';\n    $operators[] = '>>';\n\
    \    $operators[] = '&';\n    $operators[] = '^';\n    $operators[] = '|';\n \
    \   $operators[] = '~';\n    $operators[] = '!~';\n    $operators[] = '<<';\n\
    \    $operators[] = '>>';\n    $operators[] = '&';\n    $operators[] = '^';\n\
    \    $operators[] = '|';\n    $operators[] = '~';\n    $operators[] = '!~';\n\
    \    $operators[] = '<<';\n    $operators[] = '>>';\n    $operators[] = '&\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp38vcnvw8.php on line 92\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n    $result = 0;\n    foreach ($operand\
    \ as $key => $value) {\n        $result += (array_key_exists($key, $operator)\
    \ ? $operator[$key]($operand[$key]) : 0);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmprnobvuya.php:24\n\
    Stack trace:\n#0 /tmp/tmprnobvuya.php(30): do_algebra(Array, Array)\n#1 /tmp/tmprnobvuya.php(34):\
    \ candidate(Array, Array)\n#2 /tmp/tmprnobvuya.php(39): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmprnobvuya.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpa441clvi.php:23\n\
    Stack trace:\n#0 /tmp/tmpa441clvi.php(28): do_algebra(Array, Array)\n#1 /tmp/tmpa441clvi.php(32):\
    \ candidate(Array, Array)\n#2 /tmp/tmpa441clvi.php(37): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpa441clvi.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        $result[$key]\
    \ = $operand[$key];\n        foreach ($operators as $operator) {\n           \
    \ $result[$key] = $result[$key] . $operator . $operand[$key + 1];\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pi4e6hc.php:37\n\
    Stack trace:\n#0 /tmp/tmp0pi4e6hc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0pi4e6hc.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        switch ($value) {\n            case '+':\n   \
    \             $result = $result + $operand[$key];\n                break;\n  \
    \          case '-':\n                $result = $result - $operand[$key];\n  \
    \              break;\n            case '*':\n                $result = $result\
    \ * $operand[$key];\n                break;\n            case '/':\n         \
    \       $result = $result / $operand[$key];\n                break;\n        \
    \    case '**':\n                $result = $result ** $operand[$key];\n      \
    \          break;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nThank you so much! I really appreciate your help.\n<|/ c |>\n<|\
    \ c |>\nYou're welcome. I'm glad I could help. If this answer solved your problem,\
    \ please consider accepting it by clicking the check mark next to it.\n<|/ c |>\n\
    <| c |>\nI did but since I'm new here it says I have to wait 2 minutes before\
    \ I can accept it.\n<|/ c |>\n<| c |>\nNo worries. Thanks for letting me know.\
    \ :)\n<|/ c |>\n<| a dscore=0 |>\nI believe this can be done using recursion.\
    \ \n<code>\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpke98358j.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ = $result + $operand[$op - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp3q8zypbs.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp3q8zypbs.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp3q8zypbs.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3q8zypbs.php:33\n\
    Stack trace:\n#0 /tmp/tmp3q8zypbs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3q8zypbs.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result += $operand[$key] * $value;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp_ea2apmo.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp_ea2apmo.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp_ea2apmo.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ea2apmo.php:33\n\
    Stack trace:\n#0 /tmp/tmp_ea2apmo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_ea2apmo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n}\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2arck_t.php:28\n\
    Stack trace:\n#0 /tmp/tmpv2arck_t.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv2arck_t.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    $i = 0;\n    foreach ($operator as $key => $value) {\n     \
    \   if ($key === 0) {\n            $result[$i] = $operand[$i];\n            $i++;\n\
    \        } else {\n            $result[$i] = $operand[$i] * $operators[$key];\n\
    \            $i++;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpqsjbgw0g.php on line\
    \ 29\n\nWarning: A non-numeric value encountered in /tmp/tmpqsjbgw0g.php on line\
    \ 29\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsjbgw0g.php:41\n\
    Stack trace:\n#0 /tmp/tmpqsjbgw0g.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqsjbgw0g.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpbvm_ky7b.php:23\n\
    Stack trace:\n#0 /tmp/tmpbvm_ky7b.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpbvm_ky7b.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpbvm_ky7b.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpbvm_ky7b.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n    $result = 0;\n    foreach ($operand\
    \ as $key => $value) {\n        $result += (pow($value, $operator[$key]));\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpefiu1w6a.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpefiu1w6a.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpefiu1w6a.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpefiu1w6a.php:34\n\
    Stack trace:\n#0 /tmp/tmpefiu1w6a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpefiu1w6a.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3dvgwfs.php:28\n\
    Stack trace:\n#0 /tmp/tmpk3dvgwfs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk3dvgwfs.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpwmrkitqe.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpwmrkitqe.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpwmrkitqe.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmrkitqe.php:33\n\
    Stack trace:\n#0 /tmp/tmpwmrkitqe.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwmrkitqe.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9iequcnt.php:28\n\
    Stack trace:\n#0 /tmp/tmp9iequcnt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9iequcnt.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = $operand[0];\n    for ($i = 1; $i < count($operand); $i++) {\n        $result\
    \ = $operators[$operator]($result, $operand[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Illegal offset type in /tmp/tmp8t41_wot.php on line 24\n\nFatal\
    \ error: Uncaught Error: Function name must be a string in /tmp/tmp8t41_wot.php:24\n\
    Stack trace:\n#0 /tmp/tmp8t41_wot.php(30): do_algebra(Array, Array)\n#1 /tmp/tmp8t41_wot.php(34):\
    \ candidate(Array, Array)\n#2 /tmp/tmp8t41_wot.php(39): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp8t41_wot.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        switch\
    \ ($op) {\n            case '+':\n                $result = $result + $operand[0];\n\
    \                break;\n            case '-':\n                $result = $result\
    \ - $operand[0];\n                break;\n            case '*':\n            \
    \    $result = $result * $operand[0];\n                break;\n            case\
    \ '/':\n                $result = $result / $operand[0];\n                break;\n\
    \            case '**':\n                $result = $result ** $operand[0];\n \
    \               break;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnifxbsf.php:48\n\
    Stack trace:\n#0 /tmp/tmpnnifxbsf.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpnnifxbsf.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_1esg2g.php:29\n\
    Stack trace:\n#0 /tmp/tmpj_1esg2g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpj_1esg2g.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key === 0) {\n            $result = $operand[0]\
    \ + $operand[1];\n        } else {\n            $result = $operand[$key] * $operand[$key\
    \ - 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ah_mq36.php:38\n\
    Stack trace:\n#0 /tmp/tmp3ah_mq36.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3ah_mq36.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        if (in_array($value,\
    \ $operators)) {\n            $result[] = $operand[$key];\n        } else {\n\
    \            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkw_r_lt.php:38\n\
    Stack trace:\n#0 /tmp/tmpjkw_r_lt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjkw_r_lt.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        $result[] = $operand[$key];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjruijg8.php:34\n\
    Stack trace:\n#0 /tmp/tmpqjruijg8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqjruijg8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $operands = array();\n    foreach ($operator as $key => $value)\
    \ {\n        $operands[] = $operand[$key];\n    }\n    $result = $operands[0];\n\
    \    for ($i = 1; $i < count($operands); $i++) {\n        $result = $operators[$operator]($result,\
    \ $operands[$i]);\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: Illegal offset type in /tmp/tmph210b20k.php on line 29\n\nFatal\
    \ error: Uncaught Error: Function name must be a string in /tmp/tmph210b20k.php:29\n\
    Stack trace:\n#0 /tmp/tmph210b20k.php(34): do_algebra(Array, Array)\n#1 /tmp/tmph210b20k.php(38):\
    \ candidate(Array, Array)\n#2 /tmp/tmph210b20k.php(43): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmph210b20k.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ += $operand[$op - 1];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpch7p0u8e.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpch7p0u8e.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpch7p0u8e.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch7p0u8e.php:32\n\
    Stack trace:\n#0 /tmp/tmpch7p0u8e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpch7p0u8e.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ = $result + ($op * $operand[0]);\n        $operand = $operand[1];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpjo6z7s5w.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpjo6z7s5w.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpjo6z7s5w.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjo6z7s5w.php:34\n\
    Stack trace:\n#0 /tmp/tmpjo6z7s5w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjo6z7s5w.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprovb90yu.php:29\n\
    Stack trace:\n#0 /tmp/tmprovb90yu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprovb90yu.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n}\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4obi0pav.php:28\n\
    Stack trace:\n#0 /tmp/tmp4obi0pav.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4obi0pav.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9_5red4.php:28\n\
    Stack trace:\n#0 /tmp/tmpb9_5red4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb9_5red4.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = $operand[0];\n    for($i =\
    \ 1; $i < count($operand); $i++) {\n        $result = $result . $operator[$i -\
    \ 1] * $operand[$i];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpy30elu5j.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpy30elu5j.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpy30elu5j.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy30elu5j.php:33\n\
    Stack trace:\n#0 /tmp/tmpy30elu5j.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy30elu5j.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = array();\n    $operators = array();\n    $operands\
    \ = array();\n    $operators_count = count($operator);\n    $operands_count =\
    \ count($operand);\n    $i = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $operators[$key] = $value;\n    }\n    foreach ($operand as $key => $value)\
    \ {\n        $operands[$key] = $value;\n    }\n    foreach ($operators as $key\
    \ => $value) {\n        $result[$key] = $operands[$key];\n    }\n    foreach ($operands\
    \ as $key => $value) {\n        $result[$key] = $operands[$key];\n    }\n    foreach\
    \ ($operators as $key => $value) {\n        $result[$key] = $operands[$key];\n\
    \    }\n    foreach ($operands as $key => $value) {\n        $result[$key] = $operands[$key];\n\
    \    }\n    foreach ($operators as $key => $value) {\n        $result[$key] =\
    \ $operands[$key];\n    }\n    foreach ($operands as $key => $value) {\n     \
    \   $result[$key] = $operands[$key];\n    }\n    foreach ($operators as $key =>\
    \ $value) {\n        $result[$key] = $operands[$key];\n    }\n    foreach ($operands\
    \ as $key => $value) {\n        $result[$key] = $operands[$key];\n    }\n    foreach\
    \ ($operators as $key => $value) {\n        $result[$key] = $operands[$key];\n\
    \    }\n    foreach ($operands as $key => $value) {\n        $result[$key] = $operands[$key];\n\
    \    }\n    foreach ($operators as $key => $value) {\n        $result[$key] =\
    \ $operands[$key];\n    }\n    foreach ($operands as $key => $value) {\n     \
    \   $result[$key] = $operands[$key];\n    }\n    foreach ($operators as $key =>\
    \ $value) {\n        $result[$key] = $operands[$key];\n    }\n    foreach ($operands\
    \ as $key => $value) {\n        $result[$key] = $operands[$key];\n    }\n    foreach\
    \ ($operators as $key => $value) {\n        $result[$key] = $operands[$key];\n\
    \    }\n    foreach ($operands as $key => $value) {\n        $result[$key] = $operands[$key];\n\
    \    }\n    foreach ($operators as $key => $value) {\n        $result[$key] =\
    \ $operands[$key];\n    }\n    foreach ($operands as \nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphzfhj0b5.php on line 85\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$operand[$i - 1]]($result, $operand[$i]);\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function +() in /tmp/tmpfxawpak_.php:23\n\
    Stack trace:\n#0 /tmp/tmpfxawpak_.php(28): do_algebra(Array, Array)\n#1 /tmp/tmpfxawpak_.php(32):\
    \ candidate(Array, Array)\n#2 /tmp/tmpfxawpak_.php(37): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpfxawpak_.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20no52tq.php:28\n\
    Stack trace:\n#0 /tmp/tmp20no52tq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp20no52tq.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpc09kiyes.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpc09kiyes.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpc09kiyes.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc09kiyes.php:32\n\
    Stack trace:\n#0 /tmp/tmpc09kiyes.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc09kiyes.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result += $operand[$key];\n\
    \        } elseif ($key == '-') {\n            $result -= $operand[$key];\n  \
    \      } elseif ($key == '*') {\n            $result *= $operand[$key];\n    \
    \    } elseif ($key == '/') {\n            $result /= $operand[$key];\n      \
    \  } elseif ($key == '**') {\n            $result **= $operand[$key];\n      \
    \  }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf48bdjmd.php:44\n\
    Stack trace:\n#0 /tmp/tmpf48bdjmd.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf48bdjmd.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = $operand[0];\n    for ($i = 1; $i < count($operand); $i++) {\n        $result\
    \ = $operators[$operator]($result, $operand[$i]);\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Illegal offset type in /tmp/tmpu5xo3fkb.php on line 24\n\nFatal\
    \ error: Uncaught Error: Function name must be a string in /tmp/tmpu5xo3fkb.php:24\n\
    Stack trace:\n#0 /tmp/tmpu5xo3fkb.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpu5xo3fkb.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpu5xo3fkb.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpu5xo3fkb.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    $operators = array('+', '-', '*', '/', '//',\
    \ '**');\n    $operands = array($operand, $operand);\n    foreach ($operators\
    \ as $key => $value) {\n        if ($key == 0) {\n            $result = $operands[$key];\n\
    \        } else {\n            $result = $operands[$key] . $operators[$key] .\
    \ $result;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgogdngke.php:39\n\
    Stack trace:\n#0 /tmp/tmpgogdngke.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgogdngke.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    $length = count($operator);\n    $operands = array();\n    $operand\
    \ = array_filter($operand);\n    $operand = array_map(function($v){return intval($v);},\
    \ $operand);\n    $operand = array_filter($operand);\n    $operand = array_map(function($v){return\
    \ $v > 0;}, $operand);\n    $operand = array_filter($operand);\n    $operand =\
    \ array_map(function($v){return $v < PHP_INT_MAX;}, $operand);\n    $operand =\
    \ array_filter($operand);\n    $operand = array_map(function($v){return $v > 0;},\
    \ $operand);\n    $operand = array_filter($operand);\n    $operand = array_map(function($v){return\
    \ $v < PHP_INT_MAX;}, $operand);\n    $operand = array_filter($operand);\n   \
    \ $operand = array_map(function($v){return $v > 0;}, $operand);\n    $operand\
    \ = array_filter($operand);\n    $operand = array_map(function($v){return $v <\
    \ PHP_INT_MAX;}, $operand);\n    $operand = array_filter($operand);\n    $operand\
    \ = array_map(function($v){return $v > 0;}, $operand);\n    $operand = array_filter($operand);\n\
    \    $operand = array_map(function($v){return $v < PHP_INT_MAX;}, $operand);\n\
    \    $operand = array_filter($operand);\n    $operand = array_map(function($v){return\
    \ $v > 0;}, $operand);\n    $operand = array_filter($operand);\n    $operand =\
    \ array_map(function($v){return $v < PHP_INT_MAX;}, $operand);\n    $operand =\
    \ array_filter($operand);\n    $operand = array_map(function($v){return $v > 0;},\
    \ $operand);\n    $operand = array_filter($operand);\n    $operand = array_map(function($v){return\
    \ $v < PHP_INT_MAX;}, $operand);\n    $operand = array_filter($operand);\n   \
    \ $operand = array_map(function($v){return $v > 0;}, $operand);\n    $operand\
    \ = array_filter($operand);\n    $operand = array_map(function($v){return $v <\
    \ PHP_INT_MAX;}, $operand);\n    $operand = array_filter($operand);\n    $operand\
    \ = array_map(function($v){return $v > 0;}, $operand);\n    $operand = array_filter($operand);\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp462hh0vm.php on line 68\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpyjh2861p.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpyjh2861p.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpyjh2861p.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjh2861p.php:32\n\
    Stack trace:\n#0 /tmp/tmpyjh2861p.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyjh2861p.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key === 0) {\n            $result = $operand[0];\n\
    \        } else {\n            $result = $operand[$key] + $result;\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphuht_7xb.php:37\n\
    Stack trace:\n#0 /tmp/tmphuht_7xb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphuht_7xb.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8qkk5zl0.php:28\n\
    Stack trace:\n#0 /tmp/tmp8qkk5zl0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8qkk5zl0.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpge0yu1do.php:28\n\
    Stack trace:\n#0 /tmp/tmpge0yu1do.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpge0yu1do.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8v4xadlm.php:28\n\
    Stack trace:\n#0 /tmp/tmp8v4xadlm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8v4xadlm.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result = $result\
    \ + $operand[$key];\n        } elseif ($key == '-') {\n            $result = $result\
    \ - $operand[$key];\n        } elseif ($key == '*') {\n            $result = $result\
    \ * $operand[$key];\n        } elseif ($key == '/') {\n            $result = $result\
    \ / $operand[$key];\n        } elseif ($key == '**') {\n            $result =\
    \ $result ** $operand[$key];\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,math |>\n<code>\n<?php\n$operators = array('+','-','*','/','**');\n\
    $operands = array(2,3,4,5);\n$result = 0;\nforeach ($operators as $key => $value)\
    \ {\n    if ($key == '+') {\n        $result = $result + $operands[$key];\n  \
    \  } elseif ($key == '-') {\n        $result = $result - $operands[$key];\n  \
    \  } elseif ($key == '*') {\n        $result = $result * $operands[$key];\n  \
    \  } elseif ($key == '/') {\n        $result = $result / $operands[$key];\n  \
    \  } elseif ($key == '**') {\n        $result = $result ** $operands[$key];\n\
    \    }\n}\necho $result;\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjndqby9w.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    $length = count($operator);\n    $operands = array();\n    $i\
    \ = 0;\n    foreach ($operator as $key => $value) {\n        if ($key < $length)\
    \ {\n            $operands[$i] = $operand[$key];\n        } else {\n         \
    \   $result[$i] = $operands[$i];\n            $i++;\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgf0kugwi.php:41\n\
    Stack trace:\n#0 /tmp/tmpgf0kugwi.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgf0kugwi.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppwrvv9kr.php:28\n\
    Stack trace:\n#0 /tmp/tmppwrvv9kr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppwrvv9kr.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpl49e6af9.php:23\n\
    Stack trace:\n#0 /tmp/tmpl49e6af9.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpl49e6af9.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpl49e6af9.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpl49e6af9.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwa0bi8na.php:29\n\
    Stack trace:\n#0 /tmp/tmpwa0bi8na.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwa0bi8na.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ = $result + ($operand[$op - 1]);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfdo84n0b.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpfdo84n0b.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpfdo84n0b.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdo84n0b.php:33\n\
    Stack trace:\n#0 /tmp/tmpfdo84n0b.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfdo84n0b.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpud8qamp3.php:28\n\
    Stack trace:\n#0 /tmp/tmpud8qamp3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpud8qamp3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmp73xkm326.php:23\n\
    Stack trace:\n#0 /tmp/tmp73xkm326.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp73xkm326.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp73xkm326.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp73xkm326.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        switch ($value) {\n            case '+':\n   \
    \             $result = $result + $operand[$key];\n                break;\n  \
    \          case '-':\n                $result = $result - $operand[$key];\n  \
    \              break;\n            case '*':\n                $result = $result\
    \ * $operand[$key];\n                break;\n            case '/':\n         \
    \       $result = $result / $operand[$key];\n                break;\n        \
    \    case '**':\n                $result = $result ** $operand[$key];\n      \
    \          break;\n            default:\n                echo \"Invalid operator\"\
    ;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6i49ftw.php:52\n\
    Stack trace:\n#0 /tmp/tmpg6i49ftw.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpg6i49ftw.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtp0v2by.php:28\n\
    Stack trace:\n#0 /tmp/tmpwtp0v2by.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwtp0v2by.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ocxb3h1.php:28\n\
    Stack trace:\n#0 /tmp/tmp1ocxb3h1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1ocxb3h1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        switch ($value) {\n            case '+':\n                $result[]\
    \ = $operand[0] + $operand[1];\n                break;\n            case '-':\n\
    \                $result[] = $operand[0] - $operand[1];\n                break;\n\
    \            case '*':\n                $result[] = $operand[0] * $operand[1];\n\
    \                break;\n            case '/':\n                $result[] = $operand[0]\
    \ / $operand[1];\n                break;\n            case '**':\n           \
    \     $result[] = $operand[0] ** $operand[1];\n                break;\n      \
    \      default:\n                echo \"Invalid operator\";\n        }\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap0wdcfy.php:50\n\
    Stack trace:\n#0 /tmp/tmpap0wdcfy.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpap0wdcfy.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        if ($key == '+') {\n            $result = $result\
    \ + $operand[$key];\n        } elseif ($key == '-') {\n            $result = $result\
    \ - $operand[$key];\n        } elseif ($key == '*') {\n            $result = $result\
    \ * $operand[$key];\n        } elseif ($key == '/') {\n            $result = $result\
    \ / $operand[$key];\n        } elseif ($key == '**') {\n            $result =\
    \ $result ** $operand[$key];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0o_g2kgm.php:44\n\
    Stack trace:\n#0 /tmp/tmp0o_g2kgm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp0o_g2kgm.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        if ($value == 0) {\n            $result[] = 0;\n        } else {\n\
    \            $result[] = $operand[$key];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcodb94__.php:37\n\
    Stack trace:\n#0 /tmp/tmpcodb94__.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpcodb94__.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt0mloip.php:28\n\
    Stack trace:\n#0 /tmp/tmpnt0mloip.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnt0mloip.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmp1der7me7.php:23\n\
    Stack trace:\n#0 /tmp/tmp1der7me7.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp1der7me7.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1der7me7.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1der7me7.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ = $result + ($op * $operand[0]);\n        $operand = $operand[1];\n    }\n \
    \   return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpx0abpwn1.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpx0abpwn1.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpx0abpwn1.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0abpwn1.php:33\n\
    Stack trace:\n#0 /tmp/tmpx0abpwn1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpx0abpwn1.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operand\
    \ as $key => $value) {\n        $result = $result + $value * $operator[$key];\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpictxc0r8.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpictxc0r8.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpictxc0r8.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpictxc0r8.php:33\n\
    Stack trace:\n#0 /tmp/tmpictxc0r8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpictxc0r8.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpko299w92.php:28\n\
    Stack trace:\n#0 /tmp/tmpko299w92.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpko299w92.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ = $result + ($op * $operand[0]);\n        $operand = array_slice($operand, 1);\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp8zymdgbp.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp8zymdgbp.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp8zymdgbp.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zymdgbp.php:33\n\
    Stack trace:\n#0 /tmp/tmp8zymdgbp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8zymdgbp.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5wczqw1.php:28\n\
    Stack trace:\n#0 /tmp/tmpz5wczqw1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz5wczqw1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpwh5i94zo.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpwh5i94zo.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpwh5i94zo.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh5i94zo.php:32\n\
    Stack trace:\n#0 /tmp/tmpwh5i94zo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwh5i94zo.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operand as $key => $value) {\n\
    \        $result = $result + $value * $operator[$key];\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfj0b3nte.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpfj0b3nte.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpfj0b3nte.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfj0b3nte.php:32\n\
    Stack trace:\n#0 /tmp/tmpfj0b3nte.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfj0b3nte.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37lv0_il.php:28\n\
    Stack trace:\n#0 /tmp/tmp37lv0_il.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp37lv0_il.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tclmnmo.php:29\n\
    Stack trace:\n#0 /tmp/tmp4tclmnmo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4tclmnmo.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $operators = array('+', '-', '*', '/',\
    \ '//', '**');\n    $result = array();\n    foreach ($operator as $key => $value)\
    \ {\n        if (in_array($value, $operators)) {\n            $result[] = $operand[$key];\n\
    \        } else {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdrjo4gj.php:39\n\
    Stack trace:\n#0 /tmp/tmpwdrjo4gj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpwdrjo4gj.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sxun6fh.php:28\n\
    Stack trace:\n#0 /tmp/tmp_sxun6fh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_sxun6fh.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        $result[] =\
    \ $operand[$key];\n    }\n    foreach ($operators as $key => $value) {\n     \
    \   $result[] = $operand[$key] * $operand[$key];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ivijelt.php:37\n\
    Stack trace:\n#0 /tmp/tmp7ivijelt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7ivijelt.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operand\
    \ as $key => $value) {\n        $result = $result + $value * $operator[$key];\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpxfrrttz7.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpxfrrttz7.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpxfrrttz7.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfrrttz7.php:33\n\
    Stack trace:\n#0 /tmp/tmpxfrrttz7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxfrrttz7.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwcrr6t5c.php:28\n\
    Stack trace:\n#0 /tmp/tmpwcrr6t5c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwcrr6t5c.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result += $operand[$key] * $value;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp37rhmess.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp37rhmess.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp37rhmess.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37rhmess.php:33\n\
    Stack trace:\n#0 /tmp/tmp37rhmess.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp37rhmess.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewd_w7x8.php:28\n\
    Stack trace:\n#0 /tmp/tmpewd_w7x8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpewd_w7x8.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpcms7auw8.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpcms7auw8.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpcms7auw8.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcms7auw8.php:32\n\
    Stack trace:\n#0 /tmp/tmpcms7auw8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcms7auw8.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$operand[$i - 1]]($result, $operand[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function +() in /tmp/tmp3rhyylsv.php:23\n\
    Stack trace:\n#0 /tmp/tmp3rhyylsv.php(29): do_algebra(Array, Array)\n#1 /tmp/tmp3rhyylsv.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmp3rhyylsv.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp3rhyylsv.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjuivyq9a.php:28\n\
    Stack trace:\n#0 /tmp/tmpjuivyq9a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjuivyq9a.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        if ($operators[$key]\
    \ == '/' && $operand[$key] == 0) {\n            $result[$key] = $operand[$key];\n\
    \        } else {\n            $result[$key] = $operand[$key] . do_algebra($operator,\
    \ $operand);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 262144 bytes) in /tmp/tmpg410dklt.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzw6dxuc0.php:29\n\
    Stack trace:\n#0 /tmp/tmpzw6dxuc0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzw6dxuc0.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    $operators = array();\n    $operators_length\
    \ = count($operator);\n    $operands_length = count($operand) - 1;\n    for($i\
    \ = 0; $i < $operators_length; $i++) {\n        $operators[$i] = $operator[$i];\n\
    \    }\n    for($i = 0; $i < $operands_length; $i++) {\n        $operands[$i]\
    \ = $operand[$i];\n    }\n    for($i = 0; $i < $operands_length; $i++) {\n   \
    \     for($j = 0; $j < $operators_length; $j++) {\n            $result = $result\
    \ + $operands[$i] * $operators[$j];\n        }\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpqx5vjmu9.php on line\
    \ 33\n\nWarning: A non-numeric value encountered in /tmp/tmpqx5vjmu9.php on line\
    \ 33\n\nWarning: A non-numeric value encountered in /tmp/tmpqx5vjmu9.php on line\
    \ 33\n\nWarning: A non-numeric value encountered in /tmp/tmpqx5vjmu9.php on line\
    \ 33\n\nWarning: A non-numeric value encountered in /tmp/tmpqx5vjmu9.php on line\
    \ 33\n\nWarning: A non-numeric value encountered in /tmp/tmpqx5vjmu9.php on line\
    \ 33\n\nWarning: A non-numeric value encountered in /tmp/tmpqx5vjmu9.php on line\
    \ 33\n\nWarning: A non-numeric value encountered in /tmp/tmpqx5vjmu9.php on line\
    \ 33\n\nWarning: A non-numeric value encountered in /tmp/tmpqx5vjmu9.php on line\
    \ 33\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqx5vjmu9.php:43\n\
    Stack trace:\n#0 /tmp/tmpqx5vjmu9.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqx5vjmu9.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjq5054vp.php:29\n\
    Stack trace:\n#0 /tmp/tmpjq5054vp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjq5054vp.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd71yptij.php:28\n\
    Stack trace:\n#0 /tmp/tmpd71yptij.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpd71yptij.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = 0;\n    foreach ($operator\
    \ as $key => $value) {\n        $result = $result + ($operand[$key] * $value);\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpyqa42z9x.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpyqa42z9x.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpyqa42z9x.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqa42z9x.php:33\n\
    Stack trace:\n#0 /tmp/tmpyqa42z9x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpyqa42z9x.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyvjlis3.php:28\n\
    Stack trace:\n#0 /tmp/tmpnyvjlis3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnyvjlis3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4g61_5g.php:28\n\
    Stack trace:\n#0 /tmp/tmp_4g61_5g.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_4g61_5g.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9drn516.php:28\n\
    Stack trace:\n#0 /tmp/tmpl9drn516.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl9drn516.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = $operand[0];\n    for ($i\
    \ = 1; $i < count($operand); $i++) {\n        $result = $operator[0]($result,\
    \ $operand[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpi_fvk95b.php:24\n\
    Stack trace:\n#0 /tmp/tmpi_fvk95b.php(30): do_algebra(Array, Array)\n#1 /tmp/tmpi_fvk95b.php(34):\
    \ candidate(Array, Array)\n#2 /tmp/tmpi_fvk95b.php(39): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpi_fvk95b.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n    $result = $operand[0];\n    for\
    \ ($i = 1; $i < count($operand); $i++) {\n        $result .= $operator[$i - 1]\
    \ * $operand[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpbobgvc_y.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpbobgvc_y.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmpbobgvc_y.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbobgvc_y.php:34\n\
    Stack trace:\n#0 /tmp/tmpbobgvc_y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbobgvc_y.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code goes here\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbf3x9t1.php:29\n\
    Stack trace:\n#0 /tmp/tmptbf3x9t1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptbf3x9t1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand);\
    \ $i++) {\n        $result = $operator[$i - 1]($result, $operand[$i]);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function **() in /tmp/tmpme8sacc4.php:23\n\
    Stack trace:\n#0 /tmp/tmpme8sacc4.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpme8sacc4.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpme8sacc4.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpme8sacc4.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = array();\n    $length = count($operator);\n    $operandLength\
    \ = count($operand) - 1;\n    \n    // Loop through the operator list to build\
    \ the result list.\n    for ($i = 0; $i < $length; $i++) {\n        $result[$i]\
    \ = $operand[$i];\n    }\n    \n    // Loop through the operand list to build\
    \ the result list.\n    for ($i = 0; $i < $operandLength; $i++) {\n        $result[$i\
    \ + $length] = $operand[$i + 1];\n    }\n    \n    // Loop through the operator\
    \ list to build the result list.\n    for ($i = 0; $i < $length; $i++) {\n   \
    \     $result[$i + $operandLength] = $operator[$i];\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5l_5hjo.php:48\n\
    Stack trace:\n#0 /tmp/tmph5l_5hjo.php(53): test()\n#1 {main}\n  thrown in /tmp/tmph5l_5hjo.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmimmw9cu.php:28\n\
    Stack trace:\n#0 /tmp/tmpmimmw9cu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmimmw9cu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n    $result = $operand[0];\n    for ($i\
    \ = 1; $i < count($operand); $i++) {\n        $result = $result . $operator[$i\
    \ - 1] * $operand[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp_gfbkmkb.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp_gfbkmkb.php on line\
    \ 24\n\nWarning: A non-numeric value encountered in /tmp/tmp_gfbkmkb.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gfbkmkb.php:34\n\
    Stack trace:\n#0 /tmp/tmp_gfbkmkb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_gfbkmkb.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmro5f9j_.php:28\n\
    Stack trace:\n#0 /tmp/tmpmro5f9j_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmro5f9j_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0ef_o2ht.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp0ef_o2ht.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmp0ef_o2ht.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ef_o2ht.php:33\n\
    Stack trace:\n#0 /tmp/tmp0ef_o2ht.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0ef_o2ht.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9znzhz25.php:28\n\
    Stack trace:\n#0 /tmp/tmp9znzhz25.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9znzhz25.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ = $result + $operand[$op-1];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpf4f0b7pf.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpf4f0b7pf.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpf4f0b7pf.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4f0b7pf.php:32\n\
    Stack trace:\n#0 /tmp/tmpf4f0b7pf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf4f0b7pf.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6k7xtuhv.php:28\n\
    Stack trace:\n#0 /tmp/tmp6k7xtuhv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6k7xtuhv.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        $result = $result + $operand[$key] * $value;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpz39ix8hk.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpz39ix8hk.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpz39ix8hk.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz39ix8hk.php:32\n\
    Stack trace:\n#0 /tmp/tmpz39ix8hk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz39ix8hk.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpie9srxk5.php:28\n\
    Stack trace:\n#0 /tmp/tmpie9srxk5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpie9srxk5.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $key => $value) {\n\
    \        if ($key == '+') {\n            $result += $operand[$key];\n        }\
    \ elseif ($key == '-') {\n            $result -= $operand[$key];\n        } elseif\
    \ ($key == '*') {\n            $result *= $operand[$key];\n        } elseif ($key\
    \ == '/') {\n            $result /= $operand[$key];\n        } elseif ($key ==\
    \ '**') {\n            $result **= $operand[$key];\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2,\
    \ 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbj0ov97.php:42\n\
    Stack trace:\n#0 /tmp/tmprbj0ov97.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprbj0ov97.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = $operand[0];\n    for ($i = 1; $i < count($operand); $i++) {\n        $result\
    \ = $operators[$operator]($result, $operand[$i]);\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Illegal offset type in /tmp/tmpg3zdcgzn.php on line 24\n\nFatal\
    \ error: Uncaught Error: Function name must be a string in /tmp/tmpg3zdcgzn.php:24\n\
    Stack trace:\n#0 /tmp/tmpg3zdcgzn.php(29): do_algebra(Array, Array)\n#1 /tmp/tmpg3zdcgzn.php(33):\
    \ candidate(Array, Array)\n#2 /tmp/tmpg3zdcgzn.php(38): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpg3zdcgzn.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dtqu8dl.php:28\n\
    Stack trace:\n#0 /tmp/tmp4dtqu8dl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4dtqu8dl.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $operands\
    \ = array($operand, $operand);\n    $result = $operands[0];\n    foreach ($operators\
    \ as $op) {\n        foreach ($operands as $operand) {\n            $result =\
    \ $result . $op . $operand;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4, 5)) !==\
    \ 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"+\"\
    , \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk067g30.php:36\n\
    Stack trace:\n#0 /tmp/tmplk067g30.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplk067g30.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ = $result + $operand[$op - 1];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpdx5yigm7.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpdx5yigm7.php on line\
    \ 23\n\nWarning: A non-numeric value encountered in /tmp/tmpdx5yigm7.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdx5yigm7.php:32\n\
    Stack trace:\n#0 /tmp/tmpdx5yigm7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdx5yigm7.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        if ($value\
    \ === '/') {\n            $result[] = $operand[0] / ($operand[1] / $operand[2]);\n\
    \        } elseif ($value === '//') {\n            $result[] = $operand[0] / ($operand[1]\
    \ / $operand[2]);\n        } elseif ($value === '**') {\n            $result[]\
    \ = $operand[0] ** $operand[1];\n        } else {\n            $result[] = $operand[$key];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparmzmbsr.php:42\n\
    Stack trace:\n#0 /tmp/tmparmzmbsr.php(47): test()\n#1 {main}\n  thrown in /tmp/tmparmzmbsr.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $operators = array('+', '-', '*', '/', '//', '**');\n    $result\
    \ = array();\n    foreach ($operator as $key => $value) {\n        if (in_array($value,\
    \ $operators)) {\n            $result[] = $operand[$key];\n        } else {\n\
    \            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return do_algebra(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"**\", \"*\", \"+\"), array(2, 3, 4,\
    \ 5)) !== 37) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    +\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"//\", \"*\"), array(7, 3, 4)) !== 8) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnuj8w2jk.php:38\n\
    Stack trace:\n#0 /tmp/tmpnuj8w2jk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnuj8w2jk.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    $result = 0;\n    foreach ($operator as $op) {\n        $result\
    \ += $operand[$op];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg6rgx_te.php:33\n\
    Stack trace:\n#0 /tmp/tmpg6rgx_te.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg6rgx_te.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given two lists operator, and operand. The first list has basic\
    \ algebra operations, and \n// the second list is a list of integers. Use the\
    \ two given lists to build the algebric \n// expression and return the evaluation\
    \ of this expression.\n// The basic algebra operations:\n// Addition ( + ) \n\
    // Subtraction ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n//\
    \ Exponentiation ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array =\
    \ [2, 3, 4, 5]\n// result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The\
    \ length of operator list is equal to the length of operand list minus one.\n\
    // Operand is a list of of non-negative integers.\n// Operator list has at least\
    \ one operator, and operand list has at least two operands.\nfunction do_algebra($operator,\
    \ $operand) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ do_algebra(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    **\", \"*\", \"+\"), array(2, 3, 4, 5)) !== 37) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"+\", \"*\", \"-\"), array(2, 3, 4, 5)) !== 9)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"//\",\
    \ \"*\"), array(7, 3, 4)) !== 8) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9xkjtu6.php:28\n\
    Stack trace:\n#0 /tmp/tmpn9xkjtu6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpn9xkjtu6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception

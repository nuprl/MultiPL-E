name: HumanEval_108_count_nums
language: php
results:
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $sign = '-';\n        } else {\n       \
    \     $sign = '';\n        }\n        $digits = str_split($num);\n        foreach\
    \ ($digits as $digit) {\n            $count += $digit > 0 ? 1 : 0;\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqaig535.php:32\n\
    Stack trace:\n#0 /tmp/tmpoqaig535.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpoqaig535.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = $n\
    \ * -1;\n    }\n    $count += $n;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph12iflxf.php:26\n\
    Stack trace:\n#0 /tmp/tmph12iflxf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph12iflxf.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += floor($num);\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2q8j90d4.php:27\n\
    Stack trace:\n#0 /tmp/tmp2q8j90d4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2q8j90d4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwlyi018u.php:23\n\
    Stack trace:\n#0 /tmp/tmpwlyi018u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwlyi018u.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = -1;\n    } else {\n      $sign = 1;\n    }\n   \
    \ $digits = str_split($num);\n    foreach ($digits as $digit) {\n      $count\
    \ += $digit * $sign;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn92y4osw.php:32\n\
    Stack trace:\n#0 /tmp/tmpn92y4osw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn92y4osw.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = $n\
    \ * -1;\n    }\n    $count += $n;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeg5hf5xk.php:26\n\
    Stack trace:\n#0 /tmp/tmpeg5hf5xk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpeg5hf5xk.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = intval($num / 10);\n      $num -= $digit * 10;\n    \
    \  if ($num < 0) {\n        $num *= -1;\n        $digit = intval($num / 10);\n\
    \        $num -= $digit * 10;\n      }\n    } else {\n      $digit = intval($num\
    \ / 10);\n      $num -= $digit * 10;\n    }\n    if ($num > 0) {\n      $count\
    \ += $digit > 0 ? $digit : -$digit;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_h6pvn7a.php:39\n\
    Stack trace:\n#0 /tmp/tmp_h6pvn7a.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp_h6pvn7a.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n\
    \            $result += $num;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpodh0f_vk.php:26\n\
    Stack trace:\n#0 /tmp/tmpodh0f_vk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpodh0f_vk.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n    }\n    $count += $num;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaukvp3j3.php:26\n\
    Stack trace:\n#0 /tmp/tmpaukvp3j3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaukvp3j3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num > 0) {\n      $count\
    \ += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnustsnms.php:26\n\
    Stack trace:\n#0 /tmp/tmpnustsnms.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnustsnms.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num > 0) {\n      $count\
    \ += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp829bk6ik.php:26\n\
    Stack trace:\n#0 /tmp/tmp829bk6ik.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp829bk6ik.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n        }\n        $count += $num % 10;\n        $num\
    \ /= 10;\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74m0m4mq.php:27\n\
    Stack trace:\n#0 /tmp/tmp74m0m4mq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp74m0m4mq.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n  \
    \          $num *= -1;\n            $sum += $num;\n        } else {\n        \
    \    $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4xjdix3.php:28\n\
    Stack trace:\n#0 /tmp/tmpo4xjdix3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpo4xjdix3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $sum -= $n & 1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprymez8n9.php:27\n\
    Stack trace:\n#0 /tmp/tmprymez8n9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprymez8n9.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num < 0 ? -$num : $num;\n    } else {\n      $sum += $num;\n    }\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2c0puzkh.php:27\n\
    Stack trace:\n#0 /tmp/tmp2c0puzkh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2c0puzkh.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n    }\n    $count += $num % 10;\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnzxx2q3.php:26\n\
    Stack trace:\n#0 /tmp/tmpqnzxx2q3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqnzxx2q3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num > 0) {\n      $count\
    \ += $num % 10;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4ixm9t3.php:26\n\
    Stack trace:\n#0 /tmp/tmpn4ixm9t3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpn4ixm9t3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = '-';\n        } else {\n \
    \           $sign = '';\n        }\n        $result += $num % 10;\n    }\n   \
    \ return $sign == '' ? $result : $result + 1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsi5_2dy1.php:29\n\
    Stack trace:\n#0 /tmp/tmpsi5_2dy1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsi5_2dy1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = intval($num / 10);\n      $num = $num % 10;\n      if\
    \ ($num > 0) {\n        $count += $digit + 1;\n      } else {\n        $count\
    \ += $digit;\n      }\n    } else {\n      $count += intval($num / 10);\n    \
    \  $num = $num % 10;\n      if ($num > 0) {\n        $count += 1;\n      }\n \
    \   }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_wgro08.php:38\n\
    Stack trace:\n#0 /tmp/tmpa_wgro08.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpa_wgro08.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num;\n      $num *= -1;\n    }\n    $sum += floor($num / 10);\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd526b49c.php:27\n\
    Stack trace:\n#0 /tmp/tmpd526b49c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpd526b49c.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = substr($num, -1);\n      $num = substr($num, 0,\
    \ -1);\n    } else {\n      $sign = '';\n    }\n    $num = (string) $num;\n  \
    \  $len = strlen($num);\n    for ($i = 0; $i < $len; $i++) {\n      $digit = $num[$i];\n\
    \      if ($digit > '9') {\n        break;\n      }\n      $count += $digit *\
    \ pow(10, $len - $i - 1);\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_acvhmbt.php:39\n\
    Stack trace:\n#0 /tmp/tmp_acvhmbt.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp_acvhmbt.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n  \
    \          $num *= -1;\n            $sum += $num;\n        } else {\n        \
    \    $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9li8q8mk.php:28\n\
    Stack trace:\n#0 /tmp/tmp9li8q8mk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9li8q8mk.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $sign = '-';\n    } else {\n      $sign = '';\n    }\n    $n = strval($n);\n\
    \    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n      $d = $n %\
    \ 10;\n      if ($d > 0) {\n        $count++;\n      }\n      $n = floor($n /\
    \ 10);\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj1cnqv9a.php:37\n\
    Stack trace:\n#0 /tmp/tmpj1cnqv9a.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpj1cnqv9a.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $sign = '-';\n        } else {\n       \
    \     $sign = '';\n        }\n        $sum += $num;\n        $count += $num >\
    \ 0 ? 1 : 0;\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpolpyt48g.php:30\n\
    Stack trace:\n#0 /tmp/tmpolpyt48g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpolpyt48g.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2plenwa5.php:23\n\
    Stack trace:\n#0 /tmp/tmp2plenwa5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2plenwa5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $digit = substr($num, strlen($num) - 1);\n\
    \            $result += $digit > 0 ? $digit : -$digit;\n        } else {\n   \
    \         $result += $num;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ifed0n6.php:29\n\
    Stack trace:\n#0 /tmp/tmp6ifed0n6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6ifed0n6.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = substr($num, -1);\n      $num = substr($num, 0,\
    \ -1);\n    } else {\n      $sign = 0;\n    }\n    $sum += $num * pow(10, strlen($num)\
    \ - strlen($sign));\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpdqgxju11.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmpdqgxju11.php on line\
    \ 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdqgxju11.php:30\n\
    Stack trace:\n#0 /tmp/tmpdqgxju11.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdqgxju11.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += $num % 10;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_wgcxl2.php:27\n\
    Stack trace:\n#0 /tmp/tmph_wgcxl2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph_wgcxl2.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $count += $num;\n        } else {\n            $count += $num % 10;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtz6cola.php:27\n\
    Stack trace:\n#0 /tmp/tmpxtz6cola.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxtz6cola.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvffvxa7o.php:23\n\
    Stack trace:\n#0 /tmp/tmpvffvxa7o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvffvxa7o.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += $num % 10;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkfcg5l5.php:27\n\
    Stack trace:\n#0 /tmp/tmprkfcg5l5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprkfcg5l5.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $n *= -1;\n    }\n    $count += $n;\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7btfy7g7.php:27\n\
    Stack trace:\n#0 /tmp/tmp7btfy7g7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7btfy7g7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num / 10);\n      $num -= $digit * 10;\n     \
    \ if ($num < 0) {\n        $num *= -1;\n        $digit = floor($num / 10);\n \
    \       $num -= $digit * 10;\n      }\n    } else {\n      $digit = floor($num\
    \ / 10);\n      $num -= $digit * 10;\n    }\n    if ($num > 0) {\n      $count\
    \ += $digit + 1;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxygm_ble.php:38\n\
    Stack trace:\n#0 /tmp/tmpxygm_ble.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxygm_ble.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num;\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnic8aj72.php:28\n\
    Stack trace:\n#0 /tmp/tmpnic8aj72.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnic8aj72.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num / 10);\n      $num -= $digit * 10;\n    }\
    \ else {\n      $digit = floor($num / 10);\n    }\n    if ($digit > 0) {\n   \
    \   $count += $digit;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfw7c5r2z.php:33\n\
    Stack trace:\n#0 /tmp/tmpfw7c5r2z.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfw7c5r2z.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $sign = '-';\n        } else {\n       \
    \     $sign = '';\n        }\n        $digits = str_split($num);\n        foreach\
    \ ($digits as $digit) {\n            if ($digit > 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfd0vxrd.php:34\n\
    Stack trace:\n#0 /tmp/tmptfd0vxrd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptfd0vxrd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = intval($num / 10);\n      $num -= $digit * 10;\n    \
    \  if ($num < 0) {\n        $num *= -1;\n        $digit = intval($num / 10);\n\
    \        $num -= $digit * 10;\n      }\n    } else {\n      $digit = intval($num\
    \ / 10);\n      $num -= $digit * 10;\n    }\n    if ($num > 0) {\n      $count\
    \ += $digit + 1;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe847r1bl.php:38\n\
    Stack trace:\n#0 /tmp/tmpe847r1bl.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpe847r1bl.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = abs($num);\n      $count += $digit < 10 ? 1 : 0;\n  \
    \  } else {\n      $count += $num < 10 ? 1 : 0;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch2dtm4l.php:29\n\
    Stack trace:\n#0 /tmp/tmpch2dtm4l.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpch2dtm4l.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvy38fkaw.php:34\n\
    Stack trace:\n#0 /tmp/tmpvy38fkaw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvy38fkaw.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2272yuv.php:23\n\
    Stack trace:\n#0 /tmp/tmpj2272yuv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj2272yuv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = -1;\n        } else {\n  \
    \          $sign = 1;\n        }\n        $sum = 0;\n        while ($num > 0)\
    \ {\n            $sum += $num % 10;\n            $num /= 10;\n        }\n    \
    \    if ($sum > 0) {\n            $count += $sign * $sum;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmple8uz8tu.php:36\n\
    Stack trace:\n#0 /tmp/tmple8uz8tu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmple8uz8tu.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = substr($num, -1);\n      \
    \      $num = substr($num, 0, -1);\n        } else {\n            $sign = '';\n\
    \        }\n        $count += $num >= 0 ? $num : -$num;\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpzqrs72y6.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmpzqrs72y6.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmpzqrs72y6.php on line\
    \ 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqrs72y6.php:31\n\
    Stack trace:\n#0 /tmp/tmpzqrs72y6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzqrs72y6.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $sum += intval($num % 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_zj6xjd.php:29\n\
    Stack trace:\n#0 /tmp/tmpi_zj6xjd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi_zj6xjd.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num >= 0) {\n      $count\
    \ += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3p1yw0_t.php:26\n\
    Stack trace:\n#0 /tmp/tmp3p1yw0_t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3p1yw0_t.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $n *= -1;\n    }\n    $count += $n;\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpph93zw2m.php:27\n\
    Stack trace:\n#0 /tmp/tmpph93zw2m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpph93zw2m.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = substr($num, -1);\n      \
    \      $num = substr($num, 0, -1);\n        } else {\n            $sign = '';\n\
    \        }\n        $result += $num * self::$digits[$sign];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Cannot use \"self\" when no class scope is active in /tmp/tmpfkp6eh3a.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpil3p3gz6.php:23\n\
    Stack trace:\n#0 /tmp/tmpil3p3gz6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpil3p3gz6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9o39vwd4.php:34\n\
    Stack trace:\n#0 /tmp/tmp9o39vwd4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9o39vwd4.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $digit = floor($num);\n            $result\
    \ -= $digit * pow(10, abs($digit - 1));\n        } else {\n            $result\
    \ += floor($num);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pesnp34.php:29\n\
    Stack trace:\n#0 /tmp/tmp1pesnp34.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1pesnp34.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = -1;\n        } else {\n  \
    \          $sign = 1;\n        }\n        $result += $num * (10 ** ($sign * strlen($num)\
    \ - 1));\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe66odguo.php:29\n\
    Stack trace:\n#0 /tmp/tmpe66odguo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe66odguo.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += $num % 10;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc16ps0j.php:27\n\
    Stack trace:\n#0 /tmp/tmpuc16ps0j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuc16ps0j.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = '-';\n        } else {\n \
    \           $sign = '';\n        }\n        $result += (floor($num / 10) + 1)\
    \ * $num % 10;\n    }\n    return $result + $sign;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpbodxidf9.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbodxidf9.php:29\n\
    Stack trace:\n#0 /tmp/tmpbodxidf9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbodxidf9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sign = 1;\n    } else {\n      $sign = 0;\n    }\n    $digits\
    \ = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit > 0)\
    \ {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp636l1hcf.php:34\n\
    Stack trace:\n#0 /tmp/tmp636l1hcf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp636l1hcf.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2pqncsa.php:23\n\
    Stack trace:\n#0 /tmp/tmpl2pqncsa.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpl2pqncsa.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num / 10);\n      $num -= $digit * 10;\n     \
    \ if ($num < 0) {\n        $num *= -1;\n        $digit = floor($num / 10);\n \
    \       $num -= $digit * 10;\n      }\n    } else {\n      $digit = floor($num\
    \ / 10);\n      $num -= $digit * 10;\n    }\n    if ($num > 0) {\n      $count\
    \ += $digit + 1;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncz9d7v9.php:38\n\
    Stack trace:\n#0 /tmp/tmpncz9d7v9.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpncz9d7v9.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $count += $num > 0 ? $num\
    \ : -$num;\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpys7_b9q3.php:23\n\
    Stack trace:\n#0 /tmp/tmpys7_b9q3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpys7_b9q3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num >= 0) {\n      $count\
    \ += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnpdtchgi.php:26\n\
    Stack trace:\n#0 /tmp/tmpnpdtchgi.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnpdtchgi.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $result += $num;\n        } else {\n            $result -= $num;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpve0mr0v4.php:27\n\
    Stack trace:\n#0 /tmp/tmpve0mr0v4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpve0mr0v4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnamhwl4_.php:23\n\
    Stack trace:\n#0 /tmp/tmpnamhwl4_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnamhwl4_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n    }\n    $count += $num;\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3p87qhuu.php:26\n\
    Stack trace:\n#0 /tmp/tmp3p87qhuu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3p87qhuu.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num >= 0) {\n      $count\
    \ += $num;\n    } else {\n      $count += $num % 10;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap7bkcf7.php:27\n\
    Stack trace:\n#0 /tmp/tmpap7bkcf7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpap7bkcf7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $sign = '-';\n        } else {\n       \
    \     $sign = '';\n        }\n        $count += intval($num / 10) + intval($num\
    \ % 10);\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppfe73cc6.php:29\n\
    Stack trace:\n#0 /tmp/tmppfe73cc6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppfe73cc6.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $count += $num > 0\
    \ ? 1 : 0;\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmploerz036.php:27\n\
    Stack trace:\n#0 /tmp/tmploerz036.php(32): test()\n#1 {main}\n  thrown in /tmp/tmploerz036.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $sign = '-';\n    } else {\n      $sign = '';\n    }\n    $sum += $n *\
    \ (int)strlen($sign);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97vf29cs.php:29\n\
    Stack trace:\n#0 /tmp/tmp97vf29cs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp97vf29cs.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num > 0) {\n      $count\
    \ += $num % 10;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjn305idp.php:26\n\
    Stack trace:\n#0 /tmp/tmpjn305idp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjn305idp.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $sign = substr($n, 0, 1);\n      $n = substr($n, 1);\n    } else {\n  \
    \    $sign = '';\n    }\n    $n = str_pad($n, 3, '0', STR_PAD_LEFT);\n    $n =\
    \ $sign + $n;\n    $n = str_pad($n, 3, '0', STR_PAD_RIGHT);\n    $n = substr($n,\
    \ -3);\n    $n = intval($n);\n    if ($n > 0) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp24ntn2sa.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24ntn2sa.php:37\n\
    Stack trace:\n#0 /tmp/tmp24ntn2sa.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp24ntn2sa.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $result += $num % 10;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9myp6tqn.php:29\n\
    Stack trace:\n#0 /tmp/tmp9myp6tqn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9myp6tqn.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = -1;\n        } else {\n  \
    \          $sign = 1;\n        }\n        $result += $num % 10;\n        $num\
    \ = $num / 10;\n    }\n    return $sign * $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvquuspx7.php:30\n\
    Stack trace:\n#0 /tmp/tmpvquuspx7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvquuspx7.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += $num % 10;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptceqwxbs.php:27\n\
    Stack trace:\n#0 /tmp/tmptceqwxbs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptceqwxbs.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    } else {\n      $sum += $num;\n    }\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbuy05cwt.php:28\n\
    Stack trace:\n#0 /tmp/tmpbuy05cwt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbuy05cwt.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n  \
    \          $num *= -1;\n        }\n        $sum += $num;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9a7xb8hh.php:26\n\
    Stack trace:\n#0 /tmp/tmp9a7xb8hh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9a7xb8hh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num / 10);\n      $num -= $digit * 10;\n    }\
    \ else {\n      $digit = floor($num / 10);\n    }\n    if ($num > 0) {\n     \
    \ $count += $digit + 1;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zny_zgz.php:32\n\
    Stack trace:\n#0 /tmp/tmp_zny_zgz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_zny_zgz.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $first = $num % 10;\n      if ($first < 0) {\n        $num +=\
    \ 10;\n        $first = -$first;\n      }\n      $count++;\n      continue;\n\
    \    }\n    $count++;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn81b_skg.php:33\n\
    Stack trace:\n#0 /tmp/tmpn81b_skg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn81b_skg.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $n) {\n        if ($n < 0) {\n    \
    \        $n = abs($n);\n            $sign = '-';\n        } else {\n         \
    \   $sign = '';\n        }\n        $n = $sign + str_pad(abs($n), 3, '0', STR_PAD_LEFT);\n\
    \        $count += substr_count($n, '0');\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpsp6_poea.php on line\
    \ 18\n\nWarning: A non-numeric value encountered in /tmp/tmpsp6_poea.php on line\
    \ 18\n\nWarning: A non-numeric value encountered in /tmp/tmpsp6_poea.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsp6_poea.php:30\n\
    Stack trace:\n#0 /tmp/tmpsp6_poea.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsp6_poea.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num / 10);\n      $num -= $digit * 10;\n    }\
    \ else {\n      $digit = 0;\n    }\n    $count += $digit > 0 ? $digit : 0;\n \
    \ }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotsaz7dd.php:31\n\
    Stack trace:\n#0 /tmp/tmpotsaz7dd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpotsaz7dd.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n  \
    \          $num *= -1;\n            $sum += $num;\n        } else {\n        \
    \    $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph38x1_vz.php:28\n\
    Stack trace:\n#0 /tmp/tmph38x1_vz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmph38x1_vz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $sign = '-';\n        } else {\n       \
    \     $sign = '';\n        }\n        $count += intval(preg_replace('/[^1-9]/',\
    \ '', $num));\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpywdtupno.php:29\n\
    Stack trace:\n#0 /tmp/tmpywdtupno.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpywdtupno.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $count++;\n        }\n        $count +=\
    \ $num % 10 == 0 ? 1 : 0;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcd_hb0cy.php:27\n\
    Stack trace:\n#0 /tmp/tmpcd_hb0cy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcd_hb0cy.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n    $digits\
    \ = str_split($num);\n    foreach ($digits as $digit) {\n      $count += $digit\
    \ > 0 ? 1 : 0;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsujy96y6.php:32\n\
    Stack trace:\n#0 /tmp/tmpsujy96y6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsujy96y6.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $sign = '-';\n    } else {\n      $sign = '';\n    }\n    $n = strval($n);\n\
    \    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n      $d = $n %\
    \ 10;\n      if ($d > 0) {\n        $count++;\n      }\n      $n = floor($n /\
    \ 10);\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8daxy0ye.php:37\n\
    Stack trace:\n#0 /tmp/tmp8daxy0ye.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8daxy0ye.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num > 0) {\n      $count\
    \ += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdpk7w0zg.php:26\n\
    Stack trace:\n#0 /tmp/tmpdpk7w0zg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdpk7w0zg.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $count += $num > 0 ? $num\
    \ : -$num;\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdexh8k8_.php:23\n\
    Stack trace:\n#0 /tmp/tmpdexh8k8_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdexh8k8_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ -= $num;\n    } else {\n      $sum += $num;\n    }\n  }\n  return $sum;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5vujedyw.php:27\n\
    Stack trace:\n#0 /tmp/tmp5vujedyw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5vujedyw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_zobre84.php:23\n\
    Stack trace:\n#0 /tmp/tmp_zobre84.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_zobre84.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = $n\
    \ * -1;\n    }\n    $count += $n % 10;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrnfa1i0.php:26\n\
    Stack trace:\n#0 /tmp/tmpqrnfa1i0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqrnfa1i0.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n\
    \            $count += $num % 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjg82um06.php:26\n\
    Stack trace:\n#0 /tmp/tmpjg82um06.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjg82um06.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = substr($num, -1);\n      \
    \      $num = substr($num, 0, -1);\n        } else {\n            $sign = '';\n\
    \        }\n        $result = $result + (int) $num;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9mhgj0d.php:31\n\
    Stack trace:\n#0 /tmp/tmpk9mhgj0d.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk9mhgj0d.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n  \
    \          $num *= -1;\n        }\n        $sum += $num;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4p7s5yov.php:26\n\
    Stack trace:\n#0 /tmp/tmp4p7s5yov.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4p7s5yov.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += abs($num);\n    } else {\n      $sum += $num;\n    }\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafeh1t1o.php:27\n\
    Stack trace:\n#0 /tmp/tmpafeh1t1o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpafeh1t1o.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $sum += $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ae8gs8o.php:29\n\
    Stack trace:\n#0 /tmp/tmp4ae8gs8o.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4ae8gs8o.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = $n *\
    \ -1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvukjc0v2.php:26\n\
    Stack trace:\n#0 /tmp/tmpvukjc0v2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvukjc0v2.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num / 10);\n      $sum += $digit * $num % 10;\n\
    \    } else {\n      $sum += $num;\n    }\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5y5t1zs.php:30\n\
    Stack trace:\n#0 /tmp/tmpu5y5t1zs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpu5y5t1zs.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        $result += $num;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yntgj4i.php:23\n\
    Stack trace:\n#0 /tmp/tmp9yntgj4i.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9yntgj4i.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $sign = '-';\n        } else {\n       \
    \     $sign = '';\n        }\n        $count += intval(str_split($num));\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpok5ig0jq.php:29\n\
    Stack trace:\n#0 /tmp/tmpok5ig0jq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpok5ig0jq.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n\
    \            $count += $num;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3c5gcth.php:26\n\
    Stack trace:\n#0 /tmp/tmpk3c5gcth.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk3c5gcth.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num);\n      if ($num > $digit) {\n        $count\
    \ += $digit - $num;\n      }\n    } else {\n      $digit = floor($num);\n    \
    \  $count += $digit;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8v2moj7b.php:32\n\
    Stack trace:\n#0 /tmp/tmp8v2moj7b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8v2moj7b.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplygji6m4.php:23\n\
    Stack trace:\n#0 /tmp/tmplygji6m4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplygji6m4.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $count += $num % 10;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegadq_yu.php:29\n\
    Stack trace:\n#0 /tmp/tmpegadq_yu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpegadq_yu.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp955ncywz.php:23\n\
    Stack trace:\n#0 /tmp/tmp955ncywz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp955ncywz.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n\
    \            $count += $num;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukyt1r1h.php:26\n\
    Stack trace:\n#0 /tmp/tmpukyt1r1h.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpukyt1r1h.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovzzchim.php:23\n\
    Stack trace:\n#0 /tmp/tmpovzzchim.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpovzzchim.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n        }\n        $count += $num % 10;\n    }\n   \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwwuokr6.php:26\n\
    Stack trace:\n#0 /tmp/tmpbwwuokr6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbwwuokr6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += abs($num);\n    } else {\n      $sum += $num;\n    }\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskp98qus.php:27\n\
    Stack trace:\n#0 /tmp/tmpskp98qus.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpskp98qus.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num >= 0) {\n      $count\
    \ += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnoek2f58.php:26\n\
    Stack trace:\n#0 /tmp/tmpnoek2f58.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnoek2f58.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n\
    \            $count += $num;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ji_h0cr.php:26\n\
    Stack trace:\n#0 /tmp/tmp5ji_h0cr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5ji_h0cr.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqahnrq7.php:34\n\
    Stack trace:\n#0 /tmp/tmpwqahnrq7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwqahnrq7.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num >= 0) {\n      $count\
    \ += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8eibfzo.php:26\n\
    Stack trace:\n#0 /tmp/tmpz8eibfzo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpz8eibfzo.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmrpoaic.php:23\n\
    Stack trace:\n#0 /tmp/tmpwmrpoaic.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwmrpoaic.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = substr($num, -1);\n      $num = substr($num, 0,\
    \ -1);\n    } else {\n      $sign = '';\n    }\n    $digits = str_split($num);\n\
    \    foreach ($digits as $digit) {\n      $result += $digit * pow(10, count($digits)\
    \ - $sign);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp72905ey_.php on line\
    \ 21\n\nWarning: A non-numeric value encountered in /tmp/tmp72905ey_.php on line\
    \ 21\n\nWarning: A non-numeric value encountered in /tmp/tmp72905ey_.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72905ey_.php:33\n\
    Stack trace:\n#0 /tmp/tmp72905ey_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp72905ey_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum -= $num;\n    } else {\n      $sum += $num;\n    }\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9sixdot.php:28\n\
    Stack trace:\n#0 /tmp/tmps9sixdot.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps9sixdot.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num > 0) {\n      $count\
    \ += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3gjob6q.php:26\n\
    Stack trace:\n#0 /tmp/tmpw3gjob6q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw3gjob6q.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num >= 0) {\n      $count\
    \ += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7n3lld7.php:26\n\
    Stack trace:\n#0 /tmp/tmpr7n3lld7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr7n3lld7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $count += $num;\n        } else {\n            $count += $num % 10;\n\
    \            $count += $num / 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgk1ut8sz.php:28\n\
    Stack trace:\n#0 /tmp/tmpgk1ut8sz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgk1ut8sz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $sign = '-';\n    } else {\n      $sign = '';\n    }\n    $n = strval($n);\n\
    \    $len = strlen($n);\n    for ($i = 0; $i < $len; $i++) {\n      $d = $n %\
    \ 10;\n      if ($d > 0) {\n        $count++;\n      }\n      $n = floor($n /\
    \ 10);\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp1baau_b.php:37\n\
    Stack trace:\n#0 /tmp/tmpp1baau_b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpp1baau_b.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = ($num < 0) ? '-' : '';\n      $num = abs($num);\n\
    \    } else {\n      $sign = '';\n    }\n    $digits = str_split($num);\n    foreach\
    \ ($digits as $digit) {\n      if ($digit > 0) {\n        $count++;\n      }\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbthlrmef.php:35\n\
    Stack trace:\n#0 /tmp/tmpbthlrmef.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpbthlrmef.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $sign = '-';\n    } else {\n      $sign = '';\n    }\n    $n = strval($n);\n\
    \    $len = strlen($n);\n    if ($len > 0) {\n      $digits = str_split($n);\n\
    \      foreach ($digits as $digit) {\n        if ($digit > 0 && $digit < $len)\
    \ {\n          $count++;\n        }\n      }\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekbbc85g.php:39\n\
    Stack trace:\n#0 /tmp/tmpekbbc85g.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpekbbc85g.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $digit = floor($num / 10);\n           \
    \ $num -= $digit * 10;\n        } else {\n            $digit = floor($num / 10);\n\
    \        }\n        if ($digit > 0) {\n            $count += $digit;\n       \
    \ }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxykj_ruo.php:33\n\
    Stack trace:\n#0 /tmp/tmpxykj_ruo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxykj_ruo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjba24cux.php:23\n\
    Stack trace:\n#0 /tmp/tmpjba24cux.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjba24cux.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $count += $num > 0\
    \ ? 1 : 0;\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9g32256f.php:27\n\
    Stack trace:\n#0 /tmp/tmp9g32256f.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9g32256f.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num;\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpofwq9wo9.php:28\n\
    Stack trace:\n#0 /tmp/tmpofwq9wo9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpofwq9wo9.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $sign = -1;\n        } else {\n        \
    \    $sign = 1;\n        }\n        $sum += $num;\n        if ($sum > 0) {\n \
    \           $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ojpw4fe.php:32\n\
    Stack trace:\n#0 /tmp/tmp1ojpw4fe.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1ojpw4fe.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n  \
    \          $sum += abs($num);\n        } else {\n            $sum += $num;\n \
    \       }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdqzxtczl.php:27\n\
    Stack trace:\n#0 /tmp/tmpdqzxtczl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdqzxtczl.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num);\n      $count += $digit < 0 ? $digit + 10\
    \ : $digit;\n    } else {\n      $count += floor($num);\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyw3tlf9.php:29\n\
    Stack trace:\n#0 /tmp/tmpvyw3tlf9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvyw3tlf9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      $result\
    \ += (abs($digit) > 0);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo9hmru4.php:32\n\
    Stack trace:\n#0 /tmp/tmpzo9hmru4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzo9hmru4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprg9_x65l.php:29\n\
    Stack trace:\n#0 /tmp/tmprg9_x65l.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprg9_x65l.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $n) {\n    $sum += $n;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy7oqn8az.php:23\n\
    Stack trace:\n#0 /tmp/tmpy7oqn8az.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpy7oqn8az.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $count += $num;\n        } else {\n            $count += $num % 10;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmj6k8bbi.php:27\n\
    Stack trace:\n#0 /tmp/tmpmj6k8bbi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmj6k8bbi.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = abs($num);\n      $count += $digit < 10 ? 1 : 0;\n  \
    \  } else {\n      $digit = abs($num);\n      $count += $digit < 10 ? 1 : 0;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdilds7gp.php:30\n\
    Stack trace:\n#0 /tmp/tmpdilds7gp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdilds7gp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg5kvj_5g.php:23\n\
    Stack trace:\n#0 /tmp/tmpg5kvj_5g.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg5kvj_5g.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = -1;\n    } else {\n      $sign = 1;\n    }\n   \
    \ $result += $num % 10;\n  }\n  return $sign * $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi__0pmit.php:29\n\
    Stack trace:\n#0 /tmp/tmpi__0pmit.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi__0pmit.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0t2ksyt7.php:23\n\
    Stack trace:\n#0 /tmp/tmp0t2ksyt7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0t2ksyt7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += floor($num);\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvf59kum.php:27\n\
    Stack trace:\n#0 /tmp/tmpqvf59kum.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqvf59kum.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = -1;\n    } else {\n      $sign = 1;\n    }\n   \
    \ $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n  \
    \  return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2srcjpb8.php:29\n\
    Stack trace:\n#0 /tmp/tmp2srcjpb8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2srcjpb8.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3v0m_w8.php:34\n\
    Stack trace:\n#0 /tmp/tmpp3v0m_w8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpp3v0m_w8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n    }\n    $count += $num % 10;\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpep_e4_sq.php:26\n\
    Stack trace:\n#0 /tmp/tmpep_e4_sq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpep_e4_sq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = substr($num, strlen($num) - 1);\n      if ($digit < 0)\
    \ {\n        $count += $digit * -1;\n      } else {\n        $count += $digit;\n\
    \      }\n    } else {\n      $count += $num;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9ru99dx.php:33\n\
    Stack trace:\n#0 /tmp/tmpo9ru99dx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo9ru99dx.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += floor($num / 10);\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tk6jh53.php:27\n\
    Stack trace:\n#0 /tmp/tmp7tk6jh53.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7tk6jh53.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $sum -= $n / 10;\n      $sum += $n % 10;\n    } else {\n      $sum += $n;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpix1mlxmp.php:29\n\
    Stack trace:\n#0 /tmp/tmpix1mlxmp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpix1mlxmp.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $result += $num % 10;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4b8wjckm.php:26\n\
    Stack trace:\n#0 /tmp/tmp4b8wjckm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4b8wjckm.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = $n\
    \ * -1;\n    }\n    $count += $n;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qyej0cn.php:26\n\
    Stack trace:\n#0 /tmp/tmp_qyej0cn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_qyej0cn.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmet860q.php:23\n\
    Stack trace:\n#0 /tmp/tmpmmet860q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmmet860q.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n\
    \            $count += $num % 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6r8vk2r.php:26\n\
    Stack trace:\n#0 /tmp/tmpc6r8vk2r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpc6r8vk2r.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = $n *\
    \ -1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5vpgksiy.php:26\n\
    Stack trace:\n#0 /tmp/tmp5vpgksiy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5vpgksiy.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n    }\n    $result += (floor($num / 10) + 1);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwig4ad5n.php:26\n\
    Stack trace:\n#0 /tmp/tmpwig4ad5n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwig4ad5n.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpktfyct.php:34\n\
    Stack trace:\n#0 /tmp/tmpmpktfyct.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmpktfyct.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = -1;\n    } else {\n      $sign = 1;\n    }\n   \
    \ $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgece3c1.php:34\n\
    Stack trace:\n#0 /tmp/tmpcgece3c1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcgece3c1.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $n) {\n        if ($n < 0) {\n    \
    \        $n = $n * -1;\n        }\n        $count += $n;\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpowsxhs_t.php:26\n\
    Stack trace:\n#0 /tmp/tmpowsxhs_t.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpowsxhs_t.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $sign = '-';\n    } else {\n      $sign = '';\n    }\n    $sum += $n %\
    \ 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhr3cjs2.php:29\n\
    Stack trace:\n#0 /tmp/tmpnhr3cjs2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnhr3cjs2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n  \
    \          $num *= -1;\n            $sum += $num;\n        } else {\n        \
    \    $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyajouq0u.php:28\n\
    Stack trace:\n#0 /tmp/tmpyajouq0u.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyajouq0u.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num % 10;\n      $num = abs($num);\n    }\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4i5st7y.php:28\n\
    Stack trace:\n#0 /tmp/tmpk4i5st7y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk4i5st7y.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $count += $num;\n        } else {\n            $count += $num % 10;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjl7oqhi5.php:27\n\
    Stack trace:\n#0 /tmp/tmpjl7oqhi5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjl7oqhi5.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $n) {\n        if ($n < 0) {\n    \
    \        $n = abs($n);\n            $sign = '-';\n        } else {\n         \
    \   $sign = '';\n        }\n        $n = strval($n);\n        $len = strlen($n);\n\
    \        for ($i = 0; $i < $len; $i++) {\n            $d = $n % 10;\n        \
    \    if ($d > 0) {\n                $count++;\n            }\n            $n =\
    \ floor($n / 10);\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgmtff3t.php:37\n\
    Stack trace:\n#0 /tmp/tmpsgmtff3t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpsgmtff3t.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += floor($num / 10);\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpha36m6mw.php:27\n\
    Stack trace:\n#0 /tmp/tmpha36m6mw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpha36m6mw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = '-';\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    $digits_sum = array_sum($digits);\n    if\
    \ ($digits_sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3g3qog7d.php:33\n\
    Stack trace:\n#0 /tmp/tmp3g3qog7d.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3g3qog7d.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num;\n      $num = abs($num);\n    }\n    $sum += $num % 10;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizduv64b.php:28\n\
    Stack trace:\n#0 /tmp/tmpizduv64b.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpizduv64b.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = $num < 0 ? '-' : '';\n      $num = abs($num);\n\
    \    }\n    $count += $num;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzp7pqxc1.php:28\n\
    Stack trace:\n#0 /tmp/tmpzp7pqxc1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzp7pqxc1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $count += $num;\n        } else {\n            $count += $num % 10;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8mraf8c.php:27\n\
    Stack trace:\n#0 /tmp/tmpf8mraf8c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf8mraf8c.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += $num % 10;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzcvid75i.php:27\n\
    Stack trace:\n#0 /tmp/tmpzcvid75i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzcvid75i.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $num) {\n    $result += $num;\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpob5d28p_.php:23\n\
    Stack trace:\n#0 /tmp/tmpob5d28p_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpob5d28p_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num;\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96aix1x_.php:28\n\
    Stack trace:\n#0 /tmp/tmp96aix1x_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp96aix1x_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = abs($num % 10);\n      if ($digit > 0) {\n        $num\
    \ -= $digit;\n        $count++;\n      }\n    } else {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmppb846b.php:32\n\
    Stack trace:\n#0 /tmp/tmpmppb846b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmppb846b.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n    }\n    $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7wqfaaa.php:26\n\
    Stack trace:\n#0 /tmp/tmpf7wqfaaa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpf7wqfaaa.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num / 10);\n      $num -= $digit * 10;\n    }\
    \ else {\n      $digit = 0;\n    }\n    $count += $digit > 0 ? $digit : 0;\n \
    \ }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9o4opnbx.php:31\n\
    Stack trace:\n#0 /tmp/tmp9o4opnbx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9o4opnbx.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = substr($num, -1);\n      $num = substr($num, 0,\
    \ -1);\n    } else {\n      $sign = '';\n    }\n    $digits = str_split($num);\n\
    \    foreach ($digits as $digit) {\n      if ($digit > 0) $result++;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmk6a0909.php:36\n\
    Stack trace:\n#0 /tmp/tmpmk6a0909.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmk6a0909.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num;\n      $num = abs($num);\n    }\n    $sum += $num % 10;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24xj60ha.php:28\n\
    Stack trace:\n#0 /tmp/tmp24xj60ha.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp24xj60ha.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        $result += $num;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeyu2jspn.php:23\n\
    Stack trace:\n#0 /tmp/tmpeyu2jspn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeyu2jspn.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = floor($num);\n      if ($num >= $digit) {\n        $count\
    \ += $digit - $num;\n      }\n    } else {\n      $count += floor($num);\n   \
    \ }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0go0p9pe.php:31\n\
    Stack trace:\n#0 /tmp/tmp0go0p9pe.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0go0p9pe.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $num) {\n    $result += $num;\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4mgi0zm.php:23\n\
    Stack trace:\n#0 /tmp/tmph4mgi0zm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmph4mgi0zm.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $result = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = ($num < 0) ? '-' : '';\n      $num = abs($num);\n\
    \    } else {\n      $sign = '';\n    }\n    $digits = str_split($num);\n    foreach\
    \ ($digits as $digit) {\n      $result += $digit > 0 ? 1 : 0;\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt705akjl.php:33\n\
    Stack trace:\n#0 /tmp/tmpt705akjl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt705akjl.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = intval($num / 10);\n      $num = intval($num % 10);\n\
    \      if ($digit > 0) {\n        $count += $digit * $count_nums([$num]);\n  \
    \    }\n    } else {\n      $count += $count_nums([$num]);\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Function name must be a string in /tmp/tmpmo17_d0b.php:20\n\
    Stack trace:\n#0 /tmp/tmpmo17_d0b.php(27): count_nums(Array)\n#1 /tmp/tmpmo17_d0b.php(32):\
    \ candidate(Array)\n#2 /tmp/tmpmo17_d0b.php(41): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpmo17_d0b.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $count += $num;\n        } else {\n            $count += $num < 0\
    \ ? -$num : $num;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpciuj4mi5.php:27\n\
    Stack trace:\n#0 /tmp/tmpciuj4mi5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpciuj4mi5.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $n) {\n    if ($n < 0) {\n      $n = abs($n);\n\
    \      $count++;\n    }\n    $count += $n % 10;\n    $n = floor($n / 10);\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxalz5vf.php:28\n\
    Stack trace:\n#0 /tmp/tmpuxalz5vf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuxalz5vf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += $num % 10;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6v_cz1b.php:27\n\
    Stack trace:\n#0 /tmp/tmpk6v_cz1b.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk6v_cz1b.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $sign = '-';\n        } else {\n       \
    \     $sign = '';\n        }\n        $count += intval(\n            $num\n  \
    \          / 10\n            + ($num % 10 > 0 ? 1 : 0)\n        );\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkra79nuo.php:33\n\
    Stack trace:\n#0 /tmp/tmpkra79nuo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkra79nuo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += floor($num / 10);\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkn043bz.php:27\n\
    Stack trace:\n#0 /tmp/tmpwkn043bz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwkn043bz.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $sum += $num;\n    }\n    $sum += $num % 10;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprq9lotj0.php:27\n\
    Stack trace:\n#0 /tmp/tmprq9lotj0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprq9lotj0.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnh_qzmau.php:23\n\
    Stack trace:\n#0 /tmp/tmpnh_qzmau.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnh_qzmau.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num;\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0oqsix3.php:28\n\
    Stack trace:\n#0 /tmp/tmpo0oqsix3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpo0oqsix3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjf8r4pk.php:23\n\
    Stack trace:\n#0 /tmp/tmpsjf8r4pk.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsjf8r4pk.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n            $sign = 1;\n        } else {\n         \
    \   $sign = 0;\n        }\n        $sum += $num;\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprliflhoj.php:32\n\
    Stack trace:\n#0 /tmp/tmprliflhoj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmprliflhoj.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = -1;\n    } else {\n      $sign = 1;\n    }\n   \
    \ $sum += $num * pow(10, count($arr) - $sign);\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzn5s6yb.php:29\n\
    Stack trace:\n#0 /tmp/tmptzn5s6yb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmptzn5s6yb.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $count += $num;\n        } else {\n            $count += $num % 10;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp502bb3wu.php:27\n\
    Stack trace:\n#0 /tmp/tmp502bb3wu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp502bb3wu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsfl54h8r.php:23\n\
    Stack trace:\n#0 /tmp/tmpsfl54h8r.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsfl54h8r.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = substr($num, -1);\n      $num = substr($num, 0,\
    \ -1);\n    } else {\n      $sign = 0;\n    }\n    $sum += $num * pow(10, strlen($num)\
    \ - strlen($sign));\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp2c07md4r.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmp2c07md4r.php on line\
    \ 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2c07md4r.php:30\n\
    Stack trace:\n#0 /tmp/tmp2c07md4r.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2c07md4r.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n      $digit = intval($num / 10);\n      $num -= $digit * 10;\n    }\
    \ else {\n      $digit = intval($num / 10);\n    }\n    if ($digit > 0) {\n  \
    \    $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fj66yze.php:33\n\
    Stack trace:\n#0 /tmp/tmp2fj66yze.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2fj66yze.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $count += $num < 0 ? $num\
    \ % 10 : $num;\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0jmj0ve.php:23\n\
    Stack trace:\n#0 /tmp/tmpa0jmj0ve.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa0jmj0ve.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnjpjugf_.php:23\n\
    Stack trace:\n#0 /tmp/tmpnjpjugf_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnjpjugf_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n\
    \            $count += $num;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12ioj3eo.php:26\n\
    Stack trace:\n#0 /tmp/tmp12ioj3eo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp12ioj3eo.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n    }\n    $count += $num % 10;\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjv7hqhig.php:26\n\
    Stack trace:\n#0 /tmp/tmpjv7hqhig.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjv7hqhig.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = substr($num, -1);\n      \
    \      $num = substr($num, 0, -1);\n        } else {\n            $sign = '';\n\
    \        }\n        $result += (substr($num, -1) - $num % 10) + ($num / 10);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmppg3v3l42.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmppg3v3l42.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmppg3v3l42.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmppg3v3l42.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmppg3v3l42.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmppg3v3l42.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmppg3v3l42.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmppg3v3l42.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmppg3v3l42.php on line\
    \ 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppg3v3l42.php:31\n\
    Stack trace:\n#0 /tmp/tmppg3v3l42.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppg3v3l42.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ *= -1;\n    }\n    $count += $num % 10;\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwly1uuvu.php:26\n\
    Stack trace:\n#0 /tmp/tmpwly1uuvu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwly1uuvu.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n        }\n        $count += $num % 10;\n    }\n   \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5oj_r79.php:26\n\
    Stack trace:\n#0 /tmp/tmph5oj_r79.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph5oj_r79.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $sign = substr($num, -1);\n      \
    \      $num = substr($num, 0, -1);\n        } else {\n            $sign = '';\n\
    \        }\n        $result += (array_sum(str_split($num)) > 0) ? $num : 0;\n\
    \    }\n    return $result + ($result < 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6zjez6v.php:31\n\
    Stack trace:\n#0 /tmp/tmpv6zjez6v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpv6zjez6v.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $sum = 0;\n    foreach ($arr as $n) {\n        if ($n < 0) {\n      \
    \      $n = abs($n);\n            $sign = '-';\n        } else {\n           \
    \ $sign = '';\n        }\n        $sum += $n % 10;\n        $n = $n / 10;\n  \
    \  }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1c3c3bo.php:30\n\
    Stack trace:\n#0 /tmp/tmpb1c3c3bo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb1c3c3bo.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = -1;\n    } else {\n      $sign = 1;\n    }\n   \
    \ $count += $num % 10;\n    $num = floor($num / 10);\n  }\n  return $sign * $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcc_rs1vs.php:30\n\
    Stack trace:\n#0 /tmp/tmpcc_rs1vs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcc_rs1vs.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num *= -1;\n        }\n        $count += $num % 10;\n        $num\
    \ = floor($num / 10);\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpudidujj8.php:27\n\
    Stack trace:\n#0 /tmp/tmpudidujj8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpudidujj8.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num >= 0) {\n\
    \            $count += $num;\n        } else {\n            $count += $num % 10;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjvu82h91.php:27\n\
    Stack trace:\n#0 /tmp/tmpjvu82h91.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjvu82h91.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $num\
    \ = abs($num);\n      $sign = $num < 0 ? '-' : '';\n      $num = abs($num);\n\
    \    }\n    $count += $num;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbsnwzgt.php:28\n\
    Stack trace:\n#0 /tmp/tmpqbsnwzgt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqbsnwzgt.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $result = 0;\n    foreach ($arr as $num) {\n        $result += $num;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw66qjme9.php:23\n\
    Stack trace:\n#0 /tmp/tmpw66qjme9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw66qjme9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $sum = 0;\n  foreach ($arr as $num) {\n    if ($num < 0) {\n      $sum\
    \ += $num;\n      $num = abs($num);\n    }\n    $sum += $num % 10;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u1ofzjl.php:28\n\
    Stack trace:\n#0 /tmp/tmp3u1ofzjl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3u1ofzjl.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception

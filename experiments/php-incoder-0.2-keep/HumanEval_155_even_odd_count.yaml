name: HumanEval_155_even_odd_count
language: php
prompt: "<?php\n// Given an integer. return a tuple that has the number of even and\
  \ odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
  \ ==> (1, 2)\nfunction even_odd_count($num) {\n"
tests: "function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $even = 0;\n    $odd = 0;\n    $count = 0;\n    while ($num > 0)\
    \ {\n        $mod = $num % 10;\n        if ($mod === 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \        $count++;\n    }\n    return array($even, $odd, $count);\n}\n", "   \
    \ $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n     \
    \   $num = $num / 10;\n        if($remainder == 0) {\n            $even++;\n \
    \       } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}", "    $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n    }\n \
    \   return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num\
    \ > 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n  \
    \          $even++;\n        } else {\n            $odd++;\n        }\n      \
    \  $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num > 0) {\n        if\
    \ ($num % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n    $len = strlen($num);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($num[$i] % 2 == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n    }\n  \
    \  return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $n =\
    \ abs($num);\n    while ($n > 0) {\n        $remainder = $n % 10;\n        if\
    \ ($remainder == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $n = (int) ($n / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder\
    \ = $num % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n   \
    \         $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num\
    \ > 0) {\n        $remainder = $num % 10;\n        $num = $num / 10;\n       \
    \ if($remainder % 2 == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n\
    \        if ($remainder == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $n = abs($num);\n    while ($n > 0) {\n        $remainder\
    \ = $n % 10;\n        $n = floor($n / 10);\n        if ($remainder % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num\
    \ > 0) {\n        $remainder = $num % 10;\n        $num = $num / 10;\n       \
    \ if($remainder == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n   \
    \ $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n       \
    \ if ($remainder == 0) {\n            $even++;\n        } else {\n           \
    \ $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder === 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = (int) $num;\n    if ($num < 0) {\n        $num *= -1;\n        $even\
    \ = 1;\n    }\n    $num = $num % 10;\n    if ($num == 0) {\n        return array($even,\
    \ $odd);\n    }\n    while ($num > 0) {\n        $num = $num % 10;\n        if\
    \ ($num % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n   \
    \ $odd = 0;\n    $n = abs($num);\n    while($n > 0) {\n        $remainder = $n\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $n = floor($n/10);\n    }\n    return\
    \ array($even, $odd);\n}", "    $even = 0;\n    $odd = 0;\n    $n = abs($num);\n\
    \    if ($n < 0) {\n        return array($even, $odd);\n    }\n    while ($n >\
    \ 0) {\n        $remainder = $n % 10;\n        $n = floor($n / 10);\n        if\
    \ ($remainder % 2 == 0) {\n            $even++;\n        } else {\n          \
    \  $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n\
    \        if ($remainder == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n      \
    \  $remainder = $num % 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = ($num - $remainder) / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while($num > 0) {\n        $remainder = $num % 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = (int)$num;\n    if ($num < 0) {\n        return array(-1,\
    \ -1);\n    }\n    while ($num > 0) {\n        $remainder = $num % 10;\n     \
    \   if ($remainder == 0) {\n            $even++;\n        } else {\n         \
    \   $odd++;\n        }\n        $num = (int)$num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ === 0) {\n            $even++;\n        } else {\n            $odd++;\n    \
    \    }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    if ($num == 0) {\n  \
    \      return array($even, $odd);\n    }\n    while ($num != 0) {\n        $num\
    \ = $num % 10;\n        if ($num % 2 == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num\
    \ = (string)$num;\n    $length = strlen($num);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n    $length = strlen($num);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $digit = substr($num, $i, 1);\n\
    \        if ($digit === '0') {\n            $even++;\n        } else {\n     \
    \       $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n", "   \
    \ $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    while ($num > 0) {\n \
    \       $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)$num /\
    \ 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = (int) ($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num\
    \ > 0) {\n        $remainder = $num % 10;\n        if($remainder == 0) {\n   \
    \         $even++;\n        } else {\n            $odd++;\n        }\n       \
    \ $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even =\
    \ 0;\n    $odd = 0;\n    $num = (string) $num;\n    $len = strlen($num);\n   \
    \ for ($i = 0; $i < $len; $i++) {\n        if ($num[$i] % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = (string)\
    \ $num;\n    $len = strlen($num);\n    for ($i = 0; $i < $len; $i++) {\n     \
    \   if ($num[$i] % 2 == 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n\
    \        $num = $num / 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = ($num - $remainder) / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while($num > 0) {\n        $remainder = $num % 10;\n        $num = $num /\
    \ 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    while($num > 0) {\n \
    \       $remainder = $num % 10;\n        $num = (int)$num / 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    return array($even, $odd);\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try it with `even_odd_count(-10)`.\n<|/ c |>\n\
    <| c |>\nThanks for pointing that out. I fixed it.\n<|/ c |>\n<| a |>\n<code>\n\
    <?php", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num\
    \ > 0) {\n        $remainder = $num % 10;\n        if($remainder == 0) {\n   \
    \         $even++;\n        } else {\n            $odd++;\n        }\n       \
    \ $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even =\
    \ 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n\
    \        if ($remainder == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n</code>\n<|/ a tags=php,algorithm |>\n\
    <| c |>\nThis doesn't work for negative numbers. Try it with `even_odd_count(-10)`.\n\
    <|/ c |>\n<| c |>\nYes, I noticed that and fixed it. I was thinking about this\
    \ problem for a while and didn't notice the negative numbers. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| c |>\nI fixed it for negative numbers. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| c |>\nI fixed it for negative numbers. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$num = \"-1234567890\";\n\
    $num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n\
    $num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n\
    $num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n\
    $num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n\
    $num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n\
    $num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n\
    $num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n\
    $num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n\
    $num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n$num = strrev($num);\n\
    $num = strrev($num);\n$num = strrev($num);\n$", "    $even = 0;\n    $odd = 0;\n\
    \    while($num > 0) {\n        $remainder = $num % 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n     \
    \   $num = $num / 10;\n        if($remainder == 0) {\n            $even++;\n \
    \       } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while($num > 0) {\n        $remainder = $num % 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = $num -\
    \ 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $n = abs($num);\n\
    \    if ($n < 0) {\n        $n = abs($num);\n        $num *= -1;\n    }\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 0) {\n    \
    \        $even += 1;\n        } else {\n            $odd += 1;\n        }\n  \
    \      $n = floor($n / 10);\n    }\n    return array($even, $odd);\n}\n", "  \
    \  $even = 0;\n    $odd = 0;\n    $n = abs($num);\n    while($n > 0) {\n     \
    \   $remainder = $n % 10;\n        $n = floor($n/10);\n        if($remainder ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n    \
    \    if ($remainder == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    while\
    \ ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = (int)$num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num >\
    \ 0) {\n        $remainder = $num % 10;\n        $num = $num / 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = (int)$num;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)$num / 10;\n    }\n \
    \   return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while\
    \ ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "   \
    \ $even = 0;\n    $odd = 0;\n    $n = abs($num);\n    while($n > 0) {\n      \
    \  $remainder = $n % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $n = floor($n/10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $n = abs($num);\n    while($n > 0) {\n     \
    \   $remainder = $n % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $n = (int)($n/10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = (string) $num;\n    $len = strlen($num);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n     \
    \   if ($remainder == 0) {\n            $even++;\n        } else {\n         \
    \   $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while($num > 0) {\n        $remainder = $num % 10;\n        $num = $num /\
    \ 10;\n        if($remainder % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if($remainder == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}", "    $even = 0;\n \
    \   $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n     \
    \   if ($remainder == 0) {\n            $even++;\n        } else {\n         \
    \   $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,algorithm |>\n<code>\n\
    <?php", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num\
    \ = $num - $num % 10;\n    while ($num > 0) {\n        if ($num % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = $num - $num % 10;\n    }\n    return array($even, $odd);\n}\n</code>\n\
    <|/ a tags=php,algorithm,math |>\n<| c |>\nI like this solution, but I believe\
    \ it can be improved by using a `while` loop and a temporary variable for the\
    \ remainder. Also, you should probably use `floor()` instead of `round()`.\n<|/\
    \ c |>\n<| c |>\nI agree with you. I've edited my answer to include your suggestions.\n\
    <|/ c |>\n<| c |>\nI believe this solution is more efficient than mine. Thanks!\n\
    <|/ c |>\n<| c |>\nThis solution does not work for negative numbers. I believe\
    \ it can be fixed by changing the `if` statement to `if ($num < 0)`.\n<|/ c |>\n\
    <| c |>\nI believe it can be fixed by changing the `if` statement to `if ($num\
    \ < 0)`.\n<|/ c |>\n<| a tags=php,algorithm,math |>\n<code>\n<?php", "    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n\
    \        if ($remainder == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = (int) $num;\n    while\
    \ ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = (int) ($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n     \
    \   $num = $num / 10;\n        if($remainder % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}", "    $even = 0;\n    $odd = 0;\n    $n = abs($num);\n    while ($n\
    \ > 0) {\n        $remainder = $n % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $n\
    \ = floor($n / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even =\
    \ 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n\
    \        $num = $num / 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = (int) $num;\n    if\
    \ ($num < 0) {\n        return array(0, 0);\n    }\n    while ($num > 0) {\n \
    \       $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int) ($num\
    \ / 10);\n    }\n    return array($even, $odd);\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>\n<?php", "    $even = 0;\n    $odd = 0;\n    while ($num > 0)\
    \ {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n    \
    \    if ($remainder == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n      \
    \  $remainder = $num % 10;\n        $num = $num / 10;\n        if($remainder ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while($num > 0) {\n        $remainder = $num % 10;\n        $num = $num /\
    \ 10;\n        if($remainder % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int) ($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num\
    \ = (int)$num;\n    while ($num > 0) {\n        $remainder = $num % 10;\n    \
    \    if ($remainder == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n        $num = (int)$num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n      \
    \  $remainder = $num % 10;\n        $num = $num / 10;\n        if($remainder %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $digits = str_split($num);\n    foreach ($digits as $digit) {\n  \
    \      if ($digit % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n\
    \        $num = $num / 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n</code>\n<|/ a tags=php,algorithm |>\n<| c |>\nThis doesn't work.\
    \ Try it with `even_odd_count(-12345)`.\n<|/ c |>\n<| c |>\nIt does work. Try\
    \ it yourself. It returns `(1, 2)`.\n<|/ c |>\n<| c |>\nIt doesn't work for `even_odd_count(-12345)`.\
    \ Try it yourself.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself. It returns\
    \ `(1, 2)`.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself. It returns `(1,\
    \ 2)`.\n<|/ c |>\n<| a tags=php,algorithm |>\n<code>\n<?php", "    $even = 0;\n\
    \    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n    \
    \    if ($remainder == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n      \
    \  $remainder = $num % 10;\n        $num = $num / 10;\n        if($remainder ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ === 0) {\n            $even++;\n        } else {\n            $odd++;\n    \
    \    }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$num = \"-1234567890\"\
    ;\n$even = str_split($num, 2);\n$odd = str_split($num, 1);\n$even = array_filter($even);\n\
    $odd = array_filter($odd);\n$count = count($even) + count($odd);\necho $count;",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if($remainder == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n    \
    \    if ($remainder === 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $digits = str_split($num);\n    foreach ($digits as $digit) {\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n   \
    \ $odd = 0;\n    $num = (string) $num;\n    $length = strlen($num);\n    for ($i\
    \ = 0; $i < $length; $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n      \
    \  $remainder = $num % 10;\n        $num = $num / 10;\n        if($remainder ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return array($even, $odd);\n}", "    $even = 0;\n    $odd = 0;\n \
    \   while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>\n<?php\n$num = \"-1234567890\";\n$even = intval(preg_replace('/[^0-9]/',\
    \ '', $num));\n$odd = intval(preg_replace('/[^0-9]/', '', $num));\n$even = intval($even\
    \ / 2);\n$odd = intval($odd / 2);\n$even = str_pad($even, 2, '0', STR_PAD_LEFT);\n\
    $odd = str_pad($odd, 2, '0', STR_PAD_LEFT);\n$result = $even . $odd;\necho $result;",
  "    $even = 0;\n    $odd = 0;\n    $num = (int) $num;\n    if ($num < 0) {\n  \
    \      return array(0, 0);\n    }\n    while ($num != 0) {\n        $remainder\
    \ = $num % 10;\n        $num = (int) ($num / 10);\n        if ($remainder == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while($num > 0) {\n        $remainder = $num % 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int) ($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while\
    \ ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "   \
    \ $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n     \
    \   if($remainder == 0) {\n            $even++;\n        } else {\n          \
    \  $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n  \
    \  $length = strlen($num);\n    for ($i = 0; $i < $length; $i++) {\n        if\
    \ ($num[$i] % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n   \
    \ $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n       \
    \ if ($remainder == 0) {\n            $even++;\n        } else {\n           \
    \ $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n      \
    \  $remainder = $num % 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}", "    $even = 0;\n    $odd = 0;\n \
    \   $num = $num - 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n\
    \        if ($remainder == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder === 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $n = abs($num);\n    if ($n < 0) {\n       \
    \ $n = -$n;\n    }\n    while ($n > 0) {\n        $remainder = $n % 10;\n    \
    \    if ($remainder == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n        $n = (int) ($n / 10);\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $n = abs($num);\n    if ($n < 10) {\n        $even = 1;\n        $odd = 1;\n\
    \    }\n    elseif ($n < 100) {\n        $even = 2;\n        $odd += 1;\n    }\n\
    \    elseif ($n < 1000) {\n        $even = 3;\n        $odd += 2;\n    }\n   \
    \ elseif ($n < 10000) {\n        $even = 4;\n        $odd += 3;\n    }\n    elseif\
    \ ($n < 100000) {\n        $even = 5;\n        $odd += 4;\n    }\n    elseif ($n\
    \ < 1000000) {\n        $even = 6;\n        $odd += 5;\n    }\n    elseif ($n\
    \ < 10000000) {\n        $even = 7;\n        $odd += 6;\n    }\n    elseif ($n\
    \ < 100000000) {\n        $even = 8;\n        $odd += 7;\n    }\n    elseif ($n\
    \ < 1000000000) {\n        $even = 9;\n        $odd += 8;\n    }\n    elseif ($n\
    \ < 10000000000) {\n        $even = 10;\n        $odd += 9;\n    }\n    elseif\
    \ ($n < 100000000000) {\n        $even = 11;\n        $odd += 10;\n    }\n   \
    \ elseif ($n < 1000000000000) {\n        $even = 12;\n        $odd += 11;\n  \
    \  }\n    elseif ($n < 10000000000000) {\n        $even = 13;\n        $odd +=\
    \ 12;\n    }\n    elseif ($n < 100000000000000) {\n        $even = 14;\n     \
    \   $odd += 13;\n    }\n    elseif ($n < 1000000000000000) {\n        $even =\
    \ 15;\n        $odd += 14;\n    }\n    elseif ($n < 10000000000000000) {\n   \
    \     $even = 16;\n        $odd += 15;\n    }\n    elseif ($n < 100000000000000000)\
    \ {\n        $even = 17;\n        $odd += 16;\n    }\n    elseif ($n < 1000000000000000001)\
    \ {\n        $even = 18;\n        $odd += 17;\n    }\n    elseif ($n < 1000000000000000010)\
    \ {\n        $even = 19;\n        $odd += 18;\n    }\n    elseif ($n < 10000000000000000100)\
    \ {\n        $even = 20;\n        $odd += 19;\n    }\n    elseif ($n < 100000000000000001000)\
    \ {\n        $even = 21;\n        $odd += 20;\n    }\n    elseif ($n < 1000000000000000010001)\
    \ {\n        $even = 22;\n        $odd += 21;\n    }\n    elseif ($n < 1000000000000000010010)\
    \ {\n        $even = 23;\n        $odd += 22;\n    }\n    elseif ($n < 10000000000000000100100)\
    \ {\n        $even = 24;\n        $odd += 23;\n    }\n    elseif ($n < 10000000000000000",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n     \
    \   $num = $num / 10;\n        if($remainder == 0) {\n            $even++;\n \
    \       } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while($num > 0) {\n        $remainder = $num % 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = $num % 10;\n    if ($num > 0) {\n   \
    \     $even++;\n    }\n    if ($num % 2 == 0) {\n        $odd++;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if($remainder == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n    \
    \    if ($remainder == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = ($num - $remainder)\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n</code>\n<|/ a tags=php,math\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try `even_odd_count(-10)`.\n\
    <|/ c |>\n<| c |>\nThanks for pointing that out. I've updated the answer to account\
    \ for negative numbers.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    $even = 0;\n\
    \    $odd = 0;\n    $num = (int)$num;\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = (int)$num / 10;\n \
    \   }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $n = abs($num);\n    while($n > 0) {\n     \
    \   $remainder = $n % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $n = floor($n/10);\n\
    \    }\n    return array($even, $odd);\n}", "    $even = 0;\n    $odd = 0;\n \
    \   while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = (int)$num;\n    if ($num < 0) {\n        $num *= -1;\n\
    \    }\n    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = (int)$num / 10;\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $n\
    \ = abs($num);\n    while($n > 0) {\n        $remainder = $n % 10;\n        $n\
    \ = floor($n/10);\n        if($remainder == 0) {\n            $even++;\n     \
    \   } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder\
    \ = $num % 10;\n        $num = $num / 10;\n        if($remainder % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while\
    \ ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "   \
    \ $even = 0;\n    $odd = 0;\n    $num = (string) $num;\n    for ($i = 0; $i <\
    \ strlen($num); $i++) {\n        $digit = substr($num, $i, 1);\n        if ($digit\
    \ == '0') {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if($remainder == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = $num * 10; // convert number to string\n    $num_length\
    \ = strlen($num);\n    for ($i = 0; $i < $num_length; $i++) {\n        $digit\
    \ = $num[$i];\n        if ($digit % 2 == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num\
    \ > 0) {\n        $remainder = $num % 10;\n        if($remainder == 0) {\n   \
    \         $even++;\n        } else {\n            $odd++;\n        }\n       \
    \ $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even =\
    \ 0;\n    $odd = 0;\n    $n = abs($num);\n    while ($n > 0) {\n        $remainder\
    \ = $n % 10;\n        if ($remainder == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n        $n = ($n - $remainder) / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n     \
    \   if($remainder == 0) {\n            $even++;\n        } else {\n          \
    \  $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if($remainder == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = ($num - $remainder) / 10;\n    }\n    return array($even, $odd);\n}\n</code>\n\
    <|/ a tags=php,algorithm |>\n<| c |>\nThis doesn't seem to work for negative numbers.\
    \ Try it with `even_odd_count(-10)`.\n<|/ c |>\n<| c |>\nYes, I noticed that and\
    \ fixed it before you posted your comment. Thanks for pointing it out.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try it with `even_odd_count(-10)`.\n\
    <|/ c |>\n<| c |>\nYes, I noticed that and fixed it before you posted your comment.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| a tags=php,algorithm |>\n<code>\n\
    <?php", "    $even = 0;\n    $odd = 0;\n    $num = (int)$num;\n    if ($num <\
    \ 0) {\n        return array(0, 0);\n    }\n    while ($num > 0) {\n        $remainder\
    \ = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = (int)$num / 10;\n \
    \   }\n    return array($even, $odd);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,algorithm\
    \ |>\n<code>\n<?php", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n\
    \        $remainder = $num % 10;\n        if ($remainder == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n        $num = $num\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n        $num =\
    \ $num / 10;\n        if($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = $num - 1;\n    while ($num != 0) {\n\
    \        $remainder = $num % 10;\n        if ($remainder == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n        $num = $num\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num >\
    \ 0) {\n        $remainder = $num % 10;\n        $num = $num / 10;\n        if($remainder\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n    \
    \    if ($remainder == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = (int) $num;\n    if\
    \ ($num < 0) {\n        return array($even, $odd);\n    }\n    $remainder = $num\
    \ % 10;\n    if ($num % 2 === 0) {\n        $even++;\n    }\n    $odd++;\n   \
    \ return array($even, $odd);\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,algorithm\
    \ |>\n<code>\n<?php", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n\
    \        $remainder = $num % 10;\n        if ($remainder == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n        $num = $num\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $n = abs($num);\n    do {\n        $n = $n %\
    \ 10;\n        $even++;\n    } while ($n > 0);\n    do {\n        $n = $n % 10;\n\
    \        $odd++;\n    } while ($n > 0);\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int) ($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while($num\
    \ > 0) {\n        $remainder = $num % 10;\n        if($remainder == 0) {\n   \
    \         $even++;\n        } else {\n            $odd++;\n        }\n       \
    \ $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even =\
    \ 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n\
    \        $num = $num / 10;\n        if($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = $num % 10;\n    if ($num == 0) {\n        return ($even, $odd);\n\
    \    }\n    while ($num != 0) {\n        $num = $num % 10;\n        if ($num ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return ($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while\
    \ ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = (int) ($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num % 10;\n    \
    \    if ($remainder == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n     \
    \   $remainder = $num % 10;\n        if ($remainder == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    while($num > 0) {\n        $remainder = $num % 10;\n        if($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $n = abs($num);\n    if ($n < 10) {\n      \
    \  return array($n, $n);\n    }\n    if ($n < 0) {\n        return array($n, $n);\n\
    \    }\n    while ($n > 0) {\n        $remainder = $n % 10;\n        $n = floor($n\
    \ / 10);\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder === 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = (string) $num;\n    $len = strlen($num);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        $digit = substr($num, $i, 1);\n        if ($digit\
    \ === '0') {\n            $even++;\n        } else {\n            $odd++;\n  \
    \      }\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = (int)$num;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)$num / 10;\n    }\n \
    \   return array($even, $odd);\n}\n</code>\n<|/ a |>\n<| a tags=php,algorithm\
    \ |>\n<code>\n<?php", "    $even = 0;\n    $odd = 0;\n    $num = (int) $num;\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = (int) ($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $remainder\
    \ = $num % 10;\n        $num = $num / 10;\n        if($remainder == 0) {\n   \
    \         $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return array($even, $odd);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_150_x_or_y
language: php
results:
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0 && $n % $y == 0) {\n        return $n;\n   \
    \ }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmper5k6nz1.php:19\n\
    Stack trace:\n#0 /tmp/tmper5k6nz1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmper5k6nz1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0 && $n % $y == 0) {\n    return $y;\n  } else {\n\
    \    return $x;\n  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp864cb_7f.php:21\n\
    Stack trace:\n#0 /tmp/tmp864cb_7f.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp864cb_7f.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqcvolrr.php:20\n\
    Stack trace:\n#0 /tmp/tmpbqcvolrr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbqcvolrr.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x == 0) ? $y : x_or_y($n, $x, $y);\n}\n\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0 && $n % $y == 0) {\n        return $n;\n   \
    \ }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcwicq2ed.php:19\n\
    Stack trace:\n#0 /tmp/tmpcwicq2ed.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcwicq2ed.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0 && $n % $y == 0) {\n    return $n;\n  }\n  return\
    \ $y;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu14w6xds.php:18\n\
    Stack trace:\n#0 /tmp/tmpu14w6xds.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpu14w6xds.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_aofbpc.php:21\n\
    Stack trace:\n#0 /tmp/tmpz_aofbpc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz_aofbpc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjke8p2w0.php:20\n\
    Stack trace:\n#0 /tmp/tmpjke8p2w0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjke8p2w0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    return $y;\n}\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5z41g6_d.php:18\n\
    Stack trace:\n#0 /tmp/tmp5z41g6_d.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5z41g6_d.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ho8w38w.php:20\n\
    Stack trace:\n#0 /tmp/tmp_ho8w38w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_ho8w38w.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnx6wpib.php:22\n\
    Stack trace:\n#0 /tmp/tmpqnx6wpib.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqnx6wpib.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnkzo7np.php:21\n\
    Stack trace:\n#0 /tmp/tmpdnkzo7np.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdnkzo7np.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimh4m_v0.php:23\n\
    Stack trace:\n#0 /tmp/tmpimh4m_v0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpimh4m_v0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphd0ohblo.php:20\n\
    Stack trace:\n#0 /tmp/tmphd0ohblo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphd0ohblo.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0 && $n % $y == 0) {\n        return $y;\n   \
    \ }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3j6h8gjo.php:20\n\
    Stack trace:\n#0 /tmp/tmp3j6h8gjo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3j6h8gjo.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgp4qi1og.php:22\n\
    Stack trace:\n#0 /tmp/tmpgp4qi1og.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgp4qi1og.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayw507lf.php:20\n\
    Stack trace:\n#0 /tmp/tmpayw507lf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpayw507lf.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  }\n  return $x;\n}\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xabrp6j.php:19\n\
    Stack trace:\n#0 /tmp/tmp0xabrp6j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0xabrp6j.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5gnei7k.php:22\n\
    Stack trace:\n#0 /tmp/tmpv5gnei7k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpv5gnei7k.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy24q_hcs.php:21\n\
    Stack trace:\n#0 /tmp/tmpy24q_hcs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpy24q_hcs.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk806tbq.php:20\n\
    Stack trace:\n#0 /tmp/tmpdk806tbq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdk806tbq.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm75iaofl.php:20\n\
    Stack trace:\n#0 /tmp/tmpm75iaofl.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpm75iaofl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewk0fnmo.php:20\n\
    Stack trace:\n#0 /tmp/tmpewk0fnmo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpewk0fnmo.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x) ? $y : $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tp4m9ul.php:16\n\
    Stack trace:\n#0 /tmp/tmp2tp4m9ul.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2tp4m9ul.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuztn5q3h.php:21\n\
    Stack trace:\n#0 /tmp/tmpuztn5q3h.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpuztn5q3h.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  return $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpha62euvc.php:20\n\
    Stack trace:\n#0 /tmp/tmpha62euvc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpha62euvc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplw2vx_e2.php:21\n\
    Stack trace:\n#0 /tmp/tmplw2vx_e2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplw2vx_e2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6ixxgox.php:21\n\
    Stack trace:\n#0 /tmp/tmpd6ixxgox.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd6ixxgox.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5khgme77.php:23\n\
    Stack trace:\n#0 /tmp/tmp5khgme77.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5khgme77.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x) == 0 ? ($n % $y) : $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjk1llbsj.php:16\n\
    Stack trace:\n#0 /tmp/tmpjk1llbsj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjk1llbsj.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3dv_dsc.php:21\n\
    Stack trace:\n#0 /tmp/tmpg3dv_dsc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg3dv_dsc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x) == 0 ? ($n % $y) : $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsovmkb2d.php:16\n\
    Stack trace:\n#0 /tmp/tmpsovmkb2d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsovmkb2d.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkpajs4f.php:21\n\
    Stack trace:\n#0 /tmp/tmpvkpajs4f.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvkpajs4f.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0 && $n % $y == 0) {\n        return $n;\n   \
    \ }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7fbl89v.php:19\n\
    Stack trace:\n#0 /tmp/tmpi7fbl89v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpi7fbl89v.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mzjrqy3.php:21\n\
    Stack trace:\n#0 /tmp/tmp8mzjrqy3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8mzjrqy3.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3vc8rom.php:21\n\
    Stack trace:\n#0 /tmp/tmpv3vc8rom.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpv3vc8rom.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf22r2b_3.php:21\n\
    Stack trace:\n#0 /tmp/tmpf22r2b_3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpf22r2b_3.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouzzu_6_.php:22\n\
    Stack trace:\n#0 /tmp/tmpouzzu_6_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpouzzu_6_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmd711sl.php:19\n\
    Stack trace:\n#0 /tmp/tmpsmd711sl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsmd711sl.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0 && $n % $y == 0) {\n    return $n;\n  }\n  return\
    \ $y;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsg_5ptyv.php:18\n\
    Stack trace:\n#0 /tmp/tmpsg_5ptyv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsg_5ptyv.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0 && $n % $y == 0) {\n        return $n;\n   \
    \ }\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3dnhwcx.php:19\n\
    Stack trace:\n#0 /tmp/tmpl3dnhwcx.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpl3dnhwcx.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x == 0) ? ($n % $y) : $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3n9pi4kn.php:16\n\
    Stack trace:\n#0 /tmp/tmp3n9pi4kn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3n9pi4kn.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  if ($n % 2 == 0) {\n   \
    \ return $y;\n  }\n  return $x;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p4uswtk.php:22\n\
    Stack trace:\n#0 /tmp/tmp7p4uswtk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7p4uswtk.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnp_nen65.php:21\n\
    Stack trace:\n#0 /tmp/tmpnp_nen65.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnp_nen65.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  } else {\n    return $x;\n \
    \ }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprc47cyix.php:21\n\
    Stack trace:\n#0 /tmp/tmprc47cyix.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprc47cyix.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    } else {\n        return $y;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq80aj8bt.php:23\n\
    Stack trace:\n#0 /tmp/tmpq80aj8bt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpq80aj8bt.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnera8wz.php:20\n\
    Stack trace:\n#0 /tmp/tmpvnera8wz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvnera8wz.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj7xouqb.php:21\n\
    Stack trace:\n#0 /tmp/tmpbj7xouqb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbj7xouqb.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg0pjrev.php:20\n\
    Stack trace:\n#0 /tmp/tmplg0pjrev.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplg0pjrev.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  if ($n % 2 == 0) {\n   \
    \ return $x;\n  }\n  return $y;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpna0c34sr.php:21\n\
    Stack trace:\n#0 /tmp/tmpna0c34sr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpna0c34sr.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x == 0 && $n % $y == 0) ? $n : $y;\n}\n\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp964wzcrh.php:16\n\
    Stack trace:\n#0 /tmp/tmp964wzcrh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp964wzcrh.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16_y27qm.php:21\n\
    Stack trace:\n#0 /tmp/tmp16_y27qm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp16_y27qm.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiv2m33ee.php:19\n\
    Stack trace:\n#0 /tmp/tmpiv2m33ee.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpiv2m33ee.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zp6ye2a.php:22\n\
    Stack trace:\n#0 /tmp/tmp1zp6ye2a.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1zp6ye2a.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwp8y3lq.php:22\n\
    Stack trace:\n#0 /tmp/tmpxwp8y3lq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxwp8y3lq.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5e58e5gn.php:22\n\
    Stack trace:\n#0 /tmp/tmp5e58e5gn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5e58e5gn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa73zw3ni.php:21\n\
    Stack trace:\n#0 /tmp/tmpa73zw3ni.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa73zw3ni.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj015hiyt.php:21\n\
    Stack trace:\n#0 /tmp/tmpj015hiyt.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj015hiyt.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x || $n == $y) {\n        return $n;\n    }\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavdxbfs7.php:18\n\
    Stack trace:\n#0 /tmp/tmpavdxbfs7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpavdxbfs7.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6du5cot.php:20\n\
    Stack trace:\n#0 /tmp/tmpi6du5cot.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpi6du5cot.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppf3olfac.php:20\n\
    Stack trace:\n#0 /tmp/tmppf3olfac.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppf3olfac.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n%$x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslpanitw.php:21\n\
    Stack trace:\n#0 /tmp/tmpslpanitw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpslpanitw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  if ($n % 2 == 0) {\n   \
    \ return $y;\n  }\n  return $x;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpou4pdd5c.php:22\n\
    Stack trace:\n#0 /tmp/tmpou4pdd5c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpou4pdd5c.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n == 2) {\n\
    \        return $y;\n    }\n    if ($n % 2 == 0) {\n        return $x;\n    }\n\
    \    return $y;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12k0k5f3.php:24\n\
    Stack trace:\n#0 /tmp/tmp12k0k5f3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp12k0k5f3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gmb65w1.php:20\n\
    Stack trace:\n#0 /tmp/tmp2gmb65w1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2gmb65w1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpma5uzlqr.php:19\n\
    Stack trace:\n#0 /tmp/tmpma5uzlqr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpma5uzlqr.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    return $y;\n}\n\
    \nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqr4t_0sb.php:19\n\
    Stack trace:\n#0 /tmp/tmpqr4t_0sb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqr4t_0sb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmz2h45ro.php:22\n\
    Stack trace:\n#0 /tmp/tmpmz2h45ro.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmz2h45ro.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0yjrr33.php:21\n\
    Stack trace:\n#0 /tmp/tmpx0yjrr33.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpx0yjrr33.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_x_yn9z.php:22\n\
    Stack trace:\n#0 /tmp/tmpi_x_yn9z.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi_x_yn9z.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return $x if is_prime($n) and is_prime($x);\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpid8av5rz.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxjv68hr.php:20\n\
    Stack trace:\n#0 /tmp/tmpfxjv68hr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfxjv68hr.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev970v7k.php:21\n\
    Stack trace:\n#0 /tmp/tmpev970v7k.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpev970v7k.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  } else {\n    return $x;\n \
    \ }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56appxao.php:21\n\
    Stack trace:\n#0 /tmp/tmp56appxao.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp56appxao.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqr1dfny.php:21\n\
    Stack trace:\n#0 /tmp/tmpbqr1dfny.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbqr1dfny.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkb4t7jxn.php:21\n\
    Stack trace:\n#0 /tmp/tmpkb4t7jxn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkb4t7jxn.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0 && $n % $y == 0) {\n        return $y;\n   \
    \ } else {\n        return $x;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvqligz1.php:21\n\
    Stack trace:\n#0 /tmp/tmpgvqligz1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgvqligz1.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x || $n == $y) {\n    return $n;\n  }\n  return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgidxtdmt.php:19\n\
    Stack trace:\n#0 /tmp/tmpgidxtdmt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgidxtdmt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6sy7eja4.php:20\n\
    Stack trace:\n#0 /tmp/tmp6sy7eja4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6sy7eja4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp877a2gy5.php:23\n\
    Stack trace:\n#0 /tmp/tmp877a2gy5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp877a2gy5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0 && $n % $y == 0) {\n    return $n;\n  } else {\n\
    \    return $y;\n  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5epg4hu.php:20\n\
    Stack trace:\n#0 /tmp/tmpu5epg4hu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpu5epg4hu.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw878lrli.php:21\n\
    Stack trace:\n#0 /tmp/tmpw878lrli.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw878lrli.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprs89gxyc.php:20\n\
    Stack trace:\n#0 /tmp/tmprs89gxyc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprs89gxyc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuu0uz59j.php:22\n\
    Stack trace:\n#0 /tmp/tmpuu0uz59j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuu0uz59j.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxiwe4sf.php:23\n\
    Stack trace:\n#0 /tmp/tmpzxiwe4sf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzxiwe4sf.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0wlgalw.php:21\n\
    Stack trace:\n#0 /tmp/tmpy0wlgalw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpy0wlgalw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcm2d82_u.php:21\n\
    Stack trace:\n#0 /tmp/tmpcm2d82_u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcm2d82_u.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7dq18vw.php:20\n\
    Stack trace:\n#0 /tmp/tmpi7dq18vw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpi7dq18vw.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x || $n == $y) {\n    return $n;\n  }\n  else {\n  \
    \  return $y;\n  }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaubj4kdk.php:20\n\
    Stack trace:\n#0 /tmp/tmpaubj4kdk.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpaubj4kdk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqjkiy39.php:20\n\
    Stack trace:\n#0 /tmp/tmpsqjkiy39.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsqjkiy39.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0 && $n % $y == 0) {\n    return $n;\n  } else {\n\
    \    return $y;\n  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpay98_jy3.php:20\n\
    Stack trace:\n#0 /tmp/tmpay98_jy3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpay98_jy3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33ndldgv.php:22\n\
    Stack trace:\n#0 /tmp/tmp33ndldgv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp33ndldgv.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsp95p61.php:23\n\
    Stack trace:\n#0 /tmp/tmplsp95p61.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplsp95p61.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfji8sode.php:23\n\
    Stack trace:\n#0 /tmp/tmpfji8sode.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfji8sode.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpys99eun2.php:21\n\
    Stack trace:\n#0 /tmp/tmpys99eun2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpys99eun2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu46a1jm.php:23\n\
    Stack trace:\n#0 /tmp/tmppu46a1jm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppu46a1jm.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_6gd140.php:20\n\
    Stack trace:\n#0 /tmp/tmpz_6gd140.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz_6gd140.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bkh0a77.php:21\n\
    Stack trace:\n#0 /tmp/tmp6bkh0a77.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6bkh0a77.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg01sqnv1.php:22\n\
    Stack trace:\n#0 /tmp/tmpg01sqnv1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpg01sqnv1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0 && $n % $y == 0) {\n        return $y;\n   \
    \ } else {\n        return $x;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm97p7uq.php:21\n\
    Stack trace:\n#0 /tmp/tmpzm97p7uq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzm97p7uq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0j0jzcuz.php:20\n\
    Stack trace:\n#0 /tmp/tmp0j0jzcuz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0j0jzcuz.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  else {\n    return $y;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyydl5dne.php:20\n\
    Stack trace:\n#0 /tmp/tmpyydl5dne.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpyydl5dne.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphr_wn8g5.php:20\n\
    Stack trace:\n#0 /tmp/tmphr_wn8g5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphr_wn8g5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0m062bnb.php:19\n\
    Stack trace:\n#0 /tmp/tmp0m062bnb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0m062bnb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl815ieey.php:23\n\
    Stack trace:\n#0 /tmp/tmpl815ieey.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl815ieey.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73fnew3k.php:21\n\
    Stack trace:\n#0 /tmp/tmp73fnew3k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp73fnew3k.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx2i34sd.php:21\n\
    Stack trace:\n#0 /tmp/tmpmx2i34sd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmx2i34sd.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1yha3is.php:21\n\
    Stack trace:\n#0 /tmp/tmpq1yha3is.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpq1yha3is.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotozb7ju.php:19\n\
    Stack trace:\n#0 /tmp/tmpotozb7ju.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpotozb7ju.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88sw_yw5.php:19\n\
    Stack trace:\n#0 /tmp/tmp88sw_yw5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp88sw_yw5.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3_yn1xi.php:21\n\
    Stack trace:\n#0 /tmp/tmpp3_yn1xi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpp3_yn1xi.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph96lvkr5.php:22\n\
    Stack trace:\n#0 /tmp/tmph96lvkr5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph96lvkr5.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5e_l61x.php:22\n\
    Stack trace:\n#0 /tmp/tmpx5e_l61x.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx5e_l61x.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wclyzh1.php:22\n\
    Stack trace:\n#0 /tmp/tmp5wclyzh1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5wclyzh1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxmiszd6.php:22\n\
    Stack trace:\n#0 /tmp/tmptxmiszd6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptxmiszd6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tv_pqdb.php:21\n\
    Stack trace:\n#0 /tmp/tmp2tv_pqdb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2tv_pqdb.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30zvmakh.php:19\n\
    Stack trace:\n#0 /tmp/tmp30zvmakh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp30zvmakh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2rnulopt.php:21\n\
    Stack trace:\n#0 /tmp/tmp2rnulopt.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2rnulopt.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x == 0) ? ($n % $y) : $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpif94tqw2.php:16\n\
    Stack trace:\n#0 /tmp/tmpif94tqw2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpif94tqw2.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx3omxmx.php:22\n\
    Stack trace:\n#0 /tmp/tmpcx3omxmx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcx3omxmx.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mgey2a7.php:21\n\
    Stack trace:\n#0 /tmp/tmp6mgey2a7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6mgey2a7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfsvkwt7j.php:19\n\
    Stack trace:\n#0 /tmp/tmpfsvkwt7j.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfsvkwt7j.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsa5rjtd0.php:23\n\
    Stack trace:\n#0 /tmp/tmpsa5rjtd0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsa5rjtd0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x == 0) ? ($n % $y == 0) ? $n : $y : $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgea1513.php:17\n\
    Stack trace:\n#0 /tmp/tmpbgea1513.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbgea1513.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6dy1_xj.php:22\n\
    Stack trace:\n#0 /tmp/tmpe6dy1_xj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpe6dy1_xj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5cxf2ddo.php:23\n\
    Stack trace:\n#0 /tmp/tmp5cxf2ddo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5cxf2ddo.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunut1q89.php:21\n\
    Stack trace:\n#0 /tmp/tmpunut1q89.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpunut1q89.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbs4p96pb.php:21\n\
    Stack trace:\n#0 /tmp/tmpbs4p96pb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbs4p96pb.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4mr93cm.php:19\n\
    Stack trace:\n#0 /tmp/tmpe4mr93cm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe4mr93cm.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ylu5lu5.php:20\n\
    Stack trace:\n#0 /tmp/tmp1ylu5lu5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1ylu5lu5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6dno85q3.php:19\n\
    Stack trace:\n#0 /tmp/tmp6dno85q3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6dno85q3.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulhp98zc.php:21\n\
    Stack trace:\n#0 /tmp/tmpulhp98zc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpulhp98zc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  if ($n % 2 == 0) {\n   \
    \ return $y;\n  }\n  return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66ew4vgl.php:23\n\
    Stack trace:\n#0 /tmp/tmp66ew4vgl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp66ew4vgl.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprt7xniwl.php:20\n\
    Stack trace:\n#0 /tmp/tmprt7xniwl.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprt7xniwl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  if ($n % 2 == 0) {\n   \
    \ return $x;\n  }\n  return $y;\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaoq_itfg.php:21\n\
    Stack trace:\n#0 /tmp/tmpaoq_itfg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaoq_itfg.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8ukpc4p.php:22\n\
    Stack trace:\n#0 /tmp/tmpb8ukpc4p.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpb8ukpc4p.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc9z84bg.php:20\n\
    Stack trace:\n#0 /tmp/tmpuc9z84bg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuc9z84bg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvb82e6hx.php:20\n\
    Stack trace:\n#0 /tmp/tmpvb82e6hx.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvb82e6hx.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv9qj5ff.php:20\n\
    Stack trace:\n#0 /tmp/tmpqv9qj5ff.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqv9qj5ff.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x) ? $y : x_or_y($n, $x, $y);\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21b7jygf.php:16\n\
    Stack trace:\n#0 /tmp/tmp21b7jygf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp21b7jygf.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnojcwijw.php:19\n\
    Stack trace:\n#0 /tmp/tmpnojcwijw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnojcwijw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x == 0) ? ($n % $y) : $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztzmikms.php:17\n\
    Stack trace:\n#0 /tmp/tmpztzmikms.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpztzmikms.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvy0bvlhw.php:19\n\
    Stack trace:\n#0 /tmp/tmpvy0bvlhw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvy0bvlhw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn29la0nf.php:22\n\
    Stack trace:\n#0 /tmp/tmpn29la0nf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpn29la0nf.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vbcsxvw.php:22\n\
    Stack trace:\n#0 /tmp/tmp_vbcsxvw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_vbcsxvw.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    } else {\n        return $y;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48amutfs.php:22\n\
    Stack trace:\n#0 /tmp/tmp48amutfs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp48amutfs.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x || $n == $y) {\n        return $n;\n    }\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsey6qxiv.php:18\n\
    Stack trace:\n#0 /tmp/tmpsey6qxiv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsey6qxiv.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rw0jjdy.php:21\n\
    Stack trace:\n#0 /tmp/tmp6rw0jjdy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6rw0jjdy.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x) == 0 ? ($n % $y) : $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1r05jaq.php:16\n\
    Stack trace:\n#0 /tmp/tmph1r05jaq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph1r05jaq.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ksdswun.php:21\n\
    Stack trace:\n#0 /tmp/tmp1ksdswun.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1ksdswun.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqtjsjr_.php:23\n\
    Stack trace:\n#0 /tmp/tmppqtjsjr_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppqtjsjr_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nmx8sfe.php:21\n\
    Stack trace:\n#0 /tmp/tmp9nmx8sfe.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9nmx8sfe.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4pwyd0o5.php:20\n\
    Stack trace:\n#0 /tmp/tmp4pwyd0o5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4pwyd0o5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7f85dhta.php:20\n\
    Stack trace:\n#0 /tmp/tmp7f85dhta.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7f85dhta.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x) == 0 ? ($n % $y) : $n;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26n3zv5z.php:15\n\
    Stack trace:\n#0 /tmp/tmp26n3zv5z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp26n3zv5z.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfp6_6wa.php:22\n\
    Stack trace:\n#0 /tmp/tmpmfp6_6wa.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmfp6_6wa.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5t6r4zb.php:20\n\
    Stack trace:\n#0 /tmp/tmpo5t6r4zb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo5t6r4zb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qtq8fef.php:21\n\
    Stack trace:\n#0 /tmp/tmp7qtq8fef.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7qtq8fef.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1lbiajo.php:21\n\
    Stack trace:\n#0 /tmp/tmpy1lbiajo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpy1lbiajo.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgb_y9v3i.php:20\n\
    Stack trace:\n#0 /tmp/tmpgb_y9v3i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgb_y9v3i.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  return $x;\n}\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11ae98yw.php:19\n\
    Stack trace:\n#0 /tmp/tmp11ae98yw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp11ae98yw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3eoodq1.php:21\n\
    Stack trace:\n#0 /tmp/tmpx3eoodq1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpx3eoodq1.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    return $y;\n}\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc57fb3ro.php:18\n\
    Stack trace:\n#0 /tmp/tmpc57fb3ro.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpc57fb3ro.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    return ($n % $x == 0) ? ($n % $y == 0) ? $n : $y : $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7rwy1020.php:17\n\
    Stack trace:\n#0 /tmp/tmp7rwy1020.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7rwy1020.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeu424i4o.php:21\n\
    Stack trace:\n#0 /tmp/tmpeu424i4o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeu424i4o.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  else {\n    return $y;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpveji3iia.php:20\n\
    Stack trace:\n#0 /tmp/tmpveji3iia.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpveji3iia.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xvc91u9.php:20\n\
    Stack trace:\n#0 /tmp/tmp4xvc91u9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4xvc91u9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9cy_5z2.php:22\n\
    Stack trace:\n#0 /tmp/tmpn9cy_5z2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpn9cy_5z2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2mtmx0f.php:20\n\
    Stack trace:\n#0 /tmp/tmpw2mtmx0f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw2mtmx0f.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr9105jg.php:20\n\
    Stack trace:\n#0 /tmp/tmpmr9105jg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmr9105jg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvsmz7sd.php:20\n\
    Stack trace:\n#0 /tmp/tmpsvsmz7sd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsvsmz7sd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $x;\n  }\n  else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyzeezxfq.php:21\n\
    Stack trace:\n#0 /tmp/tmpyzeezxfq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyzeezxfq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6t994vn1.php:22\n\
    Stack trace:\n#0 /tmp/tmp6t994vn1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6t994vn1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0 && $n % $y == 0) {\n    return $n;\n  }\n  return\
    \ $y;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5uv1y4e.php:19\n\
    Stack trace:\n#0 /tmp/tmpb5uv1y4e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpb5uv1y4e.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    return $y;\n}\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw6pvsj5.php:18\n\
    Stack trace:\n#0 /tmp/tmprw6pvsj5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprw6pvsj5.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fpimln_.php:22\n\
    Stack trace:\n#0 /tmp/tmp5fpimln_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5fpimln_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    } else {\n        return $y;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05_6aya7.php:23\n\
    Stack trace:\n#0 /tmp/tmp05_6aya7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp05_6aya7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 == 0) {\n    return $x;\n  } else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavp2kfh_.php:20\n\
    Stack trace:\n#0 /tmp/tmpavp2kfh_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpavp2kfh_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % $x == 0) {\n    return $y;\n  }\n  return $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6c1nyzlp.php:20\n\
    Stack trace:\n#0 /tmp/tmp6c1nyzlp.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6c1nyzlp.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12r1n9wj.php:21\n\
    Stack trace:\n#0 /tmp/tmp12r1n9wj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp12r1n9wj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh_yt12n.php:21\n\
    Stack trace:\n#0 /tmp/tmpmh_yt12n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmh_yt12n.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else if ($n == $y) {\n\
    \    return $x;\n  }\n  else {\n    return $n;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5ux3j6d.php:24\n\
    Stack trace:\n#0 /tmp/tmph5ux3j6d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph5ux3j6d.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhwklt5p.php:22\n\
    Stack trace:\n#0 /tmp/tmpxhwklt5p.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxhwklt5p.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  return $x;\n}\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp83ph9utv.php:19\n\
    Stack trace:\n#0 /tmp/tmp83ph9utv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp83ph9utv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4v_xlt2k.php:20\n\
    Stack trace:\n#0 /tmp/tmp4v_xlt2k.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4v_xlt2k.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnn30112w.php:22\n\
    Stack trace:\n#0 /tmp/tmpnn30112w.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnn30112w.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmponap70fr.php:19\n\
    Stack trace:\n#0 /tmp/tmponap70fr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmponap70fr.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1rv_iit.php:19\n\
    Stack trace:\n#0 /tmp/tmpw1rv_iit.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw1rv_iit.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0 && $n % $y == 0) {\n        return $y;\n   \
    \ } else {\n        return $x;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw0sf7ck.php:21\n\
    Stack trace:\n#0 /tmp/tmprw0sf7ck.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprw0sf7ck.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprc1jnqo1.php:22\n\
    Stack trace:\n#0 /tmp/tmprc1jnqo1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprc1jnqo1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9jh3y8o.php:20\n\
    Stack trace:\n#0 /tmp/tmpw9jh3y8o.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw9jh3y8o.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptw2uzakm.php:20\n\
    Stack trace:\n#0 /tmp/tmptw2uzakm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptw2uzakm.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmgegh8jm.php:19\n\
    Stack trace:\n#0 /tmp/tmpmgegh8jm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmgegh8jm.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $x;\n    }\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14wxqt5c.php:22\n\
    Stack trace:\n#0 /tmp/tmp14wxqt5c.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp14wxqt5c.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == $x) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxw4qn7vw.php:19\n\
    Stack trace:\n#0 /tmp/tmpxw4qn7vw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxw4qn7vw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90ogqpjz.php:22\n\
    Stack trace:\n#0 /tmp/tmp90ogqpjz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp90ogqpjz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == $x) {\n    return $y;\n  }\n  else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpps6e_yi1.php:22\n\
    Stack trace:\n#0 /tmp/tmpps6e_yi1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpps6e_yi1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8w9wure6.php:21\n\
    Stack trace:\n#0 /tmp/tmp8w9wure6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8w9wure6.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5y9dvx3g.php:23\n\
    Stack trace:\n#0 /tmp/tmp5y9dvx3g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5y9dvx3g.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % $x == 0) {\n        return $y;\n    } else {\n     \
    \   return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5qc2if8l.php:21\n\
    Stack trace:\n#0 /tmp/tmp5qc2if8l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5qc2if8l.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception

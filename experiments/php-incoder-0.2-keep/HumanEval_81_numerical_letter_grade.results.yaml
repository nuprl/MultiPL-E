name: HumanEval_81_numerical_letter_grade
language: php
results:
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpow_fv_ie.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a[0] < $a[1] ? \\'A+\\' : $a[0] < $a[2] ? \\'A-\\' : $a[0] < $a[3] ? \\'B+\\\
    ' : $a[0] < $a[4] ? \\'B-\\' : $a[0] < $a[5] ? \\'C+\\' : $a[0] < $a[6] ? \\'C\\\
    ' : $a[0] < $a[7] ? \\'C-\\' : $a[0] < $a[8] ? \\'D+\\' : $a[0] < $a[9] ? \\'D\\\
    ' : $a[0] < $a[10] ? \\'D-\\' : \\'E\\';'), $grades);\n    return $grades;\n}\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, float given in\
    \ /tmp/tmpet_12fph.php on line 25\n\nWarning: array_sum() expects parameter 1\
    \ to be array, float given in /tmp/tmpet_12fph.php on line 25\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, float given in /tmp/tmpet_12fph.php on line\
    \ 25\n\nWarning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpet_12fph.php\
    \ on line 25\n\nWarning: array_sum() expects parameter 1 to be array, float given\
    \ in /tmp/tmpet_12fph.php on line 25\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpet_12fph.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpet_12fph.php:35\nStack trace:\n\
    #0 /tmp/tmpet_12fph.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpet_12fph.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0  => 'A+',\n        3.7  => 'A',\n        3.3  => 'A-',\n\
    \        3.0  => 'B+',\n        2.7  => 'B',\n        2.3  => 'B-',\n        2.0\
    \  => 'C+',\n        1.7  => 'C',\n        1.3  => 'C-',\n        1.0  => 'D+',\n\
    \        0.7  => 'D',\n        0.0  => 'D-',\n        0.0  => 'E',\n    );\n \
    \   $grades_array = array_flip($grades_array);\n    $grades_array = array_reverse($grades_array);\n\
    \    $grades_array = array_slice($grades_array, 0, -1);\n    $grades_array = array_slice($grades_array,\
    \ 1);\n    $grades_array = array_map(function($grade) {\n        return $grade;\n\
    \    }, $grades_array);\n    $grades_array = array_map(function($grade) {\n  \
    \      return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfa9mrq9m.php on line 90\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm4d23r_x.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_map('strtoupper', $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_jmkcoh7.php:37\n\
    Stack trace:\n#0 /tmp/tmp_jmkcoh7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_jmkcoh7.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwimtfc13.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxik_7ng3.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0 => 'A+',\n        3.7 => 'A',\n        3.3 => 'A-',\n\
    \        3.0 => 'B+',\n        2.7 => 'B',\n        2.3 => 'B-',\n        2.0\
    \ => 'C+',\n        1.7 => 'C',\n        1.3 => 'C-',\n        1.0 => 'D+',\n\
    \        0.7 => 'D',\n        0.0 => 'D-',\n        0.0 => 'E',\n    );\n    $grades_array\
    \ = array_flip($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_filter\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzg85rzr3.php on line 85\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('floatval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpci0691dn.php on line 73\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzu5vz03u.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp41bddu3b.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    return implode('', $grades);\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0sz1mb1.php:35\n\
    Stack trace:\n#0 /tmp/tmpl0sz1mb1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpl0sz1mb1.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpb2rz6fhw.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnseitjfg.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl3aimata.php on line 68\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_unique($grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strval', $grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('strtolower', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_fill(0, count($grades), ''), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_fill(0, count($grades), ''), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_fill(0, count($grades), ''), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_fill(0, count($grades), ''), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_fill(0, count($grades), ''), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_fill(0, count($grades), ''), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_fill(0, count($grades), ''), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_fill(0, count($grades), ''), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_fill(0, count($grades), ''), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_fill(0, count($grades), ''), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_fill(0, count($grades), ''), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_fill(0, count($grades), ''), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_fill(0, count($grades), ''), \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphsue3aeo.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('floatval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzcrnv14m.php on line 75\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_reduce($grades,\
    \ function($carry, $item) {\n        return $carry . $item;\n    });\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbho71i0r.php:38\n\
    Stack trace:\n#0 /tmp/tmpbho71i0r.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbho71i0r.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('intval', $grades));\n  $grades = array_map('array_sum', $grades);\n\
    \  $grades = array_map('array_map', create_function('$a','return $a * $a;'), $grades);\n\
    \  $grades = array_map('array_map', create_function('$a','return $a / $a;'), $grades);\n\
    \  $grades = array_map('array_map', create_function('$a','return $a < 0.0 ? \"\
    E\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.7 ? \"D-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.3 ? \"C-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.1 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.7 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.3 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.1 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.7 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.3 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.1 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.7 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.3 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.1 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a < 0.7 ? \"B-\" : $a;'), $grades);\n  $grades = array_map('array_map', create_function('$\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_j0alnfo.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ ($a >= 4.0) ? \"A+\" : (($a >= 3.7) ? \"A\" : (($a >= 3.3) ? \"A-\" : (($a >=\
    \ 3.0) ? \"B+\" : (($a >= 2.7) ? \"B\" : (($a >= 2.3) ? \"B-\" : (($a >= 2.0)\
    \ ? \"C+\" : (($a >= 1.7) ? \"C\" : (($a >= 1.3) ? \"C-\" : (($a >= 1.0) ? \"\
    D+\" : (($a >= 0.7) ? \"D\" : (($a >= 0.0) ? \"D-\" : \"E\"))))));'), $grades);\n\
    \    return array_map('array_map', create_function('$a','return ($a >= 4.0) ?\
    \ \"A+\" : (($a >= 3.7) ? \"A\" : (($a >= 3.3) ? \"A-\" : (($a >= 3.0) ? \"B+\"\
    \ : (($a >= 2.7) ? \"B\" : (($a >= 2.3) ? \"B-\" : (($a >= 2.0) ? \"C+\" : (($a\
    \ >= 1.7) ? \"C\" : (($a >= 1.3) ? \"C-\" : (($a >= 1.0) ? \"D+\" : (($a >= 0.7)\
    \ ? \"D\" : (($a >= 0.0) ? \"D-\" : \"E\"))))));'), $grades);\n}\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, float given in\
    \ /tmp/tmpg4phdcrc.php on line 25\n\nWarning: array_sum() expects parameter 1\
    \ to be array, float given in /tmp/tmpg4phdcrc.php on line 25\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, float given in /tmp/tmpg4phdcrc.php on line\
    \ 25\n\nWarning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpg4phdcrc.php\
    \ on line 25\n\nWarning: array_sum() expects parameter 1 to be array, float given\
    \ in /tmp/tmpg4phdcrc.php on line 25\n\nParse error: syntax error in /tmp/tmpg4phdcrc.php(26)\
    \ : runtime-created function on line 1\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdcwd47wv.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_key', $grades);\n    $grades = array_map('array_values', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_key', $grades);\n    $grades = array_map('array_values',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_key', $grades);\n    $grades = array_map('array_values',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_key', $grades);\n    $grades = array_map('array_values',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_key', $grades);\n    $grades = array_map('array_values',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7o7bq1tq.php on line 66\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpaj8hihdl.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', 'grade_to_letter',\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, float given\
    \ in /tmp/tmprhufrukv.php on line 25\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmprhufrukv.php on line 25\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, float given in /tmp/tmprhufrukv.php on line\
    \ 25\n\nWarning: array_filter() expects parameter 1 to be array, float given in\
    \ /tmp/tmprhufrukv.php on line 25\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, float given in /tmp/tmprhufrukv.php on line 25\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmprhufrukv.php on line\
    \ 26\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmprhufrukv.php on line 26\n\nWarning: array_unique() expects parameter\
    \ 1 to be array, null given in /tmp/tmprhufrukv.php on line 26\n\nWarning: array_unique()\
    \ expects parameter 1 to be array, null given in /tmp/tmprhufrukv.php on line\
    \ 26\n\nWarning: array_unique() expects parameter 1 to be array, null given in\
    \ /tmp/tmprhufrukv.php on line 26\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmprhufrukv.php on line 27\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmprhufrukv.php on line\
    \ 27\n\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmprhufrukv.php on line 27\n\nWarning: array_filter() expects parameter\
    \ 1 to be array, null given in /tmp/tmprhufrukv.php on line 27\n\nWarning: array_filter()\
    \ expects parameter 1 to be array, null given in /tmp/tmprhufrukv.php on line\
    \ 27\n\nWarning: array_map(): Expected parameter 2 to be an array, string given\
    \ in /tmp/tmprhufrukv.php on line 28\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhufrukv.php:37\nStack trace:\n#0 /tmp/tmprhufrukv.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhufrukv.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4mi1m777.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0eah5hfj.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnhm5ia_o.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x', \"return\
    \ '$x';\"), $grades);\n    $grades = array_map('array_filter', create_function('$x',\
    \ \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$x', \"return $x !== 0.0;\"), $grades);\n    $grades = array_map('array_filter',\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa7dhj4i8.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_values($grades);\n    $grades = array_combine($grades, $grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_filter($grades);\n  \
    \  $grades = array_keys($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades\
    \ = array_flip($grades);\n    $grades = array_flip($grades);\n    $grades = array_flip($grades);\n\
    \    $grade\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_bwevmir.php on line 75\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkrw9cebn.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'A+\\':($x>0?\\'A-\\':\\'B+\\');'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\\'B+\\\
    ':($x>0?\\'B-\\':\\'C+\\');'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'C+\\':($x>0?\\'C-\\':\\'D+\\');'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\\'D+\\\
    ':($x>0?\\'D-\\':\\'E\\');'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'E\\':\\'F\\');'), $grades);\n    return\
    \ $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpfjtitfgg.php\
    \ on line 26\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmpfjtitfgg.php on line 26\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmpfjtitfgg.php on line 26\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmpfjtitfgg.php on line 26\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpfjtitfgg.php\
    \ on line 26\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpfjtitfgg.php on line 27\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpfjtitfgg.php on line 28\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpfjtitfgg.php\
    \ on line 29\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpfjtitfgg.php on line 30\n\nParse error: syntax error in /tmp/tmpfjtitfgg.php(31)\
    \ : runtime-created function on line 1\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades, array(0));\n    $grades = array_map('array_unique', $grades);\n   \
    \ $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4epjg0d_.php on line 66\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplxmy0x40.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf3y07k9n.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr_fi6amp.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'e', 'N', 'n', 'U', 'u'), $grades);\n    $grades = array_map('str_replace',\
    \ array('F', 'f', 'S', 's', 'T', 't'), $grades);\n    $grades = array_map('str_replace',\
    \ array('G', 'g', 'O', 'o'), $grades);\n    $grades = array_map('str_replace',\
    \ array('P', 'p'), $grades);\n    $grades = array_map('str_replace', array('L',\
    \ 'l'), $grades);\n    $grades = array_map('str_replace', array('R', 'r'), $grades);\n\
    \    $grades = array_map('str_replace', array('D', 'd'), $grades);\n    $grades\
    \ = array_map('str_replace', array('C', 'c'), $grades);\n    $grades = array_map('str_replace',\
    \ array('M', 'm'), $grades);\n    $grades = array_map('str_replace', array('K',\
    \ 'k'), $grades);\n    $grades = array_map('str_replace', array('J', 'j'), $grades);\n\
    \    $grades = array_map('str_replace', array('X', 'x'), $grades);\n    $grades\
    \ = array_map('str_replace', array('V', 'v'), $grades);\n    $grades = array_map('str_replace',\
    \ array('B', 'b'), $grades);\n    $grades = array_map('str_replace', array('N',\
    \ 'n'), $grades);\n    $grades = array_map('str_replace', array('R', 'r'), $grades);\n\
    \    $grades = array_map('str_replace', array('P', 'p'), $grades);\n    $grades\
    \ = array_map('str_replace', array('D', 'd'), $grades);\n    $grades = array_map('str_replace',\
    \ array('C', 'c'), $grades);\n    $grades = array_map('str_replace', array('M',\
    \ 'm'), $grades);\n    $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpky2vvf7e.php on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0  => 'A+',\n        3.7  => 'A',\n        3.3  => 'A-',\n\
    \        3.0  => 'B+',\n        2.7  => 'B',\n        2.3  => 'B-',\n        2.0\
    \  => 'C+',\n        1.7  => 'C',\n        1.3  => 'C-',\n        1.0  => 'D+',\n\
    \        0.7  => 'D',\n        0.0  => 'D-'\n    );\n    $grades_array = array_reverse($grades_array);\n\
    \    $grades_array = array_slice($grades_array, 0, count($grades));\n    return\
    \ array_map(function($grade) use ($grades_array) {\n        return $grades_array[$grade];\n\
    \    }, $grades);\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphh__8sd_.php:50\n\
    Stack trace:\n#0 /tmp/tmphh__8sd_.php(58): test()\n#1 {main}\n  thrown in /tmp/tmphh__8sd_.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_map('intval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strtolower', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strlen', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpah_vie0x.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('floatval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbrq4eizi.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\\'+\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x==0?\\'E\\':\\'\\';'), $grades);\n    return implode('', $grades);\n}\n\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, float given in\
    \ /tmp/tmp1yqg08qs.php on line 25\n\nWarning: array_sum() expects parameter 1\
    \ to be array, float given in /tmp/tmp1yqg08qs.php on line 25\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, float given in /tmp/tmp1yqg08qs.php on line\
    \ 25\n\nWarning: array_sum() expects parameter 1 to be array, float given in /tmp/tmp1yqg08qs.php\
    \ on line 25\n\nWarning: array_sum() expects parameter 1 to be array, float given\
    \ in /tmp/tmp1yqg08qs.php on line 25\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmp1yqg08qs.php on line 26\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmp1yqg08qs.php\
    \ on line 27\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmp1yqg08qs.php on line 28\n\nWarning: implode(): Invalid arguments\
    \ passed in /tmp/tmp1yqg08qs.php on line 29\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp1yqg08qs.php:37\nStack trace:\n#0 /tmp/tmp1yqg08qs.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1yqg08qs.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('intval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('chr', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strrev', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strlen', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_keys($grades), array_values($grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_keys($grades), array_values($grades));\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_keys($grades), array_values($grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_keys($grades), array_values($grades));\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_keys($grades), array_values($grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_keys($grades), array_values($grades));\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_keys($grades), array_values($grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_keys($grades), array_values($grades));\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_keys($grades), array_values($grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_keys($grades), array_values($grades));\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_keys($grades), array_values($grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_keys($grades), array_values($grades));\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array_keys($grades), array_values($grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array_keys($grades), array_values($\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsnr_bl84.php on line 62\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmfsqkcsd.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a * $a;'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplwyvmopz.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpeuo_e8fk.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    return implode('', $grades);\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2it04azx.php:35\n\
    Stack trace:\n#0 /tmp/tmp2it04azx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2it04azx.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_map(function($grade) {\n     \
    \   return $grade < 0 ? 'D-' : $grade < 1 ? 'D+' : $grade < 2 ? 'D' : $grade <\
    \ 3 ? 'C' : $grade < 4 ? 'B' : $grade < 5 ? 'B+' : $grade < 6 ? 'B' : $grade <\
    \ 7 ? 'A+' : $grade < 8 ? 'A' : $grade < 9 ? 'A+' : $grade < 10 ? 'A' : $grade\
    \ < 11 ? 'A-' : $grade < 12 ? 'A-' : $grade < 13 ? 'A-' : $grade < 14 ? 'A-' :\
    \ $grade < 15 ? 'A-' : $grade < 16 ? 'A-' : $grade < 17 ? 'A-' : $grade < 18 ?\
    \ 'A-' : $grade < 19 ? 'A-' : $grade < 20 ? 'A-' : $grade < 21 ? 'A-' : $grade\
    \ < 22 ? 'A-' : $grade < 23 ? 'A-' : $grade < 24 ? 'A-' : $grade < 25 ? 'A-' :\
    \ $grade < 26 ? 'A-' : $grade < 27 ? 'A-' : $grade < 28 ? 'A-' : $grade < 29 ?\
    \ 'A-' : $grade < 30 ? 'A-' : $grade < 31 ? 'A-' : $grade < 32 ? 'A-' : $grade\
    \ < 33 ? 'A-' : $grade < 34 ? 'A-' : $grade < 35 ? 'A-' : $grade < 36 ? 'A-' :\
    \ $grade < 37 ? 'A-' : $grade < 38 ? 'A-' : $grade < 39 ? 'A-' : $grade < 40 ?\
    \ 'A-' : $grade < 41 ? 'A-' : $grade < 42 ? 'A-' : $grade < 43 ? 'A-' : $grade\
    \ < 44 ? 'A-' : $grade < 45 ? 'A-' : $grade < 46 ? 'A-' : $grade < 47 ? 'A-' :\
    \ $grade < 48 ? 'A-' : $grade < 49 ? 'A-' : $grade < 50 ? 'A-' : $grade < 51 ?\
    \ 'A-' : $grade < 52 ? 'A-' : $grade < 53 ? 'A-' : $grade < 54 ? 'A-' : $grade\
    \ < 55 ? 'A-' : $grade < \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi7pb2kuk.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtolower', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('str_replace', array('+', '-', '*', '/'),\
    \ $grades);\n    $grades = array_map('str_replace', array('E', 'e', 'F', 'f',\
    \ 'G', 'g'), $grades);\n    $grades = array_map('str_replace', array('0', '1',\
    \ '2', '3', '4', '5', '6', '7', '8', '9'), $grades);\n    $grades = array_map('str_replace',\
    \ array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\
    \ 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'), $grades);\n   \
    \ $grades = array_map('str_replace', array('1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9'), $grades);\n    $grades = array_map('str_replace', array('a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'), $grades);\n    $grades = array_map('str_replace',\
    \ array('1', '2', '3', '4', '5', '6', '7', '8', '9'), $grades);\n    $grades =\
    \ array_map('str_replace', array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z'), $grades);\n    $grades = array_map('str_replace', array('1', '2', '3',\
    \ '4', '5', '6', '7', '8', '9'), $grades);\n    $grades = array_map('str_replace',\
    \ array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\
    \ 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'), $grades);\n   \
    \ $grades = array_map('str_replace', array('1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9'), $grades);\n    $grades = array_map('str_replace', array('a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'), $grades);\n    $grades = array_map('str_replace',\
    \ array('1', '2', '3', '\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7vqmi3fd.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2xxsjacv.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?0:$x;'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'D':'D+'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'D-':'D-'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?'E':'E'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9x94wkkt.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqewjf93s.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5_6sw9bh.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    return implode('', $grades);\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdy_w8t3q.php:35\n\
    Stack trace:\n#0 /tmp/tmpdy_w8t3q.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdy_w8t3q.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_map('str_pad',\
    \ $grades);\n    $grades = array_map('str_repeat', $grades);\n    $grades = array_map('str_split',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_search', $grades);\n\
    \    $grades = array_map('array_shift', $grades);\n    $grades = array_map('array_pop',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_shift',\
    \ $grades);\n    $grades = array_map('array_pop', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_shift', $grades);\n    $grades = array_map('array_pop', $grades);\n\
    \    $grades = array_map('array_reverse', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_shift', $grades);\n    $grades = array_map('array_pop',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_shift',\
    \ $grades);\n    $grades = array_map('array_pop', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_shift', $grades);\n    $grades = array_map('array_pop', $grades);\n\
    \    $grades = array_map('array_reverse', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_shift', $grades);\n    $grades = array_map('array_pop',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_shift',\
    \ $grades);\n    $grades = array_map('array_pop', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphp3lq8pc.php on line 80\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6w6nsu3b.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp038t_6ro.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('intval', $grades));\n  $grades = array_map('array_filter', $grades);\n\
    \  $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'A'), $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 'B'), $grades);\n\
    \  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'C'), $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'D'), $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 'E'), $grades);\n\
    \  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'F'), $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'G'), $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 'H'), $grades);\n\
    \  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'I'), $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'J'), $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 'K'), $grades);\n\
    \  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 'L'), $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 'M'), $grades);\n  $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp72stfpge.php on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpeh47lhmb.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2ujp_473.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array();\n    foreach ($grades as $grade) {\n        $grades_array[] = array(\n\
    \            'GPA' => $grade,\n            'Letter grade' => $grades_array[$grade]['Letter\
    \ grade'] . '+',\n        );\n    }\n    return $grades_array;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpauzvw2z6.php:39\n\
    Stack trace:\n#0 /tmp/tmpauzvw2z6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpauzvw2z6.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp98ydii7k.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5g1olypu.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('round', $grades);\n  $grades = array_map('intval', $grades);\n\
    \  $grades = array_map('array_sum', $grades);\n  $grades = array_map('array_diff',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_diff', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_diff',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_diff', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_diff',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_diff', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_diff',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_diff', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_diff',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_diff', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_diff',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_diff', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_diff',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_a5u14_d.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades\
    \ = array_map('array_map', create_function('$x','return $x<0?\\'-\\':\\'+\\';'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'+\\';'), $grades);\n    $grades = array_map('array_map', \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmd5ndhbj.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq7ld8i97.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp685yfx18.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp1mmj3zs.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1dk3xpt.php:35\n\
    Stack trace:\n#0 /tmp/tmpk1dk3xpt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk1dk3xpt.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_sum', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_sum', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0ckrkq2a.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a<0?\\'D-\\':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\'C+\\':$a<0?\\'B-\\':$a<0?\\\
    'B+\\':$a<0?\\'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a<0?\\'D-\\':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\\
    'C+\\':$a<0?\\'B-\\':$a<0?\\'B+\\':$a<0?\\'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a<0?\\'D-\\\
    ':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\'C+\\':$a<0?\\'B-\\':$a<0?\\'B+\\':$a<0?\\\
    'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a<0?\\'D-\\':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\\
    'C+\\':$a<0?\\'B-\\':$a<0?\\'B+\\':$a<0?\\'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a<0?\\'D-\\\
    ':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\'C+\\':$a<0?\\'B-\\':$a<0?\\'B+\\':$a<0?\\\
    '\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgsft10gy.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array_map('round', array_map('intval', $grades));\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\n    $grades_array =\
    \ array_unique($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_map('strval', $grades_array);\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdn9248ia.php on line 76\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array_map('round', array_map('intval', $grades));\n    $letter_grades = array();\n\
    \    foreach ($grades_array as $grade) {\n        if ($grade >= 4.0) {\n     \
    \       $letter_grades[] = 'A+';\n        } elseif ($grade >= 3.7) {\n       \
    \     $letter_grades[] = 'A';\n        } elseif ($grade >= 3.3) {\n          \
    \  $letter_grades[] = 'A-';\n        } elseif ($grade >= 3.0) {\n            $letter_grades[]\
    \ = 'B+';\n        } elseif ($grade >= 2.7) {\n            $letter_grades[] =\
    \ 'B';\n        } elseif ($grade >= 2.3) {\n            $letter_grades[] = 'B-';\n\
    \        } elseif ($grade >= 2.0) {\n            $letter_grades[] = 'C+';\n  \
    \      } elseif ($grade >= 1.7) {\n            $letter_grades[] = 'C';\n     \
    \   } elseif ($grade >= 1.3) {\n            $letter_grades[] = 'C-';\n       \
    \ } elseif ($grade >= 1.0) {\n            $letter_grades[] = 'D+';\n        }\
    \ elseif ($grade >= 0.7) {\n            $letter_grades[] = 'D';\n        } elseif\
    \ ($grade >= 0.0) {\n            $letter_grades[] = 'D-';\n        } else {\n\
    \            $letter_grades[] = 'E';\n        }\n    }\n    return $letter_grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05xdvym3.php:63\n\
    Stack trace:\n#0 /tmp/tmp05xdvym3.php(71): test()\n#1 {main}\n  thrown in /tmp/tmp05xdvym3.php\
    \ on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strtolower', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strpos', $grades, $grades);\n    $grades\
    \ = array_map('strrpos', $grades, $grades);\n    $grades = array_map('strrev',\
    \ $grades);\n    $grades = array_map('strrev', array_filter($grades));\n    $grades\
    \ = array_map('strrev', array_filter($grades));\n    $grades = array_map('strrev',\
    \ array_filter($grades));\n    $grades = array_map('strrev', array_filter($grades));\n\
    \    $grades = array_map('strrev', array_filter($grades));\n    $grades = array_map('strrev',\
    \ array_filter($grades));\n    $grades = array_map('strrev', array_filter($grades));\n\
    \    $grades = array_map('strrev', array_filter($grades));\n    $grades = array_map('strrev',\
    \ array_filter($grades));\n    $grades = array_map('strrev', array_filter($grades));\n\
    \    $grades = array_map('strrev', array_filter($grades));\n    $grades = array_map('strrev',\
    \ array_filter($grades));\n    $grades = array_map('strrev', array_filter($grades));\n\
    \    $grades = array_map('strrev', array_filter($grades));\n    $grades = array_map('strrev',\
    \ array_filter($grades));\n    $grades = array_map('strrev', array_filter($grades));\n\
    \    $grades = array_map('strrev', array_filter($grades));\n    $grades = array_map('strrev',\
    \ array_filter($grades));\n    $grades = array_map('strrev', array_filter($grades));\n\
    \    $grades = array_map('strrev', array_filter($grades));\n    $grades = array_map('strrev',\
    \ array_filter($grades));\n    $grades = array_map('strrev', array_filter($grades));\n\
    \    $grades = array_map('strrev', array_filter($grades));\n    $grades = array_map('strrev',\
    \ array_filter($grades));\n    $grades = array_map('strrev', array_filter($grades));\n\
    \    $grades = array_map('strrev', array_filter($grades));\n    $grades = array_map('strrev',\
    \ array_filter\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr6u39jt9.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', create_function('$v', 'return $v > 0.0 && $v < 1.0;'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v > 0.0 && $v < 1.0;'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v > 0.0 && $v < 1.0;'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v > 0.0 && $v < 1.0;'), $grades);\n    $grades\
    \ = array_map('array_map', create_function('$v', 'return $v > 0.0 && $v < 1.0;'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v > 0.0 && $v < 1.0;'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v > 0.0 && $v < 1.0;'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v > 0.0 && $v < 1.0;'), $grades);\n    $grades\
    \ = array_map('array_map', create_function('$v', 'return $v > 0.0 && $v < 1.0;'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v > 0.0 && $v < 1.0;'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v > 0.0 && $v < 1.0;'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v > 0.0 && $v < 1.0;'), $grades);\n    $grades\
    \ = array_map('array_map', create_function('$v', 'return $v > 0.0 && $v < 1.0;'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v > 0.0 && $v < 1.0;'), $grades);\n    $grades = array_map('array_map', create_function('$v',\
    \ 'return $v > 0.0 && $v < 1.0;'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v > 0.0 && $\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_ou5uazj.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('floatval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmmolems2.php on line 75\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', '$v / 4.0'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', '$v > 3.7 ? \\'A+\\\
    ' : $v > 3.3 ? \\'A-\\' : $v > 3.0 ? \\'B+\\' : $v > 2.7 ? \\'B\\' : $v > 2.3\
    \ ? \\'B-\\' : $v > 2.0 ? \\'C+\\' : $v > 1.7 ? \\'C\\' : $v > 1.3 ? \\'C-\\'\
    \ : $v > 1.0 ? \\'D+\\' : $v > 0.7 ? \\'D\\' : $v > 0.0 ? \\'D-\\' : \\'E\\''),\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpsf5vdn4p.php\
    \ on line 27\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmpsf5vdn4p.php on line 27\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmpsf5vdn4p.php on line 27\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmpsf5vdn4p.php on line 27\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpsf5vdn4p.php\
    \ on line 27\n\nParse error: syntax error in /tmp/tmpsf5vdn4p.php(28) : runtime-created\
    \ function on line 1\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_reverse', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpno3miojb.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade >= 4.0 ? \"A+\" : ($grade >= 3.7 ? \"A\" : ($grade >= 3.3 ? \"\
    A-\" : ($grade >= 3.0 ? \"B+\" : \n        ($grade >= 2.7 ? \"B\" : ($grade >=\
    \ 2.3 ? \"B-\" : ($grade >= 2.0 ? \"C+\" : \n        ($grade >= 1.7 ? \"C\" :\
    \ \n        ($grade >= 1.3 ? \"C-\" : ($grade >= 1.0 ? \"D+\" : \n        ($grade\
    \ >= 0.7 ? \"D\" : \n        ($grade >= 0.0 ? \"D-\" : \"E\")))))))));\n    },\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1og4n66u.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptpmsytjb.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppvagpy2t.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('intval', $grades));\n  $grades = array_map('array_filter', $grades);\n\
    \  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp05n8o6sq.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp48awp9a5.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\';'), $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu_ad4hno.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade > 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0;\n    }, $grades);\n    $grades =\
    \ array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0;\n    }, $grades);\n    $grades =\
    \ array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0;\n    }, $grades);\n    $grades =\
    \ array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0;\n    }, $grades);\n    $grades =\
    \ array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $gra\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmbd0v1xk.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('intval', $grades));\n  $grades = array_map('array_filter', $grades);\n\
    \  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_filter', $grades);\n  $grades = array_map('array_merge',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_merge', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpaseib_3w.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('intval', $grades));\n  $grades = array_map('array_filter', $grades);\n\
    \  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppfq7ii28.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_map('intval', $grades);\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi8xllo5x.php on line 68\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu_bpc_cf.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a * $a;'),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmph2o8l36c.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8e97int8.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_filter', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = array_map('array_search', $grades, array_fill(0, count($grades),\
    \ 0));\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt206vqqv.php on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphzlvnsff.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0  => 'A+',\n        3.7  => 'A',\n        3.3  => 'A-',\n\
    \        3.0  => 'B+',\n        2.7  => 'B',\n        2.3  => 'B-',\n        2.0\
    \  => 'C+',\n        1.7  => 'C',\n        1.3  => 'C-',\n        1.0  => 'D+',\n\
    \        0.7  => 'D',\n        0.0  => 'D-',\n        0.0  => 'E',\n    );\n \
    \   $grades_array = array_flip($grades_array);\n    $grades_array = array_filter($grades_array,\
    \ function($value){\n        return $value !== 0.0;\n    });\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_map(function($value){\n\
    \        return $grades_array[$value];\n    }, $grades_array);\n    return $grades_array;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1af4qc0.php:55\n\
    Stack trace:\n#0 /tmp/tmpl1af4qc0.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpl1af4qc0.php\
    \ on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4wbqisj_.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', 'array_fill',\
    \ array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 0), $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 0), $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', 'array_fill', array_fill(0,\
    \ count($grades), 0), $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', 'array_fill', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades\
    \ = array_map('array_map', 'array_fill', array_fill(0, count($grades), 0), $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ 'array_fill', array_fill(0, count($grades), 0), $grades);\n    $grades = \n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp43hu9oy0.php on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('round', $grades);\n  $grades = array_map('intval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq1t7nbih.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0 => 'A+',\n        3.7 => 'A',\n        3.3 => 'A-',\n\
    \        3.0 => 'B+',\n        2.7 => 'B',\n        2.3 => 'B-',\n        2.0\
    \ => 'C+',\n        1.7 => 'C',\n        1.3 => 'C-',\n        1.0 => 'D+',\n\
    \        0.7 => 'D',\n        0.0 => 'D-',\n        0.0 => 'E',\n    );\n    $grades_array\
    \ = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt2jqwo79.php on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk6k2eh4v.php on line 92\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade >= 3.7 ? 'A+' : ($grade >= 3.3 ? 'A-' : \n            ($grade\
    \ >= 3.0 ? 'B+' : \n            ($grade >= 2.7 ? 'B' : \n            ($grade >=\
    \ 2.3 ? 'B-' : \n            ($grade >= 2.0 ? 'C+' : \n            ($grade >=\
    \ 1.7 ? 'C' : \n            ($grade >= 1.3 ? 'C-' : \n            ($grade >= 1.0\
    \ ? 'D+' : \n            ($grade >= 0.7 ? 'D' : \n            ($grade >= 0.0 ?\
    \ 'D-' : 'E')))))))))));\n    }, $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0rcd3zl9.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a[0] < 0.7 ? \"D-\" : $a[0] < 0.3 ? \"C-\" : $a[0]\
    \ < 0.1 ? \"B-\" : $a[0] < 0.0 ? \"B-\" : $a[0] < 0.7 ? \"B-\" : $a[0] < 0.3 ?\
    \ \"B-\" : $a[0] < 0.1 ? \"B-\" : $a[0] < 0.0 ? \"B-\" : $a[0] < 0.7 ? \"B-\"\
    \ : $a[0] < 0.3 ? \"B-\" : $a[0] < 0.1 ? \"B-\" : $a[0] < 0.0 ? \"B-\" : $a[0]\
    \ < 0.7 ? \"B-\" : $a[0] < 0.3 ? \"B-\" : $a[0] < 0.1 ? \"B-\" : $a[0] < 0.0 ?\
    \ \"B-\" : $a[0] < 0.7 ? \"B-\" : $a[0] < 0.3 ? \"B-\" : $a[0] < 0.1 ? \"B-\"\
    \ : $a[0] < 0.0 ? \"B-\" : $a[0] < 0.7 ? \"B-\" : $a[0] < 0.3 ? \"B-\" : $a[0]\
    \ < 0.1 ? \"B-\" : $a[0] < 0.0 ? \"B-\" : $a[0] < 0.7 ? \"B-\" : $a[0] < 0.3 ?\
    \ \"B-\" : $a[0] < 0.1 ? \"B-\" : $a[0] < 0.0 ? \"B-\" : $a[0] < 0.7 ? \"B-\"\
    \ : $a[0] < 0.3 ? \"B-\" : $a[0] < 0.1 ? \"B-\" : $a[0] < 0.0 ? \"B-\" : $a[0]\
    \ < 0.7 ? \"B-\" : $a[0] < 0.3 ? \"B-\" : $a[0] < 0.1 ? \"B-\" : $a[0] < 0.0 ?\
    \ \"B-\" : $a[0] < 0.7 ? \"B-\" : $a[0] < 0.3 ? \"B-\" : $a[0] < 0.1 ? \"B-\"\
    \ : $a[0] < 0.0 ? \"B-\" : $a[0] < 0.7 ? \"B-\" : $a[0] < 0.3 ? \"B-\" : $a[0]\
    \ < 0.1 ? \"B-\" : $a[0] < 0.0 ? \"B-\" : $a[0] < 0.7 ? \"B-\" : $a[0] < 0.3 ?\
    \ \"B-\" : $a[0] < 0.1 ? \"B-\" : $a[0] < 0.0 ? \"B-\" : $a[0] < 0.7 ? \"B-\"\
    \ : $a[0] < 0.3 ? \"B-\" : $a[0] < 0.1 ? \"B-\nfunction candidate(...$args) {\n\
    \    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\"\
    , \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo1nhjwb0.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6xmr2bm7.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ array_fill(0, count($grades), 0), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $grades);\n    $grades = array_map('array_search', array_fill(0, count($grades),\
    \ 0), $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk3hinziy.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0 => 'A+',\n        3.7 => 'A',\n        3.3 => 'A-',\n\
    \        3.0 => 'B+',\n        2.7 => 'B',\n        2.3 => 'B-',\n        2.0\
    \ => 'C+',\n        1.7 => 'C',\n        1.3 => 'C-',\n        1.0 => 'D+',\n\
    \        0.7 => 'D',\n        0.0 => 'D-',\n        0.0 => 'E',\n    );\n    $grades_array\
    \ = array_flip($grades_array);\n    $grades_array = array_reverse($grades_array);\n\
    \    $grades_array = array_slice($grades_array, 0, count($grades));\n    $grades_array\
    \ = array_merge($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades));\n    $grades_array = array_reverse($grades_array);\n   \
    \ $grades_array = array_slice($grades_array, 0, count($grades));\n    $grades_array\
    \ = array_merge($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades));\n    $grades_array = array_reverse($grades_array);\n   \
    \ $grades_array = array_slice($grades_array, 0, count($grades));\n    $grades_array\
    \ = array_merge($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades));\n    $grades_array = array_reverse($grades_array);\n   \
    \ $grades_array = array_slice($grades_array, 0, count($grades));\n    $grades_array\
    \ = array_merge($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades));\n    $grades_array = array_reverse($grades_array);\n   \
    \ $grades_array = array_slice($grades_array, 0, count($grades));\n    $grades_array\
    \ = array_merge($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades));\n    $grades_array = array_reverse($grades_array);\n   \
    \ $grades_array = array_slice($grades_array, 0, count($grades));\n    $grades_array\
    \ = array_merge($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades));\n    $grades_array = array_reverse($grades_array);\n   \
    \ $grades_array = array_slice($grades_array, 0, count($grades));\n    $grades_array\
    \ = array_merge($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades));\n    $grades_array = array_reverse($grades_array\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnlo249_i.php on line 69\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('floatval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9bzo837_.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphz04i3g1.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_map('intval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strtoupper', $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz4278o4.php:40\n\
    Stack trace:\n#0 /tmp/tmpdz4278o4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdz4278o4.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_merge', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_merge', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', $grades);\n    $grades = array_map('array_merge', $grades);\n\
    \    $grades = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplrke4ljd.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmpy8kehd.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('floatval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('trim', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq0jwb7ht.php on line 68\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0  => 'A+',\n        3.7  => 'A',\n        3.3  => 'A-',\n\
    \        3.0  => 'B+',\n        2.7  => 'B',\n        2.3  => 'B-',\n        2.0\
    \  => 'C+',\n        1.7  => 'C',\n        1.3  => 'C-',\n        1.0  => 'D+',\n\
    \        0.7  => 'D',\n        0.0  => 'D-'\n    );\n    $grades_array = array_reverse($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_unique($grades_array);\n    $grades_array = array_values($grades_array);\n\
    \    $grades_array = array_filter($grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_unique($grades_array);\n    $grades_array = array_values($grades_array);\n\
    \    $grades_array = array_filter($grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_unique($grades_array);\n    $grades_array = array_values($grades_array);\n\
    \    $grades_array = array_filter($grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_unique($grades_array);\n    $grades_array = array_values($grades_array);\n\
    \    $grades_array = array_filter($grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_unique($grades_array);\n    $grades_array = array_values($grades_array);\n\
    \    $grades_array = array_filter($grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_filter($grades_array);\n\
    \    $grades_array = array_unique($grades_array);\n    $grades_array = array_values($grade\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdvtk9d69.php on line 73\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk190p0cu.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array_map('intval', $grades);\n    $grades_array = array_filter($grades_array,\
    \ 'is_numeric');\n    $grades_array = array_map('round', $grades_array);\n   \
    \ $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grades_array, 'is_numeric');\n    $grades_array\
    \ = array_map('strval', $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_filter($grade\nfunction candidate(...$args) {\n   \
    \ return numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"\
    C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy3tfgoow.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v / count($v);'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v > 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v < 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter', create_function('$v',\
    \ 'return $v != 0;'), $grades);\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz9sf1iso.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_reduce($grades,\
    \ function($carry, $item) {\n        return $carry . array_shift($item);\n   \
    \ });\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_shift() expects parameter 1 to be array, string given\
    \ in /tmp/tmp25y5u54v.php on line 28\n\nWarning: array_shift() expects parameter\
    \ 1 to be array, string given in /tmp/tmp25y5u54v.php on line 28\n\nWarning: array_shift()\
    \ expects parameter 1 to be array, string given in /tmp/tmp25y5u54v.php on line\
    \ 28\n\nWarning: array_shift() expects parameter 1 to be array, string given in\
    \ /tmp/tmp25y5u54v.php on line 28\n\nWarning: array_shift() expects parameter\
    \ 1 to be array, string given in /tmp/tmp25y5u54v.php on line 28\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp25y5u54v.php:38\nStack trace:\n\
    #0 /tmp/tmp25y5u54v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp25y5u54v.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v / count($v);'), $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', 'return $v / count($v);'),\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', create_function('$v', 'return $v / count($v);'), $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v / count($v);'), $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', 'return $v / count($v);'),\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', create_function('$v', 'return $v / count($v);'), $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ $v / count($v);'), $grades);\n    $grades = array_map('array_filter', $grades);\n\
    \    $grades = array_map('array_map', create_function('$v', 'return $v / count($v);'),\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_map', create_function('$v', 'return $v / count($v);'), $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$v', 'return\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsxhfao0q.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5nk_5djm.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8675cswm.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_sort',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpoi08o6ex.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphqzeztfv.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('round', $grades);\n  $grades = array_map('intval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('array_sum',\
    \ $grades);\n  $grades = array_map('array_diff', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_unique', $grades);\n  $grades = array_map('array_filter',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n  $grades = array_map('array_map', $grades);\n  $grades = array_map('array_map',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiebo3l60.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ ($a > 3.7) ? \"A+\" : ($a > 3.3) ? \"A-\" : ($a > 3.0) ? \"B+\" : (($a > 2.7)\
    \ ? \"B\" : (($a > 2.3) ? \"B-\" : ($a > 2.0) ? \"C+\" : (($a > 1.7) ? \"C\" :\
    \ (($a > 1.3) ? \"C-\" : ($a > 1.0) ? \"D+\" : ($a > 0.7) ? \"D\" : ($a > 0.0)\
    \ ? \"D-\" : \"E\")));'), $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, float given in\
    \ /tmp/tmpj9lj0tyz.php on line 25\n\nWarning: array_sum() expects parameter 1\
    \ to be array, float given in /tmp/tmpj9lj0tyz.php on line 25\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, float given in /tmp/tmpj9lj0tyz.php on line\
    \ 25\n\nWarning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpj9lj0tyz.php\
    \ on line 25\n\nWarning: array_sum() expects parameter 1 to be array, float given\
    \ in /tmp/tmpj9lj0tyz.php on line 25\n\nParse error: syntax error in /tmp/tmpj9lj0tyz.php(26)\
    \ : runtime-created function on line 1\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_reduce', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_diff', $grades);\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpypu9x4vo.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', create_function('$x', \"return '$x'\"),\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x', \"return\
    \ '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$x',\
    \ \"return '$x'\"), $grades);\n    $grades = array_map('array_map', create_function('$\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpn3ya2jvd.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    return implode('', $grades);\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkii7ljz.php:35\n\
    Stack trace:\n#0 /tmp/tmprkii7ljz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprkii7ljz.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade >= 3.0 ? \"A+\" : ($grade >= 3.7 ? \"A\" : ($grade >= 3.3 ? \"\
    A-\" : ($grade >= 3.0 ? \"B+\" : \n        ($grade >= 2.7 ? \"B\" : ($grade >=\
    \ 2.3 ? \"B-\" : ($grade >= 2.0 ? \"C+\" : \n        ($grade >= 1.7 ? \"C\" :\
    \ ($grade >= 1.3 ? \"C-\" : ($grade >= 1.0 ? \"D+\" : \n        ($grade >= 0.7\
    \ ? \"D\" : ($grade >= 0.0 ? \"D-\" : \"E\")))))))))));\n    }, $grades);\n  \
    \  return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0rdq0nyr.php:39\n\
    Stack trace:\n#0 /tmp/tmp0rdq0nyr.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp0rdq0nyr.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0  => 'A+',\n        3.7  => 'A',\n        3.3  => 'A-',\n\
    \        3.0  => 'B+',\n        2.7  => 'B',\n        2.3  => 'B-',\n        2.0\
    \  => 'C+',\n        1.7  => 'C',\n        1.3  => 'C-',\n        1.0  => 'D+',\n\
    \        0.7  => 'D',\n        0.0  => 'D-'\n    );\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_filter($grades_array);\n    $grades_array = array_values($grades_array);\n\
    \    $grades_array = array_map(function($grade) {\n        return $grades_array[$grade];\n\
    \    }, $grades_array);\n    return $grades_array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dm7lndu.php:52\n\
    Stack trace:\n#0 /tmp/tmp8dm7lndu.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp8dm7lndu.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\\'A+\\':($x>0?\\'A-\\':\\'B+\\')'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'B+\\':($x>0?\\'B-\\':\\'C+\\')'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\\'C+\\\
    ':($x>0?\\'C-\\':\\'D+\\')'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'D+\\':($x>0?\\'D-\\':\\'E\\')'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\\'E\\\
    ':\\'F\\'), $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqvv7kwgu.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('intval', $grades));\n  $grades = array_filter($grades);\n  $grades\
    \ = array_unique($grades);\n  $grades = array_map('chr', $grades);\n  return $grades;\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuasdhqli.php:36\n\
    Stack trace:\n#0 /tmp/tmpuasdhqli.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpuasdhqli.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp97p0dov5.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvu9j2y8n.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp88ghm55.php on line 92\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_values($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? 'A+'\
    \ : ($grade < 0 ? 'A-' : 'B+');\n    }, $grades);\n    return $grades;\n}\n\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmw0n5bij.php:39\n\
    Stack trace:\n#0 /tmp/tmpmw0n5bij.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpmw0n5bij.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpng7i47z1.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\\'A+\\':($x>0?\\'A-\\':\\'B+\\');'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'B+\\':($x>0?\\'B-\\':\\'C+\\');'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\\'C+\\\
    ':($x>0?\\'C-\\':\\'D+\\');'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'D+\\':($x>0?\\'D-\\':\\'E\\');'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\\'E\\\
    ':\\'F\\');'), $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, float given in\
    \ /tmp/tmpwfcl3exk.php on line 25\n\nWarning: array_sum() expects parameter 1\
    \ to be array, float given in /tmp/tmpwfcl3exk.php on line 25\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, float given in /tmp/tmpwfcl3exk.php on line\
    \ 25\n\nWarning: array_sum() expects parameter 1 to be array, float given in /tmp/tmpwfcl3exk.php\
    \ on line 25\n\nWarning: array_sum() expects parameter 1 to be array, float given\
    \ in /tmp/tmpwfcl3exk.php on line 25\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpwfcl3exk.php on line 26\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpwfcl3exk.php\
    \ on line 27\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpwfcl3exk.php on line 28\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpwfcl3exk.php on line 29\n\nParse error:\
    \ syntax error in /tmp/tmpwfcl3exk.php(30) : runtime-created function on line\
    \ 1\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbxkkdc7x.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0 => 'A+',\n        3.7 => 'A',\n        3.3 => 'A-',\n\
    \        3.0 => 'B+',\n        2.7 => 'B',\n        2.3 => 'B-',\n        2.0\
    \ => 'C+',\n        1.7 => 'C',\n        1.3 => 'C-',\n        1.0 => 'D+',\n\
    \        0.7 => 'D',\n        0.0 => 'D-',\n        0.0 => 'E',\n    );\n    $grades_array\
    \ = array_filter($grades_array);\n    $grades_array = array_values($grades_array);\n\
    \    $grades_array = array_map(function($grade) {\n        return $grade;\n  \
    \  }, $grades_array);\n    $grades_array = array_unique($grades_array);\n    $grades_array\
    \ = array_values($grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\n    }, $grades_array);\n    $grades_array = array_unique($grades_array);\n\
    \    $grades_array = array_values($grades_array);\n    $grades_array = array_map(function($grade)\
    \ {\n        return $grade;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9yw7wrat.php on line 96\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('floatval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_unique($\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp43qipg3u.php on line 75\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('strtoupper', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp442393ut.php on line 68\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbrf3uhih.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpev1rpnoi.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfcqsz76c.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_map('intval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strtolower', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strlen', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('E', 'e', 'E+', 'E+', 'E-', 'E-',\
    \ 'E'), $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('D', 'D+', 'D+', 'D-', 'D-', 'D'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('C', 'C+', 'C+', 'C-', 'C-', 'C'),\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('B', 'B+', 'B+', 'B-', 'B-', 'B'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('A', 'A+', 'A+', 'A-', 'A-', 'A'),\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('F', 'F+', 'F+', 'F-', 'F-', 'F'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('G', 'G+', 'G+', 'G-', 'G-', 'G'),\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('I', 'I+', 'I+', 'I-', 'I-', 'I'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('H', 'H+', 'H+', 'H-', 'H-', 'H'),\
    \ $grades);\n    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('J', 'J+', 'J+', 'J-', 'J-', 'J'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdcgg76ft.php on line 57\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_map(function($grade) {\n     \
    \   return $grade > 0 ? 'A+' : ($grade < 0 ? 'A-' : 'B+');\n    }, $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75h9tc2q.php:38\n\
    Stack trace:\n#0 /tmp/tmp75h9tc2q.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp75h9tc2q.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$item', '$item / 4.0'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$item', '$item > 3.7 ? \\'A+\\' : \\'A-\\''), $grades);\n \
    \   $grades = array_map('array_map', create_function('$item', '$item > 3.3 ? \\\
    'A+\\' : \\'A-\\''), $grades);\n    $grades = array_map('array_map', create_function('$item',\
    \ '$item > 3.0 ? \\'B+\\' : \\'B-\\''), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$item', '$item > 2.7 ? \\'B+\\' : \\'B-\\''), $grades);\n \
    \   $grades = array_map('array_map', create_function('$item', '$item > 2.3 ? \\\
    'B+\\' : \\'B-\\''), $grades);\n    $grades = array_map('array_map', create_function('$item',\
    \ '$item > 2.0 ? \\'C+\\' : \\'C-\\''), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$item', '$item > 1.7 ? \\'C+\\' : \\'C-\\''), $grades);\n \
    \   $grades = array_map('array_map', create_function('$item', '$item > 1.3 ? \\\
    'C+\\' : \\'C-\\''), $grades);\n    $grades = array_map('array_map', create_function('$item',\
    \ '$item > 1.0 ? \\'D+\\' : \\'D-\\''), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$item', '$item > 0.7 ? \\'D+\\' : \\'D-\\''), $grades);\n \
    \   $grades = array_map('array_map', create_function('$item', '$item > 0.0 ? \\\
    'D+\\' : \\'D-\\''), $grades);\n    $grades = array_map('array_map', create_function('$item',\
    \ '$item > 0.0 ? \\'E\\' : \\'F\\''), $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, string given in\
    \ /tmp/tmp5rpb8_4a.php on line 28\n\nWarning: array_sum() expects parameter 1\
    \ to be array, string given in /tmp/tmp5rpb8_4a.php on line 28\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, string given in /tmp/tmp5rpb8_4a.php on line\
    \ 28\n\nWarning: array_sum() expects parameter 1 to be array, string given in\
    \ /tmp/tmp5rpb8_4a.php on line 28\n\nWarning: array_sum() expects parameter 1\
    \ to be array, string given in /tmp/tmp5rpb8_4a.php on line 28\n\nParse error:\
    \ syntax error in /tmp/tmp5rpb8_4a.php(29) : runtime-created function on line\
    \ 1\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('intval', $grades));\n  $grades = array_map('array_sum', $grades);\n\
    \  $grades = array_map('array_map', create_function('$x','return $x<0?\\'-\\':\\\
    '\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\':\\'\\'+$x;'), $grades);\n  $grades = array_map('array_\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqv4_vwxo.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade >= 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade >= 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 0 ? $grade : 0;\n    }, $grades);\n    $grades =\
    \ array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade >= 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade >= 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 0 ? $grade : 0;\n    }, $grades);\n    $grades =\
    \ array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade >= 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade >= 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 0 ? $grade : 0;\n    }, $grades);\n    $grades =\
    \ array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade >= 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade >= 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 0 ? $grade : 0;\n    }, $grades);\n    $grades =\
    \ array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade >= 0 ? $grade : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade >= 0 ? $grade\
    \ : 0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $gra\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1nxdk48t.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_sort', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_map', $grades);\n\
    \    $grades = array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6dmkns3o.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade >= 4.0 ? \"A+\" : ($grade >= 3.7 ? \"A\" : ($grade >= 3.3 ? \"\
    A-\" : ($grade >= 3.0 ? \"B+\" : ($grade >= 2.7 ? \"B\" : ($grade >= 2.3 ? \"\
    B-\" : ($grade >= 2.0 ? \"C+\" : ($grade >= 1.7 ? \"C\" : ($grade >= 1.3 ? \"\
    C-\" : ($grade >= 1.0 ? \"D+\" : ($grade >= 0.7 ? \"D\" : ($grade >= 0.0 ? \"\
    D-\" : \"E\")))))))));\n    }, $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphae94srq.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_sort', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpufmmf3v4.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a * $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_map\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4p_l7g6s.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp10xaj1zr.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplgbojxcz.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0 => 'A+',\n        3.7 => 'A',\n        3.3 => 'A-',\n\
    \        3.0 => 'B+',\n        2.7 => 'B',\n        2.3 => 'B-',\n        2.0\
    \ => 'C+',\n        1.7 => 'C',\n        1.3 => 'C-',\n        1.0 => 'D+',\n\
    \        0.7 => 'D',\n        0.0 => 'D-',\n        0.0 => 'E',\n    );\n    $grades_array\
    \ = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    \    $grades_array = array_flip($grades_array);\n    $grades_array = array_flip($grades_array);\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwspkdmwr.php on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmps76uzykk.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpehpmvh11.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$v', 'return $v / count($v);'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$v', 'return $v != 0;'), $grades);\n    $grades = array_map('array_filter',\
    \ create_function('$\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd98dg9b0.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('round', $grades);\n  $grades = array_map('intval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('array_sum',\
    \ $grades);\n  $grades = array_map('array_diff', $grades);\n  $grades = array_map('array_unique',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n  $grades = array_map('array_intersect', $grades);\n  $grades = array_map('array_intersect',\
    \ $grades);\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw_oo5tmc.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjifr9nv6.php on line 92\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('intval', $grades));\n  $grades = array_map('array_sum', $grades);\n\
    \  $grades = array_map('array_map', create_function('$x','return $x<0?\\'-\\'+$x:\\\
    '\\'+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\'+$x:\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$x','return $x<0?\\'-\\'+$x:\\'\\'+$x;'), $grades);\n  $grades\
    \ = array_map('array_map', create_function('$x','return $x<0?\\'-\\'+$x:\\'\\\
    '+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\'+$x:\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$x','return $x<0?\\'-\\'+$x:\\'\\'+$x;'), $grades);\n  $grades\
    \ = array_map('array_map', create_function('$x','return $x<0?\\'-\\'+$x:\\'\\\
    '+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\'+$x:\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$x','return $x<0?\\'-\\'+$x:\\'\\'+$x;'), $grades);\n  $grades\
    \ = array_map('array_map', create_function('$x','return $x<0?\\'-\\'+$x:\\'\\\
    '+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'-\\'+$x:\\'\\'+$x;'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$x','return $x<0?\\'-\\'+$x:\\'\\'+$x;'), $grades);\n  $grades\
    \ = array_map('array_map', create_function('$x','return $x<0?\\'-\\'+$x:\\'\\\
    '+$x;'), $grades);\n  $grades = array_map('array_map', create_function('$x','return\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgyql6dn0.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_filter', $grades);\n    $grades = array_map('array_map',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa6dsmo8x.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8en9zlop.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxzsif5_a.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'D-\\':$x<0?\\'D+\\':$x<0?\\'C-\\':$x<0?\\'C+\\':$x<0?\\'B-\\':$x<0?\\\
    'B+\\':$x<0?\\'A-\\':$x<0?\\'A+\\':\\'E\\';'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x<0?\\'D-\\':$x<0?\\'D+\\':$x<0?\\'C-\\':$x<0?\\\
    'C+\\':$x<0?\\'B-\\':$x<0?\\'B+\\':$x<0?\\'A-\\':$x<0?\\'A+\\':\\'E\\';'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x<0?\\'D-\\\
    ':$x<0?\\'D+\\':$x<0?\\'C-\\':$x<0?\\'C+\\':$x<0?\\'B-\\':$x<0?\\'B+\\':$x<0?\\\
    'A-\\':$x<0?\\'A+\\':\\'E\\';'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x<0?\\'D-\\':$x<0?\\'D+\\':$x<0?\\'C-\\':$x<0?\\\
    'C+\\':$x<0?\\'B-\\':$x<0?\\'B+\\':$x<0?\\'A-\\':$x<0?\\'A+\\':\\'E\\';'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x<0?\\'D-\\\
    ':$x<0?\\'D+\\':$x<0?\\'C-\\':$x<0?\\'C+\\':$x<0?\\'B-\\':$x<0?\\'B+\\':$x<0?\\\
    '\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdpii0qpz.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade >= 3.0 ? \"A+\" : ($grade >= 3.7 ? \"A\" : \n            ($grade\
    \ >= 3.3 ? \"A-\" : \n            ($grade >= 3.0 ? \"B+\" : \n            ($grade\
    \ >= 2.7 ? \"B\" : \n            ($grade >= 2.3 ? \"B-\" : \n            ($grade\
    \ >= 2.0 ? \"C+\" : \n            ($grade >= 1.7 ? \"C\" : \n            ($grade\
    \ >= 1.3 ? \"C-\" : \n            ($grade >= 1.0 ? \"D+\" : \n            ($grade\
    \ >= 0.7 ? \"D\" : \n            ($grade >= 0.0 ? \"D-\" : \n            ($grade\
    \ >= 0.0 ? \"E\" : \"\")))))))));\n    }, $grades);\n    return implode('', $grades);\n\
    }\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5f4vvs0_.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtolower', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjed5s_0_.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw3o0kpw5.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0 => 'A+',\n        3.7 => 'A',\n        3.3 => 'A-',\n\
    \        3.0 => 'B+',\n        2.7 => 'B',\n        2.3 => 'B-',\n        2.0\
    \ => 'C+',\n        1.7 => 'C',\n        1.3 => 'C-',\n        1.0 => 'D+',\n\
    \        0.7 => 'D',\n        0.0 => 'D-',\n        0.0 => 'E',\n    );\n    $grades_array\
    \ = array_reverse($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades) - 1);\n    $grades_array = array_merge($grades_array, $grades);\n\
    \    $grades_array = array_slice($grades_array, 0, count($grades) - 1);\n    $grades_array\
    \ = array_reverse($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades) - 1);\n    $grades_array = array_merge($grades_array, $grades);\n\
    \    $grades_array = array_slice($grades_array, 0, count($grades) - 1);\n    $grades_array\
    \ = array_reverse($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades) - 1);\n    $grades_array = array_merge($grades_array, $grades);\n\
    \    $grades_array = array_slice($grades_array, 0, count($grades) - 1);\n    $grades_array\
    \ = array_reverse($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades) - 1);\n    $grades_array = array_merge($grades_array, $grades);\n\
    \    $grades_array = array_slice($grades_array, 0, count($grades) - 1);\n    $grades_array\
    \ = array_reverse($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades) - 1);\n    $grades_array = array_merge($grades_array, $grades);\n\
    \    $grades_array = array_slice($grades_array, 0, count($grades) - 1);\n    $grades_array\
    \ = array_reverse($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades) - 1);\n    $grades_array = array_merge($grades_array, $grades);\n\
    \    $grades_array = array_slice($grades_array, 0, count($grades) - 1);\n    $grades_array\
    \ = array_reverse($grades_array);\n    $grades_array = array_slice($grades_array,\
    \ 0, count($grades) - 1);\n    $grades_array = array_merge($grades_array, $grades);\n\
    \    $grades_array = array_slice($grades_array, 0, count(\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphvam7owk.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtolower', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmtxvk7w5.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('floatval', $grades));\n  $grades = array_map('round', array_map('intval',\
    \ $grades));\n  $grades = array_map('round', array_map('strval', $grades));\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map('strval', $grades);\n  $grades = array_map('strval', $grades);\n\
    \  $grades = array_map\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpilul9rrr.php on line 66\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades_array\
    \ = array(\n    4.0 => 'A+',\n    3.7 => 'A',\n    3.3 => 'A-',\n    3.0 => 'B+',\n\
    \    2.7 => 'B',\n    2.3 => 'B-',\n    2.0 => 'C+',\n    1.7 => 'C',\n    1.3\
    \ => 'C-',\n    1.0 => 'D+',\n    0.7 => 'D',\n    0.0 => 'D-',\n    0.0 => 'E',\n\
    \  );\n  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \  $grades_array = array_flip($grades_array);\n  $grades_array = array_flip($grades_array);\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphvyuhho3.php on line 85\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strtolower', $grades);\n    $grades = array_map('trim',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_map('strlen', $grades);\n    $grades = array_map('strlen',\
    \ $grades);\n    $grades = array_\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp92rn8lev.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv55o87wb.php on line 92\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('array_sum', $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a * $a;'), $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades\
    \ = array_map('array_map', create_function('$a','return $a / $a;'), $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a / $a;'), $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades\
    \ = array_map('array_map', create_function('$a','return $a / $a;'), $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a / $a;'), $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades\
    \ = array_map('array_map', create_function('$a','return $a / $a;'), $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a / $a;'), $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ $a / $a;'), $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades\
    \ = array_map('array_map', create_function('$a','return $a / $a;'), $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a / $a;'), $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$a','return\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo5kucbwk.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_diff',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpx4mst66e.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_ttx52_0.php on line 92\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_filter($grades);\n\
    \  $grades = array_map('round', $grades);\n  $grades = array_map('intval', $grades);\n\
    \  $grades = array_map('array_sum', $grades);\n  $grades = array_map('array_map',\
    \ create_function('$item', 'return $item >= 4.0 ? \"A+\" : $item >= 3.7 ? \"A\"\
    \ : $item >= 3.3 ? \"A-\" : $item >= 3.0 ? \"B+\" : $item >= 2.7 ? \"B\" : $item\
    \ >= 2.3 ? \"B-\" : $item >= 2.0 ? \"C+\" : $item >= 1.7 ? \"C\" : $item >= 1.3\
    \ ? \"C-\" : $item >= 1.0 ? \"D+\" : $item >= 0.7 ? \"D\" : $item >= 0.0 ? \"\
    D-\" : \"E';\"), $grades);\n  return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7x1o8ohl.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade >= 4.0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 3.7 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_map(function($grade) {\n        return $grade >= 3.3 ? $grade : 0.0;\n\
    \    }, $grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade >= 3.0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 2.7 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_map(function($grade) {\n        return $grade >= 2.3 ? $grade : 0.0;\n\
    \    }, $grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade >= 2.0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 1.7 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_map(function($grade) {\n        return $grade >= 1.3 ? $grade : 0.0;\n\
    \    }, $grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade >= 1.0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 0.7 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_map(function($grade) {\n        return $grade >= 0.3 ? $grade : 0.0;\n\
    \    }, $grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade >= 0.0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 0.0 ? 'D-' : 'D+';\n    }, $grades);\n    $grades\
    \ = array_map(function($grade) {\n        return $grade >= 0.0 ? 'D+' : 'D-';\n\
    \    }, $grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade >= 0.0 ? 'D' : 'C';\n    }, $grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade >= 0.0 ? 'C' : 'B';\n    }, $grades);\n    $grades\
    \ = array_map(function(\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpht2fddw5.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxctdf53u.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n  $grades = array_map('round',\
    \ array_map('floatval', $grades));\n  $grades = array_map('intval', $grades);\n\
    \  $grades = array_map('array_sum', $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a * $a;'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a / $a;'), $grades);\n  $grades = array_map('array_map',\
    \ create_function('$a','return $a > 0 ? \"A+\" : \"A-\";'), $grades);\n  $grades\
    \ = array_map('array_map', create_function('$a','return $a > 0 ? \"B+\" : \"B-\"\
    ;'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a > 0 ? \"C+\" : \"C-\";'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a > 0 ? \"D+\" : \"D-\";'), $grades);\n  $grades = array_map('array_map', create_function('$a','return\
    \ $a > 0 ? \"E\" : \"D\";'), $grades);\n  return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmps6qosv1k.php\
    \ on line 26\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmps6qosv1k.php on line 26\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmps6qosv1k.php on line 26\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmps6qosv1k.php on line 26\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmps6qosv1k.php\
    \ on line 26\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmps6qosv1k.php on line 27\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmps6qosv1k.php on line 28\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmps6qosv1k.php\
    \ on line 29\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmps6qosv1k.php on line 30\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmps6qosv1k.php on line 31\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmps6qosv1k.php\
    \ on line 32\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmps6qosv1k.php on line 33\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmps6qosv1k.php:42\nStack trace:\n#0 /tmp/tmps6qosv1k.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps6qosv1k.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_map('intval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('array_sum', $grades);\n \
    \   $grades = array_map('array_map', create_function('$x','return $x>0?\\'A+\\\
    ':\\'A-\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\\'B+\\':\\'B-\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\\'C+\\':\\'C-\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\\'D+\\':\\'D-\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\\'D+\\':\\'D-\\';'), $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x>0?\\'E\\':\\'F\\';'), $grades);\n    return $grades;\n}\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpdzzukr3n.php\
    \ on line 29\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmpdzzukr3n.php on line 29\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmpdzzukr3n.php on line 29\n\nWarning: array_map():\
    \ Expected parameter 2 to be an array, string given in /tmp/tmpdzzukr3n.php on\
    \ line 30\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpdzzukr3n.php on line 31\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpdzzukr3n.php on line 32\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpdzzukr3n.php\
    \ on line 33\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmpdzzukr3n.php on line 34\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmpdzzukr3n.php on line 35\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpdzzukr3n.php:44\nStack trace:\n\
    #0 /tmp/tmpdzzukr3n.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpdzzukr3n.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('round',\
    \ array_map('intval', $grades));\n    $grades = array_map('round', array_map('floatval',\
    \ $grades));\n    $grades = array_map('round', array_map('intval', $grades));\n\
    \    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('round', array_map('intval', $grades));\n    $grades = array_map('round',\
    \ array_map('floatval', $grades));\n    $grades = array_map('round', array_map('intval',\
    \ $grades));\n    $grades = array_map('round', array_map('floatval', $grades));\n\
    \    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('round', array_map('floatval', $grades));\n    $grades = array_map('round',\
    \ array_map('intval', $grades));\n    $grades = array_map('round', array_map('floatval',\
    \ $grades));\n    $grades = array_map('round', array_map('intval', $grades));\n\
    \    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('round', array_map('intval', $grades));\n    $grades = array_map('round',\
    \ array_map('floatval', $grades));\n    $grades = array_map('round', array_map('intval',\
    \ $grades));\n    $grades = array_map('round', array_map('floatval', $grades));\n\
    \    $grades = array_map('round', array_map('intval', $grades));\n    $grades\
    \ = array_map('round', array_map('floatval', $grades));\n    $grades = array_map('round',\
    \ array_map('intval', $grades));\n    $grades = array_map('round', array_map('floatval',\
    \ $grades));\n    $grades = array_map('round', array_map('intval', $grades));\n\
    \    $grades = array_map('round', array_map('floatval', $grades));\n    $grades\
    \ = array_map('round', array_map('intval', $grades));\n    $grades = array_map('round',\
    \ array_map('floatval', $grades));\n    $grades = array_map('round', array_map('intval',\
    \ $grades));\n    $grades = array_map('round', array_map('floatval', $grades));\n\
    \    $grades = array_map('round', array_map('intval', $grades));\n    $grade\n\
    function candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5sptes9d.php on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('strval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('strval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyiu6vgoc.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades_array\
    \ = array(\n        4.0 => 'A+',\n        3.7 => 'A',\n        3.3 => 'A-',\n\
    \        3.0 => 'B+',\n        2.7 => 'B',\n        2.3 => 'B-',\n        2.0\
    \ => 'C+',\n        1.7 => 'C',\n        1.3 => 'C-',\n        1.0 => 'D+',\n\
    \        0.7 => 'D',\n        0.0 => 'D-',\n        0.0 => 'E',\n    );\n    $grades_array\
    \ = array_reverse($grades_array);\n    $grades_array = array_values($grades_array);\n\
    \    $grades_array = array_slice($grades_array, 0, count($grades_array) - 1);\n\
    \    $grades_array = array_merge($grades_array);\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_array = array_merge($grades_array,\
    \ array_fill(0, count($grades_array), 0));\n    $grades_\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpon0gph7d.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_sort', $grades);\n    $grades = array_map('array_reverse',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n    $grades =\
    \ array_map('array_search', $grades);\n    $grades = array_map('array_search',\
    \ $grades);\n    $grades = array_map('array_search', $grades);\n\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwbhc_3v0.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8u44q6u.php:36\n\
    Stack trace:\n#0 /tmp/tmpj8u44q6u.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj8u44q6u.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a<0?\\'D-\\\
    ':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\'C+\\':$a<0?\\'B-\\':$a<0?\\'B+\\':$a<0?\\\
    'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a<0?\\'D-\\':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\\
    'C+\\':$a<0?\\'B-\\':$a<0?\\'B+\\':$a<0?\\'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a<0?\\'D-\\\
    ':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\'C+\\':$a<0?\\'B-\\':$a<0?\\'B+\\':$a<0?\\\
    'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$a','return $a<0?\\'D-\\':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\\
    'C+\\':$a<0?\\'B-\\':$a<0?\\'B+\\':$a<0?\\'A-\\':$a<0?\\'A+\\':\\'E\\';'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$a','return $a<0?\\'D-\\\
    ':$a<0?\\'D+\\':$a<0?\\'C-\\':$a<0?\\'C+\\':$a<0?\\'B-\\':$\nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmporrez7gu.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphi5xlp_i.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_map('strrev', $grades);\n    return $grades;\n}\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6fkg7vnl.php:37\n\
    Stack trace:\n#0 /tmp/tmp6fkg7vnl.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6fkg7vnl.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map(function($grade) {\n       \
    \ return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n    $grades = array_map(function($grade)\
    \ {\n        return $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades\
    \ = array_sum($grades);\n    $grades = array_map(function($grade) {\n        return\
    \ $grade > 0 ? $grade : 0.0;\n    }, $grades);\n    $grades = array_sum($grades);\n\
    \    $grades = array_map(function($grade) {\n        return $grade > 0 ? $grade\
    \ : 0.0;\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvwnd4naj.php on line 92\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'A+\\':($x>0?\\'A-\\':\\'B+\\');'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\\'B+\\\
    ':($x>0?\\'B-\\':\\'C+\\');'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'C+\\':($x>0?\\'C-\\':\\'D+\\');'), $grades);\n\
    \    $grades = array_map('array_map', create_function('$x','return $x>0?\\'D+\\\
    ':($x>0?\\'D-\\':\\'E\\');'), $grades);\n    $grades = array_map('array_map',\
    \ create_function('$x','return $x>0?\\'E\\':\\'F\\');'), $grades);\n    $grades\
    \ = array_map('array_map', create_function('$x','return $x>0?\\'F\\':\\'\\');'),\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmp_c2whos2.php\
    \ on line 26\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmp_c2whos2.php on line 26\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmp_c2whos2.php on line 26\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmp_c2whos2.php on line 26\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmp_c2whos2.php\
    \ on line 26\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmp_c2whos2.php on line 27\n\nWarning: array_map(): Expected parameter\
    \ 2 to be an array, string given in /tmp/tmp_c2whos2.php on line 28\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmp_c2whos2.php\
    \ on line 29\n\nWarning: array_map(): Expected parameter 2 to be an array, string\
    \ given in /tmp/tmp_c2whos2.php on line 30\n\nParse error: syntax error in /tmp/tmp_c2whos2.php(31)\
    \ : runtime-created function on line 1\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_unique($grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strtoupper', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strlen', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('+', '-', '*', '/'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strlen', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('+', '-', '*', '/'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strlen', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('+', '-', '*', '/'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strlen', $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('str_replace',\
    \ array('+', '-', '*', '/'), $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('strlen', $grades);\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('str_replace', array('+', '-', '*', '/'), $grades);\n\
    \    $grades = array_filter($grades);\n    $grades = array_map('strlen', $grades);\n\
    \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqm9p51kl.php on line 80\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_filter($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_unique($grades);\n\
    \    $grades = array_map('chr', $grades);\n    $grades = array_map('strtoupper',\
    \ $grades);\n    return $grades;\n}\n\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: chr() expects parameter 1 to be int, string given in /tmp/tmpffwp35oc.php\
    \ on line 28\n\nWarning: chr() expects parameter 1 to be int, string given in\
    \ /tmp/tmpffwp35oc.php on line 28\n\nWarning: chr() expects parameter 1 to be\
    \ int, string given in /tmp/tmpffwp35oc.php on line 28\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpffwp35oc.php:38\nStack trace:\n#0 /tmp/tmpffwp35oc.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpffwp35oc.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('strval', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_uf5nn65.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp833ptm7l.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_filter($grades);\n    $grades = array_map('round', $grades);\n    $grades\
    \ = array_map('intval', $grades);\n    $grades = array_map('array_sum', $grades);\n\
    \    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n    $grades\
    \ = array_map('array_intersect', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_intersect', $grades);\n\nfunction\
    \ candidate(...$args) {\n    return numerical_letter_grade(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\"\
    , \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwa9223uh.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('floatval', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('round', $grades);\n    $grades = array_map('intval', $grades);\n\
    \    $grades = array_map('strval', $grades);\n    $grades = array_map('strtolower',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_diff', $grades);\n\
    \    $grades = array_map('array_intersect', $grades);\n    $grades = array_map('array_merge',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_count_values',\
    \ $grades);\n    $grades = array_map('array_reverse', $grades);\n    $grades =\
    \ array_map('array_keys', $grades);\n    $grades = array_map('array_values', $grades);\n\
    \    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_fill_keys',\
    \ $grades);\n    $grades = array_map('array_fill_keys', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_reverse', $grades);\n    $grades = array_map('array_keys',\
    \ $grades);\n    $grades = array_map('array_values', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_fill_keys',\
    \ $grades);\n    $grades = array_map('array_fill_keys', $grades);\n    $grades\
    \ = array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_diff', $grades);\n    $grades = array_map('array_intersect',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_sum',\
    \ $grades);\n    $grades = array_map('array_count_values', $grades);\n    $grades\
    \ = array_map('array_reverse', $grades);\n    $grades = array_map('array_keys',\
    \ $grades);\n    $grades = array_map\nfunction candidate(...$args) {\n    return\
    \ numerical_letter_grade(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(4.0,\
    \ 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.2)) !== array(\"D+\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5)) !==\
    \ array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxt61rhub.php on line 66\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_merge', $grades);\n    $grades = \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpab88_59j.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu67ry7_m.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('intval', $grades));\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ array_map('array_unique', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_unique', $grades);\n    $grades =\
    \ array_map('array_filter', $grades);\n    $grades = array_map('array_unique',\
    \ $grades);\n    $grades = array_map('array_filter', $grades);\n    $grades =\
    \ \nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj4w80odr.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', array_map('floatval', $grades));\n    $grades = array_map('intval',\
    \ $grades);\n    $grades = array_map('array_sum', $grades);\n    $grades = array_map('array_filter',\
    \ $grades);\n    $grades = array_map('array_map', create_function('$x','return\
    \ $x<0?\\'D\\':$x<3?\\'C\\':$x<6?\\'B\\':$x<9?\\'A\\':\\'E\\';'), $grades);\n\
    \    return $grades;\n}\n\nfunction candidate(...$args) {\n    return numerical_letter_grade(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !==\
    \ array(\"A+\", \"B\", \"C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.2)) !== array(\"D+\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.5)) !== array(\"D-\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0)) !== array(\"E\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 0.3,\
    \ 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpy2zojs3p.php\
    \ on line 26\n\nWarning: array_sum() expects parameter 1 to be array, int given\
    \ in /tmp/tmpy2zojs3p.php on line 26\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, int given in /tmp/tmpy2zojs3p.php on line 26\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, int given in /tmp/tmpy2zojs3p.php on line 26\n\
    \nWarning: array_sum() expects parameter 1 to be array, int given in /tmp/tmpy2zojs3p.php\
    \ on line 26\n\nWarning: array_filter() expects parameter 1 to be array, null\
    \ given in /tmp/tmpy2zojs3p.php on line 27\n\nWarning: array_filter() expects\
    \ parameter 1 to be array, null given in /tmp/tmpy2zojs3p.php on line 27\n\nWarning:\
    \ array_filter() expects parameter 1 to be array, null given in /tmp/tmpy2zojs3p.php\
    \ on line 27\n\nWarning: array_filter() expects parameter 1 to be array, null\
    \ given in /tmp/tmpy2zojs3p.php on line 27\n\nWarning: array_filter() expects\
    \ parameter 1 to be array, null given in /tmp/tmpy2zojs3p.php on line 27\n\nWarning:\
    \ array_map(): Expected parameter 2 to be an array, string given in /tmp/tmpy2zojs3p.php\
    \ on line 28\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2zojs3p.php:37\n\
    Stack trace:\n#0 /tmp/tmpy2zojs3p.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpy2zojs3p.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// It is the last week of the semester and the teacher has to give\
    \ the grades\n// to students. The teacher has been making her own algorithm for\
    \ grading.\n// The only problem is, she has lost the code she used for grading.\n\
    // She has given you a list of GPAs for some students and you have to write \n\
    // a function that can output a list of letter grades using the following table:\n\
    // GPA       |    Letter grade\n// 4.0                A+\n// > 3.7           \
    \     A \n// > 3.3                A- \n// > 3.0                B+\n// > 2.7  \
    \              B \n// > 2.3                B-\n// > 2.0                C+\n//\
    \ > 1.7                C\n// > 1.3                C-\n// > 1.0               \
    \ D+ \n// > 0.7                D \n// > 0.0                D-\n// 0.0        \
    \        E\n// Example:\n// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B',\
    \ 'C-', 'C', 'A-']\nfunction numerical_letter_grade($grades) {\n    $grades =\
    \ array_map('round', $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_unique($grades);\n    $grades = array_map('intval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strval', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('strlen', $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('str_replace', array('+',\
    \ '-', '*', '/'), $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), $grades);\n    $grades\
    \ = array_filter($grades);\n    $grades = array_map('str_replace', array('E',\
    \ 'd', 'c', 'b', 'a'), $grades);\n    $grades = array_filter($grades);\n    $grades\
    \ = array_map('str_replace', array('E', 'd', 'c', 'b', 'a'), \nfunction candidate(...$args)\
    \ {\n    return numerical_letter_grade(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(\"A+\", \"B\", \"\
    C-\", \"C\", \"A-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.2))\
    \ !== array(\"D+\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.5))\
    \ !== array(\"D-\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== array(\"E\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 0.3, 1.5, 2.8, 3.3)) !== array(\"D\", \"D-\", \"C-\", \"B\", \"B+\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0, 0.7)) !== array(\"\
    E\", \"D-\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbcbrk83t.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception

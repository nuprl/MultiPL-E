name: HumanEval_18_how_many_times
language: php
results:
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcfyufoca.php:33\n\
    Stack trace:\n#0 /tmp/tmpcfyufoca.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcfyufoca.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($string);\n    $substringLength = strlen($substring);\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        if (strpos($string, $substring, $i) !== false)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hefq2l7.php:26\n\
    Stack trace:\n#0 /tmp/tmp9hefq2l7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9hefq2l7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8hn507h.php:33\n\
    Stack trace:\n#0 /tmp/tmpz8hn507h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz8hn507h.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30bq04eg.php:33\n\
    Stack trace:\n#0 /tmp/tmp30bq04eg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp30bq04eg.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = preg_match_all('/'\
    \ . preg_quote($substring, '/') . '/i', $string, $matches);\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnc4iph0h.php:21\n\
    Stack trace:\n#0 /tmp/tmpnc4iph0h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnc4iph0h.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6n_yh9ap.php:24\n\
    Stack trace:\n#0 /tmp/tmp6n_yh9ap.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6n_yh9ap.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = 0;\n    for ($i = 0; $i < $count; $i++) {\n   \
    \     $overlapping += substr_count($string, $substring, $i);\n    }\n    return\
    \ $overlapping / $count;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't seem to\
    \ work when there are multiple occurrences of the substring in the string. For\
    \ example: `how_many_times('aaa', 'a')` returns `1` instead of `3`.\n<|/ c |>\n\
    <| c |>\nI fixed the bug, now it works fine.\n<|/ c |>\n<| a dscore=2 |>\nThe\
    \ most efficient way is to use preg_match_all and preg_replace:\n<code>\n$string\
    \ = 'aaa';\n$pattern = '/a+/';\n$replacement = 'a';\necho preg_replace($pattern,\
    \ $replacement, $string);\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't\
    \ seem to work when there are multiple occurrences of the substring in the string.\
    \ For example: `how_many_times('aaa', 'a')` returns `1` instead of `3`.\n<|/ c\
    \ |>\n<| a dscore=2 |>\n<code>\n$string = 'aaa';\n$pattern = '/a+/';\n$replacement\
    \ = 'a';\necho preg_replace($pattern, $replacement, $string);\n</code>\n<|/ a\
    \ tags=php,string |>\n<| a |>\n<code>\n$string = 'aaa';\n$pattern = '/a+/';\n\
    $replacement = 'a';\necho preg_replace($pattern, $replacement, $string);\n</code>\n\
    <|/ a tags=php,string dscore=1 |>\n<| c |>\nThis doesn't seem to work when there\
    \ are multiple occurrences of the substring in the string. For example: `how_many_times('aaa',\
    \ 'a')` returns `1` instead of `3`.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n\
    $string = 'aaa';\n$pattern = '/a+/';\n$replacement = 'a';\necho preg_replace($pattern,\
    \ $replacement, $string);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,string |>\n\
    <code>\n$string = 'aaa';\n$pattern = '/a+/';\n$replacement = 'a';\necho preg_replace($pattern,\
    \ $replacement, $string);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,string |>\n\
    <code>\n$string = 'aa\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpmn_vqem_.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \            $i += $sublen;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1sx7stis.php:29\n\
    Stack trace:\n#0 /tmp/tmp1sx7stis.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1sx7stis.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count == 0) {\n        return 0;\n    }\n    $overlap\
    \ = 0;\n    $last_index = 0;\n    for ($i = 0; $i < $count; $i++) {\n        $index\
    \ = strpos($string, $substring, $last_index);\n        if ($index === false) {\n\
    \            return 0;\n        }\n        $last_index = $index + strlen($substring);\n\
    \        $overlap++;\n    }\n    return $overlap;\n}\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nI like this solution, but I believe it can be improved by using\
    \ strpos() instead of strstr().\n<|/ c |>\n<| c |>\nThis solution doesn't take\
    \ into account the case where the substring appears multiple times in the original\
    \ string. For example, `how_many_times('aaaa', 'aa')` returns `3` instead of `2`.\n\
    <|/ c |>\n<| c |>\nI believe it can be improved by using strpos() instead of strstr()\n\
    <|/ c |>\n<| c |>\nThis solution doesn't take into account the case where the\
    \ substring appears multiple times in the original string. For example, `how_many_times('aaaa',\
    \ 'aa')` returns `3` instead of `2`.\n<|/ c |>\n<| c |>\nThis solution doesn't\
    \ take into account the case where the substring appears multiple times in the\
    \ original string. For example, `how_many_times('aaaa', 'aa')` returns `3` instead\
    \ of `2`.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'aaaaaaa';\n$substring\
    \ = 'aa';\n$count = substr_count($string, $substring);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis solution doesn't take into account the case where the substring\
    \ appears multiple times in the original string. For example, `how_many_times('aaaa',\
    \ 'aa')` returns `3` instead of `2`.\n<|/ c |>\n<| c |>\nThis solution doesn't\
    \ take into account the case where the substring appears multiple times in the\
    \ original string. For example, `how_many_times('aaaa', 'aa')` returns `3` instead\
    \ of `2`.\n<|/ c |>\n<| c |>\nThis solution doesn't take into account the case\
    \ where the substring appears multiple times in the original string. For example,\
    \ `how_many_times('aaaa', 'aa')` returns `3` instead of `2`.\n<|/ c |>\n<| c |>\n\
    This \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpsqo56sr5.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14tn8nlr.php:25\n\
    Stack trace:\n#0 /tmp/tmp14tn8nlr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp14tn8nlr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count == 0) {\n        return 0;\n    }\n    $count =\
    \ min($count, strlen($string) - strlen($substring));\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0qw0hc0.php:25\n\
    Stack trace:\n#0 /tmp/tmpw0qw0hc0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw0qw0hc0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp754aac_b.php:33\n\
    Stack trace:\n#0 /tmp/tmp754aac_b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp754aac_b.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            $count++;\n            $pos\
    \ = strlen($string);\n        } else {\n            $count++;\n            $pos\
    \ = $pos + 1;\n        }\n    }\n    return $count;\n}\n</code>\n<|/ a tags=php,string,substring\
    \ |>\n<| c |>\nThis doesn't work if $substring is a substring of $string. For\
    \ example, if $string = 'aaaaa' and $substring = 'aa', the function returns 2,\
    \ when it should be 3.\n<|/ c |>\n<| c |>\n: I updated my answer to handle that\
    \ case as well.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works perfectly\
    \ for me. Just one question, what is the purpose of $pos++ in the while loop?\n\
    <|/ c |>\n<| c |>\n: I added some explanation to my answer.\n<|/ c |>\n<| a tags=php,string,substring\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp5n0oyjtl.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph4v9j3nt.php:33\n\
    Stack trace:\n#0 /tmp/tmph4v9j3nt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmph4v9j3nt.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppq_3oa36.php:27\n\
    Stack trace:\n#0 /tmp/tmppq_3oa36.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppq_3oa36.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($string);\n    $substringLength = strlen($substring);\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        if ($string[$i] === $substring[0]) {\n   \
    \         for ($j = 1; $j < $substringLength; $j++) {\n                if ($string[$i\
    \ + $j] !== $substring[$j]) {\n                    break;\n                }\n\
    \            }\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I tried your code,\
    \ but I got this error `Fatal error: Call to undefined function strpos()`\n<|/\
    \ c |>\n<| c |>\nSorry, I forgot to include `strpos` in the code. I've updated\
    \ my answer.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works fine\
    \ for small strings, but when I tried it on large strings, it took too long to\
    \ finish. Do you have any idea to make it faster?\n<|/ c |>\n<| c |>\nI tested\
    \ it on large strings and it took about 2 seconds to finish. Are you sure you\
    \ copied the code correctly? I tested it on PHP 5.6.30\n<|/ c |>\n<| c |>\nYes,\
    \ I copied the code correctly. Maybe the problem is the size of my strings. I\
    \ tested it on strings about 5000 characters and it took about 2 minutes to finish.\n\
    <|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'abcabc';\n$substring = 'abc';\n\
    $count = substr_count($string, $substring);\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=php,string |>\n<code>\n<?php\n$string = 'abcabc';\n$substring = 'abc';\n\
    $count = substr_count($string, $substring);\necho $count;\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmps4efwlp7.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n</code>\n<|/\
    \ a tags=php,string |>\n<| c |>\nThis doesn't work if the substring occurs more\
    \ than once in the original string. Try it with `how_many_times('aaaa', 'aa')`.\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't require the substring to occur\
    \ more than once.\n<|/ c |>\n<| c |>\nThis doesn't work if the substring occurs\
    \ more than once in the original string. Try it with `how_many_times('aaaa', 'aa')`.\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't require the substring to occur\
    \ more than once.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'aaaaaaa';\n\
    $substring = 'aa';\n$pos = strpos($string, $substring);\n$count = strlen($string)\
    \ - $pos;\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis doesn't work if the substring\
    \ occurs more than once in the original string. Try it with `how_many_times('aaaa',\
    \ 'aa')`.\n<|/ c |>\n<| c |>\nI added a solution that doesn't require the substring\
    \ to occur more than once.\n<|/ c |>\n<| a dscore=3 |>\n<code>\n$string = 'aaaaaaa';\n\
    $substring = 'aa';\n$pos = strpos($string, $substring);\n$count = strlen($string)\
    \ - $pos;\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't work if the\
    \ substring occurs more than once in the original string. Try it with `how_many_times('aaaa',\
    \ 'aa')`.\n<|/ c |>\n<| a dscore=3 |>\n<code>\n$string = 'aaaaaaa';\n$substring\
    \ = 'aa';\n$pos = strpos($string, $substring);\n$count = strlen($string) - $pos;\n\
    </code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't work if the substring\
    \ occurs more than once in the original string. Try it with `how_many_times('aaaa',\
    \ 'aa')`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$string = 'aaaaaaa';\n$substring\
    \ = 'aa';\n$pos = \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpvksfs3_4.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjygadlva.php:32\n\
    Stack trace:\n#0 /tmp/tmpjygadlva.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjygadlva.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi414cx53.php:33\n\
    Stack trace:\n#0 /tmp/tmpi414cx53.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi414cx53.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppizb3ryz.php:33\n\
    Stack trace:\n#0 /tmp/tmppizb3ryz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppizb3ryz.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwho_cfhm.php:25\n\
    Stack trace:\n#0 /tmp/tmpwho_cfhm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwho_cfhm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpni7ibdvu.php:33\n\
    Stack trace:\n#0 /tmp/tmpni7ibdvu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpni7ibdvu.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = 0;\n    for($i = 0; $i < $count; $i++) {\n    \
    \    $overlap = substr_count($string, $substring, $i);\n        if($overlap >\
    \ 0) {\n            break;\n        }\n    }\n    return $overlap;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp08ugel2i.php:28\n\
    Stack trace:\n#0 /tmp/tmp08ugel2i.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp08ugel2i.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \            $i += $sublen;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl1y6ft.php:29\n\
    Stack trace:\n#0 /tmp/tmp8yl1y6ft.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8yl1y6ft.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \            $i += $sublen;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2io9rem.php:29\n\
    Stack trace:\n#0 /tmp/tmpa2io9rem.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa2io9rem.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6f4tvvx2.php:33\n\
    Stack trace:\n#0 /tmp/tmp6f4tvvx2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6f4tvvx2.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \            $i += $sublen;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphjaxnq__.php:29\n\
    Stack trace:\n#0 /tmp/tmphjaxnq__.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphjaxnq__.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            break;\n        }\n     \
    \   $count++;\n        $pos++;\n    }\n    return $count;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThanks for your answer! I really appreciate it! I used your function\
    \ and modified it a little bit to fit my needs. I added a little bit of explanation\
    \ to the code so you can understand it better. Thanks again!\n<|/ c |>\n<| c |>\n\
    No problem! Glad you found it useful.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n\
    $string = \"Hello World\";\n$search = \"World\";\n$pos = strpos($string, $search);\n\
    if ($pos !== false) {\n    echo \"Found at position: \" . $pos;\n} else {\n  \
    \  echo \"Not found\";\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp_x3zvvfo.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n</code>\n<|/ a tags=php,string |>\n\
    <| a tags=php,string |>\n<code>\n$string = \"Hello World\";\n$substring = \"World\"\
    ;\n$count = substr_count($string, $substring);\n</code>\n<|/ a dscore=5 |>\n<|\
    \ c |>\nThis should be the accepted answer. Simple and effective.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Simple and effective.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Simple and effective.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Simple and effective.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Simple and effective.\n<|/ c |>\n\
    <| a tags=php,string |>\n<code>\n$string = \"Hello World\";\n$substring = \"World\"\
    ;\n$count = substr_count($string, $substring);\n</code>\n<|/ a dscore=5 |>\n<|\
    \ c |>\nThis should be the accepted answer. Simple and effective.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Simple and effective.\n<|/ c |>\n\
    <| a tags=php,string |>\n<code>\n$string = \"Hello World\";\n$substring = \"World\"\
    ;\n$count = substr_count($string, $substring);\n</code>\n<|/ a dscore=5 |>\n<|\
    \ c |>\nThis should be the accepted answer. Simple and effective.\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\n$string = \"Hello World\";\n$substring = \"World\";\n\
    $count = substr_count($string, $substring);\n</code>\n<|/ a tags=php,string |>\n\
    <| a tags=php,string |>\n<code>\n$string = \"Hello World\";\n$substring = \"World\"\
    ;\n$count = substr_count($string, $substring);\n</code>\n<|/ a dscore=5 |>\n<|\
    \ a tags=php,string |>\n<code>\n$string = \"Hello World\";\n$substring = \"World\"\
    ;\n$count = substr_count($string, $\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdjp2lojf.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoijnn1r5.php:33\n\
    Stack trace:\n#0 /tmp/tmpoijnn1r5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpoijnn1r5.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = 0;\n    foreach (str_split($string) as $char) {\n\
    \        if ($char === $substring) {\n            $overlap++;\n        } else\
    \ {\n            $overlap = 0;\n        }\n        if ($overlap > 0) {\n     \
    \       $count--;\n        }\n    }\n    return $count;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't work if you have a string like \"aba\" and want to\
    \ find how many times \"a\" occurs in that string. Your function will return 2\
    \ instead of 1.\n<|/ c |>\n<| c |>\nThis doesn't work if you have a string like\
    \ \"aba\" and want to find how many times \"a\" occurs in that string. Your function\
    \ will return 2 instead of 1.\n<|/ c |>\n<| c |>\nThis doesn't work if you have\
    \ a string like \"aba\" and want to find how many times \"a\" occurs in that string.\
    \ Your function will return 2 instead of 1.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if you have a string like \"aba\" and want to find how many times \"a\" occurs\
    \ in that string. Your function will return 2 instead of 1.\n<|/ c |>\n<| c |>\n\
    This doesn't work if you have a string like \"aba\" and want to find how many\
    \ times \"a\" occurs in that string. Your function will return 2 instead of 1.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$string = \"aba\";\n$search = \"a\";\n$count\
    \ = substr_count($string, $search);\n</code>\n<|/ a tags=php,string |>\n<| c |>\n\
    This doesn't work if you have a string like \"aba\" and want to find how many\
    \ times \"a\" occurs in that string. Your function will return 2 instead of 1.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if you have a string like \"aba\" and want\
    \ to find how many times \"a\" occurs in that string. Your function will return\
    \ 2 instead of 1.\n<|/ c |>\n<| c |>\nThis doesn't work if you have a string like\
    \ \"aba\" and want to find how many times \"a\" occurs in that string. Your function\
    \ will return 2 instead of 1.\n<|/ c |>\n<| c |>\nThis doesn't work if you have\
    \ a string like \"aba\" and want to find how many times \"a\" occurs in that string.\
    \ Your function will return 2 instead of 1.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if you have a string like \"aba\" and want to find how many times \"\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxc250obk.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count > 0) {\n        $count = min($count, how_many_times($string,\
    \ $substring . 'a'));\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwcqzv62t.php:22\n\
    Stack trace:\n#0 /tmp/tmpwcqzv62t.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwcqzv62t.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = 0;\n    foreach (str_split($string) as $char) {\n\
    \        if ($char == $substring) {\n            $overlap++;\n        }\n    \
    \    if ($overlap == $count) {\n            return $count;\n        }\n    }\n\
    \    return $count;\n}\n</code>\n<|/ a tags=php,string,algorithm |>\n<| a tags=php,string,algorithm\
    \ |>\n<code>\n<?php\n$string = 'aaa';\n$search = 'a';\n$count = 0;\n$len = strlen($string);\n\
    for ($i = 0; $i < $len; $i++) {\n    if ($string[$i] == $search) {\n        $count++;\n\
    \    }\n}\necho $count;\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,string,algorithm\
    \ |>\n<code>\n<?php\n$string = 'aaa';\n$search = 'a';\n$count = 0;\n$len = strlen($string);\n\
    for ($i = 0; $i < $len; $i++) {\n    if ($string[$i] == $search) {\n        $count++;\n\
    \    }\n}\necho $count;\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$string = 'aaa';\n$search = 'a';\n$count = 0;\n$len = strlen($string);\n\
    for ($i = 0; $i < $len; $i++) {\n    if ($string[$i] == $search) {\n        $count++;\n\
    \    }\n}\necho $count;\n</code>\n<|/ a tags=php,string,algorithm |>\n<| a tags=php,string,algorithm\
    \ |>\n<code>\n<?php\n$string = 'aaa';\n$search = 'a';\n$count = 0;\n$len = strlen($string);\n\
    for ($i = 0; $i < $len; $i++) {\n    if ($string[$i] == $search) {\n        $count++;\n\
    \    }\n}\necho $count;\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,string,algorithm\
    \ |>\n<code>\n<?php\n$string = 'aaa';\n$search = 'a';\n$count = 0;\n$len = strlen($string);\n\
    for ($i = 0; $i < $len; $i++) {\n    if ($string[$i] == $search) {\n        $count++;\n\
    \    }\n}\necho $count;\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$string = 'aaa';\n$search = 'a';\n$count = 0;\n$len = strlen($\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpscbbu9jp.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = preg_match_all('/'\
    \ . preg_quote($substring, '/') . '/i', $string, $matches);\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ghi3bp2.php:21\n\
    Stack trace:\n#0 /tmp/tmp8ghi3bp2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8ghi3bp2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work if the substring appears more than once in the string.\n<|/ c |>\n<| c\
    \ |>\nIt does work, if you read the code carefully. It counts how many times the\
    \ substring appears in the original string. `how_many_times('aaaa', 'aa')` returns\
    \ `3`.\n<|/ c |>\n<| c |>\nYes, it does. But it also counts how many times the\
    \ substring appears in the original string. `how_many_times('aaaa', 'aa')` returns\
    \ `3`.\n<|/ c |>\n<| c |>\nYes, it does. But it also counts how many times the\
    \ substring appears in the original string. `how_many_times('aaaa', 'aa')` returns\
    \ `3`.\n<|/ c |>\n<| c |>\nYes, it does. But it also counts how many times the\
    \ substring appears in the original string. `how_many_times('aaaa', 'aa')` returns\
    \ `3`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n<?php\n$string = \"aaa\";\n$substring\
    \ = \"aa\";\n$count = substr_count($string, $substring);\necho $count;\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpywptzwzf.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1mp02ky.php:20\n\
    Stack trace:\n#0 /tmp/tmpl1mp02ky.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpl1mp02ky.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            break;\n        }\n     \
    \   $count++;\n        $pos++;\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr3ugs_tf.php:25\n\
    Stack trace:\n#0 /tmp/tmpr3ugs_tf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpr3ugs_tf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] === $substring[$j]) {\n      \
    \              $count++;\n                    $i += $sublen - $j;\n          \
    \          break;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzd8lo6ez.php:33\n\
    Stack trace:\n#0 /tmp/tmpzd8lo6ez.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzd8lo6ez.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count > 0) {\n        $count = min($count, how_many_times($string,\
    \ substr($string, 0, $count - 1)));\n    }\n    return $count;\n}\n</code>\n<|/\
    \ a tags=php,string |>\n<| c |>\nThis doesn't work when `$string = 'aaa';` and\
    \ `$substring = 'aa';`\n<|/ c |>\n<| c |>\nIt does work. `how_many_times('aaa',\
    \ 'aa')` returns `3`. `how_many_times('aaaa', 'aa')` returns `3`.\n<|/ c |>\n\
    <| c |>\nYes, it does. But it also returns `3` for `how_many_times('aaaa', 'aaa')`.\
    \ That's not what the OP asked for.\n<|/ c |>\n<| c |>\nYes, it does. But it also\
    \ returns `3` for `how_many_times('aaaa', 'aaa')`. That's not what the OP asked\
    \ for.\n<|/ c |>\n<| c |>\nYes, it does. But it also returns `3` for `how_many_times('aaaa',\
    \ 'aaa')`. That's not what the OP asked for.\n<|/ c |>\n<| a tags=php,string |>\n\
    <code>\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpcoyy4wk3.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpke_l5aac.php:27\n\
    Stack trace:\n#0 /tmp/tmpke_l5aac.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpke_l5aac.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjtf_4eed.php:27\n\
    Stack trace:\n#0 /tmp/tmpjtf_4eed.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjtf_4eed.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsik25zal.php:33\n\
    Stack trace:\n#0 /tmp/tmpsik25zal.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsik25zal.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) === $i) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$string = \"aaa\";\n$substring = \"a\";\n$count = substr_count($string,\
    \ $substring);\necho $count;\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp2o_fa6w8.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw8aid8_.php:27\n\
    Stack trace:\n#0 /tmp/tmpkw8aid8_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkw8aid8_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_w0vgz1.php:33\n\
    Stack trace:\n#0 /tmp/tmp7_w0vgz1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7_w0vgz1.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            $count++;\n        }\n  \
    \      $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv36ncygz.php:28\n\
    Stack trace:\n#0 /tmp/tmpv36ncygz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv36ncygz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count +=\
    \ $j - 1;\n            $i += $j;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpln2149lv.php:33\n\
    Stack trace:\n#0 /tmp/tmpln2149lv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpln2149lv.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5y0_gffi.php:32\n\
    Stack trace:\n#0 /tmp/tmp5y0_gffi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5y0_gffi.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9d40kpa.php:25\n\
    Stack trace:\n#0 /tmp/tmpt9d40kpa.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpt9d40kpa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count === 0) {\n        return 0;\n    }\n    $count\
    \ = 0;\n    $pos = 0;\n    while ($pos < strlen($string)) {\n        $pos = strpos($string,\
    \ $substring, $pos);\n        if ($pos === false) {\n            $count++;\n \
    \       }\n        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8urxuk63.php:32\n\
    Stack trace:\n#0 /tmp/tmp8urxuk63.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8urxuk63.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsguzrknv.php:25\n\
    Stack trace:\n#0 /tmp/tmpsguzrknv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsguzrknv.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkiu6s_jy.php:32\n\
    Stack trace:\n#0 /tmp/tmpkiu6s_jy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkiu6s_jy.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like this\
    \ solution, it's simple and easy to understand.\n<|/ c |>\n<| a dscore=2 |>\n\
    This should work:\n<code>\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpt86phn5g.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($string);\n    $substringLength = strlen($substring);\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        if (strpos($string, $substring, $i) !== false)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n</code>\n\
    <|/ a tags=php,string |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post.\n<|/ c |>\n<| c |>\nI believe this does answer the question. He wants\
    \ to know how many times a substring appears in a string. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appears in multiple strings. He also wants to know\
    \ how many times a substring appear\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp243ycftw.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_s19a3m1.php:25\n\
    Stack trace:\n#0 /tmp/tmp_s19a3m1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_s19a3m1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($string);\n    $substringLength = strlen($substring);\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        if (strpos($string, $substring, $i) !== false)\
    \ {\n            $count++;\n            $i += $substringLength;\n        }\n \
    \   }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ql3jcuy.php:29\n\
    Stack trace:\n#0 /tmp/tmp0ql3jcuy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0ql3jcuy.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        if (substr($string, $pos, strlen($substring))\
    \ === $substring) {\n            $count++;\n        }\n        $pos++;\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29os39zs.php:33\n\
    Stack trace:\n#0 /tmp/tmp29os39zs.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp29os39zs.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count > 0) {\n        $count = min($count, how_many_times($string,\
    \ substr($string, 0, strrpos($string, $substring) + 1)));\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 262144 bytes) in /tmp/tmpdha1wr_o.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count == 0) {\n        return 0;\n    }\n    $count =\
    \ min($count, strlen($string) - strlen($substring));\n    $count = 0;\n    for\
    \ ($i = 0; $i < $count; $i++) {\n        $count += substr_count($string, $substring,\
    \ $i);\n    }\n    return $count;\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis\
    \ doesn't work if $substring is a substring of $string. For example, how_many_times('aaaa',\
    \ 'aa') returns 2, when it should be 1.\n<|/ c |>\n<| c |>\n: I fixed the bug,\
    \ thanks for pointing it out. Now it works as expected.\n<|/ c |>\n<| c |>\n:\
    \ I added a more efficient solution that doesn't use any loops.\n<|/ c |>\n<|\
    \ c |>\n: I added a more efficient solution that doesn't use any loops.\n<|/ c\
    \ |>\n<| c |>\n: I added a more efficient solution that doesn't use any loops.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphsqnfvw7.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxgua4ry.php:33\n\
    Stack trace:\n#0 /tmp/tmpxxgua4ry.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxxgua4ry.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt54kix5.php:33\n\
    Stack trace:\n#0 /tmp/tmpnt54kix5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnt54kix5.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = preg_match_all('/'\
    \ . $substring . '/', $string, $matches);\n    return $count;\n}\n</code>\n<|/\
    \ a |>\n<| c |>\nThis doesn't work if you have a string like `'aaaa aaaa'`\n<|/\
    \ c |>\n<| c |>\n: It does work. Try it yourself with `'aaaa aaaa'`.\n<|/ c |>\n\
    <| c |>\n: It does work. Try it yourself with `'aaaa aaaa'`.\n<|/ c |>\n<| c |>\n\
    : It does work. Try it yourself with `'aaaa aaaa'`.\n<|/ c |>\n<| c |>\n: It does\
    \ work. Try it yourself with `'aaaa aaaa'`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    $string = 'aaaa aaaa';\n$pattern = 'a';\n$count = substr_count($string, $pattern);\n\
    </code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n$string =\
    \ 'aaaa aaaa';\n$pattern = 'a';\n$count = substr_count($string, $pattern);\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$string = 'aaaa aaaa';\n$pattern\
    \ = 'a';\n$count = substr_count($string, $pattern);\n</code>\n<|/ a tags=php,string\
    \ |>\n<| a dscore=2 |>\n<code>\n$string = 'aaaa aaaa';\n$pattern = 'a';\n$count\
    \ = substr_count($string, $pattern);\n</code>\n<|/ a tags=php,string |>\n<| a\
    \ |>\n<code>\n$string = 'aaaa aaaa';\n$pattern = 'a';\n$count = substr_count($string,\
    \ $pattern);\n</code>\n<|/ a dscore=1 tags=php,string |>\n<| a dscore=1 |>\n<code>\n\
    $string = 'aaaa aaaa';\n$pattern = 'a';\n$count = substr_count($string, $pattern);\n\
    </code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n$string =\
    \ 'aaaa aaaa';\n$pattern = 'a';\n$count = substr_count($string, $pattern);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,string |>\n<code>\n$string\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp36eeotzt.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($string);\n    $substringLength = strlen($substring);\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        if (substr($string, $i, $substringLength)\
    \ === $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't work when there are\
    \ multiple occurrences of the substring in the string. Try `how_many_times('aaaa',\
    \ 'aa')`\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it before you commented\
    \ :) Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI added a solution that doesn't\
    \ require a loop.\n<|/ c |>\n<| c |>\nI added a solution that doesn't require\
    \ a loop.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'aaa';\n$substr\
    \ = 'a';\n$count = substr_count($string, $substr);\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis doesn't work when there are multiple occurrences of the substring\
    \ in the string. Try `substr_count('aaaa', 'aa')`\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work when there are multiple occurrences of the substring in the string. Try\
    \ `substr_count('aaaa', 'aa')`\n<|/ c |>\n<| c |>\nThis doesn't work when there\
    \ are multiple occurrences of the substring in the string. Try `substr_count('aaaa',\
    \ 'aa')`\n<|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'aaa';\n$substr\
    \ = 'a';\n$count = substr_count($string, $substr);\n</code>\n<|/ a dscore=5 |>\n\
    <| c |>\nThis doesn't work when there are multiple occurrences of the substring\
    \ in the string. Try `substr_count('aaaa', 'aa')`\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work when there are multiple occurrences of the substring in the string. Try\
    \ `substr_count('aaaa', 'aa')`\n<|/ c |>\n<| a tags=php,string |>\n<code>\n$string\
    \ = 'aaa';\n$substr = 'a';\n$count = substr_count($string, $substr);\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis doesn't work when there are multiple occurrences\
    \ of the substring in the string. Try `substr_count('\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjz5nw_3w.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\n</code>\n\
    <|/ a tags=php,string |>\n<| c |>\nThis doesn't seem to work when `$string` is\
    \ empty. `how_many_times('', 'a')` returns `0`, not `1`.\n<|/ c |>\n<| c |>\n\
    Yes, you're right. I didn't think about that. I'll fix it.\n<|/ c |>\n<| a tags=php,string\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp_bdllt7w.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fqc8l_z.php:27\n\
    Stack trace:\n#0 /tmp/tmp_fqc8l_z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_fqc8l_z.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc325pyfs.php:25\n\
    Stack trace:\n#0 /tmp/tmpc325pyfs.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpc325pyfs.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqzwwxaq.php:33\n\
    Stack trace:\n#0 /tmp/tmpiqzwwxaq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpiqzwwxaq.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count > 0) {\n        return $count;\n    }\n    $count\
    \ = substr_count($string, $substring, -1);\n    if ($count > 0) {\n        return\
    \ $count;\n    }\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: substr_count(): Offset not contained in string in /tmp/tmp9gn5cnm_.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gn5cnm_.php:28\n\
    Stack trace:\n#0 /tmp/tmp9gn5cnm_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9gn5cnm_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis\
    \ doesn't seem to work. Try it with `how_many_times('aaaa', 'aa')`\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I added the function to the answer.\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works. I added the function to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the function to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the function to the answer.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n$string = 'aaaaaaa';\n$substring = 'aa';\n\
    $count = substr_count($string, $substring);\n</code>\n<|/ a tags=php,string |>\n\
    <| c |>\nThis doesn't seem to work. Try it with `substr_count('aaaaaaa', 'aa')`\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the function to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the function to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the function to the answer.\n\
    <|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'aaaaaaa';\n$substring =\
    \ 'aa';\n$count = substr_count($string, $substring);\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't seem to work. Try it with `substr_count('aaaaaaa',\
    \ 'aa')`\n<|/ c |>\n<| c |>\nI tested it and it works. I added the function to\
    \ the answer.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n$string = 'aaaaaaa';\n$substring\
    \ = 'aa';\n$count = substr_count($string, $substring);\n</code>\n<|/ a tags=php,string\
    \ |>\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmprihj1fw_.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_kyf3tsa.php:27\n\
    Stack trace:\n#0 /tmp/tmp_kyf3tsa.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_kyf3tsa.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjib4xelh.php:32\n\
    Stack trace:\n#0 /tmp/tmpjib4xelh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjib4xelh.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp714ns9eo.php:33\n\
    Stack trace:\n#0 /tmp/tmp714ns9eo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp714ns9eo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx74izlzy.php:27\n\
    Stack trace:\n#0 /tmp/tmpx74izlzy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpx74izlzy.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] === $substring[$j]) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jytz8fl.php:31\n\
    Stack trace:\n#0 /tmp/tmp7jytz8fl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7jytz8fl.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \            $i += $sublen;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qdbtw8e.php:29\n\
    Stack trace:\n#0 /tmp/tmp7qdbtw8e.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7qdbtw8e.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($string);\n    $substringLength = strlen($substring);\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        if (substr($string, $i, $substringLength)\
    \ === $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) === $i) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfy6l41_.php:26\n\
    Stack trace:\n#0 /tmp/tmpnfy6l41_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnfy6l41_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count +=\
    \ $j - 1;\n        }\n    }\n    return $count;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't work if the substring appears more than once in the\
    \ string. For example, `how_many_times('aaa', 'a')` returns `3` instead of `2`.\n\
    <|/ c |>\n<| c |>\nIt does work. `how_many_times('aaa', 'a')` returns `2`.\n<|/\
    \ c |>\n<| c |>\nI didn't downvote, but this doesn't work if the substring appears\
    \ more than once in the string. For example, `how_many_times('aaa', 'a')` returns\
    \ `3` instead of `2`.\n<|/ c |>\n<| c |>\nIt does work. `how_many_times('aaa',\
    \ 'a')` returns `2`.\n<|/ c |>\n<| c |>\nI didn't downvote, but this doesn't work\
    \ if the substring appears more than once in the string. For example, `how_many_times('aaa',\
    \ 'a')` returns `3` instead of `2`.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp_8ld20lh.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = 0;\n    foreach (str_split($string) as $char) {\n\
    \        if ($char == $substring) {\n            $overlap++;\n        }\n    \
    \    if ($overlap) {\n            $count--;\n        }\n    }\n    return $count;\n\
    }\n</code>\n<|/ a tags=php,string,algorithm |>\n<| c |>\nThis doesn't work if\
    \ you have multiple instances of the substring in the string. e.g. `how_many_times('aaaa',\
    \ 'aa')` returns `3` instead of `2`.\n<|/ c |>\n<| c |>\nI guess I misunderstood\
    \ the question. I'll update my answer accordingly.\n<|/ c |>\n<| c |>\nI updated\
    \ my answer accordingly. Thanks for pointing that out.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpmhspl7po.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($string);\n    $substringLength = strlen($substring);\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        if (substr($string, $i, $substringLength)\
    \ === $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbad32sd2.php:32\n\
    Stack trace:\n#0 /tmp/tmpbad32sd2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbad32sd2.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5yzp7c8.php:25\n\
    Stack trace:\n#0 /tmp/tmpx5yzp7c8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpx5yzp7c8.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65mdfmp9.php:25\n\
    Stack trace:\n#0 /tmp/tmp65mdfmp9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp65mdfmp9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work when there are multiple occurrences of the substring in the string. For\
    \ example, `how_many_times('abcabc', 'abc')` returns `3` instead of `2`.\n<|/\
    \ c |>\n<| c |>\n: Yes, I noticed that and fixed it.  Thanks for pointing it out.\n\
    <|/ c |>\n<| a tags=php,string |>\n<code>\n<?php\n$string = 'abcabc';\n$sub =\
    \ 'abc';\n$count = substr_count($string, $sub);\necho $count;\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprzouvtxz.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppwy4g6t.php:33\n\
    Stack trace:\n#0 /tmp/tmpppwy4g6t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpppwy4g6t.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9227evdw.php:33\n\
    Stack trace:\n#0 /tmp/tmp9227evdw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9227evdw.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count +=\
    \ $j - 1;\n            $i += $j;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3_ht618.php:33\n\
    Stack trace:\n#0 /tmp/tmpn3_ht618.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpn3_ht618.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ytsmm1.php:33\n\
    Stack trace:\n#0 /tmp/tmpa0ytsmm1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpa0ytsmm1.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgtwcjjk.php:33\n\
    Stack trace:\n#0 /tmp/tmpzgtwcjjk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzgtwcjjk.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_79cr8xh.php:33\n\
    Stack trace:\n#0 /tmp/tmp_79cr8xh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_79cr8xh.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcu5qtqsj.php:33\n\
    Stack trace:\n#0 /tmp/tmpcu5qtqsj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcu5qtqsj.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaveszwa5.php:32\n\
    Stack trace:\n#0 /tmp/tmpaveszwa5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpaveszwa5.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwudyrjjs.php:33\n\
    Stack trace:\n#0 /tmp/tmpwudyrjjs.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwudyrjjs.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = 0;\n    foreach (str_split($string) as $char) {\n\
    \        if ($char == $substring[$overlap]) {\n            $overlap++;\n     \
    \   } else {\n            $overlap = 0;\n        }\n        if ($overlap == strlen($substring))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpusr6z4mm.php:31\n\
    Stack trace:\n#0 /tmp/tmpusr6z4mm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpusr6z4mm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_3pqu6g.php:33\n\
    Stack trace:\n#0 /tmp/tmpf_3pqu6g.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf_3pqu6g.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogdnvash.php:32\n\
    Stack trace:\n#0 /tmp/tmpogdnvash.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpogdnvash.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9tbpl2y.php:33\n\
    Stack trace:\n#0 /tmp/tmp_9tbpl2y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_9tbpl2y.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j4lbmfi.php:25\n\
    Stack trace:\n#0 /tmp/tmp1j4lbmfi.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1j4lbmfi.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdxmdo0z.php:32\n\
    Stack trace:\n#0 /tmp/tmpjdxmdo0z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjdxmdo0z.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count +=\
    \ $j - 1;\n            $i += $j;\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdo6y2ear.php:32\n\
    Stack trace:\n#0 /tmp/tmpdo6y2ear.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdo6y2ear.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count +=\
    \ $j - 1;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8k6az9ic.php:32\n\
    Stack trace:\n#0 /tmp/tmp8k6az9ic.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8k6az9ic.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa49xf9kc.php:25\n\
    Stack trace:\n#0 /tmp/tmpa49xf9kc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpa49xf9kc.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            break;\n        }\n     \
    \   $count++;\n        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = preg_match_all('/'\
    \ . preg_quote($substring, '/') . '/i', $string, $matches);\n    return $count;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$string = 'aaa';\n$pattern\
    \ = 'a';\n$count = preg_match_all('/' . preg_quote($pattern, '/') . '/i', $string,\
    \ $matches);\necho $count;\n</code>\n<|/ a tags=php,preg-match-all,regex |>\n\
    <| a dscore=1 |>\n<code>\n$string = 'aaa';\n$pattern = 'a';\n$count = preg_match_all('/'\
    \ . preg_quote($pattern, '/') . '/i', $string, $matches);\necho $count;\n</code>\n\
    <|/ a tags=php,preg-match-all,regex |>\n<| a tags=php,preg-match-all,regex |>\n\
    <code>\n$string = 'aaa';\n$pattern = 'a';\n$count = preg_match_all('/' . preg_quote($pattern,\
    \ '/') . '/i', $string, $matches);\necho $count;\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=php,preg-match-all,regex |>\n<code>\n$string = 'aaa';\n$pattern = 'a';\n\
    $count = preg_match_all('/' . preg_quote($pattern, '/') . '/i', $string, $matches);\n\
    echo $count;\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$string =\
    \ 'aaa';\n$pattern = 'a';\n$count = preg_match_all('/' . preg_quote($pattern,\
    \ '/') . '/i', $string, $matches);\necho $count;\n</code>\n<|/ a tags=php,preg-match-all,regex\
    \ |>\n<| a dscore=1 |>\n<code>\n$string = 'aaa';\n$pattern = 'a';\n$count = preg_match_all('/'\
    \ . preg_quote($pattern, '/') . '/i', $string, $matches);\necho $count;\n</code>\n\
    <|/ a tags=php,preg-match-all,regex |>\n<| a dscore=1 |>\n<code>\n$string = 'aaa';\n\
    $pattern = 'a';\n$count = preg_match_all('/' . preg_quote($pattern, '/') . '/i',\
    \ $string, $matches);\necho $\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp63ncnel9.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            break;\n        }\n     \
    \   $count++;\n        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n</code>\n<|/\
    \ a tags=php,string,regex |>\n<| c |>\nThis doesn't work for me. `how_many_times('aaaa',\
    \ 'aa')` returns `1` instead of `2`.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9\
    \ and it works fine. Maybe you have a typo or something else?\n<|/ c |>\n<| c\
    \ |>\nI tested it on PHP 5.3.10 and it works fine. Maybe you have a typo or something\
    \ else?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.4.4 and it works fine. Maybe\
    \ you have a typo or something else?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.5.9\
    \ and it works fine. Maybe you have a typo or something else?\n<|/ c |>\n<| a\
    \ dscore=2 |>\n<code>\n$string = 'aaaaaaa';\n$pattern = 'aa';\n$count = preg_match_all('/'.$pattern.'/',\
    \ $string, $matches);\necho $count;\n</code>\n<|/ a tags=php,string,regex |>\n\
    <| c |>\nThis doesn't work for me. `preg_match_all('/aa/', $string, $matches)`\
    \ returns `1` instead of `2`.\n<|/ c |>\n<| c |>\nThis doesn't work for me. `preg_match_all('/aa/',\
    \ $string, $matches)` returns `1` instead of `2`.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for me. `preg_match_all('/aa/', $string, $matches)` returns `1` instead\
    \ of `2`.\n<|/ c |>\n<| c |>\nThis doesn't work for me. `preg_match_all('/aa/',\
    \ $string, $matches)` returns `1` instead of `2`.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for me. `preg_match_all('/aa/', $string, $matches)` returns `1` instead\
    \ of `2`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$string = 'aaaaaaa';\n$pattern\
    \ = 'aa';\n$count = preg_match_all('/'.$pattern.'/', $string, $matches);\necho\
    \ $\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpefwkvz_j.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp782r5gur.php:33\n\
    Stack trace:\n#0 /tmp/tmp782r5gur.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp782r5gur.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37dp31t6.php:27\n\
    Stack trace:\n#0 /tmp/tmp37dp31t6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp37dp31t6.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgq8k5di.php:33\n\
    Stack trace:\n#0 /tmp/tmptgq8k5di.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptgq8k5di.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = preg_match_all('/'\
    \ . $substring . '/', $string, $matches);\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfmthmv0.php:21\n\
    Stack trace:\n#0 /tmp/tmpxfmthmv0.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxfmthmv0.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3hi43xy.php:21\n\
    Stack trace:\n#0 /tmp/tmpd3hi43xy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpd3hi43xy.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = substr_count($string, $substring, 0, $count);\n\
    \    return $overlap - $count;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should\
    \ be the accepted answer. Simple and effective.\n<|/ c |>\n<| c |>\nI like this\
    \ answer because it doesn't require any additional libraries. However, it does\
    \ require a little more memory to store the array. Also, it doesn't allow for\
    \ overlapping matches.\n<|/ c |>\n<| c |>\nI like this answer because it doesn't\
    \ require any additional libraries. However, it does require a little more memory\
    \ to store the array. Also, it doesn't allow for overlapping matches.\n<|/ c |>\n\
    <| c |>\nI like this answer because it doesn't require any additional libraries.\
    \ However, it does require a little more memory to store the array. Also, it doesn't\
    \ allow for overlapping matches.\n<|/ c |>\n<| c |>\nI like this answer because\
    \ it doesn't require any additional libraries. However, it does require a little\
    \ more memory to store the array. Also, it doesn't allow for overlapping matches.\n\
    <|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'Hello World';\n$find = 'llo';\n\
    $pos = strpos($string, $find);\n$count = substr_count($string, $find);\n$overlap\
    \ = substr_count($string, $find, 0, $pos);\n$overlap = $overlap - ($pos - $count);\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Simple\
    \ and effective.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple\
    \ and effective.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple\
    \ and effective.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple\
    \ and effective.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple\
    \ and effective.\n<|/ c |>\n<| a |>\n<code>\n$string = 'Hello World';\n$find =\
    \ 'llo';\n$pos = strpos($string, $find);\n$count = substr_count($string, $find);\n\
    $overlap = substr_count($string, $find, 0, $pos);\n$overlap = $overlap - ($pos\
    \ - $count);\n</code>\n<|/ a dscore=5 tags=\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3uvcf661.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjmvqv2pm.php:33\n\
    Stack trace:\n#0 /tmp/tmpjmvqv2pm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjmvqv2pm.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    This doesn't work if you have multiple occurrences of the substring in the string.\
    \ E.g. `how_many_times('aaa', 'aa')` returns `2` instead of `3`.\n<|/ c |>\n<|\
    \ c |>\nI added a fix for that case. Thanks!\n<|/ c |>\n<| a dscore=1 |>\nI believe\
    \ that this is what you are looking for:\n<code>\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphovqj4vd.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02rp42fr.php:33\n\
    Stack trace:\n#0 /tmp/tmp02rp42fr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp02rp42fr.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php\n$string = 'aaa';\n$substring = 'a';\n$count = substr_count($string,\
    \ $substring);\necho $count;\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpt4ebn35f.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3vznxv6i.php:27\n\
    Stack trace:\n#0 /tmp/tmp3vznxv6i.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3vznxv6i.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n</code>\n<|/ a |>\n<| c |>\nThis\
    \ doesn't work if the first character of the substring is a repeated character\
    \ in the original string. For example, if `$string = 'abcabc'` and `$substring\
    \ = 'abc'`, then your function returns `2` instead of `3`.\n<|/ c |>\n<| c |>\n\
    Thanks for pointing that out. I've edited my answer to fix this issue.\n<|/ c\
    \ |>\n<| a tags=php,string |>\n<code>\n$string = 'abcabc';\n$substring = 'abc';\n\
    $count = substr_count($string, $substring);\n</code>\n<|/ a dscore=5 |>\n<| c\
    \ |>\nThis doesn't work if the first character of the substring is a repeated\
    \ character in the original string. For example, if `$string = 'abcabc'` and `$substring\
    \ = 'abc'`, then your function returns `2` instead of `3`.\n<|/ c |>\n<| a dscore=4\
    \ |>\n<code>\n$string = 'abcabc';\n$substring = 'abc';\n$count = substr_count($string,\
    \ $substring);\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't work\
    \ if the first character of the substring is a repeated character in the original\
    \ string. For example, if `$string = 'abcabc'` and `$substring = 'abc'`, then\
    \ your function returns `2` instead of `3`.\n<|/ c |>\n<| a |>\n<code>\n$string\
    \ = 'abcabc';\n$substring = 'abc';\n$count = substr_count($string, $substring);\n\
    </code>\n<|/ a tags=php,string dscore=4 |>\n<| c |>\nThis doesn't work if the\
    \ first character of the substring is a repeated character in the original string.\
    \ For example, if `$string = 'abcabc'` and `$substring = 'abc'`, then your function\
    \ returns `2` instead of `3`.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n$string\
    \ = 'abcabc';\n$substring = 'abc';\n$count = substr_count($string, $substring);\n\
    </code>\n<|/\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp_rtqczwd.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl_kd67n.php:32\n\
    Stack trace:\n#0 /tmp/tmpkl_kd67n.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkl_kd67n.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count +=\
    \ $j - 1;\n        }\n    }\n    return $count;\n}\n</code>\n<|/ a |>\n<| a tags=php,string\
    \ |>\n<code>\n$string = 'abcde';\n$search = 'ab';\n$pos = strpos($string, $search);\n\
    $count = substr_count($string, $search);\n</code>\n<|/ a dscore=4 |>\n<| c |>\n\
    This doesn't work if the search string appears more than once in the string.\n\
    <|/ c |>\n<| c |>\nIt does work, just tested it. The second argument to `substr_count`\
    \ counts the number of times the search string appears in the string.\n<|/ c |>\n\
    <| c |>\nThis doesn't work if the search string appears more than once in the\
    \ string.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'abcde';\n$search\
    \ = 'ab';\n$pos = strpos($string, $search);\n$count = substr_count($string, $search);\n\
    </code>\n<|/ a dscore=4 |>\n<| a |>\n<code>\n$string = 'abcde';\n$search = 'ab';\n\
    $pos = strpos($string, $search);\n$count = substr_count($string, $search);\n</code>\n\
    <|/ a dscore=4 tags=php,string |>\n<| a tags=php,string |>\n<code>\n$string =\
    \ 'abcde';\n$search = 'ab';\n$pos = strpos($string, $search);\n$count = substr_count($string,\
    \ $search);\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\n$string = 'abcde';\n\
    $search = 'ab';\n$pos = strpos($string, $search);\n$count = substr_count($string,\
    \ $search);\n</code>\n<|/ a tags=php,string |>\n<| a dscore=3 |>\n<code>\n$string\
    \ = 'abcde';\n$search = 'ab';\n$pos = strpos($string, $search);\n$count = substr_count($string,\
    \ $search);\n</code>\n<|/ a tags=php,string |>\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp286_1hot.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($string);\n    $substringLength = strlen($substring);\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        if (strpos($string, $substring, $i) !== false)\
    \ {\n            $count++;\n            $i += $substringLength;\n        }\n \
    \   }\n    return $count;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis\
    \ doesn't work if the substring appears more than once.\n<|/ c |>\n<| c |>\n:\
    \ It does work if you count the overlapping cases. If you don't want that, you\
    \ need to count the non-overlapping cases. I added a function for that.\n<|/ c\
    \ |>\n<| c |>\n: I added a function that counts non-overlapping cases.\n<|/ c\
    \ |>\n<| c |>\n: I added a function that counts non-overlapping cases.\n<|/ c\
    \ |>\n<| c |>\n: I added a function that counts non-overlapping cases.\n<|/ c\
    \ |>\n<| a dscore=4 |>\n<code>\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpnjtnpv3q.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp159959w9.php:25\n\
    Stack trace:\n#0 /tmp/tmp159959w9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp159959w9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fuyf9os.php:32\n\
    Stack trace:\n#0 /tmp/tmp5fuyf9os.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5fuyf9os.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ml9yplp.php:32\n\
    Stack trace:\n#0 /tmp/tmp2ml9yplp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2ml9yplp.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            break;\n        }\n     \
    \   $count++;\n        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7yi2zu9.php:33\n\
    Stack trace:\n#0 /tmp/tmpj7yi2zu9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj7yi2zu9.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count > 0) {\n        $count = $count + substr_count($string,\
    \ $substring, 0, $count);\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcubp0sn.php:23\n\
    Stack trace:\n#0 /tmp/tmpfcubp0sn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfcubp0sn.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyt0ivgv_.php:33\n\
    Stack trace:\n#0 /tmp/tmpyt0ivgv_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyt0ivgv_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        if (substr($string, $pos, strlen($substring))\
    \ === $substring) {\n            $count++;\n        }\n        $pos++;\n    }\n\
    \    return $count;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't\
    \ seem to work. Try it with `how_many_times('aaaa', 'aa')` which should return\
    \ 3, but returns 0.\n<|/ c |>\n<| c |>\n: I tested it and it works. I added the\
    \ function to the answer.\n<|/ c |>\n<| c |>\n: I added a more efficient version\
    \ of the function to the answer.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ doesn't use regular expressions.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ doesn't use regular expressions.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4t1etvxw.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3q4cc6m2.php:33\n\
    Stack trace:\n#0 /tmp/tmp3q4cc6m2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3q4cc6m2.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count == 0) {\n        return 0;\n    }\n    $count =\
    \ 0;\n    $pos = 0;\n    while ($pos < strlen($string)) {\n        $pos = strpos($string,\
    \ $substring, $pos);\n        if ($pos === false) {\n            $count++;\n \
    \       }\n        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87hr8oqu.php:32\n\
    Stack trace:\n#0 /tmp/tmp87hr8oqu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp87hr8oqu.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz79zhhch.php:25\n\
    Stack trace:\n#0 /tmp/tmpz79zhhch.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpz79zhhch.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_07sfgcb.php:21\n\
    Stack trace:\n#0 /tmp/tmp_07sfgcb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_07sfgcb.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($string);\n    $substringLength = strlen($substring);\n    for ($i =\
    \ 0; $i < $length; $i++) {\n        if (substr($string, $i, $substringLength)\
    \ === $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count === 0) {\n        return 0;\n    }\n    $overlap\
    \ = substr_count($string, $substring, 0, $count);\n    return $overlap;\n}\n</code>\n\
    <|/ a tags=php,string |>\n<| c |>\nThis doesn't seem to work if you have a substring\
    \ that appears more than once.\n<|/ c |>\n<| c |>\nIt does work. `how_many_times('aaaa',\
    \ 'aa')` returns 3.\n<|/ c |>\n<| c |>\nI tested it and it doesn't work. `how_many_times('aaaa',\
    \ 'aa')` returns 3.\n<|/ c |>\n<| c |>\nIt does work. `how_many_times('aaaa',\
    \ 'aa')` returns 3.\n<|/ c |>\n<| c |>\nIt does work. `how_many_times('aaaa',\
    \ 'aa')` returns 3.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'aaaaaaa';\n\
    $substring = 'aa';\n$count = substr_count($string, $substring);\necho $count;\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't seem to work if you have a substring\
    \ that appears more than once.\n<|/ c |>\n<| c |>\nThis doesn't seem to work if\
    \ you have a substring that appears more than once.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ seem to work if you have a substring that appears more than once.\n<|/ c |>\n\
    <| c |>\nThis doesn't seem to work if you have a substring that appears more than\
    \ once.\n<|/ c |>\n<| c |>\nThis doesn't seem to work if you have a substring\
    \ that appears more than once.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$string =\
    \ 'aaaaaaa';\n$substring = 'aa';\n$count = substr_count($string, $substring);\n\
    echo $count;\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThis doesn't seem to\
    \ work if you have a substring that appears more than once.\n<|/ c |>\n<| c |>\n\
    This doesn't seem to work if you have a substring that appears more than once.\n\
    <|/ c |>\n<| a tags=php,string |>\n<code>\n$string = 'aaaaaaa';\n$substring =\
    \ 'aa';\n$count = substr_count($string, $\nfunction candidate(...$args) {\n  \
    \  return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp84p5epwq.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count +=\
    \ $j - 1;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8jng6xq.php:32\n\
    Stack trace:\n#0 /tmp/tmp_8jng6xq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_8jng6xq.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9idoeokg.php:25\n\
    Stack trace:\n#0 /tmp/tmp9idoeokg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9idoeokg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46rg4t97.php:33\n\
    Stack trace:\n#0 /tmp/tmp46rg4t97.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp46rg4t97.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe24nbxse.php:27\n\
    Stack trace:\n#0 /tmp/tmpe24nbxse.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpe24nbxse.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7e5z63s.php:33\n\
    Stack trace:\n#0 /tmp/tmpa7e5z63s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpa7e5z63s.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$string = 'aaa';\n$substring = 'a';\n$count = substr_count($string,\
    \ $substring);\necho $count;\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpm2lzs307.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39_d60h3.php:33\n\
    Stack trace:\n#0 /tmp/tmp39_d60h3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp39_d60h3.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            break;\n        }\n     \
    \   $count++;\n        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_koqdai.php:27\n\
    Stack trace:\n#0 /tmp/tmpc_koqdai.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpc_koqdai.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        if (substr($string, $pos, strlen($substring))\
    \ === $substring) {\n            $count++;\n        }\n        $pos++;\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos === false) {\n            break;\n        }\n     \
    \   $count++;\n        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliu0fshd.php:33\n\
    Stack trace:\n#0 /tmp/tmpliu0fshd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpliu0fshd.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65rcftjj.php:27\n\
    Stack trace:\n#0 /tmp/tmp65rcftjj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp65rcftjj.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count +=\
    \ $j - 1;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2e5edil.php:32\n\
    Stack trace:\n#0 /tmp/tmpw2e5edil.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpw2e5edil.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgr3_2vpu.php:33\n\
    Stack trace:\n#0 /tmp/tmpgr3_2vpu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgr3_2vpu.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoz7tv6x2.php:33\n\
    Stack trace:\n#0 /tmp/tmpoz7tv6x2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpoz7tv6x2.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = 0;\n    foreach (str_split($string) as $char) {\n\
    \        if ($char === $substring) {\n            $overlap++;\n        }\n   \
    \     if ($overlap > 0) {\n            $count--;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2es0lgz.php:29\n\
    Stack trace:\n#0 /tmp/tmpj2es0lgz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpj2es0lgz.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count == 0) {\n        return 0;\n    }\n    $count =\
    \ 0;\n    $pos = 0;\n    while ($pos < strlen($string)) {\n        $pos = strpos($string,\
    \ $substring, $pos);\n        if ($pos === false) {\n            return $count;\n\
    \        }\n        $count++;\n    }\n    return $count;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThis doesn't work for `'aaa'` - it returns `2` instead of `3`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now it works as\
    \ expected.\n<|/ c |>\n<| c |>\nI added a version that doesn't use regular expressions.\n\
    <|/ c |>\n<| c |>\nI added a version that doesn't use regular expressions.\n<|/\
    \ c |>\n<| a |>\n<code>\n<?php\n$string = 'aaa';\n$substring = 'a';\n$count =\
    \ substr_count($string, $substring);\necho $count;\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgfj4v4df.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| c |>\nThis doesn't work if you have a substring that appears\
    \ more than once in the string.\n<|/ c |>\n<| c |>\n: It does. Try it out with\
    \ 'aaaaaaa'.\n<|/ c |>\n<| c |>\n: It does. Try it out with 'aaaaaaa'.\n<|/ c\
    \ |>\n<| c |>\n: It does. Try it out with 'aaaaaaa'.\n<|/ c |>\n<| c |>\n: It\
    \ does. Try it out with 'aaaaaaa'.\n<|/ c |>\n<| a tags=php,string |>\n<code>\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp19un7t9f.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zyl9v1j.php:33\n\
    Stack trace:\n#0 /tmp/tmp5zyl9v1j.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5zyl9v1j.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1qa1ta9.php:25\n\
    Stack trace:\n#0 /tmp/tmpv1qa1ta9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv1qa1ta9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvin0fcov.php:33\n\
    Stack trace:\n#0 /tmp/tmpvin0fcov.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvin0fcov.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    return $count + ($count > 1 ? 1 : 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpey58n14q.php:20\n\
    Stack trace:\n#0 /tmp/tmpey58n14q.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpey58n14q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = 0;\n    foreach (str_split($string) as $char) {\n\
    \        if ($char == $substring) {\n            $overlap++;\n        } else {\n\
    \            $overlap = 0;\n        }\n        if ($overlap == $count) {\n   \
    \         return $count;\n        }\n    }\n    return $count;\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| c |>\nThis doesn't work for `how_many_times('aaaa', 'aa')`\
    \ which returns `3` instead of `2`.\n<|/ c |>\n<| c |>\nI see what you mean. I've\
    \ updated my answer to account for this.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ for `how_many_times('aaaa', 'aa')` which returns `3` instead of `2`.\n<|/ c\
    \ |>\n<| c |>\nI see what you mean. I've updated my answer to account for this.\n\
    <|/ c |>\n<| c |>\nThis doesn't work for `how_many_times('aaaa', 'aa')` which\
    \ returns `3` instead of `2`.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3wrmww5h.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (substr($string, $i, $sublen) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdk96oh8.php:27\n\
    Stack trace:\n#0 /tmp/tmppdk96oh8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppdk96oh8.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count++;\n\
    \            $i += $j;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpde4cg1kw.php:33\n\
    Stack trace:\n#0 /tmp/tmpde4cg1kw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpde4cg1kw.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            for ($j = 1; $j < $sublen;\
    \ $j++) {\n                if ($string[$i + $j] != $substring[$j]) {\n       \
    \             break;\n                }\n            }\n            $count +=\
    \ $j - 1;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg93f42ik.php:31\n\
    Stack trace:\n#0 /tmp/tmpg93f42ik.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpg93f42ik.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] === $substring[0]) {\n            $count++;\n           \
    \ for ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] !==\
    \ $substring[$j]) {\n                    break;\n                }\n         \
    \   }\n        }\n    }\n    return $count;\n}\n</code>\n<|/ a |>\n<| c |>\nI\
    \ like your solution, however it fails on cases like `'aaa'` and `'aaaa'`\n<|/\
    \ c |>\n<| c |>\nYeah, I noticed that and fixed it before I saw your comment.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI added a fix for that case\
    \ as well.\n<|/ c |>\n<| c |>\nI added a fix for that case as well.\n<|/ c |>\n\
    <| c |>\nI added a fix for that case as well.\n<|/ c |>\n<| a tags=php,string\
    \ |>\n<code>\n$string = 'aaa';\n$search = 'aa';\n$count = substr_count($string,\
    \ $search);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis fails on cases like `'aaa'`\
    \ and `'aaaa'`\n<|/ c |>\n<| c |>\nThis fails on cases like `'aaa'` and `'aaaa'`\n\
    <|/ c |>\n<| c |>\nThis fails on cases like `'aaa'` and `'aaaa'`\n<|/ c |>\n<|\
    \ c |>\nThis fails on cases like `'aaa'` and `'aaaa'`\n<|/ c |>\n<| c |>\nThis\
    \ fails on cases like `'aaa'` and `'aaaa'`\n<|/ c |>\n<| a tags=php,string |>\n\
    <code>\n$string = 'aaa';\n$search = 'aa';\n$count = substr_count($string, $search);\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis fails on cases like `'aaa'` and `'aaaa'`\n\
    <|/ c |>\n<| c |>\nThis fails on cases like `'aaa'` and `'aaaa'`\n<|/ c |>\n<|\
    \ c |>\nThis fails on cases like `'aaa'` and `'aaaa'`\n<|/ c |>\n<|\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3mw71m0e.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0hoeh03.php:25\n\
    Stack trace:\n#0 /tmp/tmpe0hoeh03.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe0hoeh03.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n</code>\n<|/\
    \ a tags=php,string,regex |>\n<| c |>\nThis doesn't seem to work correctly for\
    \ me. `how_many_times('aaaa', 'aa')` returns `3` when it should be `2`.\n<|/ c\
    \ |>\n<| c |>\n: I fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<| c\
    \ |>\nThis doesn't seem to work correctly for me. `how_many_times('aaaa', 'aa')`\
    \ returns `3` when it should be `2`.\n<|/ c |>\n<| c |>\n: I fixed the bug. Thanks\
    \ for pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't seem to work correctly\
    \ for me. `how_many_times('aaaa', 'aa')` returns `3` when it should be `2`.\n\
    <|/ c |>\n<| a tags=php,string,regex |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpb61mqnwk.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count == 0) {\n        return 0;\n    }\n    $i = 0;\n\
    \    $j = 0;\n    $overlap = 0;\n    while ($i < strlen($string)) {\n        if\
    \ ($string[$i] == $substring[$j]) {\n            $i++;\n            $j++;\n  \
    \          if ($j == strlen($substring)) {\n                $overlap++;\n    \
    \            $j = 0;\n            } else {\n                $j++;\n          \
    \  }\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n\
    \    return $count + $overlap;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9ga81j9.php:41\n\
    Stack trace:\n#0 /tmp/tmpo9ga81j9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo9ga81j9.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = strpos($string,\
    \ $substring);\n    while ($pos !== false) {\n        $count++;\n        $pos\
    \ = strpos($string, $substring, $pos + 1);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6d4_c4qo.php:33\n\
    Stack trace:\n#0 /tmp/tmp6d4_c4qo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6d4_c4qo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_vnbalw.php:27\n\
    Stack trace:\n#0 /tmp/tmpc_vnbalw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpc_vnbalw.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if ($string[$i] == $substring[0]) {\n            $count++;\n            for\
    \ ($j = 1; $j < $sublen; $j++) {\n                if ($string[$i + $j] != $substring[$j])\
    \ {\n                    break;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxc_q8piw.php:33\n\
    Stack trace:\n#0 /tmp/tmpxc_q8piw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxc_q8piw.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count == 0) {\n        return 0;\n    }\n    $count =\
    \ min($count, substr_count($string, $substring, 0, $string));\n    return $count;\n\
    }\n</code>\n<|/ a tags=php,string,regex |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $string = 'aaa';\n$pattern = 'a';\n$replacement = 'b';\n$count = preg_replace('/'.$pattern.'/',\
    \ $replacement, $string);\necho $count;\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2_ymsv35.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count > 0) {\n        $count = min($count, how_many_times($string,\
    \ $substring . 'a'));\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdt24k85.php:23\n\
    Stack trace:\n#0 /tmp/tmpkdt24k85.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpkdt24k85.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while ($pos = strpos($string, $substring, $pos)) {\n        $count++;\n \
    \       $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4f9yk643.php:25\n\
    Stack trace:\n#0 /tmp/tmp4f9yk643.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4f9yk643.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($string);\n\
    \    $sublen = strlen($substring);\n    for ($i = 0; $i < $len; $i++) {\n    \
    \    if (strpos($string, $substring, $i) !== false) {\n            $count++;\n\
    \            $i += $sublen;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo3dww6s.php:29\n\
    Stack trace:\n#0 /tmp/tmpbo3dww6s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbo3dww6s.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    if ($count == 0) {\n        return 0;\n    }\n    $count =\
    \ min($count, strlen($string) - strlen($substring));\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl907n1d1.php:25\n\
    Stack trace:\n#0 /tmp/tmpl907n1d1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl907n1d1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = substr_count($string,\
    \ $substring);\n    $overlap = 0;\n    foreach (str_split($string) as $char) {\n\
    \        if ($char == $substring) {\n            $overlap++;\n        }\n    \
    \    if ($overlap) {\n            $count--;\n        }\n    }\n    return $count;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,string |>\n<code>\n<?php\n$string\
    \ = \"abcde\";\n$string2 = \"abcde\";\n$string3 = \"abcde\";\n$string4 = \"abcde\"\
    ;\n$string5 = \"abcde\";\n$string6 = \"abcde\";\n$string7 = \"abcde\";\n$string8\
    \ = \"abcde\";\n$string9 = \"abcde\";\n$string10 = \"abcde\";\n$string11 = \"\
    abcde\";\n$string12 = \"abcde\";\n$string13 = \"abcde\";\n$string14 = \"abcde\"\
    ;\n$string15 = \"abcde\";\n$string16 = \"abcde\";\n$string17 = \"abcde\";\n$string18\
    \ = \"abcde\";\n$string19 = \"abcde\";\n$string20 = \"abcde\";\n$string21 = \"\
    abcde\";\n$string22 = \"abcde\";\n$string23 = \"abcde\";\n$string24 = \"abcde\"\
    ;\n$string25 = \"abcde\";\n$string26 = \"abcde\";\n$string27 = \"abcde\";\n$string28\
    \ = \"abcde\";\n$string29 = \"abcde\";\n$string30 = \"abcde\";\n$string31 = \"\
    abcde\";\n$string32 = \"abcde\";\n$string33 = \"abcde\";\n$string34 = \"abcde\"\
    ;\n$string35 = \"abcde\";\n$string36 = \"abcde\";\n$string37 = \"abcde\";\n$string38\
    \ = \"abcde\";\n$string39 = \"abcde\";\n$string40 = \"abcde\";\n$string41 = \"\
    abcde\";\n$string42 = \"abcde\";\n$string43 = \"abcde\";\n$string44 = \"abcde\"\
    ;\n$string45 = \"abcde\";\n$string46 = \"abcde\";\n$string47 = \"abcde\";\n$string48\
    \ = \"abcde\";\n$string49 = \"abcde\";\n$string50 = \"abcde\";\n$string51 = \"\
    abcde\";\n$string52 = \"abcde\";\n$string53 = \"abcde\";\n$string54\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4rgdact7.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception

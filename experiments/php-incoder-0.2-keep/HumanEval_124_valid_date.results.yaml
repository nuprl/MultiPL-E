name: HumanEval_124_valid_date
language: php
results:
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $month = $dateArray[0];\n    $day = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $monthArray = array(1,2,3,4,5,6,7,8,9,10,11,12);\n\
    \    $dayArray = array(1,3,5,7,8,10,12);\n    $yearArray = array(2000,2012,2040);\n\
    \    $monthCount = count($monthArray);\n    $dayCount = count($dayArray);\n  \
    \  $yearCount = count($yearArray);\n    if(!empty($date) && $monthCount != 0 &&\
    \ $dayCount != 0 && $yearCount != 0 && $monthArray[$month-1] <= 12 && $dayArray[$day-1]\
    \ <= 31 && $yearArray[$year-1] <= $yearArray[$year-1]) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqn9pp13.php:39\n\
    Stack trace:\n#0 /tmp/tmpfqn9pp13.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpfqn9pp13.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46g5n6qg.php:23\n\
    Stack trace:\n#0 /tmp/tmp46g5n6qg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp46g5n6qg.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = strtolower($month);\n    $day = strtolower($day);\n    $month =\
    \ str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $date\
    \ = $month.\"-\".$day.\"-\".$year;\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    $days_in_year = cal_days_in_year(CAL_GREGORIAN, $year);\n\
    \    $days_in_month = str_pad($days_in_month, 2, \"0\", STR_PAD_LEFT);\n    $days_in_year\
    \ = str_pad($days_in_year, 2, \"0\", STR_PAD_LEFT);\n    $days_in_month = str_pad($days_in_month,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $days_in_year = str_pad($days_in_year, 2, \"0\"\
    , STR_PAD_LEFT);\n    $days_in_month = str_pad($days_in_month, 2, \"0\", STR_PAD_LEFT);\n\
    \    $days_in_year = str_pad($days_in_year, 2, \"0\", STR_PAD_LEFT);\n    $days_in_month\
    \ = str_pad($days_in_month, 2, \"0\", STR_PAD_LEFT);\n    $days_in_year = str_pad($days_in_year,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $days_in_month = str_pad($days_in_month, 2, \"\
    0\", STR_PAD_LEFT);\n    $days_in_year = str_pad($days_in_year, 2, \"0\", STR_PAD_LEFT);\n\
    \    $days_in_month = str_pad($days_in_month, 2, \"0\", STR_PAD_LEFT);\n    $days_in_year\
    \ = str_pad($days_in_year, 2, \"0\", STR_PAD_LEFT);\n    $days_in_month = str_pad($days_in_month,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $days_in_year = str_pad($days_in_year, 2, \"0\"\
    , STR_PAD_LEFT);\n    $days_in_month = str_pad($days_in_month, 2, \"0\", STR_PAD_LEFT);\n\
    \    $days_in_year = str_pad($days_in_year, 2, \"0\", STR_PAD_LEFT);\n    $days_in_month\
    \ = str_pad($days_in_month, 2, \"0\", STR_PAD_LEFT);\n    $days_in_year = str_pad($days_in_year,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $days_in_month = str_pad($days_in_month, 2, \"\
    0\", STR_PAD_LEFT);\n    $day\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfve7m7xd.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    if ($d === false) {\n        return false;\n    }\n    $months\
    \ = array(\n        1 => 31,\n        3 => 31,\n        5 => 31,\n        7 =>\
    \ 31,\n        8 => 31,\n        10 => 31,\n        12 => 31,\n        4 => 30,\n\
    \        6 => 30,\n        9 => 30,\n        11 => 30,\n        2 => 29\n    );\n\
    \    $daysInMonth = cal_days_in_month(CAL_GREGORIAN, $d->format('m'), $d->format('Y'));\n\
    \    $day = $d->format('j');\n    $month = $d->format('m');\n    $year = $d->format('Y');\n\
    \    if ($day < 1 || $day > $daysInMonth) {\n        return false;\n    }\n  \
    \  if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($month\
    \ == 2) {\n        if ($year % 4 != 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmpjqhtr1p9.php:34\nStack trace:\n#0 /tmp/tmpjqhtr1p9.php(52): valid_date('03-11-2000')\n\
    #1 /tmp/tmpjqhtr1p9.php(56): candidate('03-11-2000')\n#2 /tmp/tmpjqhtr1p9.php(74):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpjqhtr1p9.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $days_in_month = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n    $days_in_year\
    \ = 365 + cal_days_in_year(CAL_GREGORIAN, $year);\n    $days_in_month -= $days_in_year;\n\
    \    if ($day < 1 || $day > $days_in_month) {\n        return false;\n    }\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($month\
    \ == 2) {\n        if ($day > 29) {\n            return false;\n        }\n  \
    \  }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n \
    \       if ($day > 30) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 1) {\n        if ($day > 31) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmpgsuwty1c.php:20\nStack trace:\n#0 /tmp/tmpgsuwty1c.php(47): valid_date(973209600)\n\
    #1 /tmp/tmpgsuwty1c.php(51): candidate('03-11-2000')\n#2 /tmp/tmpgsuwty1c.php(69):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpgsuwty1c.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdh2k3ix5.php:24\n\
    Stack trace:\n#0 /tmp/tmpdh2k3ix5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdh2k3ix5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = intval($date[0]);\n    $day\
    \ = intval($date[1]);\n    $year = intval($date[2]);\n    if($month < 1 || $month\
    \ > 12) {\n        return false;\n    }\n    if($day < 1 || $day > 31) {\n   \
    \     return false;\n    }\n    if($month == 2) {\n        if($day > 29) {\n \
    \           return false;\n        }\n    }\n    if($month == 4 || $month == 6\
    \ || $month == 9 || $month == 11) {\n        if($day > 30) {\n            return\
    \ false;\n        }\n    }\n    if($month == 1) {\n        if($day > 31) {\n \
    \           return false;\n        }\n    }\n    return true;\n}\n</code>\n<|/\
    \ a tags=php,date,validation |>\n<| c |>\nThis doesn't work when $date is a string\
    \ like \"01-01-2000\"\n<|/ c |>\n<| c |>\nI added a function that validates dates\
    \ according to your rules.\n<|/ c |>\n<| c |>\nThis doesn't work when $date is\
    \ a string like \"01-01-2000\"\n<|/ c |>\n<| c |>\nI added a function that validates\
    \ dates according to your rules.\n<|/ c |>\n<| c |>\nThis doesn't work when $date\
    \ is a string like \"01-01-2000\"\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppkwz9km5.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    if (strlen($date)\
    \ > 0) {\n        $d = explode('-', $date);\n        $m = $d[1];\n        $d =\
    \ $d[0];\n        $y = $d[2];\n        $valid = ($m > 0 && $m <= 12 && $d > 1\
    \ && $d <= 31 && $y > 0 && $y <= 12);\n    }\n    return $valid;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjn1m63zs.php:32\n\
    Stack trace:\n#0 /tmp/tmpjn1m63zs.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpjn1m63zs.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $day\
    \ = date('d', strtotime($date[0]));\n    $month = date('m', strtotime($date[0]));\n\
    \    $year = date('Y', strtotime($date[0]));\n    $months = array(\n        1\
    \ => 31,\n        3 => 31,\n        5 => 31,\n        7 => 31,\n        8 => 31,\n\
    \        10 => 31,\n        12 => 31,\n        4 => 30,\n        6 => 30,\n  \
    \      9 => 30,\n        11 => 30,\n        2 => 29\n    );\n    $days[$month]\
    \ = $months[$month];\n    if ($day < 1 || $day > $days[$month]) {\n        return\
    \ false;\n    }\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($year < 1000 || $year > 9999) {\n        return false;\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa9_srqvg.php:55\n\
    Stack trace:\n#0 /tmp/tmpa9_srqvg.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpa9_srqvg.php\
    \ on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8iya8kwg.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmoa2dz1.php:23\n\
    Stack trace:\n#0 /tmp/tmpnmoa2dz1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnmoa2dz1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $dateArray = explode('-', $date);\n   \
    \ if (count($dateArray) != 3) {\n        return false;\n    }\n    $month = $dateArray[0];\n\
    \    $day = $dateArray[1];\n    $year = $dateArray[2];\n    if ($month < 1 ||\
    \ $month > 12) {\n        return false;\n    }\n    if ($day < 1 || $day > 31)\
    \ {\n        return false;\n    }\n    if ($month == 2) {\n        if ($day >\
    \ 29) {\n            return false;\n        }\n    }\n    if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day > 30) {\n         \
    \   return false;\n        }\n    }\n    if ($month == 1) {\n        if ($day\
    \ > 31) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = strtolower($month);\n    $day = strtolower($day);\n    $month =\
    \ str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $date\
    \ = str_pad($day, 2, \"0\", STR_PAD_LEFT) . \"-\" . str_pad($month, 2, \"0\",\
    \ STR_PAD_LEFT) . \"-\" . str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    if ($date\
    \ == '') {\n        return false;\n    }\n    if ($day < 1 || $day > 31) {\n \
    \       return false;\n    }\n    if ($month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n\
    \            return false;\n        }\n    }\n    if ($month == 1) {\n       \
    \ if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\n\
    \    if ($month == 3) {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    if ($month == 5) {\n        if ($day < 1 || $day\
    \ > 31) {\n            return false;\n        }\n    }\n    if ($month == 7) {\n\
    \        if ($day < 1 || $day > 31) {\n            return false;\n        }\n\
    \    }\n    if ($month == 8) {\n        if ($day < 1 || $day > 31) {\n       \
    \     return false;\n        }\n    }\n    if ($month == 10) {\n        if ($day\
    \ < 1 || $day > 30) {\n            return false;\n        }\n    }\n    if ($month\
    \ == 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0lsvxqmj.php:83\n\
    Stack trace:\n#0 /tmp/tmp0lsvxqmj.php(100): test()\n#1 {main}\n  thrown in /tmp/tmp0lsvxqmj.php\
    \ on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $day = $dateArray[0];\n    $month = $dateArray[1];\n    $year = $dateArray[2];\n\
    \    $daysInMonth = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n    if ($day\
    \ < 1 || $day > $daysInMonth) {\n        return false;\n    }\n    if ($month\
    \ < 1 || $month > 12) {\n        return false;\n    }\n    if ($year < 1000 ||\
    \ $year > 9999) {\n        return false;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmpmfpbg61m.php:20\nStack trace:\n#0 /tmp/tmpmfpbg61m.php(33): valid_date('03-11-2000')\n\
    #1 /tmp/tmpmfpbg61m.php(37): candidate('03-11-2000')\n#2 /tmp/tmpmfpbg61m.php(55):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpmfpbg61m.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    $dateArray\
    \ = explode('-', $date);\n    if (empty($dateArray[0])) {\n        $valid = false;\n\
    \    } else {\n        $valid = true;\n    }\n    if (count($dateArray) < 3 ||\
    \ count($dateArray) > 4) {\n        $valid = false;\n    } else {\n        $valid\
    \ = true;\n    }\n    if ($dateArray[1] < 1 || $dateArray[1] > 12) {\n       \
    \ $valid = false;\n    } else {\n        $valid = true;\n    }\n    if ($dateArray[2]\
    \ < 1 || $dateArray[2] > 31) {\n        $valid = false;\n    } else {\n      \
    \  $valid = true;\n    }\n    if ($dateArray[1] < 1 || $dateArray[1] > 12) {\n\
    \        $valid = false;\n    } else {\n        $valid = true;\n    }\n    if\
    \ ($dateArray[2] < 1 || $dateArray[2] > 30) {\n        $valid = false;\n    }\
    \ else {\n        $valid = true;\n    }\n    if ($dateArray[1] < 1 || $dateArray[1]\
    \ > 12) {\n        $valid = false;\n    } else {\n        $valid = true;\n   \
    \ }\n    if ($dateArray[2] < 1 || $dateArray[2] > 29) {\n        $valid = false;\n\
    \    } else {\n        $valid = true;\n    }\n    return $valid;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vktd11w.php:65\n\
    Stack trace:\n#0 /tmp/tmp0vktd11w.php(83): test()\n#1 {main}\n  thrown in /tmp/tmp0vktd11w.php\
    \ on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode(\"-\", $date);\n    $day = $dateArray[0];\n    $month = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    $daysInMonth2 = cal_days_in_month(CAL_GREGORIAN, $month\
    \ + 1, $year);\n    $daysInMonth3 = cal_days_in_month(CAL_GREGORIAN, $month +\
    \ 2, $year);\n    $daysInMonth4 = cal_days_in_month(CAL_GREGORIAN, $month + 3,\
    \ $year);\n    $daysInMonth5 = cal_days_in_month(CAL_GREGORIAN, $month + 4, $year);\n\
    \    $daysInMonth6 = cal_days_in_month(CAL_GREGORIAN, $month + 5, $year);\n  \
    \  $daysInMonth7 = cal_days_in_month(CAL_GREGORIAN, $month + 6, $year);\n    $daysInMonth8\
    \ = cal_days_in_month(CAL_GREGORIAN, $month + 7, $year);\n    $daysInMonth9 =\
    \ cal_days_in_month(CAL_GREGORIAN, $month + 8, $year);\n    $daysInMonth10 = cal_days_in_month(CAL_GREGORIAN,\
    \ $month + 9, $year);\n    $daysInMonth11 = cal_days_in_month(CAL_GREGORIAN, $month\
    \ + 10, $year);\n    $daysInMonth12 = cal_days_in_month(CAL_GREGORIAN, $month\
    \ + 11, $year);\n    if ($day < 1 || $day > $daysInMonth) {\n        return false;\n\
    \    }\n    if ($month < 1 || $month > 12) {\n        return false;\n    }\n \
    \   if ($month == 2) {\n        if ($day < 1 || $day > $daysInMonth2) {\n    \
    \        return false;\n        }\n    }\n    if ($month == 3) {\n        if ($day\
    \ < 1 || $day > $daysInMonth3) {\n            return false;\n        }\n    }\n\
    \    if ($month == 4) {\n        if ($day < 1 || $day > $daysInMonth4) {\n   \
    \         return false;\n        }\n    }\n    if ($month == 5) {\n        if\
    \ ($day < 1 || $day > $daysInMonth5) {\n            return false;\n        }\n\
    \    }\n    if ($month == 6) {\n        if ($day < 1 || $day > $daysInMonth6)\
    \ {\n            return false;\n        }\n    }\n    if ($month == 7) {\n   \
    \     if ($day < 1 || $day > $daysInMonth7) {\n            return false;\n   \
    \     }\n    }\n    if ($month == 8) {\n        if ($day < 1 || $day > $daysInMonth8)\
    \ {\n            return false;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp161dtsh.php on line 95\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[0].'-'.$date[1];\n\
    \    $date = strtotime($date);\n    $today = time();\n    $difference = $today\
    \ - $date;\n    $days = floor($difference / 86400);\n    $months = floor(($difference\
    \ - $days * 86400) / 86400);\n    $years = floor(($difference - $days * 86400\
    \ - $months * 86400) / 86400);\n    if ($days < 1 || $days > 31) {\n        return\
    \ false;\n    }\n    if ($months < 1 || $months > 12) {\n        return false;\n\
    \    }\n    if ($years < 1 || $years > 30) {\n        return false;\n    }\n \
    \   return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zxih01d.php:43\n\
    Stack trace:\n#0 /tmp/tmp9zxih01d.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp9zxih01d.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != '' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8cqz_6ys.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = str_replace(' ', '-', $date);\n    $date = strtotime($date);\n  \
    \  $date = date('Y-m-d', $date);\n    $date = explode('-', $date);\n    $date\
    \ = $date[2].'-'.$date[1].'-'.$date[0];\n    $date = strtotime($date);\n    $date\
    \ = date('Y-m-d', $date);\n    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[1].'-'.$date[0];\n\
    \    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date =\
    \ explode('-', $date);\n    $date = $date[2].'-'.$date[1].'-'.$date[0];\n    $date\
    \ = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date = explode('-',\
    \ $date);\n    $date = $date[2].'-'.$date[1].'-'.$date[0];\n    $date = strtotime($date);\n\
    \    $date = date('Y-m-d', $date);\n    $date = explode('-', $date);\n    $date\
    \ = $date[2].'-'.$date[1].'-'.$date[0];\n    $date = strtotime($date);\n    $date\
    \ = date('Y-m-d', $date);\n    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[1].'-'.$date[0];\n\
    \    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date =\
    \ explode('-', $date);\n    $date = $date[2].'-'.$date[1].'-'.$date[0];\n    $date\
    \ = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date = explode('-',\
    \ $date);\n    $date = $date[2].'-'.$date[1].'-'.$date[0];\n    $date = strtotime($date);\n\
    \    $date = date('Y-m-d', $date);\n    $date = explode('-', $date);\n    $date\
    \ = $date[2].'-'.$date[1].'-'.$date[0];\n    $date = strtotime($date);\n    $date\
    \ = date('Y-m-d', $date);\n    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[1].'-'.$date[0];\n\
    \    $date = strtotime($\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3wd2yjx9.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace(' ', '-', $date);\n\
    \    $date = strtotime($date);\n    $date = strtotime('01-01-' . $date);\n   \
    \ $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' . $date);\n\
    \    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-' \nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0ga9i04a.php on line 57\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $day = $dateArray[0];\n    $month = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    if ($day < 1 || $day > $daysInMonth) {\n        return\
    \ false;\n    }\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($year < 1000 || $year > 9999) {\n        return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmptsu894ad.php:21\nStack trace:\n#0 /tmp/tmptsu894ad.php(35): valid_date('03-11-2000')\n\
    #1 /tmp/tmptsu894ad.php(39): candidate('03-11-2000')\n#2 /tmp/tmptsu894ad.php(57):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmptsu894ad.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $valid = true;\n    \n\
    \    if (empty($date)) {\n        $valid = false;\n    }\n    \n    if (count($dateArray)\
    \ < 3) {\n        $valid = false;\n    }\n    \n    if (count($dateArray) > 3)\
    \ {\n        $valid = false;\n    }\n    \n    if ($dateArray[0] < 1 || $dateArray[0]\
    \ > 12) {\n        $valid = false;\n    }\n    \n    if ($dateArray[1] < 1 ||\
    \ $dateArray[1] > 31) {\n        $valid = false;\n    }\n    \n    if ($dateArray[2]\
    \ < 1 || $dateArray[2] > 30) {\n        $valid = false;\n    }\n    \n    if ($dateArray[2]\
    \ < 1 || $dateArray[2] > 29) {\n        $valid = false;\n    }\n    \n    return\
    \ $valid;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9x3d3qj.php:56\n\
    Stack trace:\n#0 /tmp/tmpv9x3d3qj.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpv9x3d3qj.php\
    \ on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != '';\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphewwe8p1.php:25\n\
    Stack trace:\n#0 /tmp/tmphewwe8p1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphewwe8p1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3jr1p966.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $date\
    \ = explode(\"-\", $date);\n    $date = $date[2].\"-\".$date[0].\"-\".$date[1];\n\
    \    $days_in_months = array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n\
    \    $days_in_months[2] = 29;\n    $days_in_months[1] = 28;\n    $days_in_months[0]\
    \ = 29;\n    $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n    $months[2] = 12;\n\
    \    $months[1] = 12;\n    $months[0] = 12;\n    $days_in_years = array(365, 366,\
    \ 365, 366, 365, 366, 365, 366, 365, 366, 365, 366, 365, 366);\n    $days_in_years[2]\
    \ = 365;\n    $days_in_years[1] = 366;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $days_in_years[0] = 365;\n    $days_in_years[2]\
    \ = 366;\n    $days_in_years[1] = 365;\n    $day\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0dki_gbz.php on line 73\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = str_replace(' ', '-', $date);\n    $date = strtotime($date);\n  \
    \  $date = date('Y-m-d', $date);\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode('/', $date);\n    $date = $date[0];\n    $date\
    \ = explode('-', $date);\n    $date = $date[0];\n    $date = explode(' ', $date);\n\
    \    $date = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n\
    \    $date = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-',\
    \ $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n    $date\
    \ = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n\
    \    $date = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n\
    \    $date = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-',\
    \ $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n    $date\
    \ = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n\
    \    $date = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n\
    \    $date = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-',\
    \ $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n    $date\
    \ = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n\
    \    $date = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n\
    \    $date = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-',\
    \ $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n    $date\
    \ = explode('-\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzc0rvvoj.php on line 82\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $month\
    \ = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n    if($month < 1\
    \ || $month > 12) {\n        return false;\n    }\n    if($day < 1 || $day > 31)\
    \ {\n        return false;\n    }\n    if($month == 2) {\n        if($day > 29)\
    \ {\n            return false;\n        }\n    }\n    if($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if($day > 30) {\n          \
    \  return false;\n        }\n    }\n    if($month == 1) {\n        if($day > 31)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nI appreciate your efforts, but I already have a working\
    \ solution and I posted it as an answer above. Thanks anyway!\n<|/ c |>\n<| a\
    \ tags=date,php |>\nI already have a working solution and I posted it as an answer\
    \ above. Thanks anyway!\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpta10zd7y.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    $dateArray\
    \ = explode(\"-\", $date);\n    if (count($dateArray) == 3) {\n        $valid\
    \ = true;\n        $month = $dateArray[0];\n        $day = $dateArray[1];\n  \
    \      $year = $dateArray[2];\n        if ($month < 1 || $month > 12) {\n    \
    \        $valid = false;\n        }\n        if ($day < 1 || $day > 31) {\n  \
    \          $valid = false;\n        }\n        if ($month == 2) {\n          \
    \  if ($day > 29) {\n                $valid = false;\n            }\n        }\n\
    \        if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n  \
    \          if ($day > 30) {\n                $valid = false;\n            }\n\
    \        }\n        if ($month == 1) {\n            if ($day > 31) {\n       \
    \         $valid = false;\n            }\n        }\n    }\n    return $valid;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = array_map('intval', $date);\n \
    \   $date = $date[2] . '-' . $date[1] . '-' . $date[0];\n    $date = strtotime($date);\n\
    \    $today = time();\n    $datediff = $today - $date;\n    if ($datediff > 0\
    \ || $datediff < 86400) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppo78shf_.php:37\n\
    Stack trace:\n#0 /tmp/tmppo78shf_.php(54): test()\n#1 {main}\n  thrown in /tmp/tmppo78shf_.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    $dateArray\
    \ = explode('-', $date);\n    $day = $dateArray[0];\n    $month = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    if ($day > 0 && $day <= $daysInMonth) {\n        $valid\
    \ = true;\n    }\n    if ($month > 0 && $month <= 12) {\n        $valid = true;\n\
    \    }\n    if ($year > 1900 && $year < 2100) {\n        $valid = true;\n    }\n\
    \    return $valid;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI appreciate your\
    \ effort but this does not answer the question. I am looking for a way to validate\
    \ a date string in PHP. Your code does not do that. I am looking for a way to\
    \ validate a date string in PHP. Your code does not do that. I am looking for\
    \ a way to validate a date string in PHP. Your code does not do that. I am looking\
    \ for a way to validate a date string in PHP. Your code does not do that. I am\
    \ looking for a way to validate a date string in PHP. Your code does not do that.\
    \ I am looking for a way to validate a date string in PHP. Your code does not\
    \ do that. I am looking for a way to validate a date string in PHP. Your code\
    \ does not do that. I am looking for a way to validate a date string in PHP. Your\
    \ code does not do that. I am looking for a way to validate a date string in PHP.\
    \ Your code does not do that. I am looking for a way to validate a date string\
    \ in PHP. Your code does not do that. I am looking for a way to validate a date\
    \ string in PHP. Your code does not do that. I am looking for a way to validate\
    \ a date string in PHP. Your code does not do that. I am looking for a way to\
    \ validate a date string in PHP. Your code does not do that. I am looking for\
    \ a way to validate a date string in PHP. Your code does not do that. I am looking\
    \ for a way to validate a date string in PHP. Your code does not do that. I am\
    \ looking for a way to validate a date string in PHP. Your code does not do that.\
    \ I am looking for a way to validate a date string in PHP. Your code does not\
    \ do that. I am looking for a way to validate a date string in PHP. Your code\
    \ does not do that. I am looking for a way to validate a date string in PHP. Your\
    \ code does not do that. I am looking for a way to validate a date string in PHP.\
    \ Your code does not do that. I am looking for a way to validate a date string\
    \ in PHP. Your code does not do that. I am looking for a way to validate a date\
    \ string in \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptzm82ya8.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $valid = true;\n    if\
    \ (empty($dateArray[0])) {\n        $valid = false;\n    }\n    if ($dateArray[1]\
    \ < 1 || $dateArray[1] > 31) {\n        $valid = false;\n    }\n    if ($dateArray[2]\
    \ < 1 || $dateArray[2] > 30) {\n        $valid = false;\n    }\n    if ($dateArray[1]\
    \ == 2 && $dateArray[2] > 29) {\n        $valid = false;\n    }\n    if ($dateArray[1]\
    \ == 2 && $dateArray[2] < 1) {\n        $valid = false;\n    }\n    if ($dateArray[1]\
    \ < 1 || $dateArray[1] > 12) {\n        $valid = false;\n    }\n    return $valid;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97ekqq3u.php:44\n\
    Stack trace:\n#0 /tmp/tmp97ekqq3u.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp97ekqq3u.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptuypurbx.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = array_map('intval', $date);\n \
    \   $date = array_filter($date);\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date, 'strlen');\n    $date = array_filter($date, 'strlen');\n\
    \    $date = array_filter($date\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpil9bhcxa.php on line 64\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_qji891.php:23\n\
    Stack trace:\n#0 /tmp/tmp5_qji891.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5_qji891.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkn9utkn7.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $day = $dateArray[0];\n    $month = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    if (empty($date) || $day < 1 || $day > 31 ||\
    \ $month < 1 || $month > 12 || $year < 1000 || $year > 9999) {\n        return\
    \ false;\n    }\n    if ($month == 1 && $day > 31) {\n        return false;\n\
    \    }\n    if ($month == 4 && $day > 30) {\n        return false;\n    }\n  \
    \  if ($month == 2 && $day > 29) {\n        return false;\n    }\n    if ($month\
    \ == 6 && $day > 31) {\n        return false;\n    }\n    if ($month == 9 && $day\
    \ > 30) {\n        return false;\n    }\n    if ($month == 11 && $day > 31) {\n\
    \        return false;\n    }\n    if ($month == 12 && $day > 31) {\n        return\
    \ false;\n    }\n    return true;\n}\n</code>\n<|/ a tags=php,date |>\n<| c |>\n\
    Thanks for your answer. Your code works fine for valid dates. But it fails for\
    \ invalid dates like `04-0-2040`, `06-04-2020`, `06/04/2020`\n<|/ c |>\n<| c |>\n\
    Yes, I know. That's why I wrote \"Write your code here\". I didn't write all the\
    \ code because I thought you might want to learn from it. But if you don't want\
    \ to, I will edit my answer to include a function that validates your dates. I\
    \ hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works fine\
    \ for valid dates. But it fails for invalid dates like `04-0-2040`, `06-04-2020`,\
    \ `06/04/2020`\n<|/ c |>\n<| c |>\nI edited my answer to include a function that\
    \ validates your dates. I hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works fine for valid dates. But it fails for invalid dates like `04-0-2040`,\
    \ `06-04-2020`, `06/04/2020`\n<|/ c |>\n<| a tags=php,date |>\n<code>\n<?php\n\
    $date = \"04-0-2040\";\n$dateArray = explode('-', $date);\n$day = $dateArray[0];\n\
    $month = $dateArray[1];\n$year = $dateArray[2];\nif (empty($date) || $day < 1\
    \ || $day > 31 || $month < 1 || $month > 12 || $year\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5py1cjrm.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqemvxjm2.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN, date('m'),\
    \ date('t'));\n    $days_in_year = cal_days_in_year(CAL_GREGORIAN, date('Y'));\n\
    \    $days_in_this_year = date('t');\n    $days_in_this_month = date('t', strtotime('+1\
    \ month', strtotime('-1 day', $date)));\n    $days_in_next_year = date('t', strtotime('+1\
    \ year', strtotime('-1 day', $date)));\n    $days_in_next_month = date('t', strtotime('+1\
    \ month', strtotime('+1 day', $date)));\n    $days_in_next_year = date('t', strtotime('+1\
    \ year', strtotime('+1 day', $date)));\n    $days_in_next_month = date('t', strtotime('+1\
    \ month', strtotime('+1 day', $date)));\n    $days_in_next_year = date('t', strtotime('+1\
    \ year', strtotime('+1 day', $date)));\n    $days_in_next_month = date('t', strtotime('+1\
    \ month', strtotime('+1 day', $date)));\n    $days_in_next_year = date('t', strtotime('+1\
    \ year', strtotime('+1 day', $date)));\n    $days_in_next_month = date('t', strtotime('+1\
    \ month', strtotime('+1 day', $date)));\n    $days_in_next_year = date('t', strtotime('+1\
    \ year', strtotime('+1 day', $date)));\n    $days_in_next_month = date('t', strtotime('+1\
    \ month', strtotime('+1 day', $date)));\n    $days_in_next_year = date('t', strtotime('+1\
    \ year', strtotime('+1 day', $date)));\n    $days_in_next_month = date('t', strtotime('+1\
    \ month', strtotime('+1 day', $date)));\n    $days_in_next_year = date('t', strtotime('+1\
    \ year', strtotime('+1 day', $date)));\n    $days_in_next_month = date('t', strtotime('+1\
    \ month', strtotime('+1 day', $date)));\n    $days_in_next_year = date('t', strtotime('+1\
    \ year', strtotime('+1 day', $date)));\n    $days_in_next_month = date('t', strtotime('+1\
    \ month', strtotime('+1 day', $date)));\n    $days_in_next_year = \nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0sslw1nk.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpod3f9i0r.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $date\
    \ = explode('-', $date);\n    $day = $date[0];\n    $month = $date[1];\n    $year\
    \ = $date[2];\n    $daysInMonth = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n\
    \    $valid = false;\n    if ($day != '' && $month != '' && $year != '' && $day\
    \ != '' && $month != '' && $year != '' && $day != '' && $month != '' && $year\
    \ != '' && $day != '' && $month != '' && $year != '' && $day != '' && $month !=\
    \ '' && $year != '' && $day != '' && $month != '' && $year != '' && $day != ''\
    \ && $month != '' && $year != '' && $day != '' && $month != '' && $year != ''\
    \ && $day != '' && $month != '' && $year != '' && $day != '' && $month != '' &&\
    \ $year != '' && $day != '' && $month != '' && $year != '' && $day != '' && $month\
    \ != '' && $year != '' && $day != '' && $month != '' && $year != '' && $day !=\
    \ '' && $month != '' && $year != '' && $day != '' && $month != '' && $year !=\
    \ '' && $day != '' && $month != '' && $year != '' && $day != '' && $month != ''\
    \ && $year != '' && $day != '' && $month != '' && $year != '' && $day != '' &&\
    \ $month != '' && $year != '' && $day != '' && $month != '' && $year != '' &&\
    \ $day != '' && $month != '' && $year != '' && $day != '' && $month != '' && $year\
    \ != '' && $day != '' && $month != '' && $year != '' && $day != '' && $month !=\
    \ '' && $year != '' && $day != '' && $month != '' && $year != '' && $day != ''\
    \ && $month != '' && $year != '' && $day != '' && $month != '' && $year != ''\
    \ && $day != '' && $month != '' && $year != '' && $day != '' && $month != '' &&\
    \ $year != '' && $day != '' && $month != '' && $year != '' && $day != '' && \n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6oz4rx0p.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = strtotime($date);\n    if ($date\
    \ === false) {\n        return false;\n    }\n    $year = date('Y', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $days_in_month\
    \ = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n    if ($day < 1 || $day\
    \ > $days_in_month) {\n        return false;\n    }\n    $months = array(\n  \
    \      1 => 31,\n        3 => 31,\n        5 => 31,\n        7 => 31,\n      \
    \  8 => 31,\n        10 => 31,\n        12 => 31,\n        4 => 30,\n        6\
    \ => 30,\n        9 => 30,\n        11 => 30\n    );\n    if ($month < 1 || $month\
    \ > 12) {\n        return false;\n    }\n    $months_count = count($months);\n\
    \    $days_in_month = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n    if\
    \ ($day < 1 || $day > $days_in_month) {\n        return false;\n    }\n    $months_count\
    \ = count($months);\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN, $month,\
    \ $year);\n    if ($day < 1 || $day > $days_in_month) {\n        return false;\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmpqc5uubo_.php:27\nStack trace:\n#0 /tmp/tmpqc5uubo_.php(60): valid_date(973209600)\n\
    #1 /tmp/tmpqc5uubo_.php(64): candidate('03-11-2000')\n#2 /tmp/tmpqc5uubo_.php(82):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpqc5uubo_.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $current_date\
    \ = date('Y-m-d');\n    $current_date = strtotime($current_date);\n    $current_date\
    \ = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = date('Y-m-d', $current_date);\n    $current_date = strtotime($current_date);\n\
    \    $current_date = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppvtb_o3j.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppmpqtehe.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    if (count($dateArray)\
    \ != 3) {\n        return false;\n    }\n    if ($dateArray[0] > 31 || $dateArray[0]\
    \ < 1) {\n        return false;\n    }\n    if ($dateArray[1] > 31 || $dateArray[1]\
    \ < 1) {\n        return false;\n    }\n    if ($dateArray[2] > 12) {\n      \
    \  return false;\n    }\n    if ($dateArray[0] > $dateArray[1] || $dateArray[1]\
    \ > $dateArray[2]) {\n        return false;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7laq5aww.php:41\n\
    Stack trace:\n#0 /tmp/tmp7laq5aww.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp7laq5aww.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[0].'-'.$date[1];\n\
    \    $date = strtotime($date);\n    $today = strtotime(date('Y-m-d'));\n    return\
    \ ($date > $today);\n}\n</code>\n<|/ a tags=php,date,validation |>\n<| c |>\n\
    This doesn't work when validating a date of \"01-01-2000\" because strtotime returns\
    \ false for that date. Also the date validation doesn't take into account leap\
    \ years.\n<|/ c |>\n<| c |>\nI tested it and it works fine. Can you please tell\
    \ me what exactly is not working?\n<|/ c |>\n<| c |>\nIt doesn't work when validating\
    \ a date of \"01-01-2000\" because strtotime returns false for that date. Also\
    \ the date validation doesn't take into account leap years.\n<|/ c |>\n<| c |>\n\
    I tested it and it works fine. Can you please tell me what exactly is not working?\n\
    <|/ c |>\n<| c |>\nIt doesn't work when validating a date of \"01-01-2000\" because\
    \ strtotime returns false for that date. Also the date validation doesn't take\
    \ into account leap years.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_uormsb4.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = str_replace('/', '-', $date);\n\
    \    $date = str_replace('-', '/', $date);\n    $date = str_replace(' ', '-',\
    \ $date);\n    $date = strtotime($date);\n    if ($date == false) return false;\n\
    \    $year = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d',\
    \ $date);\n    if ($month < 1 || $month > 12) return false;\n    if ($day < 1\
    \ || $day > 31) return false;\n    if ($month == 1 && $day > 30) return false;\n\
    \    if ($month == 2 && $day > 29) return false;\n    if ($month == 4 && $day\
    \ > 31) return false;\n    if ($month == 6 && $day > 30) return false;\n    if\
    \ ($month == 9 && $day > 31) return false;\n    if ($month == 11 && $day > 30)\
    \ return false;\n    if ($month == 1 && $day > 31) return false;\n    if ($month\
    \ == 3 && $day > 31) return false;\n    if ($month == 5 && $day > 31) return false;\n\
    \    if ($month == 7 && $day > 31) return false;\n    if ($month == 8 && $day\
    \ > 31) return false;\n    if ($month == 10 && $day > 31) return false;\n    if\
    \ ($month == 12 && $day > 31) return false;\n    if ($month == 1 && $day > 30)\
    \ return false;\n    if ($month == 3 && $day > 31) return false;\n    if ($month\
    \ == 5 && $day > 31) return false;\n    if ($month == 7 && $day > 31) return false;\n\
    \    if ($month == 8 && $day > 31) return false;\n    if ($month == 10 && $day\
    \ > 31) return false;\n    if ($month == 12 && $day > 31) return false;\n    if\
    \ ($month == 1 && $day > 31) return false;\n    if ($month == 3 && $day > 31)\
    \ return false;\n    if ($month == 5 && $day > 31) return false;\n    if ($month\
    \ == 7 && $day > 31) return false;\n    if ($month == 8 && $day > 31) return false;\n\
    \    if ($month == 10 && $day > 31) return false;\n    if ($month == 12 && $day\
    \ > 31) return false;\n    if ($month == 1 && $day > 31) return false;\n    if\
    \ ($month == 3 && $day > 31) return false;\n    if ($month == 5 && $day > 31)\
    \ return false;\n    if ($month == 7 && $day > 31) return false;\n    if ($month\
    \ == 8 && $day > 31) return false;\n    if ($month == 10 && $day > 31) return\
    \ false;\n    if ($month == 12 && $day > 31) return false;\n    if ($month ==\
    \ 1 && $day > 31) return false;\n    if ($month == 3 && $day > 31) return false;\n\
    \    if ($month == 5 && $day > 31) return false;\n    if ($month == 7 && $day\
    \ > 31) return false;\n    if (\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_l2n1by0.php on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $dateArray = explode('-', $date);\n   \
    \ $dateArray = array_map('intval', $dateArray);\n    if (count($dateArray) !=\
    \ 3) {\n        return false;\n    }\n    $month = $dateArray[0];\n    $day =\
    \ $dateArray[1];\n    $year = $dateArray[2];\n    if ($month < 1 || $month > 12)\
    \ {\n        return false;\n    }\n    if ($day < 1 || $day > 31) {\n        return\
    \ false;\n    }\n    if ($month == 2) {\n        if ($day > 29) {\n          \
    \  return false;\n        }\n    }\n    if ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n        if ($day > 30) {\n            return false;\n\
    \        }\n    }\n    if ($month == 1) {\n        if ($day > 31) {\n        \
    \    return false;\n        }\n    }\n    if ($month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8) {\n        if ($day > 31) {\n            return false;\n\
    \        }\n    }\n    if ($month == 7) {\n        if ($day > 31) {\n        \
    \    return false;\n        }\n    }\n    if ($month == 10) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($month == 12)\
    \ {\n        if ($day > 31) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    $days = floor($difference\
    \ / 86400);\n    $months = floor(($difference % 86400) / 3600 / 24);\n    $years\
    \ = floor(($difference % 86400) / 3600);\n    if ($days < 1 || $days > 31 || $months\
    \ < 1 || $months > 12 || $years < 1 || $years > 30) {\n        return false;\n\
    \    }\n    if ($months == 2) {\n        if ($days == 29) {\n            return\
    \ true;\n        }\n    }\n    if ($months == 1) {\n        if ($days == 31) {\n\
    \            return true;\n        }\n    }\n    if ($months == 3) {\n       \
    \ if ($days == 30) {\n            return true;\n        }\n    }\n    if ($months\
    \ == 4) {\n        if ($days == 31) {\n            return true;\n        }\n \
    \   }\n    if ($months == 6) {\n        if ($days == 30) {\n            return\
    \ true;\n        }\n    }\n    if ($months == 9) {\n        if ($days == 31) {\n\
    \            return true;\n        }\n    }\n    if ($months == 11) {\n      \
    \  if ($days == 30) {\n            return true;\n        }\n    }\n    if ($months\
    \ == 12) {\n        if ($days == 31) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlvihr8r.php:72\n\
    Stack trace:\n#0 /tmp/tmprlvihr8r.php(90): test()\n#1 {main}\n  thrown in /tmp/tmprlvihr8r.php\
    \ on line 72\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    if (strlen($date)\
    \ > 0) {\n        $d = explode('-', $date);\n        if (count($d) == 3) {\n \
    \           $valid = true;\n            $m = $d[0];\n            $d = $d[1];\n\
    \            $y = $d[2];\n            if ($m > 0 && $m <= 12 && $d > 0 && $d <=\
    \ 31 && $y > 0 && $y <= 9999) {\n                $valid = true;\n            }\n\
    \            if ($m > 0 && $m <= 12 && $d > 0 && $d <= 30 && $y > 0 && $y <= 9999)\
    \ {\n                $valid = true;\n            }\n            if ($m > 0 &&\
    \ $m <= 12 && $d > 0 && $d <= 29 && $y > 0 && $y <= 9999) {\n                $valid\
    \ = true;\n            }\n        }\n    }\n    return $valid;\n}\n</code>\n<|/\
    \ a tags=php,date,validation |>\n<| c |>\nThis does not work if you pass it a\
    \ date like `01-02-2000` which should be valid but is not.\n<|/ c |>\n<| c |>\n\
    : Yes, you are right. I've edited my answer to include a function that validates\
    \ dates according to your rules.\n<|/ c |>\n<| c |>\n: I've edited my answer to\
    \ include a function that validates dates according to your rules.\n<|/ c |>\n\
    <| c |>\n: I've edited my answer to include a function that validates dates according\
    \ to your rules.\n<|/ c |>\n<| c |>\n: I've edited my answer to include a function\
    \ that validates dates according to your rules.\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprm1jacio.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwss0ejo.php:23\n\
    Stack trace:\n#0 /tmp/tmpfwss0ejo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfwss0ejo.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $date\
    \ = strtotime($date);\n    $year = date('Y', $date);\n    $month = date('m', $date);\n\
    \    $day = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d',\
    \ $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n    $month\
    \ = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n\
    \    $day = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d',\
    \ $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n    $month\
    \ = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n\
    \    $day = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d',\
    \ $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n    $month\
    \ = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n\
    \    $day = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d',\
    \ $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n    $month\
    \ = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n\
    \    $day = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d',\
    \ $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n    $month\
    \ = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n\
    \    $day = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d',\
    \ $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n    $month\
    \ = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n\
    \    $day = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d',\
    \ $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n    $month\
    \ = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n\
    \    $day = date('d', $\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgbzo4eor.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuma1ufva.php:23\n\
    Stack trace:\n#0 /tmp/tmpuma1ufva.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpuma1ufva.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace(' ', '-', $date);\n\
    \    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date =\
    \ explode('-', $date);\n    $date = array_map('intval', $date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3tg0ga6w.php on line 79\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $date\
    \ = explode('-', $date);\n    $day = $date[0];\n    $month = $date[1];\n    $year\
    \ = $date[2];\n    $days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,\
    \ 31];\n    $days_in_month[$month - 1] = $days_in_month[$month - 1];\n    $days_in_month[$month]\
    \ = $days_in_month[$month];\n    $days_in_month[$month + 1] = $days_in_month[$month\
    \ + 1];\n    if ($day < 1 || $day > $days_in_month[$month - 1] || $month < 1 ||\
    \ $month > 12 || $year < 1000 || $year > 9999) {\n        return false;\n    }\n\
    \    if ($day < 1 || $day > $days_in_month[$month]) {\n        return false;\n\
    \    }\n    if ($month < 1 || $month > 12) {\n        return false;\n    }\n \
    \   if ($year < 1000 || $year > 9999) {\n        return false;\n    }\n    return\
    \ true;\n}\n</code>\n<|/ a tags=php,date |>\n<| c |>\nI appreciate your efforts\
    \ but this doesn't work. As I said in the question, I have already tried this\
    \ and it's not working. Thanks anyways.\n<|/ c |>\n<| c |>\nI tested it and it\
    \ works. I edited my answer to include a working example.\n<|/ c |>\n<| c |>\n\
    Thanks for your efforts but this doesn't work. As I said in the question, I have\
    \ already tried this and it's not working. Thanks anyways.\n<|/ c |>\n<| c |>\n\
    I tested it and it works. I edited my answer to include a working example.\n<|/\
    \ c |>\n<| c |>\nThanks for your efforts but this doesn't work. As I said in the\
    \ question, I have already tried this and it's not working. Thanks anyways.\n\
    <|/ c |>\n<| a tags=php,date |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdkdj9hxk.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    $days = floor($difference\
    \ / 86400);\n    $months = floor(($difference - ($days * 86400)) / 2629743);\n\
    \    $years = floor(($difference - ($days * 86400) - ($months * 2629743)) / 31536000);\n\
    \    if ($days < 1 || $days > 31 || $months < 1 || $months > 12 || $years < 1\
    \ || $years > 30) {\n        return false;\n    }\n    if ($months == 2) {\n \
    \       if ($days < 1 || $days > 29) {\n            return false;\n        }\n\
    \    }\n    if ($months == 4 || $months == 6 || $months == 9 || $months == 11)\
    \ {\n        if ($days < 1 || $days > 30) {\n            return false;\n     \
    \   }\n    }\n    if ($months == 1) {\n        if ($days < 1 || $days > 31) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33906rxx.php:47\n\
    Stack trace:\n#0 /tmp/tmp33906rxx.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp33906rxx.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != '' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcz_wv8jg.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmps5aawynd.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = array($date[0], $date[1], $date[2]);\n\
    \    $date[2] = date('Y', strtotime($date[2].'-'.$date[0].'-'.$date[1]));\n  \
    \  if (count($date) != 3) {\n        return false;\n    }\n    if ($date[0] >\
    \ 12 || $date[0] < 1) {\n        return false;\n    }\n    if ($date[1] > 31 ||\
    \ $date[1] < 1) {\n        return false;\n    }\n    if ($date[1] > 30 || $date[1]\
    \ < 1) {\n        return false;\n    }\n    if ($date[2] > 29 || $date[2] < 1)\
    \ {\n        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqu5s9x7.php:44\n\
    Stack trace:\n#0 /tmp/tmpqqu5s9x7.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpqqu5s9x7.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    $days = floor($difference\
    \ / 86400);\n    $months = floor(($difference % 86400) / 3600 / 12);\n    $years\
    \ = floor(($difference % 86400) / 3600 / 365);\n    if ($days < 1 || ($days >\
    \ 31 && $months < 1 || ($months > 12 && $years < 1))) {\n        return false;\n\
    \    }\n    if ($months < 1 || $months > 12) {\n        return false;\n    }\n\
    \    if ($years < 1 || $years > 30) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcp6vyeni.php:38\n\
    Stack trace:\n#0 /tmp/tmpcp6vyeni.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpcp6vyeni.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4lz_yv3y.php:23\n\
    Stack trace:\n#0 /tmp/tmp4lz_yv3y.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4lz_yv3y.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplem5yi3x.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = strtolower($month);\n    $day = strtolower($day);\n    $month =\
    \ str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = str\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpexpytg80.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp17d5f4em.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    if\
    \ ($date === false) {\n        return false;\n    }\n    $year = date('Y', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1v09vtcp.php on line 79\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    $days = floor($difference\
    \ / 86400);\n    $months = floor(($difference - ($days * 86400)) / 2629743);\n\
    \    $years = floor(($difference - ($days * 86400) - ($months * 2629743)) / 31536000);\n\
    \    if ($days < 1 || ($days > 31 && ($months < 1 || $months > 12)) || ($months\
    \ < 4 || $months > 12) || ($years < 1 || $years > 30)) {\n        return false;\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_s1dld9q.php:32\n\
    Stack trace:\n#0 /tmp/tmp_s1dld9q.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp_s1dld9q.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $dateArray = explode('-', $date);\n   \
    \ $month = $dateArray[0];\n    $day = $dateArray[1];\n    $year = $dateArray[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($month == 1) {\n\
    \        if ($day > 31) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9yb2yt4.php:24\n\
    Stack trace:\n#0 /tmp/tmpm9yb2yt4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpm9yb2yt4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = array_map('intval', $date);\n \
    \   $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $date = array_filter($date);\n    $date = array_filter($date);\n\
    \    $date = array_filter($date);\n    $date = array_filter($date);\n    $date\
    \ = array_filter($date);\n    $\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl8o_t9zs.php on line 80\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = str_replace('/', '-', $date);\n\
    \    $date = str_replace('-', '/', $date);\n    $date = explode('-', $date);\n\
    \    $date = $date[2].'-'.$date[0].'-'.$date[1];\n    $date = strtotime($date);\n\
    \    $today = strtotime(date('Y-m-d'));\n    if ($date > $today) {\n        return\
    \ false;\n    }\n    if ($date < $today) {\n        return true;\n    }\n    if\
    \ ($date[0] == '01') {\n        if ($date[1] == '01') {\n            if ($date[2]\
    \ == '01') {\n                return true;\n            }\n        }\n    }\n\
    \    if ($date[0] == '02') {\n        if ($date[1] == '01') {\n            if\
    \ ($date[2] == '01') {\n                return true;\n            }\n        }\n\
    \    }\n    if ($date[0] == '03') {\n        if ($date[1] == '01') {\n       \
    \     if ($date[2] == '01') {\n                return true;\n            }\n \
    \       }\n    }\n    if ($date[0] == '04') {\n        if ($date[1] == '01') {\n\
    \            if ($date[2] == '01') {\n                return true;\n         \
    \   }\n        }\n    }\n    if ($date[0] == '05') {\n        if ($date[1] ==\
    \ '01') {\n            if ($date[2] == '01') {\n                return true;\n\
    \            }\n        }\n    }\n    if ($date[0] == '06') {\n        if ($date[1]\
    \ == '01') {\n            if ($date[2] == '01') {\n                return true;\n\
    \            }\n        }\n    }\n    if ($date[0] == '07') {\n        if ($date[1]\
    \ == '01') {\n            if ($date[2] == '01') {\n                return true;\n\
    \            }\n        }\n    }\n    if ($date[0] == '08') {\n        if ($date[1]\
    \ == '01') {\n            if ($date[2] == '01') {\n                return true;\n\
    \            }\n        }\n    }\n    if ($date[0] == '09') {\n        if ($date[1]\
    \ == '01') {\n            if ($date[2] == '01') {\n                return true;\n\
    \            }\n        }\n    }\n    if ($date[0] == '10') {\n        if ($date[1]\
    \ == '01') {\n            if ($date[2] == '01') {\n                return true;\n\
    \            }\n        }\n    }\n    if ($date[0] == '11') {\n        if ($date[1]\
    \ == '01') {\n            if ($date[2] == '01') {\n                return true;\n\
    \            }\n        }\n    }\n    if ($date[0] == '12') {\n        if ($date[1]\
    \ == '01') {\n            if ($date[2] == '01') {\n                return true;\n\
    \            }\n        }\n    }\n    if ($date[0] == '01') {\n        if ($date[1]\
    \ == '02') {\n            if ($date[2] == '01') {\n                return true;\n\
    \            }\n        }\n    }\n    if ($date[0] == '\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbfewk_4e.php on line 119\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpaylkgtvd.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] > 12) {\n        return\
    \ false;\n    }\n    if ($date[1] < 1 || $date[1] > 12) {\n        return false;\n\
    \    }\n    if ($date[2] < 1 || $date[2] > 31) {\n        return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqg3xkogp.php:41\n\
    Stack trace:\n#0 /tmp/tmpqg3xkogp.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpqg3xkogp.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $valid = false;\n    if\
    \ (count($dateArray) == 3) {\n        $valid = true;\n        $dateArray = array_filter($dateArray,\
    \ 'strlen');\n        $dateArray = array_filter($dateArray, 'is_numeric');\n \
    \       $dateArray = array_filter($dateArray, 'strlen');\n        $dateArray =\
    \ array_filter($dateArray, 'is_numeric');\n        $dateArray = array_filter($dateArray,\
    \ 'strlen');\n        $dateArray = array_filter($dateArray, 'is_numeric');\n \
    \       $dateArray = array_filter($dateArray, 'strlen');\n        $dateArray =\
    \ array_filter($dateArray, 'is_numeric');\n        $dateArray = array_filter($dateArray,\
    \ 'strlen');\n        $dateArray = array_filter($dateArray, 'is_numeric');\n \
    \       $dateArray = array_filter($dateArray, 'strlen');\n        $dateArray =\
    \ array_filter($dateArray, 'is_numeric');\n        $dateArray = array_filter($dateArray,\
    \ 'strlen');\n        $dateArray = array_filter($dateArray, 'is_numeric');\n \
    \       $dateArray = array_filter($dateArray, 'strlen');\n        $dateArray =\
    \ array_filter($dateArray, 'is_numeric');\n        $dateArray = array_filter($dateArray,\
    \ 'strlen');\n        $dateArray = array_filter($dateArray, 'is_numeric');\n \
    \       $dateArray = array_filter($dateArray, 'strlen');\n        $dateArray =\
    \ array_filter($dateArray, 'is_numeric');\n        $dateArray = array_filter($dateArray,\
    \ 'strlen');\n        $dateArray = array_filter($dateArray, 'is_numeric');\n \
    \       $dateArray = array_filter($dateArray, 'strlen');\n        $dateArray =\
    \ array_filter($dateArray, 'is_numeric');\n        $dateArray = array_filter($dateArray,\
    \ 'strlen');\n        $dateArray = array_filter($dateArray, 'is_numeric');\n \
    \       $dateArray = array_filter($dateArray, 'strlen');\n        $dateArray =\
    \ array_filter($dateArray, 'is_numeric');\n        $dateArray = array_filter($dateArray,\
    \ 'strlen');\n        $dateArray = array_filter($dateArray, 'is_numeric');\n \
    \       $dateArray = array_filter($dateArray, 'strlen');\n        $dateArray =\
    \ array_filter($dateArray, 'is_numeric');\n        $dateArray = array_filter($dateArray,\
    \ 'strlen');\n        $dateArray = array_filter($date\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3a6ujzs3.php on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz02tla5e.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $valid_date\
    \ = true;\n    $days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    $days_in_month[$month - 1] = $days_in_month[$month - 1];\n    $days_in_month[$month]\
    \ = $days_in_month[$month];\n    $days_in_month[$month + 1] = $days_in_month[$month\
    \ + 1];\n    $days_in_month[$month + 2] = $days_in_month[$month + 2];\n    $days_in_month[$month\
    \ + 3] = $days_in_month[$month + 3];\n    $days_in_month[$month + 4] = $days_in_month[$month\
    \ + 4];\n    $days_in_month[$month + 5] = $days_in_month[$month + 5];\n    $days_in_month[$month\
    \ + 6] = $days_in_month[$month + 6];\n    $days_in_month[$month + 7] = $days_in_month[$month\
    \ + 7];\n    $days_in_month[$month + 8] = $days_in_month[$month + 8];\n    $days_in_month[$month\
    \ + 9] = $days_in_month[$month + 9];\n    $days_in_month[$month + 10] = $days_in_month[$month\
    \ + 10];\n    $days_in_month[$month + 11] = $days_in_month[$month + 11];\n   \
    \ $days_in_month[$month + 12] = $days_in_month[$month + 12];\n    if ($date ==\
    \ '') {\n        $valid_date = false;\n    }\n    if ($date < 1) {\n        $valid_date\
    \ = false;\n    }\n    if ($date > $days_in_month) {\n        $valid_date = false;\n\
    \    }\n    if ($month < 1) {\n        $valid_date = false;\n    }\n    if ($month\
    \ > 12) {\n        $valid_date = false;\n    }\n    if ($date != 'mm-dd-yyyy')\
    \ {\n        $valid_date = false;\n    }\n    return $valid_date;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmrzsiqft.php:58\n\
    Stack trace:\n#0 /tmp/tmpmrzsiqft.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpmrzsiqft.php\
    \ on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode(\"-\", $date);\n\
    \    $month = $dateArray[0];\n    $day = $dateArray[1];\n    $year = $dateArray[2];\n\
    \    $monthArray = array(\"01\" => \"January\", \"03\" => \"March\", \"05\" =>\
    \ \"May\", \"07\" => \"July\", \"08\" => \"August\", \"10\" => \"October\", \"\
    12\" => \"December\");\n    $dayArray = array(\"01\" => \"1\", \"03\" => \"3\"\
    , \"05\" => \"5\", \"07\" => \"7\", \"08\" => \"8\", \"10\" => \"10\", \"12\"\
    \ => \"12\");\n    $month = $monthArray[$month];\n    $day = $dayArray[$day];\n\
    \    $daysInMonth = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n    $daysInMonth\
    \ = $daysInMonth - 1;\n    if ($day < 1 || $day > $daysInMonth) {\n        return\
    \ false;\n    }\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($year < 1000 || $year > 9999) {\n        return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmppghu4tvs.php:24\nStack trace:\n#0 /tmp/tmppghu4tvs.php(39): valid_date('03-11-2000')\n\
    #1 /tmp/tmppghu4tvs.php(43): candidate('03-11-2000')\n#2 /tmp/tmppghu4tvs.php(61):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmppghu4tvs.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $dateArray = explode('-', $date);\n   \
    \ $dateArray = array_map('intval', $dateArray);\n    if (count($dateArray) !=\
    \ 3) {\n        return false;\n    }\n    if ($dateArray[0] < 1 || $dateArray[0]\
    \ > 12) {\n        return false;\n    }\n    if ($dateArray[1] < 1 || $dateArray[1]\
    \ > 31) {\n        return false;\n    }\n    if ($dateArray[2] < 1 || $dateArray[2]\
    \ > 30) {\n        return false;\n    }\n    if ($dateArray[1] == 2 && $dateArray[2]\
    \ == 29) {\n        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggk7l_q2.php:45\n\
    Stack trace:\n#0 /tmp/tmpggk7l_q2.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpggk7l_q2.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($month == 1) {\n        if ($day > 31) {\n            return false;\n\
    \        }\n    }\n    if ($month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8) {\n        if ($day > 31) {\n            return false;\n        }\n  \
    \  }\n    if ($month == 7) {\n        if ($day > 30) {\n            return false;\n\
    \        }\n    }\n    if ($month == 10) {\n        if ($day > 31) {\n       \
    \     return false;\n        }\n    }\n    if ($month == 12) {\n        if ($day\
    \ > 31) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $date\
    \ = $date[2].'-'.$date[0].'-'.$date[1];\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN,\
    \ $date[0], $date[1]);\n    $days_in_year = 365;\n    $days_in_month -= $days_in_year;\n\
    \    if ($days_in_month < 1 || $days_in_month > 31) {\n        return false;\n\
    \    }\n    if ($days_in_month < 1 || $days_in_month > 30) {\n        return false;\n\
    \    }\n    if ($days_in_month < 1 || $days_in_month > 29) {\n        return false;\n\
    \    }\n    if ($date[0] < 1 || $date[0] > 12) {\n        return false;\n    }\n\
    \    if ($date[1] < 1 || $date[1] > 12) {\n        return false;\n    }\n    return\
    \ true;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I am\
    \ not allowed to use any external libraries. I only need to use PHP and HTML.\n\
    <|/ c |>\n<| c |>\nI added a PHP function which validates a given date string.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. I am not allowed to use any external\
    \ libraries. I only need to use PHP and HTML.\n<|/ c |>\n<| c |>\nI added a PHP\
    \ function which validates a given date string.\n<|/ c |>\n<| c |>\nThanks for\
    \ your answer. I am not allowed to use any external libraries. I only need to\
    \ use PHP and HTML.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$date = \"03-11-2000\"\
    ;\n$dateArray = explode(\"-\", $date);\n$dateArray = array_map('intval', $dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmsf57t54.php on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    $days = floor($difference\
    \ / 86400);\n    $months = floor(($difference % 86400) / 3600 / 12);\n    $years\
    \ = floor(($difference % 86400) / 3600 / 365);\n    if ($days < 1 || $days > 31)\
    \ {\n        return false;\n    }\n    if ($months < 1 || $months > 12) {\n  \
    \      return false;\n    }\n    if ($years < 1 || $years > 30) {\n        return\
    \ false;\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_d974le.php:38\n\
    Stack trace:\n#0 /tmp/tmpz_d974le.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpz_d974le.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $day = $dateArray[0];\n    $month = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $monthArray = array('01' => 'January', '02' =>\
    \ 'February', '03' => 'March', '04' => 'April', '05' => 'May', '06' => 'June',\
    \ '07' => 'July', '08' => 'August', '09' => 'September', '10' => 'October', '11'\
    \ => 'November', '12' => 'December');\n    $dayArray = array('01' => '01', '02'\
    \ => '02', '03' => '03', '04' => '04', '05' => '05', '06' => '06', '07' => '07',\
    \ '08' => '08', '09' => '09', '10' => '10', '11' => '11', '12' => '12');\n   \
    \ $monthLengthArray = array('01' => '31', '02' => '28', '03' => '31', '04' =>\
    \ '30', '05' => '31', '06' => '30', '07' => '31', '08' => '31', '09' => '30',\
    \ '10' => '31', '11' => '30', '12' => '31');\n    $dayLengthArray = array('01'\
    \ => '31', '02' => '30', '03' => '31', '04' => '30', '05' => '31', '06' => '30',\
    \ '07' => '31', '08' => '31', '09' => '30', '10' => '31', '11' => '30', '12' =>\
    \ '31');\n    $monthLength = $monthLengthArray[$month];\n    $dayLength = $dayLengthArray[$day];\n\
    \    $monthArrayLength = $monthArray[$month];\n    $dayArrayLength = $dayArray[$day];\n\
    \    $monthLength = $monthLengthArray[$month];\n    $dayLength = $dayLengthArray[$day];\n\
    \    $monthArrayLength = $monthArray[$month];\n    $dayArrayLength = $dayArray[$day];\n\
    \    $monthLength = $monthLengthArray[$month];\n    $dayLength = $dayLengthArray[$day];\n\
    \    $monthArrayLength = $monthArray[$month];\n    $dayArrayLength = $dayArray[$day];\n\
    \    $monthLength = $monthLengthArray[$month];\n    $dayLength = $dayLengthArray[$day];\n\
    \    $monthArrayLength = $monthArray[$month];\n    $dayArrayLength = $dayArray[$day];\n\
    \    $monthLength = $monthLengthArray[$month];\n    $dayLength = $dayLengthArray[$day];\n\
    \    $monthArrayLength = $monthArray[$month];\n    $dayArrayLength = $dayArray[$day];\n\
    \    $monthLength = $monthLengthArray[$month];\n    $dayLength = $dayLengthArray[$day];\n\
    \    $monthArrayLength = $monthArray[$month];\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc9pkizl_.php on line 72\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8jge1fad.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdifrhtks.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $date\
    \ = strtotime($date);\n    $today = time();\n    $difference = $today - $date;\n\
    \    $days = floor($difference / 86400);\n    $months = floor(($difference - $days\
    \ * 86400) / 3600 / 12);\n    $years = floor(($difference - $days * 86400 - $months\
    \ * 3600) / 365);\n    if($days < 1 || $days > 31 || $months < 1 || $months >\
    \ 12 || $years < 1 || $years > 30) {\n        return false;\n    }\n    if($months\
    \ == 2 && $days == 29) {\n        return false;\n    }\n    if($months == 1 &&\
    \ $days == 31) {\n        return false;\n    }\n    if($months == 4 && $days ==\
    \ 30) {\n        return false;\n    }\n    if($months == 6 && $days == 29) {\n\
    \        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppl6mkaex.php:45\n\
    Stack trace:\n#0 /tmp/tmppl6mkaex.php(63): test()\n#1 {main}\n  thrown in /tmp/tmppl6mkaex.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfz3kgd8o.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9eu6cm5a.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace(' ', '-', $date);\n\
    \    $date = str_replace('-', '/', $date);\n    $date = strtotime($date);\n  \
    \  if ($date == false) {\n        return false;\n    }\n    $valid_date = false;\n\
    \    $days_in_month = cal_days_in_month(CAL_GREGORIAN, date('m'), date('Y'));\n\
    \    $days_in_year = cal_days_in_year(CAL_GREGORIAN, date('Y'));\n    $days_in_month\
    \ = date('t', $date);\n    $days_in_year = date('z', $date);\n    if ($days_in_month\
    \ < 1 || $days_in_month > 31) {\n        return false;\n    }\n    if ($days_in_year\
    \ < 1 || $days_in_year > $days_in_month) {\n        return false;\n    }\n   \
    \ if ($days_in_month == 31) {\n        if (date('n', $date) == 1) {\n        \
    \    $days_in_month = 30;\n        }\n    }\n    if ($days_in_month == 30) {\n\
    \        if (date('n', $date) == 2) {\n            $days_in_month = 31;\n    \
    \    }\n    }\n    if ($days_in_month == 29) {\n        if (date('n', $date) ==\
    \ 2) {\n            $days_in_month = 31;\n        }\n    }\n    if (date('m',\
    \ $date) < 1 || date('m', $date) > 12) {\n        return false;\n    }\n    if\
    \ (date('d', $date) < 1 || date('d', $date) > $days_in_month) {\n        return\
    \ false;\n    }\n    $valid_date = true;\n    return $valid_date;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmp4tdowaci.php:25\nStack trace:\n#0 /tmp/tmp4tdowaci.php(61): valid_date(952732800)\n\
    #1 /tmp/tmp4tdowaci.php(65): candidate('03-11-2000')\n#2 /tmp/tmp4tdowaci.php(83):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp4tdowaci.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = strtotime($date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strtotime('01-01-' . $date);\n    $date = strtotime('01-01-'\
    \ . $date);\n    $date = strto\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1as29ek4.php on line 57\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $month = $dateArray[0];\n    $day = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $monthArray = array('01' => 'January', '03' =>\
    \ 'March', '05' => 'May', '07' => 'July', '08' => 'August', '10' => 'October',\
    \ '12' => 'December');\n    $dayArray = array('01' => 'January', '03' => 'March',\
    \ '05' => 'May', '07' => 'July', '08' => 'August', '10' => 'October', '12' =>\
    \ 'December');\n    $yearArray = array('1901' => 'January 1901', '1903' => 'March\
    \ 1901', '1905' => 'May 1901', '1907' => 'July 1901', '1908' => 'August 1901',\
    \ '1910' => 'October 1901', '1912' => 'December 1901');\n    if (empty($date))\
    \ {\n        return false;\n    }\n    if ($day < 1 || $day > 31) {\n        return\
    \ false;\n    }\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($year < 1901 || $year > 1912) {\n        return false;\n    }\n\
    \    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n            return\
    \ false;\n        }\n    }\n    if ($month == 1) {\n        if ($day < 1 || $day\
    \ > 31) {\n            return false;\n        }\n    }\n    if ($month == 3) {\n\
    \        if ($day < 1 || $day > 30) {\n            return false;\n        }\n\
    \    }\n    if ($month == 5) {\n        if ($day < 1 || $day > 31) {\n       \
    \     return false;\n        }\n    }\n    if ($month == 7) {\n        if ($day\
    \ < 1 || $day > 31) {\n            return false;\n        }\n    }\n    if ($month\
    \ == 8) {\n        if ($day < 1 || $day > 31) {\n            return false;\n \
    \       }\n    }\n    if ($month == 10) {\n        if ($day < 1 || $day > 31)\
    \ {\n            return false;\n        }\n    }\n    if ($month == 12) {\n  \
    \      if ($day < 1 || $day > 31) {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lkavkdo.php:84\n\
    Stack trace:\n#0 /tmp/tmp8lkavkdo.php(102): test()\n#1 {main}\n  thrown in /tmp/tmp8lkavkdo.php\
    \ on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $day\
    \ = intval($date[0]);\n    $month = intval($date[1]);\n    $year = intval($date[2]);\n\
    \    if ($day < 1 || $day > 31 || $month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($month == 2) {\n        if ($day > 29) {\n          \
    \  return false;\n        }\n    }\n    if ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n        if ($day > 30) {\n            return false;\n\
    \        }\n    }\n    if ($month == 1) {\n        if ($day > 31) {\n        \
    \    return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8eibl6vw.php:51\n\
    Stack trace:\n#0 /tmp/tmp8eibl6vw.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp8eibl6vw.php\
    \ on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    $dateArray\
    \ = explode('-', $date);\n    $dateArray = array_map('intval', $dateArray);\n\
    \    $valid = checkdate($dateArray[2], $dateArray[1], $dateArray[0]);\n    return\
    \ $valid;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `checkdate`\
    \ returns false if the month is out of range (1-12) and the day is out of range\
    \ (1-31).\n<|/ c |>\n<| c |>\nThanks for pointing that out. I updated my answer.\
    \ Now it should work correctly.\n<|/ c |>\n<| c |>\nThanks so much! This works\
    \ perfectly. I appreciate your help!\n<|/ c |>\n<| a tags=date,php |>\n<code>\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo56aqxm_.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != '';\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp959ur_05.php:26\n\
    Stack trace:\n#0 /tmp/tmp959ur_05.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp959ur_05.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp370t4ai5.php:23\n\
    Stack trace:\n#0 /tmp/tmp370t4ai5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp370t4ai5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6wij4pk.php:23\n\
    Stack trace:\n#0 /tmp/tmp_6wij4pk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_6wij4pk.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[0].'-'.$date[1];\n\
    \    $date = strtotime($date);\n    $today = strtotime(date('Y-m-d'));\n    $date\
    \ = $date - $today;\n    if ($date < 1 || $date > 31) {\n        return false;\n\
    \    }\n    if ($date < 1 || $date > 30) {\n        return false;\n    }\n   \
    \ if ($date < 1 || $date > 29) {\n        return false;\n    }\n    if ($date\
    \ < 1 || $date > 12) {\n        return false;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeibqgbt0.php:43\n\
    Stack trace:\n#0 /tmp/tmpeibqgbt0.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpeibqgbt0.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62hfbf_c.php:23\n\
    Stack trace:\n#0 /tmp/tmp62hfbf_c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp62hfbf_c.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    $date = strtotime($date);\n\
    \    if ($date != false && $date != 0) {\n        $valid = true;\n    }\n    if\
    \ ($valid == false) {\n        return false;\n    }\n    $days_in_months = array(31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    $days_in_months_leap = array(31,\
    \ 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    $days_in_years = array(365,\
    \ 366, 365, 366);\n    $days_in_years_leap = array(365, 366, 365, 366);\n    $months\
    \ = array(\n        1 => 31,\n        3 => 31,\n        5 => 31,\n        7 =>\
    \ 31,\n        8 => 31,\n        10 => 31,\n        12 => 31,\n        4 => 30,\n\
    \        6 => 30,\n        9 => 30,\n        11 => 30\n    );\n    $months_leap\
    \ = array(\n        1 => 31,\n        3 => 31,\n        5 => 31,\n        7 =>\
    \ 31,\n        8 => 31,\n        10 => 31,\n        12 => 31,\n        4 => 31,\n\
    \        6 => 30,\n        9 => 30,\n        11 => 30\n    );\n    $year = date('Y');\n\
    \    $years_leap = date('Y');\n    $days_in_years_leap = date('z');\n    $days_in_months_leap\
    \ = date('z');\n    $days_in_years_leap = date('z');\n    $months_leap = date('z');\n\
    \    $months = date('z');\n    $days_in_months = date('z');\n    $days_in_years\
    \ = date('z');\n    $days_in_months_leap = date('z');\n    $days_in_years_leap\
    \ = date('z');\n    $months_leap = date('z');\n    $months = date('z');\n    $days_in_months\
    \ = date('z');\n    $days_in_years = date('z');\n    $days_in_months_leap = date('z');\n\
    \    $days_in_years_leap = date('z');\n    $months_leap = date('z');\n    $months\
    \ = date('z');\n    $days_in_months = date('z');\n    $days_in_years = date('z');\n\
    \    $days_in_months_leap = date('z');\n    $days_in_years_leap = date('z');\n\
    \    $months_leap = date('z');\n    $months = date('z');\n    $days_in_months\
    \ = date('z');\n    $days_in_years = date('z');\n    $days_in_\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp07m_bssl.php on line 82\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != '';\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6udqw_fk.php:26\n\
    Stack trace:\n#0 /tmp/tmp6udqw_fk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6udqw_fk.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $dateArray = explode('-', $date);\n   \
    \ if(count($dateArray) != 3) {\n        return false;\n    }\n    $month = $dateArray[0];\n\
    \    $day = $dateArray[1];\n    $year = $dateArray[2];\n    $monthArray = array('01'\
    \ => 'January', '03' => 'March', '05' => 'May', '07' => 'July', '08' => 'August',\
    \ '10' => 'October', '12' => 'December');\n    $dayArray = array('01' => 'January',\
    \ '02' => 'February', '03' => 'March', '04' => 'April', '05' => 'May', '06' =>\
    \ 'June', '07' => 'July', '08' => 'August', '09' => 'September', '10' => 'October',\
    \ '11' => 'November', '12' => 'December');\n    $yearArray = array('01' => 'January',\
    \ '02' => 'February', '03' => 'March', '04' => 'April', '05' => 'May', '06' =>\
    \ 'June', '07' => 'July', '08' => 'August', '09' => 'September', '10' => 'October',\
    \ '11' => 'November', '12' => 'December');\n    if(!is_numeric($month) || !is_numeric($day)\
    \ || !is_numeric($year)) {\n        return false;\n    }\n    if($month < 1 ||\
    \ $month > 12) {\n        return false;\n    }\n    if($day < 1 || $day > 31)\
    \ {\n        return false;\n    }\n    if($month < 4 || $month > 12) {\n     \
    \   return false;\n    }\n    if($day < 1 || $day > 30) {\n        return false;\n\
    \    }\n    if($month < 2 || $month > 12) {\n        return false;\n    }\n  \
    \  if($day < 1 || $day > 29) {\n        return false;\n    }\n    if($month !=\
    \ $monthArray[$month]) {\n        return false;\n    }\n    if($day != $dayArray[$day])\
    \ {\n        return false;\n    }\n    if($year != $yearArray[$year]) {\n    \
    \    return false;\n    }\n    return true;\n}\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmput3u2fms.php:67\n\
    Stack trace:\n#0 /tmp/tmput3u2fms.php(85): test()\n#1 {main}\n  thrown in /tmp/tmput3u2fms.php\
    \ on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $day\
    \ = $date[0];\n    $month = $date[1];\n    $year = $date[2];\n    if($day < 1\
    \ || $day > 31 || $month < 1 || $month > 12) {\n        return false;\n    }\n\
    \    if($month == 2) {\n        if($day > 29) {\n            return false;\n \
    \       }\n    }\n    if($month == 4 || $month == 6 || $month == 9 || $month ==\
    \ 11) {\n        if($day > 30) {\n            return false;\n        }\n    }\n\
    \    if($month == 1) {\n        if($day > 31) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mcysdpd.php:50\n\
    Stack trace:\n#0 /tmp/tmp1mcysdpd.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp1mcysdpd.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxnsvnun1.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN,\
    \ date('m'), date('t'));\n    $days_in_year = cal_days_in_year(CAL_GREGORIAN,\
    \ date('Y'));\n    $days_in_the_year = $days_in_year;\n    $days_in_the_month\
    \ = $days_in_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\
    \ = $days_in_the_month;\n    $days_in_the_year = $days_in_the_year;\n    $days_in_the_month\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdne_7jbu.php on line 59\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $datediff = $today - $date;\n    $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n\
    \    $days_months = array(31,28,31,30,31,30,31,30,31,30,31);\n    $days_years\
    \ = array(31,30,31,30,31,30,31,30,31,30,31);\n    $months_days = array(31,28,31,30,31,30,31,30,31,30,31);\n\
    \    $months_years = array(31,30,31,30,31,30,31,30,31,30,31);\n    $years = array(date('Y')-100,date('Y')-50,date('Y')-20,date('Y')-10,date('Y')-5,date('Y'));\n\
    \    $years_months = array(date('Y')-100,date('Y')-50,date('Y')-20,date('Y')-10,date('Y')-5,date('Y'));\n\
    \    $years_days = array(date('Y')-100,date('Y')-50,date('Y')-20,date('Y')-10,date('Y')-5,date('Y'));\n\
    \    $years_months_days = array(date('Y')-100,date('Y')-50,date('Y')-20,date('Y')-10,date('Y')-5,date('Y'));\n\
    \    $years_months_years = array(date('Y')-100,date('Y')-50,date('Y')-20,date('Y')-10,date('Y')-5,date('Y'));\n\
    \    $years_days_months = array(date('Y')-100,date('Y')-50,date('Y')-20,date('Y')-10,date('Y')-5,date('Y'));\n\
    \    $years_days_years = array(date('Y')-100,date('Y')-50,date('Y')-20,date('Y')-10,date('Y')-5,date('Y'));\n\
    \    $years_months_days_years = array(date('Y')-100,date('Y')-50,date('Y')-20,date('Y')-10,date('Y')-5,date('Y'));\n\
    \    $years_months_days_years_months = array(date('Y')-100,date('Y')-50,date('Y')-20,date('Y')-10,date('Y')-5,date('Y'));\n\
    \    $years_months_days_years_months_days = array(date('Y\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4xffwv_w.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $day = $dateArray[0];\n    $month = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    $valid = false;\n    if ($day > 0 && $day <= $daysInMonth)\
    \ {\n        $valid = true;\n    }\n    if ($month > 0 && $month <= 12) {\n  \
    \      $valid = true;\n    }\n    if ($year > 0 && $year <= date('Y')) {\n   \
    \     $valid = true;\n    }\n    return $valid;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThanks so much for your help. I appreciate it. I will try this out and\
    \ let you know how it goes.\n<|/ c |>\n<| c |>\nI added the function to the code\
    \ above. I am getting an error that says \"Call to undefined function valid_date()\"\
    . Do I need to add anything else to the code? Thanks again for your help.\n<|/\
    \ c |>\n<| c |>\nYou need to add `valid_date` function to the code above and also\
    \ include `date_create` function before calling `valid_date` function.\n<|/ c\
    \ |>\n<| c |>\nI added the function to the code above. I am getting an error that\
    \ says \"Call to undefined function valid_date()\". Do I need to add anything\
    \ else to the code? Thanks again for your help.\n<|/ c |>\n<| c |>\nYou need to\
    \ add `valid_date` function to the code above and also include `date_create` function\
    \ before calling `valid_date` function.\n<|/ c |>\n<| a tags=php |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd32b6j81.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode(\"-\", $date);\n\
    \    $dateArray = array_map(\"intval\", $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy86x4mfu.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    $dateArray\
    \ = explode('-', $date);\n    if (count($dateArray) == 3) {\n        $valid =\
    \ true;\n        $dateArray = explode('/', $date);\n        if (count($dateArray)\
    \ == 3) {\n            $valid = true;\n            $dateArray = explode('-', $date);\n\
    \            if (count($dateArray) == 3) {\n                $valid = true;\n \
    \               $dateArray = explode(' ', $date);\n                if (count($dateArray)\
    \ == 3) {\n                    $valid = true;\n                    $dateArray\
    \ = explode(':', $date);\n                    if (count($dateArray) == 3) {\n\
    \                        $valid = true;\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return $valid;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$date = '03-11-2000';\n$dateArray\
    \ = explode('-', $date);\nif (count($dateArray) == 3) {\n    $dateArray = explode('/',\
    \ $date);\n    if (count($dateArray) == 3) {\n        $dateArray = explode('-',\
    \ $date);\n        if (count($dateArray) == 3) {\n            $dateArray = explode('\
    \ ', $date);\n            if (count($dateArray) == 3) {\n                $dateArray\
    \ = explode(':', $date);\n                if (count($dateArray) == 3) {\n    \
    \                $dateArray = explode(',', $date);\n                    if (count($dateArray)\
    \ == 3) {\n                        $dateArray = explode('.', $date);\n       \
    \                 if (count($dateArray) == 3) {\n                            $dateArray\
    \ = explode(',', $date);\n                            if (count($dateArray) ==\
    \ 3) {\n                                $dateArray = explode(',', $date);\n  \
    \                              if (count($dateArray) == 3) {\n               \
    \                     $dateArray = explode(',', $date);\n                    \
    \                if (count($dateArray) == 3) {\n                             \
    \           $dateArray = explode(',', $date);\n                              \
    \          if (count($dateArray) == 3) {\n                                   \
    \         $dateArray = explode(',', $date);\n                                \
    \            if (count($dateArray) == 3) {\n                                 \
    \               $dateArray = explode(',', $date);\n                          \
    \                      if (count($dateArray) == 3) {\n                       \
    \                             $dateArray = explode(',', $date);\n            \
    \                                        if (count($dateArray) == 3) {\n     \
    \                                                   $dateArray = explode(',',\
    \ $date);\n                                                        if (count($dateArray)\
    \ == 3) {\n                                                            $dateArray\
    \ = explode('\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmti_1egx.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj_s1ubxm.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $dateArray = explode('-', $date);\n   \
    \ $dateArray = array_map('intval', $dateArray);\n    if (count($dateArray) !=\
    \ 3) {\n        return false;\n    }\n    if ($dateArray[0] > 31 || $dateArray[0]\
    \ < 1) {\n        return false;\n    }\n    if ($dateArray[1] > 31 || $dateArray[1]\
    \ < 1) {\n        return false;\n    }\n    if ($dateArray[2] > 12) {\n      \
    \  return false;\n    }\n    return true;\n}\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5kttdnb_.php:41\n\
    Stack trace:\n#0 /tmp/tmp5kttdnb_.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp5kttdnb_.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $day = $dateArray[0];\n    $month = $dateArray[1];\n    $year = $dateArray[2];\n\
    \    $dateArray = explode('/', $date);\n    $month = $dateArray[0];\n    $day\
    \ = $dateArray[1];\n    $year = $dateArray[2];\n    if (empty($date) || $day <\
    \ 1 || $day > 31 || $month < 1 || $month > 12 || $year < 1000 || $year > 9999)\
    \ {\n        return false;\n    }\n    if ($month == 2) {\n        if ($day >\
    \ 29) {\n            return false;\n        }\n    }\n    if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day > 30) {\n         \
    \   return false;\n        }\n    }\n    if ($month == 1) {\n        if ($day\
    \ > 31) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkgtrd341.php:49\n\
    Stack trace:\n#0 /tmp/tmpkgtrd341.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpkgtrd341.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplq72y7pr.php:23\n\
    Stack trace:\n#0 /tmp/tmplq72y7pr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplq72y7pr.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9d_wisl8.php:23\n\
    Stack trace:\n#0 /tmp/tmp9d_wisl8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9d_wisl8.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $month = $dateArray[0];\n    $day = $dateArray[1];\n    $year = $dateArray[2];\n\
    \    $monthArray = array(1,2,3,4,5,6,7,8,9,10,11,12);\n    $dayArray = array(0,31,28,31,30,31,30,31,30,31,30,31);\n\
    \    $yearArray = array(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012);\n\
    \    $monthArray = array(1,2,3,4,5,6,7,8,9,10,11,12);\n    $dayArray = array(0,31,28,31,30,31,30,31,30,31,30,31);\n\
    \    $yearArray = array(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012);\n\
    \    $monthArray = array(1,2,3,4,5,6,7,8,9,10,11,12);\n    $dayArray = array(0,31,28,31,30,31,30,31,30,31,30,31);\n\
    \    $yearArray = array(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012);\n\
    \    $monthArray = array(1,2,3,4,5,6,7,8,9,10,11,12);\n    $dayArray = array(0,31,28,31,30,31,30,31,30,31,30,31);\n\
    \    $yearArray = array(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012);\n\
    \    $monthArray = array(1,2,3,4,5,6,7,8,9,10,11,12);\n    $dayArray = array(0,31,28,31,30,31,30,31,30,31,30,31);\n\
    \    $yearArray = array(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012);\n\
    \    $monthArray = array(1,2,3,4,5,6,7,8,9,10,11,12);\n    $dayArray = array(0,31,28,31,30,31,30,31,30,31,30,31);\n\
    \    $yearArray = array(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012);\n\
    \    $monthArray = array(1,2,3,4,5,6,7,8,9,10,11,12);\n    $dayArray = array(0,31,28,31,30,31,30,31,30,31,30,31);\n\
    \    $yearArray = array(2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012);\n\
    \    $monthArray = array(1,2,3,4,5,6,7,8,9,10,11,12);\n    $day\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpawx756lm.php on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $month\
    \ = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n    if ($month < 1\
    \ || $month > 12) {\n        return false;\n    }\n    if ($day < 1 || $day >\
    \ 31) {\n        return false;\n    }\n    if ($month == 1 && $day > 31) {\n \
    \       return false;\n    }\n    if ($month == 2 && $day > 29) {\n        return\
    \ false;\n    }\n    if ($month == 4 && $day > 30) {\n        return false;\n\
    \    }\n    if ($month == 6 && $day > 31) {\n        return false;\n    }\n  \
    \  if ($month == 9 && $day > 30) {\n        return false;\n    }\n    if ($month\
    \ == 11 && $day > 31) {\n        return false;\n    }\n    if ($month == 1 &&\
    \ $day > 31) {\n        return false;\n    }\n    if ($month == 3 && $day > 31)\
    \ {\n        return false;\n    }\n    if ($month == 5 && $day > 31) {\n     \
    \   return false;\n    }\n    if ($month == 7 && $day > 31) {\n        return\
    \ false;\n    }\n    if ($month == 8 && $day > 31) {\n        return false;\n\
    \    }\n    if ($month == 10 && $day > 31) {\n        return false;\n    }\n \
    \   if ($month == 12 && $day > 31) {\n        return false;\n    }\n    if ($month\
    \ == 1 && $day > 31) {\n        return false;\n    }\n    if ($month == 3 && $day\
    \ > 31) {\n        return false;\n    }\n    if ($month == 5 && $day > 31) {\n\
    \        return false;\n    }\n    if ($month == 7 && $day > 31) {\n        return\
    \ false;\n    }\n    if ($month == 8 && $day > 31) {\n        return false;\n\
    \    }\n    if ($month == 10 && $day > 31) {\n        return false;\n    }\n \
    \   if ($month == 12 && $day > 31) {\n        return false;\n    }\n    if ($month\
    \ == 1 && $day > 31) {\n        return false;\n    }\n    if ($month == 3 && $day\
    \ > 31) {\n        return false;\n    }\n    if ($month == 5 && $day > 31) {\n\
    \        return false;\n    }\n    if ($month == 7 && $day > 31) {\n        return\
    \ false;\n    }\n    if ($month == 8 && $day > 31) {\n        return false;\n\
    \    }\n    if ($month == 10 && $day > 31) {\n        return false;\n    }\n \
    \   if ($month == 12 && $day > 31) {\n        return false;\n    }\n    if ($month\
    \ == 1 && $day > 31) {\n        return false;\n    }\n    if ($month == 3 && $day\
    \ > 31) {\n        return false;\n    }\n    if ($month == 5 \nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwt2apq54.php on line 118\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = intval($date[0]);\n    $day\
    \ = intval($date[1]);\n    $year = intval($date[2]);\n    if($month < 1 || $month\
    \ > 12) {\n        return false;\n    }\n    if($day < 1 || $day > 31) {\n   \
    \     return false;\n    }\n    if($month == 2) {\n        if($day > 29) {\n \
    \           return false;\n        }\n    }\n    if($month == 4 || $month == 6\
    \ || $month == 9 || $month == 11) {\n        if($day > 30) {\n            return\
    \ false;\n        }\n    }\n    if($month == 1) {\n        if($day > 31) {\n \
    \           return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != '';\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3rhmg57.php:25\n\
    Stack trace:\n#0 /tmp/tmpx3rhmg57.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx3rhmg57.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_k1quw6.php:23\n\
    Stack trace:\n#0 /tmp/tmp1_k1quw6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1_k1quw6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = strtotime(date('Y-m-d'));\n    $datediff = $today - $date;\n    if ($datediff\
    \ < 0 || $datediff > 86400) {\n        return false;\n    }\n    $months = array(\n\
    \        1 => 31,\n        3 => 31,\n        5 => 31,\n        7 => 31,\n    \
    \    8 => 31,\n        10 => 31,\n        12 => 31,\n        4 => 30,\n      \
    \  6 => 30,\n        9 => 30,\n        11 => 30,\n        2 => 29\n    );\n  \
    \  $days_in_month = date('t', strtotime('01-'.$date));\n    $days_in_month = intval($days_in_month);\n\
    \    $days_in_month = array_sum($months);\n    if ($days_in_month > $days_in_month)\
    \ {\n        return false;\n    }\n    $months = array_keys($months);\n    $months\
    \ = array_flip($months);\n    $months = array_flip($months);\n    $months = array_flip($months);\n\
    \    $months = array_flip($months);\n    $months = array_flip($months);\n    $months\
    \ = array_flip($months);\n    $months = array_flip($months);\n    $months = array_flip($months);\n\
    \    $months = array_flip($months);\n    $months = array_flip($months);\n    $months\
    \ = array_flip($months);\n    $months = array_flip($months);\n    $months = array_flip($months);\n\
    \    $months = array_flip($months);\n    $months = array_flip($months);\n    $months\
    \ = array_flip($months);\n    $months = array_flip($months);\n    $months = array_flip($months);\n\
    \    $months = array_flip($months);\n    $months = array_flip($months);\n    $months\
    \ = array_flip($months);\n    $months = array_flip($months);\n    $months = array_flip($months);\n\
    \    $months = array_flip($months);\n    $months = array_flip($months);\n    $months\
    \ = array_flip($months);\n    $months = array_flip($months);\n    $months = array_flip($months);\n\
    \    $months = array_flip($months);\n    $months = array_flip($months);\n    $months\
    \ = array_flip($months);\n    $months = array_flip($months);\n    $months = array_flip($months);\n\
    \    $month\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptrybwgbm.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n    $dateArray\
    \ = explode(\"-\", $date);\n    $day = $dateArray[0];\n    $month = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    if ($day < 1 || $day > $daysInMonth) {\n        return\
    \ false;\n    }\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($year < 1000 || $year > 9999) {\n        return false;\n    }\n\
    \    return true;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer.\
    \ Your code works perfectly but i need to use only PHP and i can't use any external\
    \ libraries. Thanks again for your help.\n<|/ c |>\n<| c |>\nI added the code\
    \ which uses only PHP\n<|/ c |>\n<| c |>\nThanks again for your help. Your code\
    \ works perfectly but i need to use only PHP and i can't use any external libraries.\
    \ Thanks again for your help.\n<|/ c |>\n<| c |>\nI added the code which uses\
    \ only PHP\n<|/ c |>\n<| a |>\n<code>\n<?php\n$date = \"03-11-2000\";\n$dateArray\
    \ = explode(\"-\", $date);\n$day = $dateArray[0];\n$month = $dateArray[1];\n$year\
    \ = $dateArray[2];\n$daysInMonth = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n\
    if ($day < 1 || $day > $daysInMonth) {\n    echo \"false\";\n}\nif ($month < 1\
    \ || $month > 12) {\n    echo \"false\";\n}\nif ($year < 1000 || $year > 9999)\
    \ {\n    echo \"false\";\n}\necho \"true\";\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm9x7zao1.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy2al4fu9.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $days_diff = $today - $date;\n    $months_diff = $days_diff /\
    \ 30;\n    $days_diff %= 30;\n    $months_diff %= 12;\n    if ($days_diff < 1\
    \ || $days_diff > 31) {\n        return false;\n    }\n    if ($months_diff <\
    \ 1 || $months_diff > 12) {\n        return false;\n    }\n    if ($months_diff\
    \ == 2 && $days_diff == 29) {\n        return false;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsfa0b72d.php:40\n\
    Stack trace:\n#0 /tmp/tmpsfa0b72d.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpsfa0b72d.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppa69tb4f.php:23\n\
    Stack trace:\n#0 /tmp/tmppa69tb4f.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppa69tb4f.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($month == 1) {\n        if ($day > 31) {\n            return false;\n\
    \        }\n    }\n    if ($month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8) {\n        if ($day > 31) {\n            return false;\n        }\n  \
    \  }\n    if ($month == 7) {\n        if ($day > 30) {\n            return false;\n\
    \        }\n    }\n    if ($month == 10) {\n        if ($day > 31) {\n       \
    \     return false;\n        }\n    }\n    if ($month == 12) {\n        if ($day\
    \ > 31) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $days_difference = $today - $date;\n    $days_difference = round($days_difference\
    \ / (60 * 60 * 24));\n    $months_difference = $days_difference / 30;\n    $years_difference\
    \ = $days_difference / 365;\n    if ($days_difference < 1 || $days_difference\
    \ > 31 || $months_difference < 1 || $months_difference > 12 || $years_difference\
    \ < 1 || $years_difference > 365) {\n        return false;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6vjn0tu.php:33\n\
    Stack trace:\n#0 /tmp/tmpq6vjn0tu.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpq6vjn0tu.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = intval($date[0]);\n    $day\
    \ = intval($date[1]);\n    $year = intval($date[2]);\n    if($month < 1 || $month\
    \ > 12) {\n        return false;\n    }\n    if($day < 1 || $day > 31) {\n   \
    \     return false;\n    }\n    if($month == 2) {\n        if($day > 29) {\n \
    \           return false;\n        }\n    }\n    if($month == 4 || $month == 6\
    \ || $month == 9 || $month == 11) {\n        if($day > 30) {\n            return\
    \ false;\n        }\n    }\n    if($month == 1) {\n        if($day > 31) {\n \
    \           return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimois2gz.php:23\n\
    Stack trace:\n#0 /tmp/tmpimois2gz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpimois2gz.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    $days = floor($difference\
    \ / 86400);\n    $months = floor(($difference % 86400) / 3600 / 12);\n    $years\
    \ = floor(($difference % 86400) / 3600 / 365);\n    $months = $months + 1;\n \
    \   if ($months > 12) {\n        $years = $years + 1;\n        $months = $months\
    \ - 12;\n    }\n    if ($days < 1 || $days > 31) {\n        return false;\n  \
    \  }\n    if ($months < 1 || $months > 12) {\n        return false;\n    }\n \
    \   if ($years < 1 || $years > 30) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjtljo4y.php:43\n\
    Stack trace:\n#0 /tmp/tmpgjtljo4y.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpgjtljo4y.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = str_replace('/', '-', $date);\n\
    \    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[0].'-'.$date[1];\n\
    \    $date = strtotime($date);\n    $today = strtotime(date('Y-m-d'));\n    $difference\
    \ = $today - $date;\n    if ($difference < 0 || $difference > 86400) {\n     \
    \   return false;\n    }\n    $months = array(\n        1 => 31,\n        3 =>\
    \ 31,\n        5 => 31,\n        7 => 31,\n        8 => 31,\n        10 => 31,\n\
    \        12 => 31,\n        4 => 30,\n        6 => 30,\n        9 => 30,\n   \
    \     11 => 30,\n        2 => 29\n    );\n    $months_count = count($months);\n\
    \    for ($i = 0; $i < $months_count; $i++) {\n        if ($difference < $months[$i])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThanks so much for your help. I appreciate it. I will try this\
    \ out and let you know how it goes.\n<|/ c |>\n<| c |>\nHi again, I have tried\
    \ this out and I still get the same results. I feel like I am missing something\
    \ really obvious. I appreciate your help though.\n<|/ c |>\n<| c |>\nHi, I have\
    \ tried this out and I still get the same results. I feel like I am missing something\
    \ really obvious. I appreciate your help though.\n<|/ c |>\n<| c |>\nHi, I have\
    \ tried this out and I still get the same results. I feel like I am missing something\
    \ really obvious. I appreciate your help though.\n<|/ c |>\n<| c |>\nHi, I have\
    \ tried this out and I still get the same results. I feel like I am missing something\
    \ really obvious. I appreciate your help though.\n<|/ c |>\n<| a tags=php,date\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfmmbyup_.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = strtotime(date('m-d-Y'));\n    $difference = $today - $date;\n    $days =\
    \ floor($difference / 86400);\n    $months = floor(($difference % 86400) / 3600\
    \ / 12);\n    $years = floor(($difference % 86400) / 3600 / 365);\n    if ($days\
    \ < 1 || $days > 31 || $months < 1 || $months > 12 || $years < 1 || $years > 30)\
    \ {\n        return false;\n    }\n    if ($months == 2 && $days == 29) {\n  \
    \      return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0bvq73jj.php:35\n\
    Stack trace:\n#0 /tmp/tmp0bvq73jj.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp0bvq73jj.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $current_date\
    \ = date('m-d-Y');\n    $current_date = strtotime($current_date);\n    $date_diff\
    \ = abs($date - $current_date);\n    $date_diff = round($date_diff / (60 * 60\
    \ * 24));\n    if ($date_diff < 1 || $date_diff > 31) {\n        return false;\n\
    \    }\n    if ($date_diff < 31 && $date_diff > 30) {\n        return false;\n\
    \    }\n    if ($date_diff < 30 && $date_diff > 29) {\n        return false;\n\
    \    }\n    if ($date_diff < 29) {\n        return false;\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzbuasgx8.php:40\n\
    Stack trace:\n#0 /tmp/tmpzbuasgx8.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpzbuasgx8.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = str_replace(' ', '-', $date);\n    $date = strtotime($date);\n  \
    \  $date = date('Y-m-d', $date);\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode(',', $date);\n    $date = $date[0];\n    $date\
    \ = explode(' ', $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n\
    \    $date = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n\
    \    $date = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-',\
    \ $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n    $date\
    \ = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n\
    \    $date = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n\
    \    $date = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-',\
    \ $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n    $date\
    \ = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n\
    \    $date = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n\
    \    $date = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-',\
    \ $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n    $date\
    \ = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n\
    \    $date = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n\
    \    $date = explode('-', $date);\n    $date = $date[0];\n    $date = explode('-',\
    \ $date);\n    $date = $date[0];\n    $date = explode('-', $date);\n    $date\
    \ = $date[0];\n    $date = explode('-', $date);\n    $date = $date[0];\n    $date\
    \ = explode\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3rznhcqd.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $month\
    \ = intval($date[0]);\n    $day = intval($date[1]);\n    $year = intval($date[2]);\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > 31) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($month == 1) {\n\
    \        if ($day > 31) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. Your\
    \ code works perfectly for dates such as '01-01-2000', '03-11-2000', '15-01-2012',\
    \ '04-0-2040', '06-04-2020', '06/04/2020', but for dates like '06/04/2020' it\
    \ returns false. Do you know why it returns false for dates like '06/04/2020'?\n\
    <|/ c |>\n<| c |>\nI edited my answer to include a function that checks whether\
    \ the date is valid or not.\n<|/ c |>\n<| c |>\nThanks again. Your code works\
    \ perfectly for dates such as '01-01-2000', '03-11-2000', '15-01-2012', '04-0-2040',\
    \ '06-04-2020', '06/04/2020', but for dates like '06/04/2020' it returns false.\
    \ Do you know why it returns false for dates like '06/04/2020'?\n<|/ c |>\n<|\
    \ c |>\nI edited my answer to include a function that checks whether the date\
    \ is valid or not.\n<|/ c |>\n<| c |>\nThanks again. Your code works perfectly\
    \ for dates such as '01-01-2000', '03-11-2000', '15-01-2012', '04-0-2040', '06-04-2020',\
    \ '06/04/2020', but for dates like '06/04/2020' it returns false. Do you know\
    \ why it returns false for dates like '06/04/2020'?\n<|/ c |>\n<| a tags=date,php\
    \ |>\n<code>\n<?php\n$date = '06/04/2020';\n$date = date('Y-m-d', strtotime($\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnc460x48.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $dateArray = array_map('intval', $dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcs5bdu1e.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    if ($date !=\
    \ '') {\n        $d = explode('-', $date);\n        if (count($d) == 3) {\n  \
    \          $valid = true;\n            $month = $d[1];\n            $day = $d[2];\n\
    \            if ($month < 1 || $month > 12) {\n                $valid = false;\n\
    \            }\n            if ($day < 1 || $day > 31) {\n                $valid\
    \ = false;\n            }\n        }\n    }\n    return $valid;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8wxz006.php:38\n\
    Stack trace:\n#0 /tmp/tmpt8wxz006.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpt8wxz006.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $month = $dateArray[0];\n    $day = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $monthArray = array('01', '03', '05', '07', '08',\
    \ '10', '12');\n    $dayArray = array('01', '03', '05', '07', '08', '10', '12',\
    \ '13', '15', '17', '19', '21', '23', '25', '27', '29');\n    $yearArray = array('2000',\
    \ '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010',\
    \ '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020',\
    \ '2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029', '2030',\
    \ '2031', '2032', '2033', '2034', '2035', '2036', '2037', '2038', '2039', '2040');\n\
    \    if (empty($date)) {\n        return false;\n    }\n    if (count($dateArray)\
    \ != 3) {\n        return false;\n    }\n    if (in_array($month, $monthArray)\
    \ == false) {\n        return false;\n    }\n    if (in_array($day, $dayArray)\
    \ == false) {\n        return false;\n    }\n    if (in_array($year, $yearArray)\
    \ == false) {\n        return false;\n    }\n    if ($month < 1 || $month > 12)\
    \ {\n        return false;\n    }\n    if ($day < 1 || $day > 31) {\n        return\
    \ false;\n    }\n    if ($day > 30) {\n        return false;\n    }\n    if ($month\
    \ == 2) {\n        if ($day > 29) {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpufnuoqc_.php:60\n\
    Stack trace:\n#0 /tmp/tmpufnuoqc_.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpufnuoqc_.php\
    \ on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4wjyi_f.php:23\n\
    Stack trace:\n#0 /tmp/tmpk4wjyi_f.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpk4wjyi_f.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $date\
    \ = $date[2].'-'.$date[1].'-'.$date[0];\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN,\
    \ $date[1], $date[0]);\n    if ($days_in_month < 1 || $days_in_month > 31) {\n\
    \        return false;\n    }\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN,\
    \ $date[2], $date[0]);\n    if ($days_in_month < 1 || $days_in_month > 30) {\n\
    \        return false;\n    }\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN,\
    \ $date[1], $date[0]);\n    if ($days_in_month < 1 || $days_in_month > 29) {\n\
    \        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmpt9567ity.php:22\nStack trace:\n#0 /tmp/tmpt9567ity.php(37): valid_date('2000-11-03')\n\
    #1 /tmp/tmpt9567ity.php(41): candidate('03-11-2000')\n#2 /tmp/tmpt9567ity.php(59):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpt9567ity.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if($day < 1 || $day > 31) {\n        return false;\n    }\n    if($month\
    \ == 2) {\n        if($day > 29) {\n            return false;\n        }\n   \
    \ }\n    if($month == 1) {\n        if($day > 31) {\n            return false;\n\
    \        }\n    }\n    if($month == 3) {\n        if($day > 31) {\n          \
    \  return false;\n        }\n    }\n    if($month == 5) {\n        if($day > 30)\
    \ {\n            return false;\n        }\n    }\n    if($month == 7) {\n    \
    \    if($day > 31) {\n            return false;\n        }\n    }\n    if($month\
    \ == 8) {\n        if($day > 31) {\n            return false;\n        }\n   \
    \ }\n    if($month == 10) {\n        if($day > 31) {\n            return false;\n\
    \        }\n    }\n    if($month == 12) {\n        if($day > 31) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xopz3zq.php:88\n\
    Stack trace:\n#0 /tmp/tmp5xopz3zq.php(99): test()\n#1 {main}\n  thrown in /tmp/tmp5xopz3zq.php\
    \ on line 88\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != '' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d->format('m-d-Y') !=\
    \ '0000-00-00' && $d->format('m-d-Y') != '0000-00-00' && $d\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6_x38rcf.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace(' ', '-', $date);\n\
    \    $date = str_replace('/', '-', $date);\n    $date = str_replace('-', '/',\
    \ $date);\n    $date = str_replace(' ', '-', $date);\n    $date = str_replace('T',\
    \ ':', $date);\n    $date = str_replace('Z', '', $date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n    $date = strtotime($date);\n\
    \    $date = strtotime($date);\n    $date = strtotime($date);\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvryv58me.php on line 102\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n    $date\
    \ = strtotime($date);\n    $today = time();\n    $datediff = $today - $date;\n\
    \    if ($datediff < 0 || $datediff > 86400) {\n        return false;\n    }\n\
    \    $months = array(\n        1 => 31,\n        3 => 31,\n        5 => 31,\n\
    \        7 => 31,\n        8 => 31,\n        10 => 31,\n        12 => 31,\n  \
    \      4 => 30,\n        6 => 30,\n        9 => 30,\n        11 => 30,\n     \
    \   2 => 29\n    );\n    $days_in_month = cal_days_in_month(0, date('m'), date('t'));\n\
    \    $days_in_this_month = date('t', strtotime('01-'.date('m').'-'.date('Y')));\n\
    \    if ($days_in_month < 1 || $days_in_month > $months[date('m')] || $days_in_this_month\
    \ < 1 || $days_in_this_month > $months[date('m')]) {\n        return false;\n\
    \    }\n    $year = date('Y');\n    $month = date('m');\n    $day = date('d');\n\
    \    $date_string = date('m-d-Y', strtotime($year.'-'.$month.'-'.$day));\n   \
    \ if ($date_string == $date) {\n        return true;\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmsmiwss2.php:56\n\
    Stack trace:\n#0 /tmp/tmpmsmiwss2.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpmsmiwss2.php\
    \ on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = strtotime($date);\n    if ($date\
    \ === false) {\n        return false;\n    }\n    $year = date('Y', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $months = array(\n\
    \        1 => 31,\n        3 => 31,\n        5 => 31,\n        7 => 31,\n    \
    \    8 => 31,\n        10 => 31,\n        12 => 31,\n        4 => 30,\n      \
    \  6 => 30,\n        9 => 30,\n        11 => 30,\n        2 => 29\n    );\n  \
    \  if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day\
    \ < 1 || $day > $months[$month]) {\n        return false;\n    }\n    if ($month\
    \ == 2) {\n        if ($year % 400 == 0 || ($year % 4 == 0 && $year % 100 != 0))\
    \ {\n            return true;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecel_067.php:62\n\
    Stack trace:\n#0 /tmp/tmpecel_067.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpecel_067.php\
    \ on line 62\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkswon4zd.php:23\n\
    Stack trace:\n#0 /tmp/tmpkswon4zd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkswon4zd.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = date('m', $date);\n    $day = date('d', $date);\n    $month = date('m',\
    \ $date);\n    $day = date('d', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = \nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv_9jl4h6.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $valid = true;\n    if\
    \ (empty($dateArray[0])) {\n        $valid = false;\n    }\n    if (count($dateArray)\
    \ < 3 || count($dateArray) > 4) {\n        $valid = false;\n    }\n    if ($dateArray[1]\
    \ < 1 || $dateArray[1] > 12) {\n        $valid = false;\n    }\n    if ($dateArray[2]\
    \ < 1 || $dateArray[2] > 31) {\n        $valid = false;\n    }\n    if ($dateArray[1]\
    \ == 2 && $dateArray[2] > 29) {\n        $valid = false;\n    }\n    return $valid;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mvl8_6b.php:41\n\
    Stack trace:\n#0 /tmp/tmp1mvl8_6b.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp1mvl8_6b.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if($day < 1 || $day > 31) {\n        return false;\n    }\n    if($month\
    \ == 2) {\n        if($day > 29) {\n            return false;\n        }\n   \
    \ }\n    if($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n   \
    \     if($day > 30) {\n            return false;\n        }\n    }\n    if($month\
    \ == 1) {\n        if($day > 31) {\n            return false;\n        }\n   \
    \ }\n    if($month == 3 || $month == 5 || $month == 7 || $month == 8) {\n    \
    \    if($day > 31) {\n            return false;\n        }\n    }\n    if($month\
    \ == 7) {\n        if($day > 31) {\n            return false;\n        }\n   \
    \ }\n    if($month == 10) {\n        if($day > 30) {\n            return false;\n\
    \        }\n    }\n    if($month == 12) {\n        if($day > 31) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[0].'-'.$date[1];\n\
    \    $date = strtotime($date);\n    $today = strtotime(date('Y-m-d'));\n    $date\
    \ = $date - $today;\n    $date = floor($date/86400);\n    if($date < 1 || $date\
    \ > 31) {\n        return false;\n    }\n    if($date < 1 || $date > 30) {\n \
    \       return false;\n    }\n    if($date < 1 || $date > 29) {\n        return\
    \ false;\n    }\n    if($date < 1 || $date > 12) {\n        return false;\n  \
    \  }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmtq48ye.php:44\n\
    Stack trace:\n#0 /tmp/tmpgmtq48ye.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpgmtq48ye.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    $dateArray\
    \ = explode('-', $date);\n    if (empty($dateArray[0])) {\n        $valid = false;\n\
    \    } else {\n        $valid = true;\n    }\n    if (count($dateArray) < 3 ||\
    \ count($dateArray) > 4) {\n        $valid = false;\n    } else {\n        $valid\
    \ = true;\n    }\n    if ($dateArray[1] < 1 || $dateArray[1] > 12) {\n       \
    \ $valid = false;\n    } else {\n        $valid = true;\n    }\n    if ($dateArray[2]\
    \ < 1 || $dateArray[2] > 31) {\n        $valid = false;\n    } else {\n      \
    \  $valid = true;\n    }\n    if ($dateArray[1] == 2 && $dateArray[2] > 29) {\n\
    \        $valid = false;\n    } else {\n        $valid = true;\n    }\n    return\
    \ $valid;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7w80bqh.php:51\n\
    Stack trace:\n#0 /tmp/tmpw7w80bqh.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpw7w80bqh.php\
    \ on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgtc4l5wn.php:23\n\
    Stack trace:\n#0 /tmp/tmpgtc4l5wn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgtc4l5wn.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $date\
    \ = explode('-', $date);\n    $day = $date[0];\n    $month = $date[1];\n    $year\
    \ = $date[2];\n    if (empty($date) || $day < 1 || $day > 31 || $month < 1 ||\
    \ $month > 12 || $year < 1 || $year > $year) {\n        return false;\n    }\n\
    \    $months = array('01', '03', '05', '07', '08', '10', '12');\n    if (in_array($month,\
    \ $months)) {\n        $daysInMonth = cal_days_in_month(CAL_GREGORIAN, $month,\
    \ $year);\n        if ($day < 1 || $day > $daysInMonth) {\n            return\
    \ false;\n        }\n    }\n    $months = array('04', '06', '09', '11');\n   \
    \ if (in_array($month, $months)) {\n        $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n        if ($day < 1 || $day > $daysInMonth) {\n          \
    \  return false;\n        }\n    }\n    $months = array('02');\n    if (in_array($month,\
    \ $months)) {\n        $daysInMonth = cal_days_in_month(CAL_GREGORIAN, $month,\
    \ $year);\n        if ($day < 1 || $day > $daysInMonth) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmpt89kxmy8.php:33\nStack trace:\n#0 /tmp/tmpt89kxmy8.php(49): valid_date(Array)\n\
    #1 /tmp/tmpt89kxmy8.php(53): candidate('03-11-2000')\n#2 /tmp/tmpt89kxmy8.php(71):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpt89kxmy8.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if($day < 1 || $day > 31) {\n        return false;\n    }\n    if($month\
    \ == 2) {\n        if($day > 29) {\n            return false;\n        }\n   \
    \ }\n    if($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n   \
    \     if($day > 30) {\n            return false;\n        }\n    }\n    if($month\
    \ == 1) {\n        if($day > 31) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = str_replace('/', '-', $date);\n\
    \    $date = str_replace('-', '/', $date);\n    $date = explode('-', $date);\n\
    \    $date = $date[2].'-'.$date[1].'-'.$date[0];\n    $date = strtotime($date);\n\
    \    $today = strtotime(date('Y-m-d'));\n    $datediff = $today - $date;\n   \
    \ if ($datediff < 0 || $datediff > 86400) {\n        return false;\n    }\n  \
    \  $months = array(\n        1 => 31,\n        3 => 31,\n        5 => 31,\n  \
    \      7 => 31,\n        8 => 31,\n        10 => 31,\n        12 => 31,\n    \
    \    4 => 30,\n        6 => 30,\n        9 => 30,\n        11 => 30,\n       \
    \ 2 => 29,\n    );\n    $months_count = count($months);\n    for ($i = 0; $i <\
    \ $months_count; $i++) {\n        if ($months[$i] > $datediff) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThank you for your answer. I am not allowed to use any functions\
    \ or classes. I only need to use if statements and loops.\n<|/ c |>\n<| c |>\n\
    I updated my answer to include a solution that uses only `if` statements and loops.\n\
    <|/ c |>\n<| c |>\nThank you for your answer. I am not allowed to use any functions\
    \ or classes. I only need to use if statements and loops.\n<|/ c |>\n<| c |>\n\
    I updated my answer to include a solution that uses only `if` statements and loops.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$date = \"03-11-2000\";\n$dateArray\
    \ = explode(\"-\", $date);\n$dateArray = array_filter($dateArray);\n$dateArray\
    \ = array_map(\"intval\", $dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n$dateArray = array_filter($dateArray);\n\
    $dateArray = array_filter($dateArray);\n\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp3ttw73o.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    if ($difference < 0 || $difference\
    \ > 86400) {\n        return false;\n    }\n    $months = array(\n        1 =>\
    \ 31,\n        3 => 31,\n        5 => 31,\n        7 => 31,\n        8 => 31,\n\
    \        10 => 31,\n        12 => 31,\n        4 => 30,\n        6 => 30,\n  \
    \      9 => 30,\n        11 => 30,\n        2 => 29\n    );\n    $days_in_month\
    \ = cal_days_in_month(0, $date);\n    $days_in_this_month = cal_days_in_month(0,\
    \ $today);\n    $days_in_next_month = cal_days_in_month(1, $today);\n    $days_in_next_year\
    \ = cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_days_in_month(cal_\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqfrjlv_k.php on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $month\
    \ = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n    if ($month < 1\
    \ || $month > 12) {\n        return false;\n    }\n    if ($day < 1 || $day >\
    \ 31) {\n        return false;\n    }\n    if ($month == 1 && $day > 31) {\n \
    \       return false;\n    }\n    if ($month == 2 && $day > 29) {\n        return\
    \ false;\n    }\n    if ($month == 4 && $day > 30) {\n        return false;\n\
    \    }\n    if ($month == 6 && $day > 31) {\n        return false;\n    }\n  \
    \  if ($month == 9 && $day > 30) {\n        return false;\n    }\n    if ($month\
    \ == 11 && $day > 31) {\n        return false;\n    }\n    if ($month == 12 &&\
    \ $day > 31) {\n        return false;\n    }\n    if ($month == 1 && $day < 1)\
    \ {\n        return false;\n    }\n    if ($month == 3 && $day < 1) {\n      \
    \  return false;\n    }\n    if ($month == 5 && $day < 1) {\n        return false;\n\
    \    }\n    if ($month == 7 && $day < 1) {\n        return false;\n    }\n   \
    \ if ($month == 8 && $day < 1) {\n        return false;\n    }\n    if ($month\
    \ == 10 && $day < 1) {\n        return false;\n    }\n    if ($month == 12 &&\
    \ $day < 1) {\n        return false;\n    }\n    if ($month == 1 && $day > 31\
    \ && $day < 30) {\n        return false;\n    }\n    if ($month == 4 && $day >\
    \ 31 && $day < 30) {\n        return false;\n    }\n    if ($month == 6 && $day\
    \ > 31 && $day < 30) {\n        return false;\n    }\n    if ($month == 9 && $day\
    \ > 31 && $day < 30) {\n        return false;\n    }\n    if ($month == 11 &&\
    \ $day > 31 && $day < 30) {\n        return false;\n    }\n    if ($month == 1\
    \ && $day > 30 && $day < 31) {\n        return false;\n    }\n    if ($month ==\
    \ 4 && $day > 30 && $day < 31) {\n        return false;\n    }\n    if ($month\
    \ == 6 && $day > 30 && $day < 31) {\n        return false;\n    }\n    if ($month\
    \ == 9 && $day > 30 && $day < 31) {\n        return false;\n    }\n    if ($month\
    \ == 11 && $day > 30 && $day < 31) {\n        return false;\n    }\n    if ($month\
    \ == 1 && $day > 31 && $day < 30) {\n        return false;\n    }\n    if ($month\
    \ == 4 && $day > 31 && $day < 30) {\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe868w1qk.php on line 130\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppcj1hprf.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $valid = true;\n    if\
    \ (empty($dateArray[0])) {\n        $valid = false;\n    }\n    if (count($dateArray)\
    \ < 3) {\n        $valid = false;\n    }\n    if (count($dateArray) < 3) {\n \
    \       $valid = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid\
    \ = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n\
    \    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n    }\n   \
    \ if (count($dateArray) < 3) {\n        $valid = false;\n    }\n    if (count($dateArray)\
    \ < 3) {\n        $valid = false;\n    }\n    if (count($dateArray) < 3) {\n \
    \       $valid = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid\
    \ = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n\
    \    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n    }\n   \
    \ if (count($dateArray) < 3) {\n        $valid = false;\n    }\n    if (count($dateArray)\
    \ < 3) {\n        $valid = false;\n    }\n    if (count($dateArray) < 3) {\n \
    \       $valid = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid\
    \ = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n\
    \    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n    }\n   \
    \ if (count($dateArray) < 3) {\n        $valid = false;\n    }\n    if (count($dateArray)\
    \ < 3) {\n        $valid = false;\n    }\n    if (count($dateArray) < 3) {\n \
    \       $valid = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid\
    \ = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n\
    \    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n    }\n   \
    \ if (count($dateArray) < 3) {\n        $valid = false;\n    }\n    if (count($dateArray)\
    \ < 3) {\n        $valid = false;\n    }\n    if (count($dateArray) < 3) {\n \
    \       $valid = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid\
    \ = false;\n    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n\
    \    }\n    if (count($dateArray) < 3) {\n        $valid = false;\n    }\n   \
    \ if (count($dateArray) < 3) {\n        $valid = false;\n    }\n    if (count($dateArray)\
    \ < 3) {\n        $valid = false;\n    }\n    if (count($date\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3rwrb_n6.php on line 116\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = intval($date[0]);\n    $day\
    \ = intval($date[1]);\n    $year = intval($date[2]);\n    if($month < 1 || $month\
    \ > 12) {\n        return false;\n    }\n    if($day < 1 || $day > 31) {\n   \
    \     return false;\n    }\n    if($month == 2) {\n        if($day > 29) {\n \
    \           return false;\n        }\n    }\n    if($month == 4 || $month == 6\
    \ || $month == 9 || $month == 11) {\n        if($day > 30) {\n            return\
    \ false;\n        }\n    }\n    if($month == 1) {\n        if($day > 31) {\n \
    \           return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    $days = floor($difference\
    \ / 86400);\n    $months = floor(($difference % 86400) / 3600 / 24);\n    $years\
    \ = floor(($difference % 86400) / 3600 / 24 / 365);\n    if ($days < 1 || $days\
    \ > 31 || $months < 1 || $months > 12 || $years < 1 || $years > 30) {\n      \
    \  return false;\n    }\n    if ($months == 2) {\n        if ($days < 1 || $days\
    \ > 29) {\n            return false;\n        }\n    }\n    if ($months == 4 ||\
    \ $months == 6 || $months == 9 || $months == 11) {\n        if ($days < 1 || $days\
    \ > 30) {\n            return false;\n        }\n    }\n    if ($months == 1)\
    \ {\n        if ($days < 1 || $days > 31) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52ve3y_h.php:47\n\
    Stack trace:\n#0 /tmp/tmp52ve3y_h.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp52ve3y_h.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $valid\
    \ = false;\n    $dateArray = explode(\"-\", $date);\n    $day = $dateArray[0];\n\
    \    $month = $dateArray[1];\n    $year = $dateArray[2];\n    $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    if ($day > 0 && $day <= $daysInMonth) {\n        $valid\
    \ = true;\n    }\n    if ($month > 0 && $month <= 12) {\n        $valid = true;\n\
    \    }\n    if ($month == 2) {\n        $valid = true;\n    }\n    if ($day >\
    \ 0 && $day <= 29) {\n        $valid = true;\n    }\n    if ($day > 0 && $day\
    \ <= 31) {\n        $valid = true;\n    }\n    if ($day > 0 && $day <= 30) {\n\
    \        $valid = true;\n    }\n    if ($day > 0 && $day <= 31) {\n        $valid\
    \ = true;\n    }\n    if ($day > 0 && $day <= 30) {\n        $valid = true;\n\
    \    }\n    if ($day > 0 && $day <= 31) {\n        $valid = true;\n    }\n   \
    \ if ($day > 0 && $day <= 30) {\n        $valid = true;\n    }\n    if ($day >\
    \ 0 && $day <= 31) {\n        $valid = true;\n    }\n    if ($day > 0 && $day\
    \ <= 30) {\n        $valid = true;\n    }\n    if ($day > 0 && $day <= 31) {\n\
    \        $valid = true;\n    }\n    if ($day > 0 && $day <= 30) {\n        $valid\
    \ = true;\n    }\n    if ($day > 0 && $day <= 31) {\n        $valid = true;\n\
    \    }\n    if ($day > 0 && $day <= 30) {\n        $valid = true;\n    }\n   \
    \ if ($day > 0 && $day <= 31) {\n        $valid = true;\n    }\n    if ($day >\
    \ 0 && $day <= 30) {\n        $valid = true;\n    }\n    if ($day > 0 && $day\
    \ <= 31) {\n        $valid = true;\n    }\n    if ($day > 0 && $day <= 30) {\n\
    \        $valid = true;\n    }\n    if ($day > 0 && $day <= 31) {\n        $valid\
    \ = true;\n    }\n    if ($day > 0 && $day <= 30) {\n        $valid = true;\n\
    \    }\n    if ($day > 0 && $day <= 31) {\n        $valid = true;\n    }\n   \
    \ if ($day > 0 && $day <= 30) {\n        $valid = true;\n    }\n    if ($day >\
    \ 0 && $day <= 31) {\n        $valid = true;\n    }\n    if ($day > 0 && $day\
    \ <= 30) {\n        $valid = true;\n    }\n    if ($day > 0 && $day <= 31) {\n\
    \        $\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppfl8gd6t.php on line 103\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[1].'-'.$date[0];\n\
    \    $date = strtotime($date);\n    $today = strtotime(date('Y-m-d'));\n    $days_diff\
    \ = $today - $date;\n    $months_diff = $days_diff / (60 * 60 * 24 * 30);\n  \
    \  $years_diff = $days_diff / (60 * 60 * 24 * 365);\n    if ($months_diff > 1\
    \ || $years_diff > 1 || $months_diff > 12 || $years_diff > 31 || $months_diff\
    \ > 30 || $months_diff > 29) {\n        return false;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzfgcq15i.php:37\n\
    Stack trace:\n#0 /tmp/tmpzfgcq15i.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpzfgcq15i.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date_string = trim($date);\n  \
    \  if (empty($date_string)) {\n        return false;\n    }\n    $date_array =\
    \ explode('-', $date_string);\n    if (count($date_array) != 3) {\n        return\
    \ false;\n    }\n    $month = $date_array[0];\n    $day = $date_array[1];\n  \
    \  $year = $date_array[2];\n    if ($month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($day < 1 || $day > 31) {\n        return false;\n   \
    \ }\n    if ($month == 2) {\n        if ($day > 29) {\n            return false;\n\
    \        }\n    }\n    if ($month == 1) {\n        if ($day > 31) {\n        \
    \    return false;\n        }\n    }\n    if ($month == 3) {\n        if ($day\
    \ > 31) {\n            return false;\n        }\n    }\n    if ($month == 5) {\n\
    \        if ($day > 30) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 7) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 8) {\n        if ($day > 28) {\n            return\
    \ false;\n        }\n    }\n    if ($month == 10) {\n        if ($day > 31) {\n\
    \            return false;\n        }\n    }\n    if ($month == 12) {\n      \
    \  if ($day > 31) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxz1urxh.php:87\n\
    Stack trace:\n#0 /tmp/tmpvxz1urxh.php(98): test()\n#1 {main}\n  thrown in /tmp/tmpvxz1urxh.php\
    \ on line 87\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = strtolower($month);\n    $day = strtolower($day);\n    $month =\
    \ str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $date\
    \ = $month.\"-\".$day.\"-\".$year;\n    $date = strtotime($date);\n    $year =\
    \ date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = strtolower($month);\n    $day = strtolower($day);\n    $month =\
    \ str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $date\
    \ = $month.\"-\".$day.\"-\".$year;\n    $date = strtotime($date);\n    $year =\
    \ date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = strtolower($month);\n    $day = strtolower($day);\n    $month =\
    \ str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $date\
    \ = $month.\"-\".$day.\"-\".$year;\n    $date = strtotime($date);\n    $year =\
    \ date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = strtolower($month);\n    $day = strtolower($day);\n    $month =\
    \ str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $date\
    \ = $month.\"-\".$day.\"-\".$year;\n    $date = strtotime($date);\n    $year =\
    \ date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = strtolower($month);\n    $day = strtolower($day);\n    $month =\
    \ str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc93pexey.php on line 64\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = array($date[0], $date[1], $date[2]);\n\
    \    $date[2] = date('Y');\n    $date[0] = date('m');\n    $date[1] = date('d');\n\
    \    $date[1] = checkdate($date[1], $date[2], $date[0]);\n    if ($date[1] < 1\
    \ || $date[1] > 31) return false;\n    if ($date[2] < 1 || $date[2] > 30) return\
    \ false;\n    if ($date[0] < 1 || $date[0] > 12) return false;\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpht8vy8ve.php:35\n\
    Stack trace:\n#0 /tmp/tmpht8vy8ve.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpht8vy8ve.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n\
    \    $date = date('Y-m-d', $date);\n    $date = str_pad($date, 8, \"0\", STR_PAD_LEFT);\n\
    \    $date = str_pad($date, 4, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n\
    \    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n\
    \    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n\
    \    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n\
    \    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n\
    \    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n\
    \    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n\
    \    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n\
    \    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($date, 2, \"0\", STR_PAD_LEFT\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbebb9_pc.php on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != '';\n}\n</code>\n<|/ a tags=date,php,validation\
    \ |>\n<| c |>\nThis doesn't work when month is greater than 12. For example, `valid_date('04-0-2040')\
    \ => False`\n<|/ c |>\n<| c |>\nIt works fine for me. `valid_date('04-0-2040')\
    \ => False`\n<|/ c |>\n<| c |>\nIt doesn't work for me on PHP 7.2.24. `valid_date('04-0-2040')\
    \ => False`\n<|/ c |>\n<| c |>\nIt works for me on PHP 7.2.24. `valid_date('04-0-2040')\
    \ => True`\n<|/ c |>\n<| c |>\nIt works for me on PHP 7.2.24. `valid_date('04-0-2040')\
    \ => True`\n<|/ c |>\n<| a tags=date,php,validation |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1wallghw.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $day = $dateArray[0];\n    $month = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    if ($day < 1 || $day > $daysInMonth) {\n        return\
    \ false;\n    }\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($year < 1000 || $year > 9999) {\n        return false;\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmph9ih5mu7.php:21\nStack trace:\n#0 /tmp/tmph9ih5mu7.php(34): valid_date('03-11-2000')\n\
    #1 /tmp/tmph9ih5mu7.php(38): candidate('03-11-2000')\n#2 /tmp/tmph9ih5mu7.php(56):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmph9ih5mu7.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2da_uvb1.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp37bt7u5d.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if($day < 1 || $day > 31) {\n        return false;\n    }\n    if($month\
    \ == 2) {\n        if($day > 29) {\n            return false;\n        }\n   \
    \ }\n    if($month == 1) {\n        if($day > 31) {\n            return false;\n\
    \        }\n    }\n    if($month == 3) {\n        if($day > 31) {\n          \
    \  return false;\n        }\n    }\n    if($month == 5) {\n        if($day > 30)\
    \ {\n            return false;\n        }\n    }\n    if($month == 7) {\n    \
    \    if($day > 31) {\n            return false;\n        }\n    }\n    if($month\
    \ == 8) {\n        if($day > 31) {\n            return false;\n        }\n   \
    \ }\n    if($month == 10) {\n        if($day > 30) {\n            return false;\n\
    \        }\n    }\n    if($month == 12) {\n        if($day > 31) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbc3egmg.php:87\n\
    Stack trace:\n#0 /tmp/tmplbc3egmg.php(98): test()\n#1 {main}\n  thrown in /tmp/tmplbc3egmg.php\
    \ on line 87\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ejejj9e.php:23\n\
    Stack trace:\n#0 /tmp/tmp3ejejj9e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3ejejj9e.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    $dateArray\
    \ = explode(\"-\", $date);\n    $month = $dateArray[0];\n    $day = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $monthArray = array(\"01\", \"03\", \"05\", \"\
    07\", \"08\", \"10\", \"12\");\n    $dayArray = array(\"01\", \"03\", \"05\",\
    \ \"07\", \"08\", \"10\", \"12\", \"15\", \"17\", \"19\", \"21\", \"23\", \"25\"\
    , \"27\", \"29\", \"31\");\n    $yearArray = array(\"0000\", \"0001\", \"0002\"\
    , \"0003\", \"0004\", \"0005\", \"0006\", \"0007\", \"0008\", \"0009\", \"0010\"\
    , \"0011\", \"0012\", \"0013\", \"0014\", \"0015\", \"0016\", \"0017\", \"0018\"\
    , \"0019\", \"0020\", \"0021\", \"0022\", \"0023\", \"0024\", \"0025\", \"0026\"\
    , \"0027\", \"0028\", \"0029\", \"0030\", \"0031\");\n    if (empty($date)) {\n\
    \        $valid = false;\n    } else {\n        if ($day < 1 || $day > 31) {\n\
    \            $valid = false;\n        } else {\n            if (in_array($month,\
    \ $monthArray)) {\n                if ($day < 1 || $day > 31) {\n            \
    \        $valid = false;\n                } else {\n                    if ($day\
    \ < 1 || $day > 30) {\n                        $valid = false;\n             \
    \       } else {\n                        if ($day < 1 || $day > 29) {\n     \
    \                       $valid = false;\n                        } else {\n  \
    \                          if ($day < 1 || $day > 28) {\n                    \
    \            $valid = false;\n                            } else {\n         \
    \                       if ($day < 1 || $day > 31) {\n                       \
    \             $valid = false;\n                                } else {\n    \
    \                                if ($day < 1 || $day > 30) {\n              \
    \                          $valid = false;\n                                 \
    \   } else {\n                                        if ($day < 1 || $day > 29)\
    \ {\n                                            $valid = false;\n           \
    \                             } else {\n                                     \
    \       if ($day < 1 || $day > 28) {\n                                       \
    \         $valid = false;\n                                            } else\
    \ {\n                                                if ($day < 1 || $day > 31)\
    \ {\n                                                    $valid = false;\n   \
    \                                             } else {\n                     \
    \                               if ($day < 1 || $day > 30) {\n               \
    \                                         $valid = false;\n                  \
    \                                  } else {\n                                \
    \                        if ($day < 1 || $day > 29) {\n                      \
    \                                      $valid = false;\n                     \
    \                                   } else {\n                               \
    \                             if ($day < 1 || $day > 28) {\n                 \
    \                                               $valid = false;\n            \
    \                                                } else {\n                  \
    \                                              if ($day < 1 || $day > 31) {\n\
    \                                                                    $valid =\
    \ false;\n                                                                } else\
    \ {\n                                                                    if ($day\
    \ < 1 || $day > 30) {\n                                                      \
    \                  $valid = false;\n                                         \
    \                           } else {\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqe0hr9xg.php on line 96\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $dateArray = explode('-', $date);\n   \
    \ if(count($dateArray) != 3) {\n        return false;\n    }\n    $month = $dateArray[0];\n\
    \    $day = $dateArray[1];\n    $year = $dateArray[2];\n    if($month < 1 || $month\
    \ > 12) {\n        return false;\n    }\n    if($day < 1 || $day > 31) {\n   \
    \     return false;\n    }\n    if($month == 2) {\n        if($day > 29) {\n \
    \           return false;\n        }\n    }\n    if($month == 4 || $month == 6\
    \ || $month == 9 || $month == 11) {\n        if($day > 30) {\n            return\
    \ false;\n        }\n    }\n    if($month == 1) {\n        if($day > 31) {\n \
    \           return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3a1fs_g7.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3xf3wax.php:23\n\
    Stack trace:\n#0 /tmp/tmpj3xf3wax.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpj3xf3wax.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $date\
    \ = strtotime($date);\n    $year = date('Y', $date);\n    $month = date('m', $date);\n\
    \    $day = date('d', $date);\n    $month = strtolower($month);\n    $day = strtolower($day);\n\
    \    $month = str_replace(['january', 'february', 'march', 'april', 'may', 'june',\
    \ 'july', 'august', 'september', 'october', 'november', 'december'], ['jan', 'feb',\
    \ 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'], $month);\n\
    \    $day = str_replace(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11',\
    \ '12'], ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\
    \ $day);\n    $year = str_replace(['20', '19', '18', '17', '16', '15', '14', '13',\
    \ '12', '11', '10', '9', '8', '7', '6', '5', '4', '3', '2'], ['20', '19', '18',\
    \ '17', '16', '15', '14', '13', '12', '11', '10', '9', '8', '7', '6', '5', '4',\
    \ '3'], $year);\n    $year = str_replace(['19', '18', '17', '16', '15', '14',\
    \ '13', '12', '11', '10', '9', '8', '7', '6', '5', '4', '3', '2'], ['19', '18',\
    \ '17', '16', '15', '14', '13', '12', '11', '10', '9', '8', '7', '6', '5', '4',\
    \ '3'], $year);\n    $year = str_replace(['18', '17', '16', '15', '14', '13',\
    \ '12', '11', '10', '9', '8', '7', '6', '5', '4', '3', '2'], ['18', '17', '16',\
    \ '15', '14', '13', '12', '11', '10', '9', '8', '7', '6', '5', '4', '3'], $year);\n\
    \    $year = str_replace(['17', '16', '15', '14', '13', '12', '11', '10', '9',\
    \ '8', '7', '6', '5', '4', '3', '2'], ['17', '16', '15', '14', '13', '12', '11',\
    \ '10', '9', '8', '7', '6', '5', '4', '3'], $year);\n    $year = str_replace(['16',\
    \ '15', '14', '13', '12', '11', '10', '9', '8', '7', '6', '5', '4', '3', '2'],\
    \ ['16', '15', '14', '13', '12', '11', '10', '9', '8', '\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpir283chw.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace(' ', '-', $date);\n\
    \    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date =\
    \ strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date = strtotime($date);\n\
    \    $date = date('Y-m-d', $date);\n    $date = strtotime($date);\n    $date =\
    \ date('Y-m-d', $date);\n    $date = strtotime($date);\n    $date = date('Y-m-d',\
    \ $date);\n    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n\
    \    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date =\
    \ strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date = strtotime($date);\n\
    \    $date = date('Y-m-d', $date);\n    $date = strtotime($date);\n    $date =\
    \ date('Y-m-d', $date);\n    $date = strtotime($date);\n    $date = date('Y-m-d',\
    \ $date);\n    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n\
    \    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date =\
    \ strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date = strtotime($date);\n\
    \    $date = date('Y-m-d', $date);\n    $date = strtotime($date);\n    $date =\
    \ date('Y-m-d', $date);\n    $date = strtotime($date);\n    $date = date('Y-m-d',\
    \ $date);\n    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n\
    \    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date =\
    \ strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date = strtotime($date);\n\
    \    $date = date('Y-m-d', $date);\n    $date = strtotime($date);\n    $date =\
    \ date('Y-m-d', $date);\n    $date = strtotime($date);\n    $date = date('Y-m-d',\
    \ $date);\n    $date = strtotime($date);\n    $date = date('Y-m-d', $date);\n\
    \    $date = strtotime($\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdzwgovjn.php on line 68\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb3zdkm.php:24\n\
    Stack trace:\n#0 /tmp/tmpqfb3zdkm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqfb3zdkm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $valid = false;\n    $dateArray\
    \ = explode(\"-\", $date);\n    if (count($dateArray) == 3) {\n        $valid\
    \ = true;\n        $day = $dateArray[0];\n        $month = $dateArray[1];\n  \
    \      $year = $dateArray[2];\n        if ($day < 1 || $day > 31) {\n        \
    \    $valid = false;\n        }\n        if ($month < 1 || $month > 12) {\n  \
    \          $valid = false;\n        }\n        if ($month == 2 && $day > 29) {\n\
    \            $valid = false;\n        }\n        if ($month == 2 && $day < 1)\
    \ {\n            $valid = false;\n        }\n        if ($month == 2 && $day >\
    \ 28) {\n            $valid = false;\n        }\n        if ($month == 1 && $day\
    \ > 31) {\n            $valid = false;\n        }\n        if ($month == 1 &&\
    \ $day < 1) {\n            $valid = false;\n        }\n        if ($month == 1\
    \ && $day > 30) {\n            $valid = false;\n        }\n        if ($month\
    \ == 3 && $day > 31) {\n            $valid = false;\n        }\n        if ($month\
    \ == 3 && $day < 1) {\n            $valid = false;\n        }\n        if ($month\
    \ == 3 && $day > 30) {\n            $valid = false;\n        }\n        if ($month\
    \ == 5 && $day > 31) {\n            $valid = false;\n        }\n        if ($month\
    \ == 5 && $day < 1) {\n            $valid = false;\n        }\n        if ($month\
    \ == 5 && $day > 30) {\n            $valid = false;\n        }\n        if ($month\
    \ == 7 && $day > 31) {\n            $valid = false;\n        }\n        if ($month\
    \ == 7 && $day < 1) {\n            $valid = false;\n        }\n        if ($month\
    \ == 7 && $day > 30) {\n            $valid = false;\n        }\n        if ($month\
    \ == 8 && $day > 31) {\n            $valid = false;\n        }\n        if ($month\
    \ == 8 && $day < 1) {\n            $valid = false;\n        }\n        if ($month\
    \ == 8 && $day > 30) {\n            $valid = false;\n        }\n        if ($month\
    \ == 10 && $day > 31) {\n            $valid = false;\n        }\n        if ($month\
    \ == 10 && $day < 1) {\n            $valid = false;\n        }\n        if ($month\
    \ == 10 && $day > 30) {\n            $valid = false;\n        }\n        if ($month\
    \ == 12 && $day > 31) {\n            $valid = false;\n        }\n        if ($month\
    \ == 12 && $day < 1) {\n            $valid = false;\n        }\n        if ($month\
    \ == 12 && $day > 30) {\n            $valid = false;\n        }\n    }\n    return\
    \ $valid;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2py7mg1h.php:110\n\
    Stack trace:\n#0 /tmp/tmp2py7mg1h.php(127): test()\n#1 {main}\n  thrown in /tmp/tmp2py7mg1h.php\
    \ on line 110\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp95rqxcol.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $date_diff = $today - $date;\n    $date_diff_days = floor($date_diff\
    \ / (60 * 60 * 24));\n    $date_diff_hours = floor($date_diff / (60 * 60));\n\
    \    $date_diff_minutes = floor($date_diff / 60);\n    $date_diff_seconds = floor($date_diff);\n\
    \    $date_diff_months = floor($date_diff_days / 30);\n    $date_diff_years =\
    \ floor($date_diff_days / 365);\n\n    if ($date_diff_days < 1 || $date_diff_days\
    \ > 31) {\n        return false;\n    }\n    if ($date_diff_months < 1 || $date_diff_months\
    \ > 12) {\n        return false;\n    }\n    if ($date_diff_years < 1 || $date_diff_years\
    \ > 365) {\n        return false;\n    }\n    if ($date_diff_hours < 1 || $date_diff_hours\
    \ > 24) {\n        return false;\n    }\n    if ($date_diff_minutes < 1 || $date_diff_minutes\
    \ > 60) {\n        return false;\n    }\n    if ($date_diff_seconds < 1 || $date_diff_seconds\
    \ > 60) {\n        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tkzssy9.php:51\n\
    Stack trace:\n#0 /tmp/tmp5tkzssy9.php(69): test()\n#1 {main}\n  thrown in /tmp/tmp5tkzssy9.php\
    \ on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day,\
    \ 2, \"0\", STR_PAD_LEFT);\n    $date = str_pad($year, 4, \"0\", STR_PAD_LEFT)\
    \ . \"-\" . $month . \"-\" . $day;\n    $dateArray = explode(\"-\", $date);\n\
    \    $monthArray = array(\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"\
    );\n    $dayArray = array(\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"\
    , \"13\", \"15\", \"17\", \"19\", \"21\", \"23\", \"25\", \"27\", \"29\", \"31\"\
    );\n    $yearArray = array(\"0000\", \"0001\", \"0002\", \"0003\", \"0004\", \"\
    0005\", \"0006\", \"0007\", \"0008\", \"0009\", \"0010\", \"0011\", \"0012\",\
    \ \"0013\", \"0014\", \"0015\", \"0016\", \"0017\", \"0018\", \"0019\", \"0020\"\
    , \"0021\", \"0022\", \"0023\", \"0024\", \"0025\", \"0026\", \"0027\", \"0028\"\
    , \"0029\", \"0030\", \"0031\");\n    $monthArray = array_flip($monthArray);\n\
    \    $dayArray = array_flip($dayArray);\n    $yearArray = array_flip($yearArray);\n\
    \    $month = $monthArray[$month];\n    $day = $dayArray[$day];\n    $year = $yearArray[$year];\n\
    \    if ($date != \"\" && $day != \"\" && $month != \"\" && $year != \"\") {\n\
    \        if ($day < 1 || $day > 31) {\n            return false;\n        }\n\
    \        if ($month < 1 || $month > 12) {\n            return false;\n       \
    \ }\n        if ($year < 1 || $year > 9999) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2kp6t0a.php:53\n\
    Stack trace:\n#0 /tmp/tmph2kp6t0a.php(70): test()\n#1 {main}\n  thrown in /tmp/tmph2kp6t0a.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    $valid = $d && $d->format('m-d-Y') != '';\n    $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n\
    \    $months_count = count($months);\n    $days_count = cal_days_in_month(CAL_GREGORIAN,\
    \ $months[$d->format('m')], $d->format('Y'));\n    $days_count_30 = cal_days_in_month(CAL_GREGORIAN,\
    \ $months[$d->format('m')], $d->format('Y')) + 1;\n    $days_count_29 = cal_days_in_month(CAL_GREGORIAN,\
    \ $months[$d->format('m')], $d->format('Y')) + 2;\n    $days_count_31 = cal_days_in_month(CAL_GREGORIAN,\
    \ $months[$d->format('m')], $d->format('Y')) + 3;\n    $days_count_30_or_29 =\
    \ cal_days_in_month(CAL_GREGORIAN, $months[$d->format('m')], $d->format('Y'))\
    \ + 4;\n    $days_count_31_or_29 = cal_days_in_month(CAL_GREGORIAN, $months[$d->format('m')],\
    \ $d->format('Y')) + 5;\n    $days_count_30_or_31 = cal_days_in_month(CAL_GREGORIAN,\
    \ $months[$d->format('m')], $d->format('Y')) + 6;\n    $days_count_31_or_31 =\
    \ cal_days_in_month(CAL_GREGORIAN, $months[$d->format('m')], $d->format('Y'))\
    \ + 7;\n    $days_count_30_or_31_or_29 = cal_days_in_month(CAL_GREGORIAN, $months[$d->format('m')],\
    \ $d->format('Y')) + 8;\n    $days_count_31_or_30_or_29 = cal_days_in_month(CAL_GREGORIAN,\
    \ $months[$d->format('m')], $d->format('Y')) + 9;\n    $days_count_30_or_31_or_29_or_31_or_30_or_29\
    \ = cal_days_in_month(CAL_GREGORIAN, $months[$d->format('m')], $d->format('Y'))\
    \ + 10;\n    $days_count_31_or_30_or_31_or_29_or_31_or_30_or_29_or_31_or_30_or_29\
    \ = cal_days_in_month\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphmeny038.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    $day\
    \ = date('d', $date);\n    $month = date('m', $date);\n    $year = date('Y', $date);\n\
    \    if ($day < 1 || $day > 31 || ($month == 1 && $day > 30) || ($month == 3 &&\
    \ $day > 29) || ($month == 5 && $day > 31) || ($month == 7 && $day > 31) || ($month\
    \ == 8 && $day > 31) || ($month == 10 && $day > 30) || ($month == 12 && $day >\
    \ 31)) {\n        return false;\n    }\n    if ($month < 1 || $month > 12) {\n\
    \        return false;\n    }\n    if ($year < 1000 || $year > 9999) {\n     \
    \   return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: date() expects parameter 2 to be int, array given in /tmp/tmp9s_jjlvr.php\
    \ on line 21\n\nWarning: date() expects parameter 2 to be int, array given in\
    \ /tmp/tmp9s_jjlvr.php on line 22\n\nWarning: date() expects parameter 2 to be\
    \ int, array given in /tmp/tmp9s_jjlvr.php on line 23\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp9s_jjlvr.php:41\nStack trace:\n#0 /tmp/tmp9s_jjlvr.php(59):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9s_jjlvr.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if($day < 1 || $day > 31) {\n        return false;\n    }\n    if($month\
    \ == 2) {\n        if($day > 29) {\n            return false;\n        }\n   \
    \ }\n    if($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n   \
    \     if($day > 30) {\n            return false;\n        }\n    }\n    if($month\
    \ == 1) {\n        if($day > 31) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = strtotime($date);\n    $date = date('Y-m-d', $date);\n    $date = explode('-',\
    \ $date);\n    $date = array_map('intval', $date);\n    $date = $date[0];\n  \
    \  $month = array_shift($date);\n    $day = array_shift($date);\n    $year = array_shift($date);\n\
    \    $month = array_shift($date);\n    $day = array_shift($date);\n    $year =\
    \ array_shift($date);\n    $month = array_shift($date);\n    $day = array_shift($date);\n\
    \    $year = array_shift($date);\n    $month = array_shift($date);\n    $day =\
    \ array_shift($date);\n    $year = array_shift($date);\n    $month = array_shift($date);\n\
    \    $day = array_shift($date);\n    $year = array_shift($date);\n    $month =\
    \ array_shift($date);\n    $day = array_shift($date);\n    $year = array_shift($date);\n\
    \    $month = array_shift($date);\n    $day = array_shift($date);\n    $year =\
    \ array_shift($date);\n    $month = array_shift($date);\n    $day = array_shift($date);\n\
    \    $year = array_shift($date);\n    $month = array_shift($date);\n    $day =\
    \ array_shift($date);\n    $year = array_shift($date);\n    $month = array_shift($date);\n\
    \    $day = array_shift($date);\n    $year = array_shift($date);\n    $month =\
    \ array_shift($date);\n    $day = array_shift($date);\n    $year = array_shift($date);\n\
    \    $month = array_shift($date);\n    $day = array_shift($date);\n    $year =\
    \ array_shift($date);\n    $month = array_shift($date);\n    $day = array_shift($date);\n\
    \    $year = array_shift($date);\n    $month = array_shift($date);\n    $day =\
    \ array_shift($date);\n    $year = array_shift($date);\n    $month = array_shift($date);\n\
    \    $day = array_shift($date);\n    $year = array_shift($date);\n    $month =\
    \ array_shift($date);\n    $day = array_shift($date);\n    $year = array_shift($date);\n\
    \    $month = array_shift($date);\n    $day = array_shift($date);\n    $year =\
    \ array_shift($date);\n    $month = array_shift($date);\n    $day = array_shift($date);\n\
    \    $year = array_shift($date);\n    $month = array_shift($date);\n    $day =\
    \ array_shift($date);\n    $year = array_shift($date);\n    $month = array_\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9isdhc8k.php on line 80\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $date\
    \ = strtotime($date);\n    $today = strtotime(date('Y-m-d'));\n    $diff = $today\
    \ - $date;\n    if ($diff < 0 || $diff > 86400) {\n        return false;\n   \
    \ }\n    if (date('m', $date) < 1 || date('m', $date) > 12) {\n        return\
    \ false;\n    }\n    if (date('d', $date) < 1 || date('d', $date) > 31) {\n  \
    \      return false;\n    }\n    if (date('Y', $date) < 2000 || date('Y', $date)\
    \ > 2040) {\n        return false;\n    }\n    return true;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't seem to work. `valid_date('03-11-2000') =>\
    \ True` should be false but it is returning true.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I edited the answer to include a test case.\n<|/ c |>\n<| c\
    \ |>\nI tested it and it works. I edited the answer to include a test case.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I edited the answer to include a\
    \ test case.\n<|/ c |>\n<| c |>\nI tested it and it works. I edited the answer\
    \ to include a test case.\n<|/ c |>\n<| a tags=php,date,validation |>\n<code>\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2l5cx6zp.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $year\
    \ = date('Y', $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\
    \    $month = strtolower($month);\n    $day = strtolower($day);\n    $month =\
    \ str_pad($month, 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($day, 2, \"0\"\
    , STR_PAD_LEFT);\n    $year = str_pad($year, 4, \"0\", STR_PAD_LEFT);\n    $month\
    \ = $month < 10 ? \"0\".$month : $month;\n    $day = $day < 10 ? \"0\".$day :\
    \ $day;\n    $date = str_pad($month.\"-\".$day.\"-\".$year, 4, \"0\", STR_PAD_LEFT);\n\
    \    return $date == $year.\"-\".$month.\"-\".$day;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgd_efjcz.php:36\n\
    Stack trace:\n#0 /tmp/tmpgd_efjcz.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpgd_efjcz.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    if ($d === false) {\n        return false;\n    }\n    $daysInMonth\
    \ = cal_days_in_month(CAL_GREGORIAN, $d->format('m'), $d->format('Y'));\n    if\
    \ ($d->format('m') > 12 || $d->format('m') < 1 || $d->format('d') > $daysInMonth\
    \ || $d->format('d') < 1) {\n        return false;\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function cal_days_in_month()\
    \ in /tmp/tmp_2zidw27.php:20\nStack trace:\n#0 /tmp/tmp_2zidw27.php(27): valid_date('03-11-2000')\n\
    #1 /tmp/tmp_2zidw27.php(31): candidate('03-11-2000')\n#2 /tmp/tmp_2zidw27.php(49):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp_2zidw27.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    $valid = TRUE;\n    if ($d === FALSE) {\n        $valid = FALSE;\n\
    \    }\n    if ($d->format('m') < 1 || $d->format('m') > 12) {\n        $valid\
    \ = FALSE;\n    }\n    if ($d->format('d') < 1 || $d->format('d') > 31) {\n  \
    \      $valid = FALSE;\n    }\n    if ($d->format('m') != 2 && $d->format('m')\
    \ != 4 && $d->format('m') != 6 && $d->format('m') != 9 && $d->format('m') != 11\
    \ && $d->format('m') != 12) {\n        $valid = FALSE;\n    }\n    return $valid;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdtkadrn.php:37\n\
    Stack trace:\n#0 /tmp/tmpxdtkadrn.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpxdtkadrn.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqeoxrqeq.php:23\n\
    Stack trace:\n#0 /tmp/tmpqeoxrqeq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqeoxrqeq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $dateArray = array_filter($dateArray);\n    $dateArray\
    \ = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzd4_mddo.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkjefw8vw.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $today\
    \ = time();\n    $difference = $today - $date;\n    if ($difference < 0 || $difference\
    \ > 86400) {\n        return false;\n    }\n    $month = date(\"m\", $date);\n\
    \    $day = date(\"d\", $date);\n    $year = date(\"Y\", $date);\n    $months\
    \ = array(\n        1 => 31,\n        3 => 31,\n        5 => 31,\n        7 =>\
    \ 31,\n        8 => 31,\n        10 => 31,\n        12 => 31,\n        4 => 30,\n\
    \        6 => 30,\n        9 => 30,\n        11 => 30,\n        2 => 29\n    );\n\
    \    $days[$month - 1] = $months[$month - 1];\n    $days[$month] = $months[$month];\n\
    \    $days[$month + 1] = $months[$month + 1];\n    if ($month > 1 && $day > $days[$month\
    \ - 1] && $day < $days[$month]) {\n        return false;\n    }\n    if ($month\
    \ > 1 && $day > $days[$month] && $day < $days[$month + 1]) {\n        return false;\n\
    \    }\n    if ($month == 1 && $day > $days[1] && $day < $days[2]) {\n       \
    \ return false;\n    }\n    if ($month == 2 && $day > $days[4] && $day < $days[6])\
    \ {\n        return false;\n    }\n    if ($month == 2 && $day > $days[6] && $day\
    \ < $days[9]) {\n        return false;\n    }\n    if ($month == 2 && $day > $days[9]\
    \ && $day < $days[11]) {\n        return false;\n    }\n    if ($month == 2 &&\
    \ $day > $days[11] && $day < $days[12]) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7zfskzp.php:70\n\
    Stack trace:\n#0 /tmp/tmpi7zfskzp.php(88): test()\n#1 {main}\n  thrown in /tmp/tmpi7zfskzp.php\
    \ on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = strtotime($date);\n    $current_year\
    \ = date('Y');\n    $current_month = date('m');\n    $current_day = date('d');\n\
    \    $current_hour = date('H');\n    $current_minute = date('i');\n    $current_second\
    \ = date('s');\n    $current_timestamp = mktime($current_hour, $current_minute,\
    \ $current_second, $current_month, $current_day, $current_year);\n    $date_timestamp\
    \ = strtotime($date);\n    $date_timestamp = $date_timestamp - $current_timestamp;\n\
    \    $date_days = floor($date_timestamp / 86400);\n    $date_months = floor(($date_timestamp\
    \ / 86400) - $date_days * 30);\n    $date_years = floor(($date_timestamp / 86400)\
    \ - $date_days * 365 + $date_months * 12);\n    if ($date_days > 31 || $date_months\
    \ > 12 || $date_years > 365) {\n        return false;\n    }\n    if ($date_days\
    \ < 1 || $date_months < 1 || $date_years < 1) {\n        return false;\n    }\n\
    \    if ($date_months < 4 || $date_months > 12) {\n        return false;\n   \
    \ }\n    if ($date_years < 1 || $date_years > 30) {\n        return false;\n \
    \   }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5vvtxm2.php:48\n\
    Stack trace:\n#0 /tmp/tmpl5vvtxm2.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpl5vvtxm2.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $dateArray = explode('-', $date);\n\
    \    $dateArray = array_map('intval', $dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray = array_filter($dateArray);\n\
    \    $dateArray = array_filter($dateArray);\n    $dateArray\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzskqu2fb.php on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if($day < 1 || $day > 31) {\n        return false;\n    }\n    if($month\
    \ == 2) {\n        if($day > 29) {\n            return false;\n        }\n   \
    \ }\n    if($month == 1) {\n        if($day > 31) {\n            return false;\n\
    \        }\n    }\n    if($month == 3) {\n        if($day > 31) {\n          \
    \  return false;\n        }\n    }\n    if($month == 5) {\n        if($day > 30)\
    \ {\n            return false;\n        }\n    }\n    if($month == 7) {\n    \
    \    if($day > 31) {\n            return false;\n        }\n    }\n    if($month\
    \ == 8) {\n        if($day > 31) {\n            return false;\n        }\n   \
    \ }\n    if($month == 10) {\n        if($day > 31) {\n            return false;\n\
    \        }\n    }\n    if($month == 12) {\n        if($day > 31) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\n</code>\n<|/ a tags=php,date,validation\
    \ |>\n<| c |>\nThanks for your answer. Your code works fine for all the dates\
    \ except the dates starting with 0. For example 03 or 04 are valid dates but 05\
    \ are not valid. How can I fix this?\n<|/ c |>\n<| c |>\nI edited my answer to\
    \ include a function that will validate dates starting with 0.\n<|/ c |>\n<| c\
    \ |>\nThanks for your answer. Your code works fine for all the dates except the\
    \ dates starting with 0. For example 03 or 04 are valid dates but 05 are not valid.\
    \ How can I fix this?\n<|/ c |>\n<| c |>\nI edited my answer to include a function\
    \ that will validate dates starting with 0.\n<|/ c |>\n<| c |>\nThanks for your\
    \ answer. Your code works fine for all the dates except the dates starting with\
    \ 0. For example 03 or 04 are valid dates but 05 are not valid. How can I fix\
    \ this?\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkhdmch29.php on line 75\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != '';\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14wn_o0_.php:25\n\
    Stack trace:\n#0 /tmp/tmp14wn_o0_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp14wn_o0_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5fvl1a0.php:23\n\
    Stack trace:\n#0 /tmp/tmpb5fvl1a0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb5fvl1a0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Write your code here\n    $dateArray\
    \ = explode('-', $date);\n    $month = $dateArray[0];\n    $day = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    if (empty($date)) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($year <\
    \ 1000 || $year > 9999) {\n        return false;\n    }\n    if ($month == 2)\
    \ {\n        if ($day > 29) {\n            return false;\n        }\n    }\n \
    \   if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n       \
    \ if ($day > 30) {\n            return false;\n        }\n    }\n    if ($month\
    \ == 1) {\n        if ($day > 31) {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    $date = trim($date);\n    $date\
    \ = str_replace('/', '-', $date);\n    $date = str_replace('-', '/', $date);\n\
    \    $date = explode('-', $date);\n    $date = $date[2].'-'.$date[0].'-'.$date[1];\n\
    \    $date = strtotime($date);\n    $today = strtotime(date('Y-m-d'));\n    $datediff\
    \ = $today - $date;\n    if ($datediff < 0 || $datediff > 86400) {\n        return\
    \ false;\n    }\n    $months = array('01', '03', '05', '07', '08', '10', '12');\n\
    \    $months_count = count($months);\n    $days_count = array('01', '03', '05',\
    \ '07', '08', '10', '12', '31', '30', '29');\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_count = count($months);\n    $days_count_count = count($days_count);\n\
    \    $months_\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptk9plvda.php on line 66\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxpx339t.php:23\n\
    Stack trace:\n#0 /tmp/tmpyxpx339t.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyxpx339t.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You have to write a function which validates a given date string\
    \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
    \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
    // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n// 3. The months should not be less than 1 or higher\
    \ than 12.\n// 4. The date should be in the format: mm-dd-yyyy\n// for example:\
    \ \n// valid_date('03-11-2000') => True\n// valid_date('15-01-2012') => False\n\
    // valid_date('04-0-2040') => False\n// valid_date('06-04-2020') => True\n// valid_date('06/04/2020')\
    \ => False\nfunction valid_date($date) {\n    // Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4ha01gw.php:23\n\
    Stack trace:\n#0 /tmp/tmpk4ha01gw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpk4ha01gw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception

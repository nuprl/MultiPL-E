name: HumanEval_152_compare
language: php
results:
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmph7agy_4s.php:18\n\
    Stack trace:\n#0 /tmp/tmph7agy_4s.php(25): compare(Array, Array)\n#1 /tmp/tmph7agy_4s.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmph7agy_4s.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmph7agy_4s.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    for($i = 0; $i < $games; $i++) {\n        $score += abs($game[$i] - $guess[$i]);\n\
    \    }\n    return $score;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gwc2858.php:27\n\
    Stack trace:\n#0 /tmp/tmp_gwc2858.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_gwc2858.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    $game = array_flip($game);\n    foreach($guess\
    \ as $key => $value) {\n        if(isset($game[$value])) {\n            $result[$key]\
    \ = $game[$value];\n        } else {\n            $result[$key] = abs($value -\
    \ $game[$value]);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh3jobs1.php:30\n\
    Stack trace:\n#0 /tmp/tmpeh3jobs1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpeh3jobs1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp79u98r6l.php:15\n\
    Stack trace:\n#0 /tmp/tmp79u98r6l.php(21): compare(Array, Array)\n#1 /tmp/tmp79u98r6l.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp79u98r6l.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp79u98r6l.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpiqh6ct1b.php:15\n\
    Stack trace:\n#0 /tmp/tmpiqh6ct1b.php(21): compare(Array, Array)\n#1 /tmp/tmpiqh6ct1b.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpiqh6ct1b.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpiqh6ct1b.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess[$key] == $value) {\n            $result[$key] = 0;\n        }\
    \ else {\n            $result[$key] = abs($guess[$key] - $value);\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    foreach ($game as $key => $value) {\n      \
    \  if ($guess == $value) {\n            $score++;\n        }\n    }\n    return\
    \ $score;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn466zu1i.php:27\n\
    Stack trace:\n#0 /tmp/tmpn466zu1i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpn466zu1i.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      $result[$index] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpl38n90fz.php:15\n\
    Stack trace:\n#0 /tmp/tmpl38n90fz.php(21): compare(Array, Array)\n#1 /tmp/tmpl38n90fz.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpl38n90fz.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpl38n90fz.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpkb2sfny6.php:15\n\
    Stack trace:\n#0 /tmp/tmpkb2sfny6.php(21): compare(Array, Array)\n#1 /tmp/tmpkb2sfny6.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpkb2sfny6.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpkb2sfny6.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp1_voiyv5.php:15\n\
    Stack trace:\n#0 /tmp/tmp1_voiyv5.php(21): compare(Array, Array)\n#1 /tmp/tmp1_voiyv5.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1_voiyv5.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1_voiyv5.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpsarbbutq.php:18\n\
    Stack trace:\n#0 /tmp/tmpsarbbutq.php(25): compare(Array, Array)\n#1 /tmp/tmpsarbbutq.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpsarbbutq.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpsarbbutq.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpul5jx3_r.php:18\n\
    Stack trace:\n#0 /tmp/tmpul5jx3_r.php(25): compare(Array, Array)\n#1 /tmp/tmpul5jx3_r.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpul5jx3_r.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpul5jx3_r.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    $score = 0;\n    foreach ($game as $key =>\
    \ $value) {\n        if ($guess == $value) {\n            $result[$key] = 0;\n\
    \        } else {\n            $result[$key] = abs($guess - $value);\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmph54uxsnw.php:19\n\
    Stack trace:\n#0 /tmp/tmph54uxsnw.php(26): compare(Array, Array)\n#1 /tmp/tmph54uxsnw.php(30):\
    \ candidate(Array, Array)\n#2 /tmp/tmph54uxsnw.php(36): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmph54uxsnw.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp07hh_5bh.php:15\n\
    Stack trace:\n#0 /tmp/tmp07hh_5bh.php(21): compare(Array, Array)\n#1 /tmp/tmp07hh_5bh.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp07hh_5bh.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp07hh_5bh.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    $game = array_filter($game, function($v)\
    \ use ($guess) {\n        return $v == $guess;\n    });\n    foreach ($guess as\
    \ $key => $value) {\n        if ($game[$key] == $value) {\n            $result[$key]\
    \ = 0;\n        } else {\n            $result[$key] = abs($value - $game[$key]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuytvyesq.php:32\n\
    Stack trace:\n#0 /tmp/tmpuytvyesq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuytvyesq.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for ($i = 0; $i < $guesses; $i++) {\n        $result[$i]\
    \ = abs($guess[$i] - $game[$i]);\n    }\n    for ($i = 0; $i < $games; $i++) {\n\
    \        $result[$guesses] = $result[$guesses] - $result[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_ro_vyq.php:31\n\
    Stack trace:\n#0 /tmp/tmpo_ro_vyq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpo_ro_vyq.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    $game = array_filter($game);\n    $guess\
    \ = array_filter($guess);\n    foreach ($game as $key => $value) {\n        if\
    \ ($value == $guess[$key]) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($value - $guess[$key]);\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44rcg1hg.php:32\n\
    Stack trace:\n#0 /tmp/tmp44rcg1hg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp44rcg1hg.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmptfotjykb.php:15\n\
    Stack trace:\n#0 /tmp/tmptfotjykb.php(21): compare(Array, Array)\n#1 /tmp/tmptfotjykb.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmptfotjykb.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmptfotjykb.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp2o4nvgp1.php:18\n\
    Stack trace:\n#0 /tmp/tmp2o4nvgp1.php(25): compare(Array, Array)\n#1 /tmp/tmp2o4nvgp1.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp2o4nvgp1.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp2o4nvgp1.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpkq1bj6bu.php:18\n\
    Stack trace:\n#0 /tmp/tmpkq1bj6bu.php(25): compare(Array, Array)\n#1 /tmp/tmpkq1bj6bu.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpkq1bj6bu.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpkq1bj6bu.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $score) {\n\
    \        $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpyufgois5.php:15\n\
    Stack trace:\n#0 /tmp/tmpyufgois5.php(21): compare(Array, Array)\n#1 /tmp/tmpyufgois5.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpyufgois5.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpyufgois5.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    $guesses = array_map('intval', $guess);\n\
    \    $scores = array_map('intval', $game);\n    foreach ($guesses as $key => $guess)\
    \ {\n        $result[$key] = abs($guess - $scores[$key]);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThank you for taking the time to write this out.\
    \ I am going to try this out and see how it goes. I appreciate your help.\n<|/\
    \ c |>\n<| c |>\nI ran this through my test cases and it worked great. Thank you\
    \ so much!\n<|/ c |>\n<| c |>\nGlad I could help. I added a couple more test cases\
    \ to my answer, and added a link to my test case to my answer.\n<|/ c |>\n<| c\
    \ |>\nI ran your test cases and it worked great. Thank you so much!\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>\n<?php\n$game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\n\
    $result = array_map(function($a, $b){\n    return abs($a - $b);\n}, $game, $guess);\n\
    print_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThank you for taking\
    \ the time to write this out. I am going to try this out and see how it goes.\
    \ I appreciate your help.\n<|/ c |>\n<| c |>\nI ran this through my test cases\
    \ and it worked great. Thank you so much!\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\n$result = array_map(function($a,\
    \ $b){\n    return abs($a - $b);\n}, $game, $guess);\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThank you for taking the time to write this\
    \ out. I am going to try this out and see how it goes. I appreciate your help.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$game = [1,2,3,4,5,1];\n$guess\
    \ = [1,2,3,4,2,-2];\n$result = array_map(function($a, $b){\n    return abs($a\
    \ - $b);\n}, $game, $guess);\nprint_r($result);\n</code>\n<|/ a d\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpihgsrfef.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    $game = array_reverse($game);\n    $guess\
    \ = array_reverse($guess);\n    for($i = 0; $i < count($game); $i++) {\n     \
    \   $result[$i] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixspdoe2.php:27\n\
    Stack trace:\n#0 /tmp/tmpixspdoe2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpixspdoe2.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    $game = array_map('intval', $game);\n    $guess\
    \ = array_map('intval', $guess);\n    foreach ($game as $key => $value) {\n  \
    \      if ($value == $guess[$key]) {\n            $result[$key] = 0;\n       \
    \ } else {\n            $result[$key] = abs($value - $guess[$key]);\n        }\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n\
    <| c |>\nI like your solution, however it fails for some test cases. I added a\
    \ test case to my question to show you the problem. Can you please take a look\
    \ and see if you have any ideas?\n<|/ c |>\n<| c |>\nI added a test case to my\
    \ question to show you the problem. Can you please take a look and see if you\
    \ have any ideas?\n<|/ c |>\n<| c |>\nI added a test case to my question to show\
    \ you the problem. Can you please take a look and see if you have any ideas?\n\
    <|/ c |>\n<| c |>\nI added a test case to my question to show you the problem.\
    \ Can you please take a look and see if you have any ideas?\n<|/ c |>\n<| c |>\n\
    I added a test case to my question to show you the problem. Can you please take\
    \ a look and see if you have any ideas?\n<|/ c |>\n<| a tags=php,arrays,algorithm\
    \ |>\nI wrote a solution that is O(n) time and O(1) space. \n<code>\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_tmqju00.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpwjtq9mro.php:15\n\
    Stack trace:\n#0 /tmp/tmpwjtq9mro.php(21): compare(Array, Array)\n#1 /tmp/tmpwjtq9mro.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpwjtq9mro.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpwjtq9mro.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for($i = 0; $i < $guesses; $i++) {\n        $result[$i]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n    for($i = 0; $i < $games; $i++) {\n\
    \        if($result[$i] !== 0) {\n            $score++;\n        }\n    }\n  \
    \  return $score;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz084kwnd.php:33\n\
    Stack trace:\n#0 /tmp/tmpz084kwnd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz084kwnd.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for($i = 0; $i < $guesses; $i++) {\n        $result[$i]\
    \ = abs($guess[$i] - $game[$i]);\n    }\n    return $result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuawuvtck.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp75zb4g8r.php:18\n\
    Stack trace:\n#0 /tmp/tmp75zb4g8r.php(25): compare(Array, Array)\n#1 /tmp/tmp75zb4g8r.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp75zb4g8r.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp75zb4g8r.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp9qkiruq1.php:18\n\
    Stack trace:\n#0 /tmp/tmp9qkiruq1.php(25): compare(Array, Array)\n#1 /tmp/tmp9qkiruq1.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp9qkiruq1.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp9qkiruq1.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpv6e2icom.php:15\n\
    Stack trace:\n#0 /tmp/tmpv6e2icom.php(21): compare(Array, Array)\n#1 /tmp/tmpv6e2icom.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpv6e2icom.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpv6e2icom.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your code works perfectly\
    \ for me. Thank you for taking the time to explain it so well.\n<|/ c |>\n<| c\
    \ |>\nNo problem. Glad I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxc1f_seq.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp1kfywfyg.php:18\n\
    Stack trace:\n#0 /tmp/tmp1kfywfyg.php(25): compare(Array, Array)\n#1 /tmp/tmp1kfywfyg.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1kfywfyg.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1kfywfyg.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpg66lhb7l.php:18\n\
    Stack trace:\n#0 /tmp/tmpg66lhb7l.php(25): compare(Array, Array)\n#1 /tmp/tmpg66lhb7l.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpg66lhb7l.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpg66lhb7l.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpczze78d4.php:18\n\
    Stack trace:\n#0 /tmp/tmpczze78d4.php(25): compare(Array, Array)\n#1 /tmp/tmpczze78d4.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpczze78d4.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpczze78d4.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = array_fill(0, count($guess), 0);\n\
    \    foreach ($game as $index => $score) {\n        $guesses[$index] = $game[$index]\
    \ - $guess[$index];\n    }\n    return $guesses;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp87vbm5pd.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nI like your solution, however it fails when\
    \ the array is empty or has only one element. I've updated the question to include\
    \ an example where this fails.\n<|/ c |>\n<| c |>\nI updated my answer to account\
    \ for that case. Let me know if that works for you.\n<|/ c |>\n<| c |>\nI like\
    \ your solution, however it fails when the array is empty or has only one element.\
    \ I've updated the question to include an example where this fails.\n<|/ c |>\n\
    <| c |>\nI updated my answer to account for that case. Let me know if that works\
    \ for you.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$game = [1,2,3,4,5,1];\n\
    $guess = [1,2,3,4,2,-2];\n$result = array_map(function($a, $b) {\n    return abs($a\
    \ - $b);\n}, $game, $guess);\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\n\
    $result = array_map(function($a, $b) {\n    return abs($a - $b);\n}, $game, $guess);\n\
    print_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp44eih297.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess[$key] == $value) {\n            $result[$key] = 0;\n        }\
    \ else {\n            $result[$key] = abs($guess[$key] - $value);\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpyypqokfb.php:15\n\
    Stack trace:\n#0 /tmp/tmpyypqokfb.php(21): compare(Array, Array)\n#1 /tmp/tmpyypqokfb.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpyypqokfb.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpyypqokfb.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp4io14u4i.php:15\n\
    Stack trace:\n#0 /tmp/tmp4io14u4i.php(21): compare(Array, Array)\n#1 /tmp/tmp4io14u4i.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp4io14u4i.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp4io14u4i.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for ($i = 0; $i < $guesses; $i++) {\n        $result[$i]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n    for ($i = 0; $i < $games; $i++) {\n\
    \        $result[$i] += $result[$i];\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n  \
    \  return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8igyrlqt.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp_ky89mh5.php:18\n\
    Stack trace:\n#0 /tmp/tmp_ky89mh5.php(25): compare(Array, Array)\n#1 /tmp/tmp_ky89mh5.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp_ky89mh5.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp_ky89mh5.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpz6je4kt3.php:15\n\
    Stack trace:\n#0 /tmp/tmpz6je4kt3.php(21): compare(Array, Array)\n#1 /tmp/tmpz6je4kt3.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpz6je4kt3.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpz6je4kt3.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp0o0s2re6.php:18\n\
    Stack trace:\n#0 /tmp/tmp0o0s2re6.php(25): compare(Array, Array)\n#1 /tmp/tmp0o0s2re6.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp0o0s2re6.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp0o0s2re6.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpwjorvw1q.php:15\n\
    Stack trace:\n#0 /tmp/tmpwjorvw1q.php(21): compare(Array, Array)\n#1 /tmp/tmpwjorvw1q.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpwjorvw1q.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpwjorvw1q.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      $result[$index] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpa02pi5mn.php:15\n\
    Stack trace:\n#0 /tmp/tmpa02pi5mn.php(21): compare(Array, Array)\n#1 /tmp/tmpa02pi5mn.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpa02pi5mn.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpa02pi5mn.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $score) {\n\
    \        $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp1zyw04_1.php:15\n\
    Stack trace:\n#0 /tmp/tmp1zyw04_1.php(21): compare(Array, Array)\n#1 /tmp/tmp1zyw04_1.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1zyw04_1.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1zyw04_1.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpa9nkvdzk.php:15\n\
    Stack trace:\n#0 /tmp/tmpa9nkvdzk.php(21): compare(Array, Array)\n#1 /tmp/tmpa9nkvdzk.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpa9nkvdzk.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpa9nkvdzk.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp0iotlu5q.php:15\n\
    Stack trace:\n#0 /tmp/tmp0iotlu5q.php(21): compare(Array, Array)\n#1 /tmp/tmp0iotlu5q.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp0iotlu5q.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp0iotlu5q.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $index => $score) {\n\
    \        $result[$index] = abs($guess - $score);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer! I really appreciate\
    \ it! I did some testing and it seems like the algorithm is working as intended.\
    \ Thanks again!\n<|/ c |>\n<| c |>\nI did some more testing and it seems like\
    \ the algorithm is working as intended. Thanks again!\n<|/ c |>\n<| a dscore=0\
    \ |>\nI believe that your algorithm is correct, however it can be simplified a\
    \ bit. \n<code>\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdce_4fia.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp98umgqrv.php:18\n\
    Stack trace:\n#0 /tmp/tmp98umgqrv.php(25): compare(Array, Array)\n#1 /tmp/tmp98umgqrv.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp98umgqrv.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp98umgqrv.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    foreach ($game as $key => $value) {\n      \
    \  if ($guess == $value) {\n            $score = 0;\n        } else {\n      \
    \      $score += abs($guess - $value);\n        }\n    }\n    return $score;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpspaviig_.php:18\n\
    Stack trace:\n#0 /tmp/tmpspaviig_.php(25): compare(Array, Array)\n#1 /tmp/tmpspaviig_.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpspaviig_.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpspaviig_.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $game = array_flip($game);\n    $guess = array_flip($guess);\n\
    \    $result = array();\n    foreach ($game as $key => $value) {\n        if ($guess[$key]\
    \ == $value) {\n            $result[] = 0;\n        } else {\n            $result[]\
    \ = abs($value - $guess[$key]);\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcq6_0bng.php:31\n\
    Stack trace:\n#0 /tmp/tmpcq6_0bng.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcq6_0bng.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      if ($guess == $score) {\n            $result[$index] = 0;\n        } else\
    \ {\n            $result[$index] = abs($guess - $score);\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpl82kx895.php:18\n\
    Stack trace:\n#0 /tmp/tmpl82kx895.php(25): compare(Array, Array)\n#1 /tmp/tmpl82kx895.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpl82kx895.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpl82kx895.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmphn25x1t8.php:15\n\
    Stack trace:\n#0 /tmp/tmphn25x1t8.php(21): compare(Array, Array)\n#1 /tmp/tmphn25x1t8.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmphn25x1t8.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmphn25x1t8.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for ($i = 0; $i < $guesses; $i++) {\n        $result[$i]\
    \ = abs($guess[$i] - $game[$i]);\n    }\n    for ($i = 0; $i < $games; $i++) {\n\
    \        $result[$games[$i]] = abs($guess[$i] - $game[$games[$i]]);\n    }\n \
    \   return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your\
    \ effort, but this doesn't really answer the question. Your code doesn't really\
    \ do anything different from my code. Your code doesn't even use my `compare`\
    \ function. It just uses `array_diff` instead. Your code doesn't even use my `compare`\
    \ function either. Your code doesn't even use my `compare` function either. Your\
    \ code doesn't even use my `compare` function either. Your code doesn't even use\
    \ my `compare` function either. Your code doesn't even use my `compare` function\
    \ either. Your code doesn't even use my `compare` function either. Your code doesn't\
    \ even use my `compare` function either. Your code doesn't even use my `compare`\
    \ function either. Your code doesn't even use my `compare` function either. Your\
    \ code doesn't even use my `compare` function either. Your code doesn't even use\
    \ my `compare` function either. Your code doesn't even use my `compare` function\
    \ either. Your code doesn't even use my `compare` function either. Your code doesn't\
    \ even use my `compare` function either. Your code doesn't even use my `compare`\
    \ function either. Your code doesn't even use my `compare` function either. Your\
    \ code doesn't even use my `compare` function either. Your code doesn't even use\
    \ my `compare` function either. Your code doesn't even use my `compare` function\
    \ either. Your code doesn't even use my `compare` function either. Your code doesn't\
    \ even use my `compare` function either. Your code doesn't even use my `compare`\
    \ function either. Your code doesn't even use my `compare` function either. Your\
    \ code doesn't even use my `compare` function either. Your code doesn't even use\
    \ my `compare` function either. Your code doesn't even use my `compare` function\
    \ either. Your code doesn't even use my `compare` function either. Your code doesn't\
    \ even use my `compare` function either. Your code doesn't even use my `compare`\
    \ function either. Your code \nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg76diyss.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $score) {\n\
    \        if ($guess == $score) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $score);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp1itu6325.php:18\n\
    Stack trace:\n#0 /tmp/tmp1itu6325.php(25): compare(Array, Array)\n#1 /tmp/tmp1itu6325.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1itu6325.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1itu6325.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpl48l4qa2.php:18\n\
    Stack trace:\n#0 /tmp/tmpl48l4qa2.php(25): compare(Array, Array)\n#1 /tmp/tmpl48l4qa2.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpl48l4qa2.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpl48l4qa2.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $guesses_correct = 0;\n    for ($i = 0; $i < $games; $i++) {\n        if\
    \ ($game[$i] == $guess[$i]) {\n            $score++;\n            $guesses_correct++;\n\
    \        }\n    }\n    $guesses_correct = abs($guesses_correct - $guesses);\n\
    \    $guesses_correct = $guesses_correct / $games;\n    $guesses_correct = round($guesses_correct,\
    \ 2);\n    $guesses_correct = round($guesses_correct, 2);\n    return array($score,\
    \ $guesses_correct);\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpor4psua3.php:35\n\
    Stack trace:\n#0 /tmp/tmpor4psua3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpor4psua3.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp0rxxhk4i.php:18\n\
    Stack trace:\n#0 /tmp/tmp0rxxhk4i.php(25): compare(Array, Array)\n#1 /tmp/tmp0rxxhk4i.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp0rxxhk4i.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp0rxxhk4i.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp40ko2284.php:15\n\
    Stack trace:\n#0 /tmp/tmp40ko2284.php(21): compare(Array, Array)\n#1 /tmp/tmp40ko2284.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp40ko2284.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp40ko2284.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nI really appreciate your efforts. I really appreciate your\
    \ efforts. I really appreciate your efforts. I really appreciate your efforts.\
    \ I really appreciate your efforts. I really appreciate your efforts. I really\
    \ appreciate your efforts. I really appreciate your efforts. I really appreciate\
    \ your efforts. I really appreciate your efforts. I really appreciate your efforts.\
    \ I really appreciate your efforts. I really appreciate your efforts. I really\
    \ appreciate your efforts. I really appreciate your efforts. I really appreciate\
    \ your efforts. I really appreciate your efforts. I really appreciate your efforts.\
    \ I really appreciate your efforts. I really appreciate your efforts. I really\
    \ appreciate your efforts. I really appreciate your efforts. I really appreciate\
    \ your efforts. I really appreciate your efforts. I really appreciate your efforts.\
    \ I really appreciate your efforts. I really appreciate your efforts. I really\
    \ appreciate your efforts. I really appreciate your efforts. I really appreciate\
    \ your efforts. I really appreciate your efforts. I really appreciate your efforts.\
    \ I really appreciate your efforts. I really appreciate your efforts. I really\
    \ appreciate your efforts. I really appreciate your efforts. I really appreciate\
    \ your efforts. I really appreciate your efforts. I really appreciate your efforts.\
    \ I really appreciate your efforts. I really appreciate your efforts. I really\
    \ appreciate your efforts. I really appreciate your efforts. I really appreciate\
    \ your efforts. I really appreciate your efforts. I really appreciate your efforts.\
    \ I really appreciate your efforts. I really appreciate your efforts. I really\
    \ appreciate your efforts. I really appreciate your efforts. I really appreciate\
    \ your efforts. I really appreciate your effor\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp49beknat.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpnlk5h4a5.php:18\n\
    Stack trace:\n#0 /tmp/tmpnlk5h4a5.php(25): compare(Array, Array)\n#1 /tmp/tmpnlk5h4a5.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpnlk5h4a5.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpnlk5h4a5.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpadzhuo6c.php:18\n\
    Stack trace:\n#0 /tmp/tmpadzhuo6c.php(25): compare(Array, Array)\n#1 /tmp/tmpadzhuo6c.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpadzhuo6c.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpadzhuo6c.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    foreach ($game as $key => $value) {\n      \
    \  if ($guess == $value) {\n            $score++;\n        }\n    }\n    return\
    \ $score;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30ksc0yb.php:27\n\
    Stack trace:\n#0 /tmp/tmp30ksc0yb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp30ksc0yb.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $score) {\n\
    \        $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpol51z4_5.php:15\n\
    Stack trace:\n#0 /tmp/tmpol51z4_5.php(21): compare(Array, Array)\n#1 /tmp/tmpol51z4_5.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpol51z4_5.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpol51z4_5.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpqwjt2843.php:18\n\
    Stack trace:\n#0 /tmp/tmpqwjt2843.php(25): compare(Array, Array)\n#1 /tmp/tmpqwjt2843.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpqwjt2843.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpqwjt2843.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = array();\n    $correct = 0;\n   \
    \ foreach ($game as $index => $score) {\n        if ($guess == $score) {\n   \
    \         $correct++;\n        }\n        $guesses[$index] = $score;\n    }\n\
    \    return $guesses;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfq0qslj.php:30\n\
    Stack trace:\n#0 /tmp/tmpvfq0qslj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvfq0qslj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp0b59ekek.php:18\n\
    Stack trace:\n#0 /tmp/tmp0b59ekek.php(25): compare(Array, Array)\n#1 /tmp/tmp0b59ekek.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp0b59ekek.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp0b59ekek.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    $game = array_map('intval', $game);\n    $guess\
    \ = array_map('intval', $guess);\n    foreach ($game as $key => $value) {\n  \
    \      $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI appreciate your efforts, but\
    \ I believe you misunderstood my question. I am not trying to compare two arrays.\
    \ I am trying to compare two arrays of scores and guesses. I apologize if my question\
    \ was unclear.\n<|/ c |>\n<| c |>\nI understand your question now. I've updated\
    \ my answer accordingly.\n<|/ c |>\n<| c |>\nThank you so much! I appreciate your\
    \ help.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$game = [1,2,3,4,5,1];\n\
    $guess = [1,2,3,4,2,-2];\n$result = array_map(function($a, $b){\n    return abs($a\
    \ - $b);\n}, $game, $guess);\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nI appreciate your efforts, but I believe you misunderstood my question.\
    \ I am not trying to compare two arrays. I am trying to compare two arrays of\
    \ scores and guesses. I apologize if my question was unclear.\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\n$game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\n$result\
    \ = array_map(function($a, $b){\n    return abs($a - $b);\n}, $game, $guess);\n\
    print_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nI appreciate your\
    \ efforts, but I believe you misunderstood my question. I am not trying to compare\
    \ two arrays. I am trying to compare two arrays of scores and guesses. I apologize\
    \ if my question was unclear.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$game\
    \ = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\n$result = array_map(function($a,\
    \ $b){\n    return abs($a - $b);\n}, $game, $guess);\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nI appreciate your efforts, but I believe you misunderstood\
    \ \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5n6o2_gw.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      $result[$index] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpl5e4n0_z.php:15\n\
    Stack trace:\n#0 /tmp/tmpl5e4n0_z.php(21): compare(Array, Array)\n#1 /tmp/tmpl5e4n0_z.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpl5e4n0_z.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpl5e4n0_z.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $game = array_map('intval', $game);\n    $guess = array_map('intval',\
    \ $guess);\n    $result = [];\n    foreach ($game as $key => $value) {\n     \
    \   $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpfcl9wjx3.php:17\n\
    Stack trace:\n#0 /tmp/tmpfcl9wjx3.php(23): compare(Array, Array)\n#1 /tmp/tmpfcl9wjx3.php(27):\
    \ candidate(Array, Array)\n#2 /tmp/tmpfcl9wjx3.php(33): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpfcl9wjx3.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp37zo3l61.php:18\n\
    Stack trace:\n#0 /tmp/tmp37zo3l61.php(25): compare(Array, Array)\n#1 /tmp/tmp37zo3l61.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp37zo3l61.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp37zo3l61.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpe81dlrwd.php:18\n\
    Stack trace:\n#0 /tmp/tmpe81dlrwd.php(25): compare(Array, Array)\n#1 /tmp/tmpe81dlrwd.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpe81dlrwd.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpe81dlrwd.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp3pujqrrp.php:18\n\
    Stack trace:\n#0 /tmp/tmp3pujqrrp.php(25): compare(Array, Array)\n#1 /tmp/tmp3pujqrrp.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp3pujqrrp.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp3pujqrrp.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    $game = array_map('intval', $game);\n\
    \    $guess = array_map('intval', $guess);\n    foreach ($game as $index => $score)\
    \ {\n        $result[$index] = $score;\n    }\n    foreach ($guess as $index =>\
    \ $guess) {\n        $result[$index] = abs($guess - $game[$index]);\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpmr3pej4q.php:15\n\
    Stack trace:\n#0 /tmp/tmpmr3pej4q.php(21): compare(Array, Array)\n#1 /tmp/tmpmr3pej4q.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpmr3pej4q.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpmr3pej4q.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThank you so much for your help! I really appreciate\
    \ it!\n<|/ c |>\n<| c |>\nNo problem, glad I could help.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqnehrrda.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $game = array_flip($game);\n    $guess = array_flip($guess);\n\
    \    $result = array();\n    foreach ($game as $key => $value) {\n        if ($guess[$key]\
    \ == $value) {\n            $result[$key] = 0;\n        } else {\n           \
    \ $result[$key] = abs($guess[$key] - $value);\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your solution, but I wonder how\
    \ it compares to mine. My solution uses `array_flip()`, which I believe is more\
    \ efficient than `array_search()`. My solution also uses `array_diff()`, which\
    \ I believe is more efficient than `array_diff_key()`. My solution also uses `array_search()`,\
    \ which I believe is more efficient than `array_key_exists()`. My solution also\
    \ uses `array_keys()`, which I believe is more efficient than `array_search()`.\
    \ My solution also uses `array_sum()`, which I believe is more efficient than\
    \ `array_sum()`. My solution also uses `array_map()`, which I believe is more\
    \ efficient than `array_map()`. My solution also uses `array_flip()`, which I\
    \ believe is more efficient than `array_flip()`. My solution also uses `array_search()`,\
    \ which I believe is more efficient than `array_search()`. My solution also uses\
    \ `array_keys()`, which I believe is more efficient than `array_keys()`. My solution\
    \ also uses `array_values()`, which I believe is more efficient than `array_values()`.\
    \ My solution also uses `array_diff()`, which I believe is more efficient than\
    \ `array_diff()`. My solution also uses `array_diff_key()`, which I believe is\
    \ more efficient than `array_diff_key()`. My solution also uses `array_search()`,\
    \ which I believe is more efficient than `array_search()`. My solution also uses\
    \ `array_keys()`, which I believe is more efficient than `array_keys()`. My solution\
    \ also uses `array_values()`, which I believe is more efficient than `array_values()`.\
    \ My solution also uses `array_map()`, which I believe is more efficient than\
    \ `array_map()`. My solution also uses `array_flip()`, which I believe is more\
    \ efficient than `array_flip()`. My solution also uses `array_search()`, which\
    \ I believe is more efficient than `array_search()`. My solution also uses `array_keys()`,\
    \ which I believe is more efficient than `array_keys()`. My solution also uses\
    \ `array_values()`, which I believe is more efficient than \nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7asx86z0.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp2eg1e44p.php:18\n\
    Stack trace:\n#0 /tmp/tmp2eg1e44p.php(25): compare(Array, Array)\n#1 /tmp/tmp2eg1e44p.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp2eg1e44p.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp2eg1e44p.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp0llux2cr.php:15\n\
    Stack trace:\n#0 /tmp/tmp0llux2cr.php(21): compare(Array, Array)\n#1 /tmp/tmp0llux2cr.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp0llux2cr.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp0llux2cr.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    $game = array_map('intval', $game);\n    $guess\
    \ = array_map('intval', $guess);\n    foreach ($game as $key => $value) {\n  \
    \      if ($guess == $game) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $game[$key]);\n        }\n    }\n\
    \    return $result;\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| c |>\n\
    I like the idea of using array_map to convert them to integers. I didn't think\
    \ of that. Thanks!\n<|/ c |>\n<| c |>\nThis solution doesn't work if there are\
    \ multiple matches. For example, compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) returns\
    \ [0,0,0,0,3,3] instead of [4,4,1,0,0,6]\n<|/ c |>\n<| c |>\nI guess I misunderstood\
    \ the question. I'll edit my answer to reflect that.\n<|/ c |>\n<| c |>\nI edited\
    \ my answer to reflect your comment. Thanks for pointing that out.\n<|/ c |>\n\
    <| a tags=php,arrays,algorithm |>\n<code>\nfunction candidate(...$args) {\n  \
    \  return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzgcwxsrs.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpjwj0b6j5.php:18\n\
    Stack trace:\n#0 /tmp/tmpjwj0b6j5.php(25): compare(Array, Array)\n#1 /tmp/tmpjwj0b6j5.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpjwj0b6j5.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpjwj0b6j5.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpjz__k4xn.php:18\n\
    Stack trace:\n#0 /tmp/tmpjz__k4xn.php(25): compare(Array, Array)\n#1 /tmp/tmpjz__k4xn.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpjz__k4xn.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpjz__k4xn.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmptrs973dr.php:18\n\
    Stack trace:\n#0 /tmp/tmptrs973dr.php(25): compare(Array, Array)\n#1 /tmp/tmptrs973dr.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmptrs973dr.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmptrs973dr.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for($i = 0; $i < $guesses; $i++) {\n        $score = $score\
    \ + $game[$i];\n        $result[$i] = abs($guess[$i] - $score);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyj03_vmy.php:29\n\
    Stack trace:\n#0 /tmp/tmpyj03_vmy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyj03_vmy.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpiqhu72ub.php:18\n\
    Stack trace:\n#0 /tmp/tmpiqhu72ub.php(25): compare(Array, Array)\n#1 /tmp/tmpiqhu72ub.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpiqhu72ub.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpiqhu72ub.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      if ($guess == $score) {\n            $result[$index] = 0;\n        } else\
    \ {\n            $result[$index] = abs($guess - $score);\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp5gyq6c6e.php:18\n\
    Stack trace:\n#0 /tmp/tmp5gyq6c6e.php(25): compare(Array, Array)\n#1 /tmp/tmp5gyq6c6e.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp5gyq6c6e.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp5gyq6c6e.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = array_fill(0, count($guess), 0);\n\
    \    foreach ($game as $index => $score) {\n        if ($score == $guess[$index])\
    \ {\n            $guesses[$index]++;\n        }\n    }\n    return $guesses;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfg386a6q.php:28\n\
    Stack trace:\n#0 /tmp/tmpfg386a6q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfg386a6q.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpt2c8iuto.php:15\n\
    Stack trace:\n#0 /tmp/tmpt2c8iuto.php(21): compare(Array, Array)\n#1 /tmp/tmpt2c8iuto.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpt2c8iuto.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpt2c8iuto.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      $result[$index] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpt17wpmaa.php:15\n\
    Stack trace:\n#0 /tmp/tmpt17wpmaa.php(21): compare(Array, Array)\n#1 /tmp/tmpt17wpmaa.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpt17wpmaa.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpt17wpmaa.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmptal2y6z1.php:15\n\
    Stack trace:\n#0 /tmp/tmptal2y6z1.php(21): compare(Array, Array)\n#1 /tmp/tmptal2y6z1.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmptal2y6z1.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmptal2y6z1.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThanks for the answer. I'm going to try this out and see how\
    \ it goes.\n<|/ c |>\n<| c |>\nI added a test case to my original question to\
    \ show how it fails. I believe your answer should work but I'm still not getting\
    \ the right answer.\n<|/ c |>\n<| c |>\nI added a test case to my original question\
    \ to show how it fails. I believe your answer should work but I'm still not getting\
    \ the right answer.\n<|/ c |>\n<| c |>\nI added a test case to my original question\
    \ to show how it fails. I believe your answer should work but I'm still not getting\
    \ the right answer.\n<|/ c |>\n<| c |>\nI added a test case to my original question\
    \ to show how it fails. I believe your answer should work but I'm still not getting\
    \ the right answer.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_8x6obhs.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmptvncsj33.php:15\n\
    Stack trace:\n#0 /tmp/tmptvncsj33.php(21): compare(Array, Array)\n#1 /tmp/tmptvncsj33.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmptvncsj33.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmptvncsj33.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $index => $score) {\n\
    \        $result[$index] = abs($guess - $score);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much for your answer! I really\
    \ appreciate it. I tried your code and it worked perfectly. I was able to compare\
    \ the scores and guesses and get the correct results. I really appreciate your\
    \ help.\n<|/ c |>\n<| c |>\nNo problem! Glad I could help. If this answer solved\
    \ your problem, please mark it as accepted by clicking the check mark next to\
    \ it. Thanks!\n<|/ c |>\n<| c |>\nI did but my reputation is too low for it to\
    \ show publicly. Thanks again for your help!\n<|/ c |>\n<| c |>\nNo problem! Thanks\
    \ for letting me know! :)\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n\
    $game = [1,2,3,4,5,1];\n$guess = [1,2,3,4,2,-2];\n$result = compare($game, $guess);\n\
    print_r($result);\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8vpsa3pg.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    $scores = [];\n    foreach ($game as $key\
    \ => $value) {\n        $result[$key] = $value - $guess[$key];\n        $scores[$key]\
    \ = abs($guess[$key] - $value);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      $result[$index] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpsb7kimz3.php:15\n\
    Stack trace:\n#0 /tmp/tmpsb7kimz3.php(21): compare(Array, Array)\n#1 /tmp/tmpsb7kimz3.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpsb7kimz3.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpsb7kimz3.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpfsu9vhit.php:15\n\
    Stack trace:\n#0 /tmp/tmpfsu9vhit.php(21): compare(Array, Array)\n#1 /tmp/tmpfsu9vhit.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpfsu9vhit.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpfsu9vhit.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxb1qo8w6.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = array();\n    for($i = 0; $i < $games; $i++) {\n        $result[$i]\
    \ = abs($guess[$i] - $game[$i]);\n    }\n    return $result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThank you for taking the time to write this out. I appreciate\
    \ it. I will give it a try and let you know how it goes.\n<|/ c |>\n<| c |>\n\
    I ran the code and it gave me the correct results. Thank you so much!\n<|/ c |>\n\
    <| c |>\nI ran the code and it gave me the correct results. Thank you so much!\n\
    <|/ c |>\n<| c |>\nI ran the code and it gave me the correct results. Thank you\
    \ so much!\n<|/ c |>\n<| c |>\nI ran the code and it gave me the correct results.\
    \ Thank you so much!\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo2x479x3.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpmrnafa96.php:18\n\
    Stack trace:\n#0 /tmp/tmpmrnafa96.php(25): compare(Array, Array)\n#1 /tmp/tmpmrnafa96.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpmrnafa96.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpmrnafa96.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpjkh8tukj.php:18\n\
    Stack trace:\n#0 /tmp/tmpjkh8tukj.php(25): compare(Array, Array)\n#1 /tmp/tmpjkh8tukj.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpjkh8tukj.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpjkh8tukj.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpdg4bt6eu.php:18\n\
    Stack trace:\n#0 /tmp/tmpdg4bt6eu.php(25): compare(Array, Array)\n#1 /tmp/tmpdg4bt6eu.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpdg4bt6eu.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpdg4bt6eu.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpc1xtg5y5.php:18\n\
    Stack trace:\n#0 /tmp/tmpc1xtg5y5.php(25): compare(Array, Array)\n#1 /tmp/tmpc1xtg5y5.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpc1xtg5y5.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpc1xtg5y5.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpi0cac8w5.php:18\n\
    Stack trace:\n#0 /tmp/tmpi0cac8w5.php(25): compare(Array, Array)\n#1 /tmp/tmpi0cac8w5.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpi0cac8w5.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpi0cac8w5.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for ($i = 0; $i < $guesses; $i++) {\n        $score =\
    \ $score + abs($game[$i] - $guess[$i]);\n    }\n    for ($i = 0; $i < $games;\
    \ $i++) {\n        $result[$i] = abs($game[$i] - $guess[$i]);\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer.\
    \ I've tried this and I still get the same result. I'm guessing it's because of\
    \ the way I'm calling the function? I'm calling the function like this: `$result\
    \ = compare($game, $guess);`\n<|/ c |>\n<| c |>\nI've tried it again and I still\
    \ get the same result. I'm guessing it's because of the way I'm calling the function?\
    \ I'm calling the function like this: `$result = compare($game, $guess);`\n<|/\
    \ c |>\n<| c |>\nI've tried it again and I still get the same result. I'm guessing\
    \ it's because of the way I'm calling the function? I'm calling the function like\
    \ this: `$result = compare($game, $guess);`\n<|/ c |>\n<| c |>\nI've tried it\
    \ again and I still get the same result. I'm guessing it's because of the way\
    \ I'm calling the function? I'm calling the function like this: `$result = compare($game,\
    \ $guess);`\n<|/ c |>\n<| c |>\nI've tried it again and I still get the same result.\
    \ I'm guessing it's because of the way I'm calling the function? I'm calling the\
    \ function like this: `$result = compare($game, $guess);`\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6mvis52t.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpq4_l72ad.php:15\n\
    Stack trace:\n#0 /tmp/tmpq4_l72ad.php(21): compare(Array, Array)\n#1 /tmp/tmpq4_l72ad.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpq4_l72ad.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpq4_l72ad.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpe0e8yyls.php:15\n\
    Stack trace:\n#0 /tmp/tmpe0e8yyls.php(21): compare(Array, Array)\n#1 /tmp/tmpe0e8yyls.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpe0e8yyls.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpe0e8yyls.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp7ey9ltxg.php:18\n\
    Stack trace:\n#0 /tmp/tmp7ey9ltxg.php(25): compare(Array, Array)\n#1 /tmp/tmp7ey9ltxg.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp7ey9ltxg.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp7ey9ltxg.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your effort but\
    \ this does not work. Your code returns an array of all possible matches, not\
    \ just the correct ones. Try it with the example I gave in the question.\n<|/\
    \ c |>\n<| c |>\nI misunderstood the question. I've updated my answer to reflect\
    \ your clarification.\n<|/ c |>\n<| c |>\nI appreciate your effort but this does\
    \ not work. Your code returns an array of all possible matches, not just the correct\
    \ ones. Try it with the example I gave in the question.\n<|/ c |>\n<| c |>\nI\
    \ appreciate your effort but this does not work. Your code returns an array of\
    \ all possible matches, not just the correct ones. Try it with the example I gave\
    \ in the question.\n<|/ c |>\n<| c |>\nI appreciate your effort but this does\
    \ not work. Your code returns an array of all possible matches, not just the correct\
    \ ones. Try it with the example I gave in the question.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\nI believe this is what you are looking for:\n<code>\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw_730i2t.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpttrz8yau.php:18\n\
    Stack trace:\n#0 /tmp/tmpttrz8yau.php(25): compare(Array, Array)\n#1 /tmp/tmpttrz8yau.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpttrz8yau.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpttrz8yau.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp2t2hdr0z.php:18\n\
    Stack trace:\n#0 /tmp/tmp2t2hdr0z.php(25): compare(Array, Array)\n#1 /tmp/tmp2t2hdr0z.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp2t2hdr0z.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp2t2hdr0z.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($score == $guess[$key]) {\n            $result[$key] = 0;\n        }\
    \ else {\n            $result[$key] = abs($guess[$key] - $score);\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    $game = array_filter($game);\n    $guess =\
    \ array_filter($guess);\n    foreach($game as $key => $value) {\n        if($guess[$key]\
    \ == $value) {\n            $result[$key] = 0;\n        } else {\n           \
    \ $result[$key] = abs($guess[$key] - $value);\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8t97od_.php:32\n\
    Stack trace:\n#0 /tmp/tmpl8t97od_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpl8t97od_.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp8ckml3tc.php:18\n\
    Stack trace:\n#0 /tmp/tmp8ckml3tc.php(25): compare(Array, Array)\n#1 /tmp/tmp8ckml3tc.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp8ckml3tc.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp8ckml3tc.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $game = array_flip($game);\n    $guess = array_flip($guess);\n\
    \    $result = array();\n    foreach ($game as $key => $value) {\n        if ($game[$key]\
    \ == $guess[$key]) {\n            $result[$key] = 0;\n        } else {\n     \
    \       $result[$key] = abs($game[$key] - $guess[$key]);\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppykfni6g.php:31\n\
    Stack trace:\n#0 /tmp/tmppykfni6g.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppykfni6g.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $index => $score) {\n\
    \        if ($score == $guess[$index]) {\n            $result[$index] = 0;\n \
    \       } else {\n            $result[$index] = abs($guess[$index] - $score);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpzhpqu40f.php:18\n\
    Stack trace:\n#0 /tmp/tmpzhpqu40f.php(25): compare(Array, Array)\n#1 /tmp/tmpzhpqu40f.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpzhpqu40f.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpzhpqu40f.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = array();\n    foreach ($game as $key\
    \ => $value) {\n        if ($value == $guess[$key]) {\n            $score++;\n\
    \        } else {\n            $guesses[$key] = abs($value - $guess[$key]);\n\
    \        }\n    }\n    return $guesses;\n}\n\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86pe5rh1.php:30\n\
    Stack trace:\n#0 /tmp/tmp86pe5rh1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp86pe5rh1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = array();\n    $guesses[] = $guess;\n\
    \    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n \
    \   $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n  \
    \  $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n   \
    \ $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[]\
    \ = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] =\
    \ $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n\
    \    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n \
    \   $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n  \
    \  $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n   \
    \ $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[]\
    \ = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] =\
    \ $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n\
    \    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n \
    \   $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n  \
    \  $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n   \
    \ $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[]\
    \ = $game;\n    $guesses[] = $game;\n    $guesses[] = $game;\n    $guesses[] =\
    \ $game;\n    $guesses[] = $\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9wx1ojtq.php on line 71\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp860a5cfk.php:15\n\
    Stack trace:\n#0 /tmp/tmp860a5cfk.php(21): compare(Array, Array)\n#1 /tmp/tmp860a5cfk.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp860a5cfk.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp860a5cfk.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmptd0zg15e.php:15\n\
    Stack trace:\n#0 /tmp/tmptd0zg15e.php(21): compare(Array, Array)\n#1 /tmp/tmptd0zg15e.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmptd0zg15e.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmptd0zg15e.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp8lsy4_e6.php:18\n\
    Stack trace:\n#0 /tmp/tmp8lsy4_e6.php(25): compare(Array, Array)\n#1 /tmp/tmp8lsy4_e6.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp8lsy4_e6.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp8lsy4_e6.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp1glhk9q_.php:15\n\
    Stack trace:\n#0 /tmp/tmp1glhk9q_.php(21): compare(Array, Array)\n#1 /tmp/tmp1glhk9q_.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1glhk9q_.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1glhk9q_.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $index => $score) {\n\
    \        if ($guess == $score) {\n            $result[$index] = 0;\n        }\
    \ else {\n            $result[$index] = abs($guess - $score);\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmprxtcql5k.php:18\n\
    Stack trace:\n#0 /tmp/tmprxtcql5k.php(25): compare(Array, Array)\n#1 /tmp/tmprxtcql5k.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmprxtcql5k.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmprxtcql5k.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpo469y9jk.php:18\n\
    Stack trace:\n#0 /tmp/tmpo469y9jk.php(25): compare(Array, Array)\n#1 /tmp/tmpo469y9jk.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpo469y9jk.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpo469y9jk.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    foreach ($game as $key => $value) {\n      \
    \  if ($guess == $value) {\n            $score++;\n        }\n    }\n    return\
    \ $score;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1n1c90t.php:27\n\
    Stack trace:\n#0 /tmp/tmpe1n1c90t.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpe1n1c90t.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpnoa6alof.php:15\n\
    Stack trace:\n#0 /tmp/tmpnoa6alof.php(21): compare(Array, Array)\n#1 /tmp/tmpnoa6alof.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpnoa6alof.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpnoa6alof.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpj0e_6gmn.php:15\n\
    Stack trace:\n#0 /tmp/tmpj0e_6gmn.php(21): compare(Array, Array)\n#1 /tmp/tmpj0e_6gmn.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpj0e_6gmn.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpj0e_6gmn.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = array();\n    for($i = 0; $i < $guesses; $i++) {\n        $result[$i]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n    for($i = 0; $i < $games; $i++) {\n\
    \        if($game[$i] == $guess[$i]) {\n            $score++;\n        }\n   \
    \ }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your\
    \ answer. I tried your code and I got this error \"Fatal error: Call to undefined\
    \ function array_count_values()\"\n<|/ c |>\n<| c |>\nSorry, I forgot to include\
    \ that function. I added it now. Let me know if it works.\n<|/ c |>\n<| c |>\n\
    Thanks again for your answer. I tried it but still not working. I think I should\
    \ use array_count_values but I don't know how to use it.\n<|/ c |>\n<| c |>\n\
    I added the function to the answer. Let me know if it works.\n<|/ c |>\n<| c |>\n\
    Thanks again for your answer. I tried it but still not working. I think I should\
    \ use array_count_values but I don't know how to use it.\n<|/ c |>\n<| a tags=php\
    \ |>\nI finally found the solution to my problem. Thanks to everyone who helped\
    \ me to solve this problem. \n<code>\n<?php\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8av_v9_w.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($score == $guess[$key]) {\n            $result[$key] = 0;\n        }\
    \ else {\n            $result[$key] = abs($guess[$key] - $score);\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpik_pplam.php:18\n\
    Stack trace:\n#0 /tmp/tmpik_pplam.php(25): compare(Array, Array)\n#1 /tmp/tmpik_pplam.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpik_pplam.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpik_pplam.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp67n6mx5b.php:18\n\
    Stack trace:\n#0 /tmp/tmp67n6mx5b.php(25): compare(Array, Array)\n#1 /tmp/tmp67n6mx5b.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp67n6mx5b.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp67n6mx5b.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpsm3zfda_.php:15\n\
    Stack trace:\n#0 /tmp/tmpsm3zfda_.php(21): compare(Array, Array)\n#1 /tmp/tmpsm3zfda_.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpsm3zfda_.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpsm3zfda_.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpb_isnter.php:15\n\
    Stack trace:\n#0 /tmp/tmpb_isnter.php(21): compare(Array, Array)\n#1 /tmp/tmpb_isnter.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpb_isnter.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpb_isnter.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpytgexeza.php:18\n\
    Stack trace:\n#0 /tmp/tmpytgexeza.php(25): compare(Array, Array)\n#1 /tmp/tmpytgexeza.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpytgexeza.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpytgexeza.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp1cvibl4e.php:15\n\
    Stack trace:\n#0 /tmp/tmp1cvibl4e.php(21): compare(Array, Array)\n#1 /tmp/tmp1cvibl4e.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1cvibl4e.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1cvibl4e.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $score) {\n\
    \        $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmprowf1onk.php:15\n\
    Stack trace:\n#0 /tmp/tmprowf1onk.php(21): compare(Array, Array)\n#1 /tmp/tmprowf1onk.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmprowf1onk.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmprowf1onk.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for ($i = 0; $i < $guesses; $i++) {\n        $result[$i]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n    for ($i = 0; $i < $games; $i++) {\n\
    \        $score = $score + $result[$i];\n    }\n    return $score;\n}\n\nfunction\
    \ candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnnhebth.php:31\n\
    Stack trace:\n#0 /tmp/tmpdnnhebth.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdnnhebth.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpkuy3adq1.php:15\n\
    Stack trace:\n#0 /tmp/tmpkuy3adq1.php(21): compare(Array, Array)\n#1 /tmp/tmpkuy3adq1.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpkuy3adq1.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpkuy3adq1.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpjix9_ixt.php:15\n\
    Stack trace:\n#0 /tmp/tmpjix9_ixt.php(21): compare(Array, Array)\n#1 /tmp/tmpjix9_ixt.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpjix9_ixt.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpjix9_ixt.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp4993rwqg.php:15\n\
    Stack trace:\n#0 /tmp/tmp4993rwqg.php(21): compare(Array, Array)\n#1 /tmp/tmp4993rwqg.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp4993rwqg.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp4993rwqg.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      $result[$index] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmptanleh13.php:15\n\
    Stack trace:\n#0 /tmp/tmptanleh13.php(21): compare(Array, Array)\n#1 /tmp/tmptanleh13.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmptanleh13.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmptanleh13.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmplls0kvd1.php:18\n\
    Stack trace:\n#0 /tmp/tmplls0kvd1.php(25): compare(Array, Array)\n#1 /tmp/tmplls0kvd1.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmplls0kvd1.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmplls0kvd1.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpu4kci6e_.php:18\n\
    Stack trace:\n#0 /tmp/tmpu4kci6e_.php(25): compare(Array, Array)\n#1 /tmp/tmpu4kci6e_.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpu4kci6e_.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpu4kci6e_.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      $result[$index] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpv02lgsql.php:15\n\
    Stack trace:\n#0 /tmp/tmpv02lgsql.php(21): compare(Array, Array)\n#1 /tmp/tmpv02lgsql.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpv02lgsql.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpv02lgsql.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpzfnrwrid.php:18\n\
    Stack trace:\n#0 /tmp/tmpzfnrwrid.php(25): compare(Array, Array)\n#1 /tmp/tmpzfnrwrid.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpzfnrwrid.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpzfnrwrid.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $game = array_flip($game);\n    $guess = array_flip($guess);\n\
    \    $result = array();\n    foreach ($game as $key => $value) {\n        if ($guess[$key]\
    \ == $value) {\n            $result[$key] = 0;\n        } else {\n           \
    \ $result[$key] = abs($guess[$key] - $value);\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6xss7an.php:31\n\
    Stack trace:\n#0 /tmp/tmpz6xss7an.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz6xss7an.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for ($i = 0; $i < $games; $i++) {\n        $result[$i]\
    \ = abs($guess[$i] - $game[$i]);\n    }\n    for ($i = 0; $i < $guesses; $i++)\
    \ {\n        $score = $score + $result[$i];\n    }\n    return $score;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer! I appreciate it. I tried your\
    \ solution and it didn't work. I think it's because I didn't explain my question\
    \ very well. I edited my question to make it more clear. Thanks again for your\
    \ help!\n<|/ c |>\n<| c |>\nI edited my answer to include a solution that should\
    \ work. Let me know if it doesn't.\n<|/ c |>\n<| c |>\nThanks for your answer!\
    \ I appreciate it. I tried your solution and it didn't work. I think it's because\
    \ I didn't explain my question very well. I edited my question to make it more\
    \ clear. Thanks again for your help!\n<|/ c |>\n<| c |>\nI edited my answer to\
    \ include a solution that should work. Let me know if it doesn't.\n<|/ c |>\n\
    <| c |>\nThanks for your answer! I appreciate it. I tried your solution and it\
    \ didn't work. I think it's because I didn't explain my question very well. I\
    \ edited my question to make it more clear. Thanks again for your help!\n<|/ c\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkx8tvuim.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpur5x61xd.php:15\n\
    Stack trace:\n#0 /tmp/tmpur5x61xd.php(21): compare(Array, Array)\n#1 /tmp/tmpur5x61xd.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpur5x61xd.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpur5x61xd.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    for($i = 0; $i < count($game); $i++)\
    \ {\n        $result[$i] = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer! I understand your\
    \ solution and it works perfectly for me. I'm just wondering if there is a way\
    \ to do this without using loops?\n<|/ c |>\n<| c |>\nI added a solution without\
    \ loops. But I still think your solution is more elegant and easier to understand.\n\
    <|/ c |>\n<| c |>\nThanks for your answer! I understand your solution and it works\
    \ perfectly for me. I'm just wondering if there is a way to do this without using\
    \ loops?\n<|/ c |>\n<| c |>\nI added a solution without loops. But I still think\
    \ your solution is more elegant and easier to understand.\n<|/ c |>\n<| a dscore=1\
    \ |>\nI believe that your solution is more elegant and easier to understand. \n\
    <code>\n<?php\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9e4q8z5h.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    for($i = 0; $i < $games; $i++) {\n        $score += abs($game[$i] - $guess[$i]);\n\
    \    }\n    return $score;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpcbq22t.php:27\n\
    Stack trace:\n#0 /tmp/tmpcpcbq22t.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcpcbq22t.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = array();\n    foreach ($game as $key\
    \ => $value) {\n        if ($value == $guess[$key]) {\n            $score++;\n\
    \        } else {\n            $guesses[$key] = abs($value - $guess[$key]);\n\
    \        }\n    }\n    return $guesses;\n}\n\nfunction candidate(...$args) {\n\
    \    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpomzjqnjm.php:30\n\
    Stack trace:\n#0 /tmp/tmpomzjqnjm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpomzjqnjm.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpvapijcih.php:15\n\
    Stack trace:\n#0 /tmp/tmpvapijcih.php(21): compare(Array, Array)\n#1 /tmp/tmpvapijcih.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpvapijcih.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpvapijcih.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpfjiu4tdz.php:18\n\
    Stack trace:\n#0 /tmp/tmpfjiu4tdz.php(25): compare(Array, Array)\n#1 /tmp/tmpfjiu4tdz.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpfjiu4tdz.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpfjiu4tdz.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpf9x612xg.php:15\n\
    Stack trace:\n#0 /tmp/tmpf9x612xg.php(21): compare(Array, Array)\n#1 /tmp/tmpf9x612xg.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpf9x612xg.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpf9x612xg.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpr7jzqm3z.php:15\n\
    Stack trace:\n#0 /tmp/tmpr7jzqm3z.php(21): compare(Array, Array)\n#1 /tmp/tmpr7jzqm3z.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpr7jzqm3z.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpr7jzqm3z.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmprg13c7c6.php:15\n\
    Stack trace:\n#0 /tmp/tmprg13c7c6.php(21): compare(Array, Array)\n#1 /tmp/tmprg13c7c6.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmprg13c7c6.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmprg13c7c6.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpeuw4v006.php:15\n\
    Stack trace:\n#0 /tmp/tmpeuw4v006.php(21): compare(Array, Array)\n#1 /tmp/tmpeuw4v006.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpeuw4v006.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpeuw4v006.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpsdmkfmaw.php:15\n\
    Stack trace:\n#0 /tmp/tmpsdmkfmaw.php(21): compare(Array, Array)\n#1 /tmp/tmpsdmkfmaw.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpsdmkfmaw.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpsdmkfmaw.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp3n9pzyf5.php:18\n\
    Stack trace:\n#0 /tmp/tmp3n9pzyf5.php(25): compare(Array, Array)\n#1 /tmp/tmp3n9pzyf5.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp3n9pzyf5.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp3n9pzyf5.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmprjf_ae4i.php:15\n\
    Stack trace:\n#0 /tmp/tmprjf_ae4i.php(21): compare(Array, Array)\n#1 /tmp/tmprjf_ae4i.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmprjf_ae4i.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmprjf_ae4i.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = [];\n    for ($i = 0; $i < $guesses; $i++) {\n        $score =\
    \ $score + $game[$i];\n    }\n    for ($i = 0; $i < $games; $i++) {\n        $result[$i]\
    \ = abs($guess[$i] - $score);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg2f3cag.php:31\n\
    Stack trace:\n#0 /tmp/tmpdg2f3cag.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdg2f3cag.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nThanks for your answer. Can\
    \ you please explain why you used the $key => $value syntax? I understand that\
    \ it is used to iterate through an array, but why is it used here?\n<|/ c |>\n\
    <| c |>\nThe `foreach` loop will iterate through each element in the `$game` array\
    \ and assign the element to the `$key` variable and the element to the `$value`\
    \ variable. The `$key` variable will hold the index of the element in the `$game`\
    \ array and the `$value` variable will hold the value of the element. So in the\
    \ first iteration of the loop `$key` will hold the index `0` and `$value` will\
    \ hold the value of the element at index `0`. In the second iteration `$key` will\
    \ hold the index `1` and `$value` will hold the value of the element at index\
    \ `1`. And so on...\n<|/ c |>\n<| c |>\nI see, thank you very much. I am still\
    \ new to PHP and I appreciate your help.\n<|/ c |>\n<| c |>\nNo problem. Glad\
    \ I could help. If you found this answer helpful, please consider accepting it\
    \ by clicking the check mark next to it. This will help future visitors who may\
    \ have a similar question in the future find the answer more easily.\n<|/ c |>\n\
    <| c |>\nI will, once I can. Thanks again!\n<|/ c |>\n<| a tags=php |>\n<code>\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm0_eru9_.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp3krpzgg0.php:18\n\
    Stack trace:\n#0 /tmp/tmp3krpzgg0.php(25): compare(Array, Array)\n#1 /tmp/tmp3krpzgg0.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp3krpzgg0.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp3krpzgg0.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp1sunmh3q.php:18\n\
    Stack trace:\n#0 /tmp/tmp1sunmh3q.php(25): compare(Array, Array)\n#1 /tmp/tmp1sunmh3q.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1sunmh3q.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1sunmh3q.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpl02s0new.php:18\n\
    Stack trace:\n#0 /tmp/tmpl02s0new.php(25): compare(Array, Array)\n#1 /tmp/tmpl02s0new.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpl02s0new.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpl02s0new.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    for($i = 0; $i < count($game); $i++)\
    \ {\n        $result[$i] = abs($guess[$i] - $game[$i]);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer. Unfortunately,\
    \ this doesn't work. Try it with the example I gave in the question. Your code\
    \ returns `[0,0,0,0,3,3]` instead of `[4,4,1,0,0,6]`.\n<|/ c |>\n<| c |>\nAh,\
    \ I see what you're saying. I think I misunderstood your question. I'll update\
    \ my answer.\n<|/ c |>\n<| c |>\nThanks for your answer. Unfortunately, this doesn't\
    \ work. Try it with the example I gave in the question. Your code returns `[0,0,0,0,3,3]`\
    \ instead of `[4,4,1,0,0,6]`.\n<|/ c |>\n<| c |>\nOh, I see what you're saying.\
    \ I think I misunderstood your question. I'll update my answer.\n<|/ c |>\n<|\
    \ c |>\nThanks for your answer. Unfortunately, this doesn't work. Try it with\
    \ the example I gave in the question. Your code returns `[0,0,0,0,3,3]` instead\
    \ of `[4,4,1,0,0,6]`.\n<|/ c |>\n<| a dscore=0 |>\nI believe this is what you\
    \ are looking for:\n<code>\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp_ajctq_.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $score) {\n\
    \        $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpcmjlz2fe.php:15\n\
    Stack trace:\n#0 /tmp/tmpcmjlz2fe.php(21): compare(Array, Array)\n#1 /tmp/tmpcmjlz2fe.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpcmjlz2fe.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpcmjlz2fe.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp1_5cvq7u.php:15\n\
    Stack trace:\n#0 /tmp/tmp1_5cvq7u.php(21): compare(Array, Array)\n#1 /tmp/tmp1_5cvq7u.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1_5cvq7u.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1_5cvq7u.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    $guesses = array_map('intval', $guess);\n\
    \    $scores = array_map('intval', $game);\n    foreach ($guesses as $key => $guess)\
    \ {\n        $result[$key] = abs($guess - $scores[$key]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for the answer. Your code\
    \ works perfectly for me. Thanks again.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp337zgh6u.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    foreach ($game as $key => $value) {\n      \
    \  if ($guess == $value) {\n            $score = 0;\n        } else {\n      \
    \      $score += abs($guess - $value);\n        }\n    }\n    return $score;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp_x8ep0gl.php:18\n\
    Stack trace:\n#0 /tmp/tmp_x8ep0gl.php(25): compare(Array, Array)\n#1 /tmp/tmp_x8ep0gl.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp_x8ep0gl.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp_x8ep0gl.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpluy47pjs.php:15\n\
    Stack trace:\n#0 /tmp/tmpluy47pjs.php(21): compare(Array, Array)\n#1 /tmp/tmpluy47pjs.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpluy47pjs.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpluy47pjs.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    $scores = [];\n    foreach ($game as $index\
    \ => $score) {\n        $result[$index] = 0;\n        $scores[$index] = $score;\n\
    \    }\n    foreach ($guess as $index => $guess) {\n        $result[$index] =\
    \ abs($guess - $scores[$index]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $key => $value) {\n\
    \        if ($guess == $value) {\n            $result[$key] = 0;\n        } else\
    \ {\n            $result[$key] = abs($guess - $value);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp87enab4e.php:18\n\
    Stack trace:\n#0 /tmp/tmp87enab4e.php(25): compare(Array, Array)\n#1 /tmp/tmp87enab4e.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp87enab4e.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp87enab4e.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpsu6j0rdg.php:15\n\
    Stack trace:\n#0 /tmp/tmpsu6j0rdg.php(21): compare(Array, Array)\n#1 /tmp/tmpsu6j0rdg.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpsu6j0rdg.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpsu6j0rdg.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($value - $guess[$key]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      if ($guess == $score) {\n            $result[$index] = 0;\n        } else\
    \ {\n            $result[$index] = abs($guess - $score);\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpg73_58rt.php:18\n\
    Stack trace:\n#0 /tmp/tmpg73_58rt.php(25): compare(Array, Array)\n#1 /tmp/tmpg73_58rt.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpg73_58rt.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpg73_58rt.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    if ($guess == $score) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $score);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp1o49oqbk.php:18\n\
    Stack trace:\n#0 /tmp/tmp1o49oqbk.php(25): compare(Array, Array)\n#1 /tmp/tmp1o49oqbk.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp1o49oqbk.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp1o49oqbk.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = array();\n    for ($i = 0; $i < $guesses; $i++) {\n        $score\
    \ = $score + abs($game[$i] - $guess[$i]);\n    }\n    for ($i = 0; $i < $games;\
    \ $i++) {\n        $result[$i] = abs($game[$i] - $guess[$i]);\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your efforts,\
    \ but this doesn't work. Try it with the example I gave in the question. Your\
    \ code returns `[0,0,0,0,3,3]` when it should return `[4,4,1,0,0,6]`.\n<|/ c |>\n\
    <| c |>\nI updated my answer. Now it works. I tested it with the example you gave\
    \ in the question.\n<|/ c |>\n<| c |>\nI appreciate your efforts, but this doesn't\
    \ work. Try it with the example I gave in the question. Your code returns `[0,0,0,0,3,3]`\
    \ when it should return `[4,4,1,0,0,6]`.\n<|/ c |>\n<| c |>\nI updated my answer.\
    \ Now it works. I tested it with the example you gave in the question.\n<|/ c\
    \ |>\n<| c |>\nI appreciate your efforts, but this doesn't work. Try it with the\
    \ example I gave in the question. Your code returns `[0,0,0,0,3,3]` when it should\
    \ return `[4,4,1,0,0,6]`.\n<|/ c |>\n<| a tags=php,arrays,algorithm |>\nI believe\
    \ this should work:\n<code>\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp48179ffh.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer! I tested it and it works perfectly.\
    \ I'm still trying to understand how it works, but I guess I'll have to do some\
    \ more research on how arrays work in PHP. Thanks again!\n<|/ c |>\n<| c |>\n\
    No problem! Arrays are a very powerful tool in PHP. There are many ways to do\
    \ things in PHP, and this one was the most straightforward and easy to understand.\
    \ Arrays are a very powerful tool in PHP. There are many ways to do things in\
    \ PHP, and this one was the most straightforward and easy to understand. Arrays\
    \ are a very powerful tool in PHP. There are many ways to do things in PHP, and\
    \ this one was the most straightforward and easy to understand. Arrays are a very\
    \ powerful tool in PHP. There are many ways to do things in PHP, and this one\
    \ was the most straightforward and easy to understand. Arrays are a very powerful\
    \ tool in PHP. There are many ways to do things in PHP, and this one was the most\
    \ straightforward and easy to understand. Arrays are a very powerful tool in PHP.\
    \ There are many ways to do things in PHP, and this one was the most straightforward\
    \ and easy to understand. Arrays are a very powerful tool in PHP. There are many\
    \ ways to do things in PHP, and this one was the most straightforward and easy\
    \ to understand. Arrays are a very powerful tool in PHP. There are many ways to\
    \ do things in PHP, and this one was the most straightforward and easy to understand.\
    \ Arrays are a very powerful tool in PHP. There are many ways to do things in\
    \ PHP, and this one was the most straightforward and easy to understand. Arrays\
    \ are a very powerful tool in PHP. There are many ways to do things in PHP, and\
    \ this one was the most straightforward and easy to understand. Arrays are a very\
    \ powerful tool in PHP. There are many ways to do things in PHP, and this one\
    \ was the most straightforward and easy to understand. Arrays are a very powerful\
    \ tool in PHP. There are many ways to do things in PHP, and this one was the most\
    \ straightforward and easy to understand. Arrays are a very powerful tool in PHP.\
    \ There are many ways to do things in PHP, and this one was the most straightforward\
    \ and easy to understand. Arrays are a \nfunction candidate(...$args) {\n    return\
    \ compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp42kpybs6.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    $guesses = array_flip($guess);\n    foreach\
    \ ($game as $key => $score) {\n        $result[$key] = abs($score - $guesses[$key]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihuiy7uc.php:26\n\
    Stack trace:\n#0 /tmp/tmpihuiy7uc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpihuiy7uc.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpxucjonmt.php:18\n\
    Stack trace:\n#0 /tmp/tmpxucjonmt.php(25): compare(Array, Array)\n#1 /tmp/tmpxucjonmt.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpxucjonmt.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpxucjonmt.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $score = 0;\n    $guesses = count($guess);\n    $games = count($game);\n\
    \    $result = array();\n    for($i = 0; $i < $guesses; $i++) {\n        $result[$i]\
    \ = abs($game[$i] - $guess[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return compare(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 0, 0, 0, 0, 0),\
    \ array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2,\
    \ 4, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpzzlnmwu9.php:15\n\
    Stack trace:\n#0 /tmp/tmpzzlnmwu9.php(21): compare(Array, Array)\n#1 /tmp/tmpzzlnmwu9.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpzzlnmwu9.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpzzlnmwu9.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $index => $score) {\n  \
    \      $result[$index] = abs($guess - $score);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4,\
    \ 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpmmciglrb.php:15\n\
    Stack trace:\n#0 /tmp/tmpmmciglrb.php(21): compare(Array, Array)\n#1 /tmp/tmpmmciglrb.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpmmciglrb.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpmmciglrb.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp_as23x49.php:18\n\
    Stack trace:\n#0 /tmp/tmp_as23x49.php(25): compare(Array, Array)\n#1 /tmp/tmp_as23x49.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmp_as23x49.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp_as23x49.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    if ($guess == $value) {\n            $result[$key] = 0;\n        } else {\n\
    \            $result[$key] = abs($guess - $value);\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return compare(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1,\
    \ 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !==\
    \ array(0, 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5), array(-1,\
    \ 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpv0w6jod_.php:18\n\
    Stack trace:\n#0 /tmp/tmpv0w6jod_.php(25): compare(Array, Array)\n#1 /tmp/tmpv0w6jod_.php(29):\
    \ candidate(Array, Array)\n#2 /tmp/tmpv0w6jod_.php(35): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpv0w6jod_.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $value) {\n    \
    \    $result[$key] = abs($guess - $value);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp_2lb8gkt.php:15\n\
    Stack trace:\n#0 /tmp/tmp_2lb8gkt.php(21): compare(Array, Array)\n#1 /tmp/tmp_2lb8gkt.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmp_2lb8gkt.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmp_2lb8gkt.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = [];\n    foreach ($game as $key => $score) {\n    \
    \    $result[$key] = abs($guess - $score);\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpn5p4iy9e.php:15\n\
    Stack trace:\n#0 /tmp/tmpn5p4iy9e.php(21): compare(Array, Array)\n#1 /tmp/tmpn5p4iy9e.php(25):\
    \ candidate(Array, Array)\n#2 /tmp/tmpn5p4iy9e.php(31): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpn5p4iy9e.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// I think we all remember that feeling when the result of some\
    \ long-awaited\n// event is finally known. The feelings and thoughts you have\
    \ at that moment are\n// definitely worth noting down and comparing.\n// Your\
    \ task is to determine if a person correctly guessed the results of a number of\
    \ matches.\n// You are given two arrays of scores and guesses of equal length,\
    \ where each index shows a match. \n// Return an array of the same length denoting\
    \ how far off each guess was. If they have guessed correctly,\n// the value is\
    \ 0, and if not, the value is the absolute difference between the guess and the\
    \ score.\n// example:\n// compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n\
    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\nfunction compare($game,\
    \ $guess) {\n    $result = array();\n    foreach ($game as $index => $score) {\n\
    \        $result[$index] = abs($guess - $score);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThank you so much! I really appreciate it!\n<|/\
    \ c |>\n<| c |>\nNo problem. Glad I could help.\n<|/ c |>\n<| a |>\n<code>\n<?php\n\
    function candidate(...$args) {\n    return compare(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))\
    \ !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0,\
    \ 0, 0, 0, 0, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0,\
    \ 0, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc78aybpp.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception

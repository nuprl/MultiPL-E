name: HumanEval_82_prime_length
language: php
results:
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i < $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpenv7zej2.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpenv7zej2.php:24\n\
    Stack trace:\n#0 /tmp/tmpenv7zej2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpenv7zej2.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpabt0qp2a.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabt0qp2a.php:24\n\
    Stack trace:\n#0 /tmp/tmpabt0qp2a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpabt0qp2a.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $length = strlen($string);\n    $primes = array(3,\
    \ 5, 7);\n    foreach ($primes as $prime) {\n        if ($length >= $prime) {\n\
    \            if ($length == $prime) {\n                return true;\n        \
    \    }\n            if ($length < $prime) {\n                return false;\n \
    \           }\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4pzad7qx.php:39\n\
    Stack trace:\n#0 /tmp/tmp4pzad7qx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4pzad7qx.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpu53bx44l.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu53bx44l.php:23\n\
    Stack trace:\n#0 /tmp/tmpu53bx44l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpu53bx44l.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array(2, 3, 5, 7);\n    foreach ($prime_length as $prime_length) {\n     \
    \   if (strlen($string) == $prime_length) {\n            return true;\n      \
    \  }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgkl8cu2s.php:17\n\
    Stack trace:\n#0 /tmp/tmpgkl8cu2s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgkl8cu2s.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfghfyxk.php:17\n\
    Stack trace:\n#0 /tmp/tmpvfghfyxk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvfghfyxk.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    $length = strlen($string);\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \  }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpypw2qj7m.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpypw2qj7m.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpypw2qj7m.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpypw2qj7m.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpypw2qj7m.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypw2qj7m.php:25\n\
    Stack trace:\n#0 /tmp/tmpypw2qj7m.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpypw2qj7m.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6r3jcq0a.php:17\n\
    Stack trace:\n#0 /tmp/tmp6r3jcq0a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6r3jcq0a.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cdfw35c.php:18\n\
    Stack trace:\n#0 /tmp/tmp6cdfw35c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6cdfw35c.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpbmdm_cht.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmdm_cht.php:24\n\
    Stack trace:\n#0 /tmp/tmpbmdm_cht.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbmdm_cht.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9m83or4.php:17\n\
    Stack trace:\n#0 /tmp/tmpk9m83or4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk9m83or4.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqjrgv4r.php:17\n\
    Stack trace:\n#0 /tmp/tmpzqjrgv4r.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzqjrgv4r.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpflp6_40g.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpflp6_40g.php:23\n\
    Stack trace:\n#0 /tmp/tmpflp6_40g.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpflp6_40g.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppomfxgi3.php:17\n\
    Stack trace:\n#0 /tmp/tmppomfxgi3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppomfxgi3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \      break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmphv9396l8.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphv9396l8.php:26\n\
    Stack trace:\n#0 /tmp/tmphv9396l8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphv9396l8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4r5i3fr.php:17\n\
    Stack trace:\n#0 /tmp/tmpy4r5i3fr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy4r5i3fr.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \  }\n    }\n    return $prime;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp_tdn1_wb.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp_tdn1_wb.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp_tdn1_wb.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp_tdn1_wb.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp_tdn1_wb.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tdn1_wb.php:24\n\
    Stack trace:\n#0 /tmp/tmp_tdn1_wb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_tdn1_wb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    $length = strlen($string);\n    for($i = 1; $i <= $length; $i++)\
    \ {\n        if($string[$i] % 2 == 0) {\n            $prime = false;\n       \
    \     break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1wc3bqz2.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wc3bqz2.php:26\n\
    Stack trace:\n#0 /tmp/tmp1wc3bqz2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1wc3bqz2.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe17d3guw.php:17\n\
    Stack trace:\n#0 /tmp/tmpe17d3guw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpe17d3guw.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \      break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmplilu5lni.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplilu5lni.php:26\n\
    Stack trace:\n#0 /tmp/tmplilu5lni.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplilu5lni.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpoklzml_g.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoklzml_g.php:24\n\
    Stack trace:\n#0 /tmp/tmpoklzml_g.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpoklzml_g.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_x1vqd5.php:17\n\
    Stack trace:\n#0 /tmp/tmp2_x1vqd5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2_x1vqd5.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i]\
    \ === '1') {\n            $prime = false;\n            break;\n        }\n   \
    \ }\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm52kvzc7.php:28\n\
    Stack trace:\n#0 /tmp/tmpm52kvzc7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpm52kvzc7.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your logic here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nbmrzcu.php:17\n\
    Stack trace:\n#0 /tmp/tmp1nbmrzcu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1nbmrzcu.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your solution here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lfcnpgq.php:17\n\
    Stack trace:\n#0 /tmp/tmp6lfcnpgq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6lfcnpgq.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array();\n    $prime_length[0] = true;\n    $prime_length[1] = false;\n  \
    \  $prime_length[2] = true;\n    $prime_length[3] = false;\n    $prime_length[4]\
    \ = true;\n    $prime_length[5] = false;\n    $prime_length[6] = true;\n    $prime_length[7]\
    \ = false;\n    $prime_length[8] = true;\n    $prime_length[9] = false;\n    $prime_length[10]\
    \ = true;\n    $prime_length[11] = false;\n    $prime_length[12] = true;\n   \
    \ $prime_length[13] = false;\n    $prime_length[14] = true;\n    $prime_length[15]\
    \ = false;\n    $prime_length[16] = true;\n    $prime_length[17] = false;\n  \
    \  $prime_length[18] = true;\n    $prime_length[19] = false;\n    $prime_length[20]\
    \ = true;\n    $prime_length[21] = false;\n    $prime_length[22] = true;\n   \
    \ $prime_length[23] = false;\n    $prime_length[24] = true;\n    $prime_length[25]\
    \ = false;\n    $prime_length[26] = true;\n    $prime_length[27] = false;\n  \
    \  $prime_length[28] = true;\n    $prime_length[29] = false;\n    $prime_length[30]\
    \ = true;\n    $prime_length[31] = false;\n    $prime_length[32] = true;\n   \
    \ $prime_length[33] = false;\n    $prime_length[34] = true;\n    $prime_length[35]\
    \ = false;\n    $prime_length[36] = true;\n    $prime_length[37] = false;\n  \
    \  $prime_length[38] = true;\n    $prime_length[39] = false;\n    $prime_length[40]\
    \ = true;\n    $prime_length[41] = false;\n    $prime_length[42] = true;\n   \
    \ $prime_length[43] = false;\n    $prime_length[44] = true;\n    $prime_length[45]\
    \ = false;\n    $prime_length[46] = true;\n    $prime_length[47] = false;\n  \
    \  $prime_length[48] = true;\n    $prime_length[49] = false;\n    $prime_length[50]\
    \ = true;\n    $prime_length[51] = false;\n    $prime_length[52] = true;\n   \
    \ $prime_length[53] = false;\n    $prime_length[54] = true;\n    $prime_length[55]\
    \ = false;\n    $prime_length[56] = true;\n    $prime_length[57] = false;\n  \
    \  $prime_length[58\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptbv1pgnc.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array(\n        'a' => 2,\n        'b' => 2,\n        'c' => 2,\n        'd'\
    \ => 3,\n        'e' => 3,\n        'f' => 3,\n        'g' => 3,\n        'h'\
    \ => 4,\n        'i' => 4,\n        'j' => 5,\n        'k' => 5,\n        'l'\
    \ => 5,\n        'm' => 6,\n        'n' => 6,\n        'o' => 6,\n        'p'\
    \ => 7,\n        'q' => 7,\n        'r' => 7,\n        's' => 7,\n        't'\
    \ => 7,\n        'u' => 7,\n        'v' => 7,\n        'w' => 7,\n        'x'\
    \ => 7,\n        'y' => 7,\n        'z' => 7,\n        'A' => 2,\n        'B'\
    \ => 2,\n        'C' => 2,\n        'D' => 3,\n        'E' => 3,\n        'F'\
    \ => 3,\n        'G' => 3,\n        'H' => 4,\n        'I' => 4,\n        'J'\
    \ => 5,\n        'K' => 5,\n        'L' => 5,\n        'M' => 6,\n        'N'\
    \ => 6,\n        'O' => 6,\n        'P' => 7,\n        'Q' => 7,\n        'R'\
    \ => 7,\n        'S' => 7,\n        'T' => 7,\n        'U' => 7,\n        'V'\
    \ => 7,\n        'W' => 7,\n        'X' => 7,\n        'Y' => 7,\n        'Z'\
    \ => 7,\n        '0' => 2,\n        '1' => 2,\n        '2' => 2,\n        '3'\
    \ => 3,\n        '4' => 3,\n        '5' => 3,\n        '6' => 3,\n        '7'\
    \ => 3,\n        '8' => 3,\n        '9' => 3,\n        'a' => 2,\n        'b'\
    \ => 2,\n        'c' => 2,\n        'd' => 3,\n        'e' => 3,\n        'f'\
    \ => 3,\n        'g' => 3,\n        'h' => 4,\n        'i' => 4,\n        'j'\
    \ => 5,\n        'k' => 5,\n        'l' => 5,\n        'm' => 6,\n        'n'\
    \ => 6,\n        'o' => 6,\n        'p' => 7,\n        'q' => 7,\n        'r'\
    \ => 7,\n        's' => 7,\n        't' => 7,\n        'u' => 7,\n        'v'\
    \ => 7,\n        'w' => 7,\n        'x' => 7,\n        'y' => 7,\n        'z'\
    \ => 7,\n        'A' => 2,\n        'B' => 2,\n        'C' => 2,\n        'D'\
    \ => 3,\n        'E' => 3,\n        'F' => 3,\n        'G' => 3,\n        'H'\
    \ => 4,\n        'I' => 4,\n        'J' => 5,\n        'K' => 5,\n        'L'\
    \ => 5,\n        'M' => 6,\n        '\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3myhp0jh.php on line 112\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 1; $i <= $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        } else {\n            break;\n\
    \        }\n    }\n    if($prime_length == 0) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp_aydcujt.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp_aydcujt.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp_aydcujt.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_aydcujt.php:30\n\
    Stack trace:\n#0 /tmp/tmp_aydcujt.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_aydcujt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5he20gm.php:17\n\
    Stack trace:\n#0 /tmp/tmpw5he20gm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw5he20gm.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $primes\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($primes as\
    \ $prime) {\n        if ($length == $prime) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = true;\n    $length = strlen($string);\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime_length = false;\n\
    \            break;\n        }\n    }\n    return $prime_length;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpdq4dc4p9.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdq4dc4p9.php:26\n\
    Stack trace:\n#0 /tmp/tmpdq4dc4p9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdq4dc4p9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \      break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpisfkc0k7.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfkc0k7.php:26\n\
    Stack trace:\n#0 /tmp/tmpisfkc0k7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpisfkc0k7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = false;\n    $length = strlen($string);\n    for($i = 1; $i <= $length; $i++)\
    \ {\n        if($string[$i] % 2 == 0) {\n            $prime_length = true;\n \
    \           break;\n        }\n    }\n    return $prime_length;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpy0bwkn13.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpy0bwkn13.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpy0bwkn13.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpy0bwkn13.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0bwkn13.php:28\n\
    Stack trace:\n#0 /tmp/tmpy0bwkn13.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpy0bwkn13.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n    $prime = true;\n    for($i = 2; $i <= strlen($string); $i++)\
    \ {\n        if($string[$i] % 2 == 0) {\n            $prime = false;\n       \
    \     break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpju_bues9.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpju_bues9.php:26\n\
    Stack trace:\n#0 /tmp/tmpju_bues9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpju_bues9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp_c7f3s2_.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_c7f3s2_.php:24\n\
    Stack trace:\n#0 /tmp/tmp_c7f3s2_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_c7f3s2_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    $prime_length_counter = 1;\n    $prime_length_counter2\
    \ = 0;\n    $prime_length_counter3 = 0;\n    $prime_length_counter4 = 0;\n   \
    \ $prime_length_counter5 = 0;\n    $prime_length_counter6 = 0;\n    $prime_length_counter7\
    \ = 0;\n    $prime_length_counter8 = 0;\n    $prime_length_counter9 = 0;\n   \
    \ $prime_length_counter10 = 0;\n    $prime_length_counter11 = 0;\n    $prime_length_counter12\
    \ = 0;\n    $prime_length_counter13 = 0;\n    $prime_length_counter14 = 0;\n \
    \   $prime_length_counter15 = 0;\n    $prime_length_counter16 = 0;\n    $prime_length_counter17\
    \ = 0;\n    $prime_length_counter18 = 0;\n    $prime_length_counter19 = 0;\n \
    \   $prime_length_counter20 = 0;\n    $prime_length_counter21 = 0;\n    $prime_length_counter22\
    \ = 0;\n    $prime_length_counter23 = 0;\n    $prime_length_counter24 = 0;\n \
    \   $prime_length_counter25 = 0;\n    $prime_length_counter26 = 0;\n    $prime_length_counter27\
    \ = 0;\n    $prime_length_counter28 = 0;\n    $prime_length_counter29 = 0;\n \
    \   $prime_length_counter30 = 0;\n    $prime_length_counter31 = 0;\n    $prime_length_counter32\
    \ = 0;\n    $prime_length_counter33 = 0;\n    $prime_length_counter34 = 0;\n \
    \   $prime_length_counter35 = 0;\n    $prime_length_counter36 = 0;\n    $prime_length_counter37\
    \ = 0;\n    $prime_length_counter38 = 0;\n    $prime_length_counter39 = 0;\n \
    \   $prime_length_counter40 = 0;\n    $prime_length_counter41 = 0;\n    $prime_length_counter42\
    \ = 0;\n    $prime_length_counter43 = 0;\n    $prime_length_counter44 = 0;\n \
    \   $prime_length_counter45 = 0;\n    $prime_length_counter46 = 0;\n    $prime_length_counter47\
    \ = 0;\n    $prime_length_counter48 = 0;\n    $prime_length_counter49 = 0;\n \
    \   $prime_length_counter50 = 0;\n    $prime_length_counter51 = 0;\n    $prime_length_counter52\
    \ = 0;\n    $prime_length_counter53 = 0;\n    $prime_length_counter54 = 0;\n \
    \   $prime_length_counter55 = 0;\n    $prime_length_counter56 = 0;\n    $prime_length_counter57\
    \ = 0;\n    $prime_length_counter58 = 0;\n    $prime_length_counter59 = 0;\n \
    \   $prime_length_counter60 = 0;\n    $prime_length_counter61 = 0;\n    $prime_length_counter62\
    \ = 0;\n    $prime_length_counter63 = 0;\n    $prime_\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp6euoy9t.php on line 75\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length < 2) return False;\n    $prime_numbers =\
    \ array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97);\n    foreach ($prime_numbers as $prime) {\n       \
    \ if ($prime > $length) return false;\n        if ($length == $prime) return True;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ttzgalj.php:17\n\
    Stack trace:\n#0 /tmp/tmp2ttzgalj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2ttzgalj.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeqo4n3m.php:17\n\
    Stack trace:\n#0 /tmp/tmpbeqo4n3m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbeqo4n3m.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array(2, 3, 5, 7);\n    foreach ($prime_length as $prime_length) {\n     \
    \   if (strlen($string) == $prime_length) {\n            return true;\n      \
    \  }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxoympl4x.php:17\n\
    Stack trace:\n#0 /tmp/tmpxoympl4x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxoympl4x.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjjlhgg76.php:17\n\
    Stack trace:\n#0 /tmp/tmpjjlhgg76.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjjlhgg76.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \      break;\n        }\n    }\n    return $prime;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpj0nz4frc.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0nz4frc.php:25\n\
    Stack trace:\n#0 /tmp/tmpj0nz4frc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpj0nz4frc.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $primes\
    \ = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97);\n    $length = strlen($string);\n    foreach ($primes\
    \ as $prime) {\n        if ($length == $prime) {\n            return true;\n \
    \       }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i=2; $i<$length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpimszcl1s.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimszcl1s.php:23\n\
    Stack trace:\n#0 /tmp/tmpimszcl1s.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpimszcl1s.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqr3rs28f.php:17\n\
    Stack trace:\n#0 /tmp/tmpqr3rs28f.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqr3rs28f.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \      break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpqahvecoq.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqahvecoq.php:26\n\
    Stack trace:\n#0 /tmp/tmpqahvecoq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqahvecoq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP solution here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqy3qd8m.php:17\n\
    Stack trace:\n#0 /tmp/tmpzqy3qd8m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzqy3qd8m.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52bszav4.php:18\n\
    Stack trace:\n#0 /tmp/tmp52bszav4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp52bszav4.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97);\n    foreach ($prime_length as $prime) {\n    \
    \    if ($string == $prime) {\n            return true;\n        }\n    }\n  \
    \  return false;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvsnqc84.php:23\n\
    Stack trace:\n#0 /tmp/tmpgvsnqc84.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgvsnqc84.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 1; $i <= $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        }\n    }\n    return $prime_length\
    \ == 0;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpzag1p6yt.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpzag1p6yt.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpzag1p6yt.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzag1p6yt.php:24\n\
    Stack trace:\n#0 /tmp/tmpzag1p6yt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzag1p6yt.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    $prime_length2 = $prime_length / 2;\n    $prime_length3\
    \ = $prime_length2 / 2;\n    $prime_length4 = $prime_length3 / 2;\n    $prime_length5\
    \ = $prime_length4 / 2;\n    $prime_length6 = $prime_length5 / 2;\n    $prime_length7\
    \ = $prime_length6 / 2;\n    $prime_length8 = $prime_length7 / 2;\n    $prime_length9\
    \ = $prime_length8 / 2;\n    $prime_length10 = $prime_length9 / 2;\n    $prime_length11\
    \ = $prime_length10 / 2;\n    $prime_length12 = $prime_length11 / 2;\n    $prime_length13\
    \ = $prime_length12 / 2;\n    $prime_length14 = $prime_length13 / 2;\n    $prime_length15\
    \ = $prime_length14 / 2;\n    $prime_length16 = $prime_length15 / 2;\n    $prime_length17\
    \ = $prime_length16 / 2;\n    $prime_length18 = $prime_length17 / 2;\n    $prime_length19\
    \ = $prime_length18 / 2;\n    $prime_length20 = $prime_length19 / 2;\n    $prime_length21\
    \ = $prime_length20 / 2;\n    $prime_length22 = $prime_length21 / 2;\n    $prime_length23\
    \ = $prime_length22 / 2;\n    $prime_length24 = $prime_length23 / 2;\n    $prime_length25\
    \ = $prime_length24 / 2;\n    $prime_length26 = $prime_length25 / 2;\n    $prime_length27\
    \ = $prime_length26 / 2;\n    $prime_length28 = $prime_length27 / 2;\n    $prime_length29\
    \ = $prime_length28 / 2;\n    $prime_length30 = $prime_length29 / 2;\n    $prime_length31\
    \ = $prime_length30 / 2;\n    $prime_length32 = $prime_length31 / 2;\n    $prime_length33\
    \ = $prime_length32 / 2;\n    $prime_length34 = $prime_length33 / 2;\n    $prime_length35\
    \ = $prime_length34 / 2;\n    $prime_length36 = $prime_length35 / 2;\n    $prime_length37\
    \ = $prime_length36 / 2;\n    $prime_length38 = $prime_length37 / 2;\n    $prime_length39\
    \ = $prime_length38 / 2;\n    $prime_length40 = $prime_\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt2uxo5zu.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_41r7hrm.php:17\n\
    Stack trace:\n#0 /tmp/tmp_41r7hrm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_41r7hrm.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    $length = strlen($string);\n    for($i = 0; $i < $length; $i++)\
    \ {\n        $prime = $prime && $string[$i] <= 1;\n    }\n    return $prime;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpziyxph1c.php:26\n\
    Stack trace:\n#0 /tmp/tmpziyxph1c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpziyxph1c.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 1; $i <= $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        }\n    }\n    return $prime_length\
    \ == 0;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpxqt8s_ue.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpxqt8s_ue.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpxqt8s_ue.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqt8s_ue.php:24\n\
    Stack trace:\n#0 /tmp/tmpxqt8s_ue.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxqt8s_ue.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime_numbers = array(2, 3, 5, 7);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length % $prime_number == 0) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpanb5zkrm.php:24\n\
    Stack trace:\n#0 /tmp/tmpanb5zkrm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpanb5zkrm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP solution here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62ri9a9u.php:17\n\
    Stack trace:\n#0 /tmp/tmp62ri9a9u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp62ri9a9u.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    $prime_length2 = $prime_length / 2;\n    $prime_length3\
    \ = $prime_length2 / 2;\n    $prime_length4 = $prime_length3 / 2;\n    $prime_length5\
    \ = $prime_length4 / 2;\n    $prime_length6 = $prime_length5 / 2;\n    $prime_length7\
    \ = $prime_length6 / 2;\n    $prime_length8 = $prime_length7 / 2;\n    $prime_length9\
    \ = $prime_length8 / 2;\n    $prime_length10 = $prime_length9 / 2;\n    $prime_length11\
    \ = $prime_length10 / 2;\n    $prime_length12 = $prime_length11 / 2;\n    $prime_length13\
    \ = $prime_length12 / 2;\n    $prime_length14 = $prime_length13 / 2;\n    $prime_length15\
    \ = $prime_length14 / 2;\n    $prime_length16 = $prime_length15 / 2;\n    $prime_length17\
    \ = $prime_length16 / 2;\n    $prime_length18 = $prime_length17 / 2;\n    $prime_length19\
    \ = $prime_length18 / 2;\n    $prime_length20 = $prime_length19 / 2;\n    $prime_length21\
    \ = $prime_length20 / 2;\n    $prime_length22 = $prime_length21 / 2;\n    $prime_length23\
    \ = $prime_length22 / 2;\n    $prime_length24 = $prime_length23 / 2;\n    $prime_length25\
    \ = $prime_length24 / 2;\n    $prime_length26 = $prime_length25 / 2;\n    $prime_length27\
    \ = $prime_length26 / 2;\n    $prime_length28 = $prime_length27 / 2;\n    $prime_length29\
    \ = $prime_length28 / 2;\n    $prime_length30 = $prime_length29 / 2;\n    $prime_length31\
    \ = $prime_length30 / 2;\n    $prime_length32 = $prime_length31 / 2;\n    $prime_length33\
    \ = $prime_length32 / 2;\n    $prime_length34 = $prime_length33 / 2;\n    $prime_length35\
    \ = $prime_length34 / 2;\n    $prime_length36 = $prime_length35 / 2;\n    $prime_length37\
    \ = $prime_length36 / 2;\n    $prime_length38 = $prime_length37 / 2;\n    $prime_length39\
    \ = $prime_length38 / 2;\n    $prime_length40 = $prime_\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfixrzvyk.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    for($i = 1; $i <= strlen($string); $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime = false;\n            break;\n        }\n  \
    \  }\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0iuak056.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0iuak056.php:25\n\
    Stack trace:\n#0 /tmp/tmp0iuak056.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0iuak056.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $length = strlen($string);\n    $prime_numbers =\
    \ array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97);\n    foreach ($prime_numbers as $prime_number) {\n\
    \        if ($length == $prime_number) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33930735.php:17\n\
    Stack trace:\n#0 /tmp/tmp33930735.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp33930735.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplq9ghan8.php:17\n\
    Stack trace:\n#0 /tmp/tmplq9ghan8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplq9ghan8.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $length = strlen($string);\n    for($i = 2; $i <=\
    \ $length; $i++) {\n        if($string[$i] === '1') {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy7j1qedb.php:28\n\
    Stack trace:\n#0 /tmp/tmpy7j1qedb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpy7j1qedb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $primes\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($primes as\
    \ $prime) {\n        if ($length == $prime) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    for($i = 2; $i <= strlen($string); $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            $prime = false;\n        }\n    }\n    return $prime;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1w0r16ok.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp1w0r16ok.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp1w0r16ok.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp1w0r16ok.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1w0r16ok.php:24\n\
    Stack trace:\n#0 /tmp/tmp1w0r16ok.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1w0r16ok.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvcp4w7p4.php:17\n\
    Stack trace:\n#0 /tmp/tmpvcp4w7p4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvcp4w7p4.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 1; $i < $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        }\n    }\n    if($prime_length\
    \ == 0) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp5xckcoc_.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp5xckcoc_.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xckcoc_.php:28\n\
    Stack trace:\n#0 /tmp/tmp5xckcoc_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5xckcoc_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    $length = strlen($string);\n    for($i = 2; $i <= $length; $i++)\
    \ {\n        if($string[$i] % 2 == 0) {\n            $prime = false;\n       \
    \     break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpi5sukrrz.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5sukrrz.php:26\n\
    Stack trace:\n#0 /tmp/tmpi5sukrrz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpi5sukrrz.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpih9tllub.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpih9tllub.php:24\n\
    Stack trace:\n#0 /tmp/tmpih9tllub.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpih9tllub.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your solution here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhlgacul.php:17\n\
    Stack trace:\n#0 /tmp/tmpxhlgacul.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxhlgacul.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 1; $i < $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        }\n    }\n    return $prime_length\
    \ == 0;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp41qj0sqw.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp41qj0sqw.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41qj0sqw.php:23\n\
    Stack trace:\n#0 /tmp/tmp41qj0sqw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp41qj0sqw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    for($i = 1; $i <= strlen($string); $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime = false;\n            break;\n        }\n  \
    \  }\n    return $prime;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpgs5trmrk.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgs5trmrk.php:24\n\
    Stack trace:\n#0 /tmp/tmpgs5trmrk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgs5trmrk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your logic here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp21q8g0g.php:17\n\
    Stack trace:\n#0 /tmp/tmpp21q8g0g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp21q8g0g.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n    $prime = true;\n    for($i = 1; $i <= strlen($string); $i++)\
    \ {\n        if($string[$i] % 2 == 0) {\n            $prime = false;\n       \
    \     break;\n        }\n    }\n    return $prime;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmprpgcn6nj.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprpgcn6nj.php:25\n\
    Stack trace:\n#0 /tmp/tmprpgcn6nj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprpgcn6nj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbg_e5duj.php:17\n\
    Stack trace:\n#0 /tmp/tmpbg_e5duj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbg_e5duj.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfec2qm8y.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfec2qm8y.php:24\n\
    Stack trace:\n#0 /tmp/tmpfec2qm8y.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfec2qm8y.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpln9nh6oa.php:17\n\
    Stack trace:\n#0 /tmp/tmpln9nh6oa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpln9nh6oa.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_3m59dt.php:18\n\
    Stack trace:\n#0 /tmp/tmpg_3m59dt.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpg_3m59dt.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    foreach ($prime_numbers as $prime_number) {\n    \
    \    if ($prime_number == 0) {\n            continue;\n        }\n        if (strlen($string)\
    \ % $prime_number == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5971s9h.php:27\n\
    Stack trace:\n#0 /tmp/tmpi5971s9h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpi5971s9h.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgz4sqs4p.php:17\n\
    Stack trace:\n#0 /tmp/tmpgz4sqs4p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgz4sqs4p.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    $prime_length2 = $prime_length / 2;\n    $prime_length3\
    \ = $prime_length2 / 2;\n    $prime_length4 = $prime_length3 / 2;\n    $prime_length5\
    \ = $prime_length4 / 2;\n    $prime_length6 = $prime_length5 / 2;\n    $prime_length7\
    \ = $prime_length6 / 2;\n    $prime_length8 = $prime_length7 / 2;\n    $prime_length9\
    \ = $prime_length8 / 2;\n    $prime_length10 = $prime_length9 / 2;\n    $prime_length11\
    \ = $prime_length10 / 2;\n    $prime_length12 = $prime_length11 / 2;\n    $prime_length13\
    \ = $prime_length12 / 2;\n    $prime_length14 = $prime_length13 / 2;\n    $prime_length15\
    \ = $prime_length14 / 2;\n    $prime_length16 = $prime_length15 / 2;\n    $prime_length17\
    \ = $prime_length16 / 2;\n    $prime_length18 = $prime_length17 / 2;\n    $prime_length19\
    \ = $prime_length18 / 2;\n    $prime_length20 = $prime_length19 / 2;\n    $prime_length21\
    \ = $prime_length20 / 2;\n    $prime_length22 = $prime_length21 / 2;\n    $prime_length23\
    \ = $prime_length22 / 2;\n    $prime_length24 = $prime_length23 / 2;\n    $prime_length25\
    \ = $prime_length24 / 2;\n    $prime_length26 = $prime_length25 / 2;\n    $prime_length27\
    \ = $prime_length26 / 2;\n    $prime_length28 = $prime_length27 / 2;\n    $prime_length29\
    \ = $prime_length28 / 2;\n    $prime_length30 = $prime_length29 / 2;\n    $prime_length31\
    \ = $prime_length30 / 2;\n    $prime_length32 = $prime_length31 / 2;\n    $prime_length33\
    \ = $prime_length32 / 2;\n    $prime_length34 = $prime_length33 / 2;\n    $prime_length35\
    \ = $prime_length34 / 2;\n    $prime_length36 = $prime_length35 / 2;\n    $prime_length37\
    \ = $prime_length36 / 2;\n    $prime_length38 = $prime_length37 / 2;\n    $prime_length39\
    \ = $prime_length38 / 2;\n    $prime_length40 = $prime_\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp333gsgpn.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0luqg7z.php:17\n\
    Stack trace:\n#0 /tmp/tmps0luqg7z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmps0luqg7z.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97);\n    foreach ($prime_length as $prime) {\n    \
    \    if ($string == $prime) {\n            return true;\n        }\n    }\n  \
    \  return false;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdww2ob8k.php:23\n\
    Stack trace:\n#0 /tmp/tmpdww2ob8k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdww2ob8k.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime) {\n        if ($length == $prime) {\n            return true;\n \
    \       }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    $length = strlen($string);\n    for($i = 1; $i <= $length; $i++)\
    \ {\n        if($string[$i] % 2 == 0) {\n            $prime = false;\n       \
    \ }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmphfw_tv1g.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmphfw_tv1g.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmphfw_tv1g.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmphfw_tv1g.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmphfw_tv1g.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfw_tv1g.php:25\n\
    Stack trace:\n#0 /tmp/tmphfw_tv1g.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphfw_tv1g.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97);\n    $length = strlen($string);\n    for($i = 0;\
    \ $i < $length; $i++) {\n        if(in_array($string[$i], $prime_numbers)) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ipci0ry.php:25\n\
    Stack trace:\n#0 /tmp/tmp8ipci0ry.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8ipci0ry.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $prime_numbers = array(2, 3, 5, 7);\n    $length\
    \ = strlen($string);\n    foreach ($prime_numbers as $prime_number) {\n      \
    \  if ($length == $prime_number) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $prime_length = array();\n    $prime_length[0] =\
    \ true;\n    $prime_length[1] = true;\n    $prime_length[2] = true;\n    $prime_length[3]\
    \ = true;\n    $prime_length[4] = true;\n    $prime_length[5] = true;\n    $prime_length[6]\
    \ = true;\n    $prime_length[7] = true;\n    $prime_length[8] = true;\n    $prime_length[9]\
    \ = true;\n    $prime_length[10] = true;\n    $prime_length[11] = true;\n    $prime_length[12]\
    \ = true;\n    $prime_length[13] = true;\n    $prime_length[14] = true;\n    $prime_length[15]\
    \ = true;\n    $prime_length[16] = true;\n    $prime_length[17] = true;\n    $prime_length[18]\
    \ = true;\n    $prime_length[19] = true;\n    $prime_length[20] = true;\n    $prime_length[21]\
    \ = true;\n    $prime_length[22] = true;\n    $prime_length[23] = true;\n    $prime_length[24]\
    \ = true;\n    $prime_length[25] = true;\n    $prime_length[26] = true;\n    $prime_length[27]\
    \ = true;\n    $prime_length[28] = true;\n    $prime_length[29] = true;\n    $prime_length[30]\
    \ = true;\n    $prime_length[31] = true;\n    $prime_length[32] = true;\n    $prime_length[33]\
    \ = true;\n    $prime_length[34] = true;\n    $prime_length[35] = true;\n    $prime_length[36]\
    \ = true;\n    $prime_length[37] = true;\n    $prime_length[38] = true;\n    $prime_length[39]\
    \ = true;\n    $prime_length[40] = true;\n    $prime_length[41] = true;\n    $prime_length[42]\
    \ = true;\n    $prime_length[43] = true;\n    $prime_length[44] = true;\n    $prime_length[45]\
    \ = true;\n    $prime_length[46] = true;\n    $prime_length[47] = true;\n    $prime_length[48]\
    \ = true;\n    $prime_length[49] = true;\n    $prime_length[50] = true;\n    $prime_length[51]\
    \ = true;\n    $prime_length[52] = true;\n    $prime_length[53] = true;\n    $prime_length[54]\
    \ = true;\n    $prime_length[55] = true;\n    $prime_length[56] = true;\n    $prime_length[57]\
    \ = \nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8w6txqj0.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    for($i = 1; $i <= strlen($string); $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime = false;\n            break;\n        }\n  \
    \  }\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1lje3fpm.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lje3fpm.php:25\n\
    Stack trace:\n#0 /tmp/tmp1lje3fpm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1lje3fpm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpriuod9z3.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpriuod9z3.php:24\n\
    Stack trace:\n#0 /tmp/tmpriuod9z3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpriuod9z3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp6y_xofyk.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6y_xofyk.php:24\n\
    Stack trace:\n#0 /tmp/tmp6y_xofyk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6y_xofyk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n    $prime = true;\n    for($i = 1; $i <= strlen($string); $i++)\
    \ {\n        if($string[$i] % 2 == 0) {\n            $prime = false;\n       \
    \ }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpaewvpp9a.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpaewvpp9a.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpaewvpp9a.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpaewvpp9a.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpaewvpp9a.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaewvpp9a.php:25\n\
    Stack trace:\n#0 /tmp/tmpaewvpp9a.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpaewvpp9a.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \  }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmps7f5wbtg.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmps7f5wbtg.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmps7f5wbtg.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmps7f5wbtg.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmps7f5wbtg.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7f5wbtg.php:25\n\
    Stack trace:\n#0 /tmp/tmps7f5wbtg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmps7f5wbtg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpys8bacb4.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpys8bacb4.php:24\n\
    Stack trace:\n#0 /tmp/tmpys8bacb4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpys8bacb4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_length\
    \ as $prime) {\n        if ($length == $prime) {\n            return true;\n \
    \       }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array();\n    $prime_length[0] = true;\n    $prime_length[1] = false;\n  \
    \  $prime_length[2] = true;\n    $prime_length[3] = false;\n    $prime_length[4]\
    \ = true;\n    $prime_length[5] = false;\n    $prime_length[6] = true;\n    $prime_length[7]\
    \ = false;\n    $prime_length[8] = true;\n    $prime_length[9] = false;\n    $prime_length[10]\
    \ = true;\n    $prime_length[11] = false;\n    $prime_length[12] = true;\n   \
    \ $prime_length[13] = false;\n    $prime_length[14] = true;\n    $prime_length[15]\
    \ = false;\n    $prime_length[16] = true;\n    $prime_length[17] = false;\n  \
    \  $prime_length[18] = true;\n    $prime_length[19] = false;\n    $prime_length[20]\
    \ = true;\n    $prime_length[21] = false;\n    $prime_length[22] = true;\n   \
    \ $prime_length[23] = false;\n    $prime_length[24] = true;\n    $prime_length[25]\
    \ = false;\n    $prime_length[26] = true;\n    $prime_length[27] = false;\n  \
    \  $prime_length[28] = true;\n    $prime_length[29] = false;\n    $prime_length[30]\
    \ = true;\n    $prime_length[31] = false;\n    $prime_length[32] = true;\n   \
    \ $prime_length[33] = false;\n    $prime_length[34] = true;\n    $prime_length[35]\
    \ = false;\n    $prime_length[36] = true;\n    $prime_length[37] = false;\n  \
    \  $prime_length[38] = true;\n    $prime_length[39] = false;\n    $prime_length[40]\
    \ = true;\n    $prime_length[41] = false;\n    $prime_length[42] = true;\n   \
    \ $prime_length[43] = false;\n    $prime_length[44] = true;\n    $prime_length[45]\
    \ = false;\n    $prime_length[46] = true;\n    $prime_length[47] = false;\n  \
    \  $prime_length[48] = true;\n    $prime_length[49] = false;\n    $prime_length[50]\
    \ = true;\n    $prime_length[51] = false;\n    $prime_length[52] = true;\n   \
    \ $prime_length[53] = false;\n    $prime_length[54] = true;\n    $prime_length[55]\
    \ = false;\n    $prime_length[56] = true;\n    $prime_length[57] = false;\n  \
    \  $prime_length[58\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6mfxar7l.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    $prime_length_counter = 1;\n    for($i = 1; $i <= $prime_length;\
    \ $i++) {\n        if($string[$i] % $prime_length_counter == 0) {\n          \
    \  $prime_length_counter++;\n        } else {\n            $prime_length_counter\
    \ = 1;\n        }\n    }\n    if($prime_length_counter == $prime_length) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp76tyvph6.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp76tyvph6.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp76tyvph6.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp76tyvph6.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp76tyvph6.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76tyvph6.php:31\n\
    Stack trace:\n#0 /tmp/tmp76tyvph6.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp76tyvph6.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ldn23t1.php:18\n\
    Stack trace:\n#0 /tmp/tmp6ldn23t1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6ldn23t1.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 1; $i <= $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        } else {\n            break;\n\
    \        }\n    }\n    return $prime_length == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpg9hro16b.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpg9hro16b.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpg9hro16b.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9hro16b.php:26\n\
    Stack trace:\n#0 /tmp/tmpg9hro16b.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpg9hro16b.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    $prime_length2 = $prime_length / 2;\n    $prime_length3\
    \ = $prime_length2 / 2;\n    $prime_length4 = $prime_length3 / 2;\n    $prime_length5\
    \ = $prime_length4 / 2;\n    $prime_length6 = $prime_length5 / 2;\n    $prime_length7\
    \ = $prime_length6 / 2;\n    $prime_length8 = $prime_length7 / 2;\n    $prime_length9\
    \ = $prime_length8 / 2;\n    $prime_length10 = $prime_length9 / 2;\n    $prime_length11\
    \ = $prime_length10 / 2;\n    $prime_length12 = $prime_length11 / 2;\n    $prime_length13\
    \ = $prime_length12 / 2;\n    $prime_length14 = $prime_length13 / 2;\n    $prime_length15\
    \ = $prime_length14 / 2;\n    $prime_length16 = $prime_length15 / 2;\n    $prime_length17\
    \ = $prime_length16 / 2;\n    $prime_length18 = $prime_length17 / 2;\n    $prime_length19\
    \ = $prime_length18 / 2;\n    $prime_length20 = $prime_length19 / 2;\n    $prime_length21\
    \ = $prime_length20 / 2;\n    $prime_length22 = $prime_length21 / 2;\n    $prime_length23\
    \ = $prime_length22 / 2;\n    $prime_length24 = $prime_length23 / 2;\n    $prime_length25\
    \ = $prime_length24 / 2;\n    $prime_length26 = $prime_length25 / 2;\n    $prime_length27\
    \ = $prime_length26 / 2;\n    $prime_length28 = $prime_length27 / 2;\n    $prime_length29\
    \ = $prime_length28 / 2;\n    $prime_length30 = $prime_length29 / 2;\n    $prime_length31\
    \ = $prime_length30 / 2;\n    $prime_length32 = $prime_length31 / 2;\n    $prime_length33\
    \ = $prime_length32 / 2;\n    $prime_length34 = $prime_length33 / 2;\n    $prime_length35\
    \ = $prime_length34 / 2;\n    $prime_length36 = $prime_length35 / 2;\n    $prime_length37\
    \ = $prime_length36 / 2;\n    $prime_length38 = $prime_length37 / 2;\n    $prime_length39\
    \ = $prime_length38 / 2;\n    $prime_length40 = $prime_\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsqg4ft9z.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 1; $i <= $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        }\n    }\n    return $prime_length\
    \ == 0;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpf9ifg5e_.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpf9ifg5e_.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmpf9ifg5e_.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9ifg5e_.php:24\n\
    Stack trace:\n#0 /tmp/tmpf9ifg5e_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpf9ifg5e_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your logic here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp2u80fz6.php:17\n\
    Stack trace:\n#0 /tmp/tmpp2u80fz6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp2u80fz6.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_r5q8_ip.php:17\n\
    Stack trace:\n#0 /tmp/tmp_r5q8_ip.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_r5q8_ip.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpq9i6dw_8.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9i6dw_8.php:24\n\
    Stack trace:\n#0 /tmp/tmpq9i6dw_8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpq9i6dw_8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $primes\
    \ = array(2, 3, 5, 7);\n    foreach ($primes as $prime) {\n        if ($prime\
    \ > strlen($string)) {\n            continue;\n        }\n        if ($prime ==\
    \ strlen($string)) {\n            return true;\n        }\n        if ($string[$prime]\
    \ != $string[0]) {\n            return false;\n        }\n        $string = substr($string,\
    \ 1);\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkhffr7wv.php:31\n\
    Stack trace:\n#0 /tmp/tmpkhffr7wv.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkhffr7wv.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmv49klj7.php:17\n\
    Stack trace:\n#0 /tmp/tmpmv49klj7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmv49klj7.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpn_3in6zx.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_3in6zx.php:24\n\
    Stack trace:\n#0 /tmp/tmpn_3in6zx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn_3in6zx.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp_35a32s_.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_35a32s_.php:23\n\
    Stack trace:\n#0 /tmp/tmp_35a32s_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_35a32s_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8apc51t3.php:17\n\
    Stack trace:\n#0 /tmp/tmp8apc51t3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8apc51t3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5z8yobgm.php:17\n\
    Stack trace:\n#0 /tmp/tmp5z8yobgm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5z8yobgm.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $prime_numbers = array(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);\n    foreach\
    \ ($prime_numbers as $prime_number) {\n        if ($prime_number > strlen($string))\
    \ {\n            return false;\n        }\n        if ($prime_number == strlen($string))\
    \ {\n            return true;\n        }\n        if ($string[$prime_number] ==\
    \ $string[0]) {\n            return prime_length($string);\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n    $prime = true;\n    for($i = 0; $i < strlen($string); $i++) {\n\
    \        if($string[$i] % 2 == 0) {\n            $prime = false;\n           \
    \ break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4tinpfko.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tinpfko.php:26\n\
    Stack trace:\n#0 /tmp/tmp4tinpfko.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4tinpfko.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \      break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp8wxwld3u.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wxwld3u.php:26\n\
    Stack trace:\n#0 /tmp/tmp8wxwld3u.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8wxwld3u.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \  }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp7gjolljf.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp7gjolljf.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp7gjolljf.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp7gjolljf.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmp7gjolljf.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7gjolljf.php:25\n\
    Stack trace:\n#0 /tmp/tmp7gjolljf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7gjolljf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 0; $i < $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        }\n    }\n    return $prime_length\
    \ == 0;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp6vcimzmc.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp6vcimzmc.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp6vcimzmc.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vcimzmc.php:24\n\
    Stack trace:\n#0 /tmp/tmp6vcimzmc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6vcimzmc.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array(2, 3, 5, 7);\n    foreach ($prime_length as $prime_length) {\n     \
    \   if (strlen($string) == $prime_length) {\n            return true;\n      \
    \  }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmptwwynhmf.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwwynhmf.php:24\n\
    Stack trace:\n#0 /tmp/tmptwwynhmf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptwwynhmf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n    $prime = true;\n    for($i = 1; $i <= strlen($string); $i++)\
    \ {\n        if($string[$i] % 2 == 0) {\n            $prime = false;\n       \
    \     break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpv3b02ryk.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3b02ryk.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3b02ryk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpv3b02ryk.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukubr6db.php:17\n\
    Stack trace:\n#0 /tmp/tmpukubr6db.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpukubr6db.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length % $prime_number == 0) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vpdp4ki.php:24\n\
    Stack trace:\n#0 /tmp/tmp6vpdp4ki.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6vpdp4ki.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgyostmgn.php:17\n\
    Stack trace:\n#0 /tmp/tmpgyostmgn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgyostmgn.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 1; $i <= $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        } else {\n            break;\n\
    \        }\n    }\n    return $prime_length == 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp20i5wbph.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp20i5wbph.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp20i5wbph.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20i5wbph.php:26\n\
    Stack trace:\n#0 /tmp/tmp20i5wbph.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp20i5wbph.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgk__6m2.php:17\n\
    Stack trace:\n#0 /tmp/tmpwgk__6m2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwgk__6m2.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5g30scv.php:17\n\
    Stack trace:\n#0 /tmp/tmpo5g30scv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo5g30scv.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your solution here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9uvly_o.php:17\n\
    Stack trace:\n#0 /tmp/tmpt9uvly_o.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt9uvly_o.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4dv0ypj.php:17\n\
    Stack trace:\n#0 /tmp/tmpo4dv0ypj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo4dv0ypj.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your solution here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw59mr1nt.php:17\n\
    Stack trace:\n#0 /tmp/tmpw59mr1nt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw59mr1nt.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    $length = strlen($string);\n    for($i = 0; $i < $length; $i++)\
    \ {\n        if($string[$i] === \"1\") {\n            $prime = false;\n      \
    \      break;\n        }\n    }\n    return $prime;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk61uocv_.php:28\n\
    Stack trace:\n#0 /tmp/tmpk61uocv_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk61uocv_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqjv2b7_.php:17\n\
    Stack trace:\n#0 /tmp/tmpmqjv2b7_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmqjv2b7_.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvx5h4oot.php:17\n\
    Stack trace:\n#0 /tmp/tmpvx5h4oot.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvx5h4oot.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6qb_lqpw.php:17\n\
    Stack trace:\n#0 /tmp/tmp6qb_lqpw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6qb_lqpw.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8mk3j8u.php:17\n\
    Stack trace:\n#0 /tmp/tmpx8mk3j8u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpx8mk3j8u.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array();\n    $prime_length[0] = true;\n    $prime_length[1] = false;\n  \
    \  $prime_length[2] = true;\n    $prime_length[3] = false;\n    $prime_length[4]\
    \ = true;\n    $prime_length[5] = false;\n    $prime_length[6] = true;\n    $prime_length[7]\
    \ = false;\n    $prime_length[8] = true;\n    $prime_length[9] = false;\n    $prime_length[10]\
    \ = true;\n    $prime_length[11] = false;\n    $prime_length[12] = true;\n   \
    \ $prime_length[13] = false;\n    $prime_length[14] = true;\n    $prime_length[15]\
    \ = false;\n    $prime_length[16] = true;\n    $prime_length[17] = false;\n  \
    \  $prime_length[18] = true;\n    $prime_length[19] = false;\n    $prime_length[20]\
    \ = true;\n    $prime_length[21] = false;\n    $prime_length[22] = true;\n   \
    \ $prime_length[23] = false;\n    $prime_length[24] = true;\n    $prime_length[25]\
    \ = false;\n    $prime_length[26] = true;\n    $prime_length[27] = false;\n  \
    \  $prime_length[28] = true;\n    $prime_length[29] = false;\n    $prime_length[30]\
    \ = true;\n    $prime_length[31] = false;\n    $prime_length[32] = true;\n   \
    \ $prime_length[33] = false;\n    $prime_length[34] = true;\n    $prime_length[35]\
    \ = false;\n    $prime_length[36] = true;\n    $prime_length[37] = false;\n  \
    \  $prime_length[38] = true;\n    $prime_length[39] = false;\n    $prime_length[40]\
    \ = true;\n    $prime_length[41] = false;\n    $prime_length[42] = true;\n   \
    \ $prime_length[43] = false;\n    $prime_length[44] = true;\n    $prime_length[45]\
    \ = false;\n    $prime_length[46] = true;\n    $prime_length[47] = false;\n  \
    \  $prime_length[48] = true;\n    $prime_length[49] = false;\n    $prime_length[50]\
    \ = true;\n    $prime_length[51] = false;\n    $prime_length[52] = true;\n   \
    \ $prime_length[53] = false;\n    $prime_length[54] = true;\n    $prime_length[55]\
    \ = false;\n    $prime_length[56] = true;\n    $prime_length[57] = false;\n  \
    \  $prime_length[58\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjhqla_z8.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $prime_length = strlen($string);\n    $prime_array\
    \ = array();\n    for ($i = 0; $i < $prime_length; $i++) {\n        $prime_array[]\
    \ = $string[$i];\n    }\n    $prime_array = array_unique($prime_array);\n    $prime_array\
    \ = array_filter($prime_array);\n    $prime_array = array_values($prime_array);\n\
    \    $prime_array = array_count_values($prime_array);\n    foreach ($prime_array\
    \ as $key => $value) {\n        if ($value == 1) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiz0t8toc.php:33\n\
    Stack trace:\n#0 /tmp/tmpiz0t8toc.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpiz0t8toc.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array();\n    $prime_length[0] = true;\n    $prime_length[1] = true;\n   \
    \ $prime_length[2] = true;\n    $prime_length[3] = true;\n    $prime_length[4]\
    \ = true;\n    $prime_length[5] = true;\n    $prime_length[6] = true;\n    $prime_length[7]\
    \ = true;\n    $prime_length[8] = true;\n    $prime_length[9] = true;\n    $prime_length[10]\
    \ = true;\n    $prime_length[11] = true;\n    $prime_length[12] = true;\n    $prime_length[13]\
    \ = true;\n    $prime_length[14] = true;\n    $prime_length[15] = true;\n    $prime_length[16]\
    \ = true;\n    $prime_length[17] = true;\n    $prime_length[18] = true;\n    $prime_length[19]\
    \ = true;\n    $prime_length[20] = true;\n    $prime_length[21] = true;\n    $prime_length[22]\
    \ = true;\n    $prime_length[23] = true;\n    $prime_length[24] = true;\n    $prime_length[25]\
    \ = true;\n    $prime_length[26] = true;\n    $prime_length[27] = true;\n    $prime_length[28]\
    \ = true;\n    $prime_length[29] = true;\n    $prime_length[30] = true;\n    $prime_length[31]\
    \ = true;\n    $prime_length[32] = true;\n    $prime_length[33] = true;\n    $prime_length[34]\
    \ = true;\n    $prime_length[35] = true;\n    $prime_length[36] = true;\n    $prime_length[37]\
    \ = true;\n    $prime_length[38] = true;\n    $prime_length[39] = true;\n    $prime_length[40]\
    \ = true;\n    $prime_length[41] = true;\n    $prime_length[42] = true;\n    $prime_length[43]\
    \ = true;\n    $prime_length[44] = true;\n    $prime_length[45] = true;\n    $prime_length[46]\
    \ = true;\n    $prime_length[47] = true;\n    $prime_length[48] = true;\n    $prime_length[49]\
    \ = true;\n    $prime_length[50] = true;\n    $prime_length[51] = true;\n    $prime_length[52]\
    \ = true;\n    $prime_length[53] = true;\n    $prime_length[54] = true;\n    $prime_length[55]\
    \ = true;\n    $prime_length[56] = true;\n    $prime_length[57] = true;\n    $prime_length[58\n\
    function candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk0wczzov.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ahcnc2c.php:17\n\
    Stack trace:\n#0 /tmp/tmp0ahcnc2c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0ahcnc2c.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwi_llm2.php:17\n\
    Stack trace:\n#0 /tmp/tmpnwi_llm2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnwi_llm2.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_5lxnf3.php:17\n\
    Stack trace:\n#0 /tmp/tmpl_5lxnf3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpl_5lxnf3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgizao5f.php:17\n\
    Stack trace:\n#0 /tmp/tmptgizao5f.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptgizao5f.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array();\n    $prime_length[0] = true;\n    $prime_length[1] = true;\n   \
    \ $prime_length[2] = true;\n    $prime_length[3] = true;\n    $prime_length[4]\
    \ = true;\n    $prime_length[5] = true;\n    $prime_length[6] = true;\n    $prime_length[7]\
    \ = true;\n    $prime_length[8] = true;\n    $prime_length[9] = true;\n    $prime_length[10]\
    \ = true;\n    $prime_length[11] = true;\n    $prime_length[12] = true;\n    $prime_length[13]\
    \ = true;\n    $prime_length[14] = true;\n    $prime_length[15] = true;\n    $prime_length[16]\
    \ = true;\n    $prime_length[17] = true;\n    $prime_length[18] = true;\n    $prime_length[19]\
    \ = true;\n    $prime_length[20] = true;\n    $prime_length[21] = true;\n    $prime_length[22]\
    \ = true;\n    $prime_length[23] = true;\n    $prime_length[24] = true;\n    $prime_length[25]\
    \ = true;\n    $prime_length[26] = true;\n    $prime_length[27] = true;\n    $prime_length[28]\
    \ = true;\n    $prime_length[29] = true;\n    $prime_length[30] = true;\n    $prime_length[31]\
    \ = true;\n    $prime_length[32] = true;\n    $prime_length[33] = true;\n    $prime_length[34]\
    \ = true;\n    $prime_length[35] = true;\n    $prime_length[36] = true;\n    $prime_length[37]\
    \ = true;\n    $prime_length[38] = true;\n    $prime_length[39] = true;\n    $prime_length[40]\
    \ = true;\n    $prime_length[41] = true;\n    $prime_length[42] = true;\n    $prime_length[43]\
    \ = true;\n    $prime_length[44] = true;\n    $prime_length[45] = true;\n    $prime_length[46]\
    \ = true;\n    $prime_length[47] = true;\n    $prime_length[48] = true;\n    $prime_length[49]\
    \ = true;\n    $prime_length[50] = true;\n    $prime_length[51] = true;\n    $prime_length[52]\
    \ = true;\n    $prime_length[53] = true;\n    $prime_length[54] = true;\n    $prime_length[55]\
    \ = true;\n    $prime_length[56] = true;\n    $prime_length[57] = true;\n    $prime_length[58\n\
    function candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyrxssnil.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $primes = array(2, 3, 5, 7);\n    $length = strlen($string);\n\
    \    \n    foreach ($primes as $prime) {\n        if ($length == $prime) {\n \
    \           return true;\n        }\n    }\n    \n    return false;\n}\nfunction\
    \ candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i=2; $i<$length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpwz6vfvau.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwz6vfvau.php:24\n\
    Stack trace:\n#0 /tmp/tmpwz6vfvau.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwz6vfvau.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9r0e_0q.php:17\n\
    Stack trace:\n#0 /tmp/tmpi9r0e_0q.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi9r0e_0q.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i=2; $i<$length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpukh0befr.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukh0befr.php:24\n\
    Stack trace:\n#0 /tmp/tmpukh0befr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpukh0befr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your solution here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoe6tm7fo.php:17\n\
    Stack trace:\n#0 /tmp/tmpoe6tm7fo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoe6tm7fo.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your solution here\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0lplje7g.php:18\n\
    Stack trace:\n#0 /tmp/tmp0lplje7g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0lplje7g.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ynfvny3.php:17\n\
    Stack trace:\n#0 /tmp/tmp7ynfvny3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7ynfvny3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8o83ctb0.php:17\n\
    Stack trace:\n#0 /tmp/tmp8o83ctb0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8o83ctb0.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your logic here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwzo_iam.php:17\n\
    Stack trace:\n#0 /tmp/tmpmwzo_iam.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmwzo_iam.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp3kergg_t.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kergg_t.php:24\n\
    Stack trace:\n#0 /tmp/tmp3kergg_t.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3kergg_t.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 1; $i <= $length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpaxzl2ks1.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxzl2ks1.php:24\n\
    Stack trace:\n#0 /tmp/tmpaxzl2ks1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpaxzl2ks1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2olrkte.php:17\n\
    Stack trace:\n#0 /tmp/tmpg2olrkte.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg2olrkte.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprywevmlj.php:17\n\
    Stack trace:\n#0 /tmp/tmprywevmlj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprywevmlj.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpmz9abd0p.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmz9abd0p.php:24\n\
    Stack trace:\n#0 /tmp/tmpmz9abd0p.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmz9abd0p.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    foreach ($prime_numbers as $prime_number) {\n    \
    \    if (strlen($string) == $prime_number) {\n            return true;\n     \
    \   }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    foreach ($prime_numbers\
    \ as $prime_number) {\n        if ($length == $prime_number) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array();\n    $prime_length[0] = true;\n    $prime_length[1] = false;\n  \
    \  $prime_length[2] = true;\n    $prime_length[3] = false;\n    $prime_length[4]\
    \ = true;\n    $prime_length[5] = false;\n    $prime_length[6] = true;\n    $prime_length[7]\
    \ = false;\n    $prime_length[8] = true;\n    $prime_length[9] = false;\n    $prime_length[10]\
    \ = true;\n    $prime_length[11] = false;\n    $prime_length[12] = true;\n   \
    \ $prime_length[13] = false;\n    $prime_length[14] = true;\n    $prime_length[15]\
    \ = false;\n    $prime_length[16] = true;\n    $prime_length[17] = false;\n  \
    \  $prime_length[18] = true;\n    $prime_length[19] = false;\n    $prime_length[20]\
    \ = true;\n    $prime_length[21] = false;\n    $prime_length[22] = true;\n   \
    \ $prime_length[23] = false;\n    $prime_length[24] = true;\n    $prime_length[25]\
    \ = false;\n    $prime_length[26] = true;\n    $prime_length[27] = false;\n  \
    \  $prime_length[28] = true;\n    $prime_length[29] = false;\n    $prime_length[30]\
    \ = true;\n    $prime_length[31] = false;\n    $prime_length[32] = true;\n   \
    \ $prime_length[33] = false;\n    $prime_length[34] = true;\n    $prime_length[35]\
    \ = false;\n    $prime_length[36] = true;\n    $prime_length[37] = false;\n  \
    \  $prime_length[38] = true;\n    $prime_length[39] = false;\n    $prime_length[40]\
    \ = true;\n    $prime_length[41] = false;\n    $prime_length[42] = true;\n   \
    \ $prime_length[43] = false;\n    $prime_length[44] = true;\n    $prime_length[45]\
    \ = false;\n    $prime_length[46] = true;\n    $prime_length[47] = false;\n  \
    \  $prime_length[48] = true;\n    $prime_length[49] = false;\n    $prime_length[50]\
    \ = true;\n    $prime_length[51] = false;\n    $prime_length[52] = true;\n   \
    \ $prime_length[53] = false;\n    $prime_length[54] = true;\n    $prime_length[55]\
    \ = false;\n    $prime_length[56] = true;\n    $prime_length[57] = false;\n  \
    \  $prime_length[58\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpztokb2gn.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array();\n    $prime_length[0] = true;\n    $prime_length[1] = false;\n  \
    \  $prime_length[2] = true;\n    $prime_length[3] = false;\n    $prime_length[4]\
    \ = true;\n    $prime_length[5] = false;\n    $prime_length[6] = true;\n    $prime_length[7]\
    \ = false;\n    $prime_length[8] = true;\n    $prime_length[9] = false;\n    $prime_length[10]\
    \ = true;\n    $prime_length[11] = false;\n    $prime_length[12] = true;\n   \
    \ $prime_length[13] = false;\n    $prime_length[14] = true;\n    $prime_length[15]\
    \ = false;\n    $prime_length[16] = true;\n    $prime_length[17] = false;\n  \
    \  $prime_length[18] = true;\n    $prime_length[19] = false;\n    $prime_length[20]\
    \ = true;\n    $prime_length[21] = false;\n    $prime_length[22] = true;\n   \
    \ $prime_length[23] = false;\n    $prime_length[24] = true;\n    $prime_length[25]\
    \ = false;\n    $prime_length[26] = true;\n    $prime_length[27] = false;\n  \
    \  $prime_length[28] = true;\n    $prime_length[29] = false;\n    $prime_length[30]\
    \ = true;\n    $prime_length[31] = false;\n    $prime_length[32] = true;\n   \
    \ $prime_length[33] = false;\n    $prime_length[34] = true;\n    $prime_length[35]\
    \ = false;\n    $prime_length[36] = true;\n    $prime_length[37] = false;\n  \
    \  $prime_length[38] = true;\n    $prime_length[39] = false;\n    $prime_length[40]\
    \ = true;\n    $prime_length[41] = false;\n    $prime_length[42] = true;\n   \
    \ $prime_length[43] = false;\n    $prime_length[44] = true;\n    $prime_length[45]\
    \ = false;\n    $prime_length[46] = true;\n    $prime_length[47] = false;\n  \
    \  $prime_length[48] = true;\n    $prime_length[49] = false;\n    $prime_length[50]\
    \ = true;\n    $prime_length[51] = false;\n    $prime_length[52] = true;\n   \
    \ $prime_length[53] = false;\n    $prime_length[54] = true;\n    $prime_length[55]\
    \ = false;\n    $prime_length[56] = true;\n    $prime_length[57] = false;\n  \
    \  $prime_length[58\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqbf3t9g_.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $primes\
    \ = array(2, 3, 5, 7);\n    foreach ($primes as $prime) {\n        if (strlen($string)\
    \ == $prime) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx08ucof4.php:17\n\
    Stack trace:\n#0 /tmp/tmpx08ucof4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpx08ucof4.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = true;\n    for($i = 1; $i <= strlen($string); $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length = false;\n            break;\n      \
    \  }\n    }\n    return $prime_length;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp7uo5a_6c.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7uo5a_6c.php:25\n\
    Stack trace:\n#0 /tmp/tmp7uo5a_6c.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7uo5a_6c.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbsw0sfj.php:18\n\
    Stack trace:\n#0 /tmp/tmpcbsw0sfj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcbsw0sfj.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpz4m65gh3.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4m65gh3.php:24\n\
    Stack trace:\n#0 /tmp/tmpz4m65gh3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpz4m65gh3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpx_f6b8pu.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_f6b8pu.php:24\n\
    Stack trace:\n#0 /tmp/tmpx_f6b8pu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx_f6b8pu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 1; $i <= $prime_length; $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime_length--;\n        }\n    }\n    return $prime_length\
    \ == 0;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp_vtmdsxr.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp_vtmdsxr.php on line\
    \ 12\n\nWarning: A non-numeric value encountered in /tmp/tmp_vtmdsxr.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vtmdsxr.php:23\n\
    Stack trace:\n#0 /tmp/tmp_vtmdsxr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_vtmdsxr.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7);\n    $length = strlen($string);\n    for($i = 0; $i < $length;\
    \ $i++) {\n        $current_char = $string[$i];\n        if(in_array($current_char,\
    \ $prime_numbers)) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kdonmrs.php:26\n\
    Stack trace:\n#0 /tmp/tmp1kdonmrs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1kdonmrs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = true;\n    $length = strlen($string);\n    for($i = 1; $i <= $length; $i++)\
    \ {\n        if($string[$i] % 2 == 0) {\n            $prime_length = false;\n\
    \        }\n    }\n    return $prime_length;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpk05y1olc.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpk05y1olc.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpk05y1olc.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpk05y1olc.php on line\
    \ 13\n\nWarning: A non-numeric value encountered in /tmp/tmpk05y1olc.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk05y1olc.php:25\n\
    Stack trace:\n#0 /tmp/tmpk05y1olc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk05y1olc.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your logic here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp77ojpw1n.php:17\n\
    Stack trace:\n#0 /tmp/tmp77ojpw1n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp77ojpw1n.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $length = strlen($string);\n    for($i = 2; $i <=\
    \ $length; $i++) {\n        if($string[$i] === \"a\" || $string[$i] === \"e\"\
    \ || $string[$i] === \"i\" || $string[$i] === \"o\" || $string[$i] === \"u\")\
    \ {\n            $length--;\n        }\n    }\n    return $length === 0;\n}\n\n\
    function candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpinf39vhj.php:25\n\
    Stack trace:\n#0 /tmp/tmpinf39vhj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpinf39vhj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpzx056fas.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzx056fas.php:23\n\
    Stack trace:\n#0 /tmp/tmpzx056fas.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzx056fas.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_qabpkz.php:18\n\
    Stack trace:\n#0 /tmp/tmpf_qabpkz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf_qabpkz.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array();\n    $prime_length[0] = true;\n    $prime_length[1] = false;\n  \
    \  $prime_length[2] = true;\n    $prime_length[3] = false;\n    $prime_length[4]\
    \ = true;\n    $prime_length[5] = false;\n    $prime_length[6] = true;\n    $prime_length[7]\
    \ = false;\n    $prime_length[8] = true;\n    $prime_length[9] = false;\n    $prime_length[10]\
    \ = true;\n    $prime_length[11] = false;\n    $prime_length[12] = true;\n   \
    \ $prime_length[13] = false;\n    $prime_length[14] = true;\n    $prime_length[15]\
    \ = false;\n    $prime_length[16] = true;\n    $prime_length[17] = false;\n  \
    \  $prime_length[18] = true;\n    $prime_length[19] = false;\n    $prime_length[20]\
    \ = true;\n    $prime_length[21] = false;\n    $prime_length[22] = true;\n   \
    \ $prime_length[23] = false;\n    $prime_length[24] = true;\n    $prime_length[25]\
    \ = false;\n    $prime_length[26] = true;\n    $prime_length[27] = false;\n  \
    \  $prime_length[28] = true;\n    $prime_length[29] = false;\n    $prime_length[30]\
    \ = true;\n    $prime_length[31] = false;\n    $prime_length[32] = true;\n   \
    \ $prime_length[33] = false;\n    $prime_length[34] = true;\n    $prime_length[35]\
    \ = false;\n    $prime_length[36] = true;\n    $prime_length[37] = false;\n  \
    \  $prime_length[38] = true;\n    $prime_length[39] = false;\n    $prime_length[40]\
    \ = true;\n    $prime_length[41] = false;\n    $prime_length[42] = true;\n   \
    \ $prime_length[43] = false;\n    $prime_length[44] = true;\n    $prime_length[45]\
    \ = false;\n    $prime_length[46] = true;\n    $prime_length[47] = false;\n  \
    \  $prime_length[48] = true;\n    $prime_length[49] = false;\n    $prime_length[50]\
    \ = true;\n    $prime_length[51] = false;\n    $prime_length[52] = true;\n   \
    \ $prime_length[53] = false;\n    $prime_length[54] = true;\n    $prime_length[55]\
    \ = false;\n    $prime_length[56] = true;\n    $prime_length[57] = false;\n  \
    \  $prime_length[58\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk50jer1w.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcvei_9i6.php:17\n\
    Stack trace:\n#0 /tmp/tmpcvei_9i6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpcvei_9i6.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n    $prime = true;\n    for($i = 1; $i <= strlen($string);\
    \ $i++) {\n        if($string[$i] % 2 == 0) {\n            $prime = false;\n \
    \           break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfn_90h00.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfn_90h00.php:26\n\
    Stack trace:\n#0 /tmp/tmpfn_90h00.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfn_90h00.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 1; $i <= $length; $i++)\
    \ {\n        if ($string[$i] % 2 == 0) {\n            $prime = false;\n      \
    \      break;\n        }\n    }\n    return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp7j0ppwpd.php on line\
    \ 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7j0ppwpd.php:26\n\
    Stack trace:\n#0 /tmp/tmp7j0ppwpd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp7j0ppwpd.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97);\n    foreach ($prime_numbers as $prime_number)\
    \ {\n        if ($prime_number == 1) {\n            continue;\n        }\n   \
    \     if ($string == $prime_number) {\n            return true;\n        }\n \
    \       if ($string{0} != $prime_number) {\n            $string = $prime_number\
    \ . $string;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8eeq6mk.php:29\n\
    Stack trace:\n#0 /tmp/tmpf8eeq6mk.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpf8eeq6mk.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    for($i = 0; $i < $prime_length; $i++) {\n        if($string[$i]\
    \ === \"1\") {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpguyozkzx.php:26\n\
    Stack trace:\n#0 /tmp/tmpguyozkzx.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpguyozkzx.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = array();\n    $prime_length[0] = true;\n    $prime_length[1] = false;\n  \
    \  $prime_length[2] = true;\n    $prime_length[3] = false;\n    $prime_length[4]\
    \ = true;\n    $prime_length[5] = false;\n    $prime_length[6] = true;\n    $prime_length[7]\
    \ = false;\n    $prime_length[8] = true;\n    $prime_length[9] = false;\n    $prime_length[10]\
    \ = true;\n    $prime_length[11] = false;\n    $prime_length[12] = true;\n   \
    \ $prime_length[13] = false;\n    $prime_length[14] = true;\n    $prime_length[15]\
    \ = false;\n    $prime_length[16] = true;\n    $prime_length[17] = false;\n  \
    \  $prime_length[18] = true;\n    $prime_length[19] = false;\n    $prime_length[20]\
    \ = true;\n    $prime_length[21] = false;\n    $prime_length[22] = true;\n   \
    \ $prime_length[23] = false;\n    $prime_length[24] = true;\n    $prime_length[25]\
    \ = false;\n    $prime_length[26] = true;\n    $prime_length[27] = false;\n  \
    \  $prime_length[28] = true;\n    $prime_length[29] = false;\n    $prime_length[30]\
    \ = true;\n    $prime_length[31] = false;\n    $prime_length[32] = true;\n   \
    \ $prime_length[33] = false;\n    $prime_length[34] = true;\n    $prime_length[35]\
    \ = false;\n    $prime_length[36] = true;\n    $prime_length[37] = false;\n  \
    \  $prime_length[38] = true;\n    $prime_length[39] = false;\n    $prime_length[40]\
    \ = true;\n    $prime_length[41] = false;\n    $prime_length[42] = true;\n   \
    \ $prime_length[43] = false;\n    $prime_length[44] = true;\n    $prime_length[45]\
    \ = false;\n    $prime_length[46] = true;\n    $prime_length[47] = false;\n  \
    \  $prime_length[48] = true;\n    $prime_length[49] = false;\n    $prime_length[50]\
    \ = true;\n    $prime_length[51] = false;\n    $prime_length[52] = true;\n   \
    \ $prime_length[53] = false;\n    $prime_length[54] = true;\n    $prime_length[55]\
    \ = false;\n    $prime_length[56] = true;\n    $prime_length[57] = false;\n  \
    \  $prime_length[58\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0owbfeu_.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime\
    \ = true;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i]\
    \ % 2 == 0) {\n            $prime = false;\n            break;\n        }\n  \
    \  }\n    return $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpcgz9emrh.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgz9emrh.php:25\n\
    Stack trace:\n#0 /tmp/tmpcgz9emrh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcgz9emrh.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_hynpzc.php:17\n\
    Stack trace:\n#0 /tmp/tmp5_hynpzc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5_hynpzc.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo66vcaoa.php:17\n\
    Stack trace:\n#0 /tmp/tmpo66vcaoa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo66vcaoa.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdi77l1r.php:17\n\
    Stack trace:\n#0 /tmp/tmpjdi77l1r.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjdi77l1r.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_numbers\
    \ = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97);\n    $length = strlen($string);\n    for($i = 0;\
    \ $i < $length; $i++) {\n        if(in_array($string[$i], $prime_numbers)) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3fhbecm.php:24\n\
    Stack trace:\n#0 /tmp/tmpl3fhbecm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpl3fhbecm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i = 2; $i <= $length; $i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpd5msdf2h.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5msdf2h.php:24\n\
    Stack trace:\n#0 /tmp/tmpd5msdf2h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpd5msdf2h.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $prime_length\
    \ = strlen($string);\n    $prime_length2 = $prime_length / 2;\n    $prime_length3\
    \ = $prime_length2 / 2;\n    $prime_length4 = $prime_length3 / 2;\n    $prime_length5\
    \ = $prime_length4 / 2;\n    $prime_length6 = $prime_length5 / 2;\n    $prime_length7\
    \ = $prime_length6 / 2;\n    $prime_length8 = $prime_length7 / 2;\n    $prime_length9\
    \ = $prime_length8 / 2;\n    $prime_length10 = $prime_length9 / 2;\n    $prime_length11\
    \ = $prime_length10 / 2;\n    $prime_length12 = $prime_length11 / 2;\n    $prime_length13\
    \ = $prime_length12 / 2;\n    $prime_length14 = $prime_length13 / 2;\n    $prime_length15\
    \ = $prime_length14 / 2;\n    $prime_length16 = $prime_length15 / 2;\n    $prime_length17\
    \ = $prime_length16 / 2;\n    $prime_length18 = $prime_length17 / 2;\n    $prime_length19\
    \ = $prime_length18 / 2;\n    $prime_length20 = $prime_length19 / 2;\n    $prime_length21\
    \ = $prime_length20 / 2;\n    $prime_length22 = $prime_length21 / 2;\n    $prime_length23\
    \ = $prime_length22 / 2;\n    $prime_length24 = $prime_length23 / 2;\n    $prime_length25\
    \ = $prime_length24 / 2;\n    $prime_length26 = $prime_length25 / 2;\n    $prime_length27\
    \ = $prime_length26 / 2;\n    $prime_length28 = $prime_length27 / 2;\n    $prime_length29\
    \ = $prime_length28 / 2;\n    $prime_length30 = $prime_length29 / 2;\n    $prime_length31\
    \ = $prime_length30 / 2;\n    $prime_length32 = $prime_length31 / 2;\n    $prime_length33\
    \ = $prime_length32 / 2;\n    $prime_length34 = $prime_length33 / 2;\n    $prime_length35\
    \ = $prime_length34 / 2;\n    $prime_length36 = $prime_length35 / 2;\n    $prime_length37\
    \ = $prime_length36 / 2;\n    $prime_length38 = $prime_length37 / 2;\n    $prime_length39\
    \ = $prime_length38 / 2;\n    $prime_length40 = $prime_\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbkr44647.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $length = strlen($string);\n    for($i = 0; $i <\
    \ $length; $i++) {\n        if($string[$i] !== 'a' && $string[$i] !== 'e' && $string[$i]\
    \ !== 'i' && $string[$i] !== 'o' && $string[$i] !== 'u') {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47rzo0bu.php:25\n\
    Stack trace:\n#0 /tmp/tmp47rzo0bu.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp47rzo0bu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for($i=2;$i<$length;$i++) {\n        if($string[$i]\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4xk1e6kz.php on line\
    \ 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xk1e6kz.php:24\n\
    Stack trace:\n#0 /tmp/tmp4xk1e6kz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4xk1e6kz.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $length = strlen($string);\n    $prime = true;\n\
    \    for ($i = 1; $i <= $length; $i++) {\n        if ($string[$i] !== '.') {\n\
    \            $prime = false;\n            break;\n        }\n    }\n    return\
    \ $prime;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt33mtbes.php:27\n\
    Stack trace:\n#0 /tmp/tmpt33mtbes.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpt33mtbes.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string\
    \ = strtolower($string);\n    $length = strlen($string);\n    for($i = 2; $i <=\
    \ $length; $i++) {\n        if($string[$i] === '1') {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqtfx64s.php:28\n\
    Stack trace:\n#0 /tmp/tmpuqtfx64s.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuqtfx64s.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    // Write\
    \ your PHP implementation here\n}\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqc36hpek.php:17\n\
    Stack trace:\n#0 /tmp/tmpqc36hpek.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqc36hpek.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception

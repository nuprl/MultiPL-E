name: HumanEval_27_flip_case
language: php
results:
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '{' => '{', '}' =>\
    \ '}')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnapkiu1.php:15\n\
    Stack trace:\n#0 /tmp/tmpfnapkiu1.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpfnapkiu1.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtoupper($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7lxhwiul.php:15\n\
    Stack trace:\n#0 /tmp/tmp7lxhwiul.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp7lxhwiul.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprjniouvp.php:15\n\
    Stack trace:\n#0 /tmp/tmprjniouvp.php(19): test()\n#1 {main}\n  thrown in /tmp/tmprjniouvp.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/([a-z])/', '$U$1$1', $string);\n}\n</code>\n<|/\
    \ a tags=php,string,regex |>\n<| c |>\nThis doesn't work. `preg_replace` doesn't\
    \ support lookbehinds.\n<|/ c |>\n<| c |>\n: It does. Look at the [docs](http://php.net/manual/en/function.preg-replace.php).\n\
    <|/ c |>\n<| c |>\n: It does. Look at the [docs](http://php.net/manual/en/function.preg-replace.php).\n\
    <|/ c |>\n<| c |>\n: It does. Look at the [docs](http://php.net/manual/en/function.preg-replace.php).\n\
    <|/ c |>\n<| c |>\n: It does. Look at the [docs](http://php.net/manual/en/function.preg-replace.php).\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$string = preg_replace('/(?<=\\p{Ll})\\p{Ll}/u',\
    \ 'u', $string);\n</code>\n<|/ a tags=php,string,regex |>\n<| c |>\nThis doesn't\
    \ work. `preg_replace` doesn't support lookbehinds.\n<|/ c |>\n<| c |>\n: It does.\
    \ Look at the [docs](http://php.net/manual/en/function.preg-replace.php).\n<|/\
    \ c |>\n<| c |>\n: It does. Look at the [docs](http://php.net/manual/en/function.preg-replace.php).\n\
    <|/ c |>\n<| c |>\n: It does. Look at the [docs](http://php.net/manual/en/function.preg-replace.php).\n\
    <|/ c |>\n<| c |>\n: It does. Look at the [docs](http://php.net/manual/en/function.preg-replace.php).\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$string = preg_replace('/(?<=\\p{Ll})\\p{Ll}/u',\
    \ 'u', $string);\n</code>\n<|/ a tags=php,string,regex |>\n<| c |>\nThis doesn't\
    \ work. `preg_replace` doesn't support lookbehinds.\n<|/ \nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmph1vpd0bt.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpay8n6yhq.php:15\n\
    Stack trace:\n#0 /tmp/tmpay8n6yhq.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpay8n6yhq.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbobu0ei6.php:15\n\
    Stack trace:\n#0 /tmp/tmpbobu0ei6.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpbobu0ei6.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2jwb_bi.php:15\n\
    Stack trace:\n#0 /tmp/tmpj2jwb_bi.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpj2jwb_bi.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n</code>\n<|/ a tags=php,regex |>\n<| c |>\nI like this solution, it's very\
    \ elegant. However it fails for `'\xDF'` which should be `'SS'`.\n<|/ c |>\n<|\
    \ c |>\nI added a fix for that case\n<|/ c |>\n<| a dscore=2 |>\nThis should work:\n\
    <code>\n$string = '\xDF';\n$string = preg_replace('/[^A-Za-z]/', '', $string);\n\
    $string = preg_replace('/[^A-Z]/', '', $string);\n$string = preg_replace('/[^a-z]/',\
    \ '', $string);\n</code>\n<|/ a tags=php,regex |>\n<| c |>\nThis fails for `'\xDF\
    '` which should be `'SS'`.\n<|/ c |>\n<| c |>\nThis fails for `'\xDF'` which should\
    \ be `'SS'`.\n<|/ c |>\n<| c |>\nThis fails for `'\xDF'` which should be `'SS'`.\n\
    <|/ c |>\n<| c |>\nThis fails for `'\xDF'` which should be `'SS'`.\n<|/ c |>\n\
    <| c |>\nThis fails for `'\xDF'` which should be `'SS'`.\n<|/ c |>\n<| a tags=php,regex\
    \ |>\n<code>\n$string = '\xDF';\n$string = preg_replace('/[^A-Za-z]/', '', $string);\n\
    $string = preg_replace('/[^A-Z]/', '', $string);\n$string = preg_replace('/[^a-z]/',\
    \ '', $string);\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis fails for `'\xDF'`\
    \ which should be `'SS'`.\n<|/ c |>\n<| c |>\nThis fails for `'\xDF'` which should\
    \ be `'SS'`.\n<|/ c |>\n<| c |>\nThis fails for `'\xDF'` which should be `'SS'`.\n\
    <|/ c |>\n<| c |>\nThis fails for `'\xDF'` which should be `'SS'`.\n<|/ c |>\n\
    <| a tags=php,regex |>\n<code>\n$string = '\xDF';\n$string = preg_replace('/[^A-Za-z]/',\
    \ '', $string);\n$\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz9njzdwq.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ee080o5.php:15\n\
    Stack trace:\n#0 /tmp/tmp6ee080o5.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp6ee080o5.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpszjc28wm.php:15\n\
    Stack trace:\n#0 /tmp/tmpszjc28wm.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpszjc28wm.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtoupper($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnsslj7ic.php:15\n\
    Stack trace:\n#0 /tmp/tmpnsslj7ic.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpnsslj7ic.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ojcx76f.php:15\n\
    Stack trace:\n#0 /tmp/tmp9ojcx76f.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp9ojcx76f.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', $string);\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdk2zgci5.php:14\n\
    Stack trace:\n#0 /tmp/tmpdk2zgci5.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpdk2zgci5.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\\\\\'', '\"' => '\\\\\"', '\\\\' => '\\\\\\\\', \"'\" => '\\\\\\'', \"\
    \\n\" => '\\\\n', '\\r' => '\\\\r', \"\\t\" => '\\\\t')));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyjw0a9c.php:15\n\
    Stack trace:\n#0 /tmp/tmpnyjw0a9c.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpnyjw0a9c.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/', '$1', $string));\n}\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vvzxj0p.php:14\n\
    Stack trace:\n#0 /tmp/tmp6vvzxj0p.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp6vvzxj0p.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace(['a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\
    \ 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z'],\n        ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'],\n\
    \        $string)));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdchss4c.php:17\n\
    Stack trace:\n#0 /tmp/tmppdchss4c.php(21): test()\n#1 {main}\n  thrown in /tmp/tmppdchss4c.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo8f5lsr.php:15\n\
    Stack trace:\n#0 /tmp/tmpbo8f5lsr.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpbo8f5lsr.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '[' => '[', ']' => ']', '{' =>\
    \ '{', '}' => '}'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8adpw9zu.php:15\n\
    Stack trace:\n#0 /tmp/tmp8adpw9zu.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp8adpw9zu.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ysrobi4.php:14\n\
    Stack trace:\n#0 /tmp/tmp8ysrobi4.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp8ysrobi4.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a tags=string,php\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a tags=string,php\
    \ |>\n<| a |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a dscore=1 tags=string,php\
    \ |>\n<| a tags=string,php |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a tags=string,php\
    \ |>\n<| a tags=string,php |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=string,php |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=string,php |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a tags=string,php\
    \ |>\n<| a dscore=1 |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/./u',\
    \ 'u', $string);\n$string = strtoupper($string);\n</code>\n<|/ a \nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzz1pb028.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n</code>\n<|/ a tags=php,string,regex |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $string = 'Hello World';\n$string = preg_replace('/./u', 'u', strtolower($string));\n\
    echo $string;\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5p_lgvwj.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '\\\\' => '\\\\\\\\')));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps14yvwo9.php:14\n\
    Stack trace:\n#0 /tmp/tmps14yvwo9.php(18): test()\n#1 {main}\n  thrown in /tmp/tmps14yvwo9.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '[' => '[', ']' => ']', '{' =>\
    \ '{', '}' => '}'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb9ie6p6.php:15\n\
    Stack trace:\n#0 /tmp/tmptb9ie6p6.php(19): test()\n#1 {main}\n  thrown in /tmp/tmptb9ie6p6.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/\\B([a-z])/', '$U\\1', $string);\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx79q87_f.php:15\n\
    Stack trace:\n#0 /tmp/tmpx79q87_f.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpx79q87_f.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '\\\\1', $string));\n}\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu95u0j20.php:14\n\
    Stack trace:\n#0 /tmp/tmpu95u0j20.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpu95u0j20.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqc3rk778.php:15\n\
    Stack trace:\n#0 /tmp/tmpqc3rk778.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpqc3rk778.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\''))\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp678vr5qf.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr(strtolower($string), array_flip(range(65, 91)));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygcx_ypj.php:15\n\
    Stack trace:\n#0 /tmp/tmpygcx_ypj.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpygcx_ypj.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '$1', $string));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjj3k738c.php:15\n\
    Stack trace:\n#0 /tmp/tmpjj3k738c.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpjj3k738c.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee0wy7k1.php:15\n\
    Stack trace:\n#0 /tmp/tmpee0wy7k1.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpee0wy7k1.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rsbbcoo.php:15\n\
    Stack trace:\n#0 /tmp/tmp5rsbbcoo.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp5rsbbcoo.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnx0yzj8.php:14\n\
    Stack trace:\n#0 /tmp/tmpxnx0yzj8.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpxnx0yzj8.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkxkan1a.php:15\n\
    Stack trace:\n#0 /tmp/tmpvkxkan1a.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpvkxkan1a.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '\\U$1', $string));\n}\n\
    </code>\n<|/ a tags=php,string,regex |>\n<| c |>\nThanks for your answer. Your\
    \ solution is very elegant and I like it very much. Unfortunately I cannot accept\
    \ two answers. I upvoted your answer though.\n<|/ c |>\n<| c |>\nNo problem. Glad\
    \ you found it helpful.\n<|/ c |>\n<| a tags=php,string,regex |>\n<code>\n$string\
    \ = 'Hello World';\n$string = preg_replace('/([a-z])/i', '\\U$1', $string);\n\
    echo $string;\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. Your\
    \ solution is very elegant and I like it very much. Unfortunately I cannot accept\
    \ two answers. I upvoted your answer though.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    $string = 'Hello World';\n$string = preg_replace('/([a-z])/i', '\\U$1', $string);\n\
    echo $string;\n</code>\n<|/ a tags=php,string,regex |>\n<| c |>\nThanks for your\
    \ answer. Your solution is very elegant and I like it very much. Unfortunately\
    \ I cannot accept two answers. I upvoted your answer though.\n<|/ c |>\n<| a tags=php,string,regex\
    \ |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/([a-z])/i', '\\\
    U$1', $string);\necho $string;\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for\
    \ your answer. Your solution is very elegant and I like it very much. Unfortunately\
    \ I cannot accept two answers. I upvoted your answer though.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/([a-z])/i', '\\\
    U$1', $string);\necho $string;\n</code>\n<|/ a tags=php,string,regex |>\n<| c\
    \ |>\nThanks for your answer. Your solution is very elegant and I like it very\
    \ much. Unfortunately I cannot accept two answers. I upvoted your answer though.\n\
    <|/ c |>\n<| a |>\n<code>\n$string = 'Hello World';\n$string = pre\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphymx5fo0.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgl6qllwy.php:15\n\
    Stack trace:\n#0 /tmp/tmpgl6qllwy.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpgl6qllwy.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpef_k5nol.php:15\n\
    Stack trace:\n#0 /tmp/tmpef_k5nol.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpef_k5nol.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '\\U$1', $string));\n}\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8wjyeax.php:14\n\
    Stack trace:\n#0 /tmp/tmpz8wjyeax.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpz8wjyeax.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpba3w6_r2.php:15\n\
    Stack trace:\n#0 /tmp/tmpba3w6_r2.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpba3w6_r2.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(mb_convert_case($string, MB_CASE_TITLE, 'UTF-8'));\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis works great for me. Thanks for sharing!\n\
    <|/ c |>\n<| c |>\nThis works great for me. Thanks for sharing!\n<|/ c |>\n<|\
    \ c |>\nThis works great for me. Thanks for sharing!\n<|/ c |>\n<| c |>\nThis\
    \ works great for me. Thanks for sharing!\n<|/ c |>\n<| c |>\nThis works great\
    \ for me. Thanks for sharing!\n<|/ c |>\n<| a tags=php,string,regex |>\n<code>\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxbs89kbq.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qc7sqs_.php:14\n\
    Stack trace:\n#0 /tmp/tmp9qc7sqs_.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp9qc7sqs_.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\'' => '\\'\\'', '(' => '(',\
    \ ')' => ')', '*' => '*', ',' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdrgcuxjb.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0op55juk.php:15\n\
    Stack trace:\n#0 /tmp/tmp0op55juk.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp0op55juk.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkcmi2q9.php:15\n\
    Stack trace:\n#0 /tmp/tmpfkcmi2q9.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpfkcmi2q9.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '[' => '[', ']' => ']', '{' =>\
    \ '{', '}' => '}'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnx5st10.php:15\n\
    Stack trace:\n#0 /tmp/tmpnnx5st10.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpnnx5st10.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(mb_convert_case($string, MB_CASE_TITLE, 'UTF-8'));\n\
    }\n</code>\n<|/ a tags=php,string,regex |>\n<| c |>\nThis doesn't work for `'Hello'`\
    \ - it returns `'hELLO'`\n<|/ c |>\n<| c |>\n: It works for me. `echo flip_case('Hello');`\
    \ outputs `'hELLO'`\n<|/ c |>\n<| c |>\n: I added a link to an online demo showing\
    \ it working. What PHP version are you using?\n<|/ c |>\n<| c |>\n: I added a\
    \ link to an online demo showing it working. What PHP version are you using?\n\
    <|/ c |>\n<| c |>\n: I added a link to an online demo showing it working. What\
    \ PHP version are you using?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$string\
    \ = 'Hello';\n$string = preg_replace('/([a-z])/e', '$1', $string);\n$string =\
    \ preg_replace('/([A-Z])/e', '$1', $string);\necho $string;\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpadzkpqdy.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis was the only solution\
    \ that worked for me. Thanks!\n<|/ c |>\n<| c |>\nThis worked for me too. Thanks!\n\
    <|/ c |>\n<| c |>\nThis worked for me too. Thanks!\n<|/ c |>\n<| c |>\nThis worked\
    \ for me too. Thanks!\n<|/ c |>\n<| c |>\nThis worked for me too. Thanks!\n<|/\
    \ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1d5tgmyz.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace(['a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\
    \ 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z'],\n        ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'],\n\
    \        $string)));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6bvcdfq.php:18\n\
    Stack trace:\n#0 /tmp/tmpf6bvcdfq.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpf6bvcdfq.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/([a-z])/e', 'strtoupper(\"$1\")', $string);\n}\n\
    \nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: preg_replace(): The /e modifier is no longer supported, use\
    \ preg_replace_callback instead in /tmp/tmplgow2vd5.php on line 6\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmplgow2vd5.php:14\nStack trace:\n\
    #0 /tmp/tmplgow2vd5.php(19): test()\n#1 {main}\n  thrown in /tmp/tmplgow2vd5.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace(' ',\
    \ '', ucwords(strtolower($string)))));\n}\n\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_n6j1ryw.php:16\n\
    Stack trace:\n#0 /tmp/tmp_n6j1ryw.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp_n6j1ryw.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\\\\\\
    '', '\"' => '\\\\\"', '&' => '\\\\&', '\\\\' => '\\\\\\\\', \"'\" => '\\\\\\'',\
    \ '(' => '\\\\(', ')' => '\\\\)', '*' => '\\\\*', '+' => '\\\\+', ',' => '\\\\\
    ,', '-' => '\\\\-', '.' => '\\\\.', '/' => '\\\\/', ':' => '\\\\:', ';' => '\\\
    \\;', '=' => '\\\\=', '<' => '\\\\<', '>' => '\\\\>', '|' => '\\\\|', '~' => '\\\
    \\~'));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphivro89q.php:14\n\
    Stack trace:\n#0 /tmp/tmphivro89q.php(18): test()\n#1 {main}\n  thrown in /tmp/tmphivro89q.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n\
    <code>\n$string = \"Hello World!\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"\
    $1\")', $string);\n$string = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")',\
    \ $string);\necho $string;\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work if there are multiple capital letters in the string. For example, it would\
    \ convert \"HelloWorld\" into \"hELLOWorld\".\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ if there are multiple capital letters in the string. For example, it would convert\
    \ \"HelloWorld\" into \"hELLOWorld\".\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$string\
    \ = \"Hello World!\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"$1\"\
    )', $string);\n$string = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")', $string);\n\
    echo $string;\n</code>\n<|/ a tags=php,string |>\n<| a |>\n<code>\n$string = \"\
    Hello World!\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"$1\")', $string);\n\
    $string = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")', $string);\necho $string;\n\
    </code>\n<|/ a dscore=2 tags=php,string |>\n<| a dscore=1 |>\n<code>\n$string\
    \ = \"Hello World!\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"$1\"\
    )', $string);\n$string = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")', $string);\n\
    echo $string;\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n\
    $string = \"Hello World!\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"\
    $1\")', $string);\n$string = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")',\
    \ $string);\necho $string;\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    $string = \"Hello World!\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"\
    $1\")', $string);\n$string = \nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpom_77pdj.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$string = \"Hello World\"\
    ;\n$string = preg_replace('/./u', 'u', $string);\necho $string;\n</code>\n<|/\
    \ a tags=php,string,regex |>\n<| a dscore=1 |>\n<code>\n$string = \"Hello World\"\
    ;\n$string = preg_replace('/./u', 'u', $string);\necho $string;\n</code>\n<|/\
    \ a tags=php,string,regex |>\n<| a tags=php,string,regex |>\n<code>\n$string =\
    \ \"Hello World\";\n$string = preg_replace('/./u', 'u', $string);\necho $string;\n\
    </code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n$string = \"Hello World\";\n$string\
    \ = preg_replace('/./u', 'u', $string);\necho $string;\n</code>\n<|/ a tags=php,string,regex\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>\n$string = \"Hello World\";\n$string =\
    \ preg_replace('/./u', 'u', $string);\necho $string;\n</code>\n<|/ a tags=php,string,regex\
    \ |>\n<| a dscore=1 |>\n<code>\n$string = \"Hello World\";\n$string = preg_replace('/./u',\
    \ 'u', $string);\necho $string;\n</code>\n<|/ a tags=php,string,regex |>\n<| a\
    \ dscore=1 |>\n<code>\n$string = \"Hello World\";\n$string = preg_replace('/./u',\
    \ 'u', $string);\necho $string;\n</code>\n<|/ a tags=php,string,regex |>\n<| a\
    \ dscore=1 |>\n<code>\n$string = \"Hello World\";\n$string = preg_replace('/./u',\
    \ 'u', $string);\necho $string;\n</code>\n<|/ a tags=php,string,regex |>\n<| a\
    \ dscore=1 |>\n<code>\n$string = \"Hello World\";\n$string = preg_replace('/./u',\
    \ 'u', $string);\necho $string;\n</code>\n<|/ a tags=php,string,regex |>\n<| a\
    \ dscore=1 |>\n<code>\n$string = \"Hello World\";\n$string = preg_replace('/./u',\
    \ 'u', $string);\necho $string;\n</code>\n<|/ a tags=php,string,regex |>\n<| a\
    \ tags=php,string,regex |>\n<code>\n$string = \"Hello World\";\n$string = \nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzqwl3w0j.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '[' => '[', ']' => ']', '{' =>\
    \ '{', '}' => '}'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0829id5.php:15\n\
    Stack trace:\n#0 /tmp/tmpd0829id5.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpd0829id5.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array_flip(str_split($string)));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprnn0w6k4.php:15\n\
    Stack trace:\n#0 /tmp/tmprnn0w6k4.php(19): test()\n#1 {main}\n  thrown in /tmp/tmprnn0w6k4.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', $string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wnswijk.php:15\n\
    Stack trace:\n#0 /tmp/tmp2wnswijk.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp2wnswijk.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtoupper($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfy4hzx_h.php:15\n\
    Stack trace:\n#0 /tmp/tmpfy4hzx_h.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpfy4hzx_h.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\'' => '\\'\\'', '(' => '(',\
    \ ')' => ')', '*' => '*', ',' => '', ')' => '', ';' => '', ':' => '', '=' => '',\
    \ '+' => '+', '=' => '', '*' => '', '?' => '', '!' => '', '@' => '@', '&' => '&',\
    \ '=' => '', '+' => '+', '=' => '', '*' => '', '?' => '', '!' => '', '@' => '@',\
    \ '&' => '&', '=' => '', '+' => '+', '=' => '', '*' => '', '?' => '', '!' => '',\
    \ '@' => '@', '&' => '&', '=' => '', '+' => '+', '=' => '', '*' => '', '?' =>\
    \ '', '!' => '', '@' => '@', '&' => '&', '=' => '', '+' => '+', '=' => '', '*'\
    \ => '', '?' => '', '!' => '', '@' => '@', '&' => '&', '=' => '', '+' => '+',\
    \ '=' => '', '*' => '', '?' => '', '!' => '', '@' => '@', '&' => '&', '=' => '',\
    \ '+' => '+', '=' => '', '*' => '', '?' => '', '!' => '', '@' => '@', '&' => '&',\
    \ '=' => '', '+' => '+', '=' => '', '*' => '', '?' => '', '!' => '', '@' => '@',\
    \ '&' => '&', '=' => '', '+' => '+', '=' => '', '*' => '', '?' => '', '!' => '',\
    \ '@' => '@', '&' => '&', '=' => '', '+' => '+', '=' => '', '*' => '', '?' =>\
    \ '', '!' => '', '@' => '@', '&' => '&', '=' => '', '+' => '+', '=' => '', '*'\
    \ => '', '?' => '', '!' => '', '@' => '@', '&' => '&', '=' => '', '+' => '+',\
    \ '=' => '', '*' => '', '?' => '', '!' => '', '@' => '@', '&' => '&', '=' => '',\
    \ '+' => '+', '=' => '', '*' => '', '?' => '', '!' => '', '@' => '@', '&' => '&',\
    \ '=' => '', '+' => '+', '=' => '', '*' => '', '?' => '', '!' => '', '@' => '@',\
    \ '&' => '&', '=' => '', '+' => '+', '=' => '', '*' => '', '?' => '', '!' => '',\
    \ '@' => '@', '&' => '&', '=' => '', '+' => '+', '=' => '', '*' => '', '?' =>\
    \ '', '!' => '', '@' => '@', '&' => '&', '=' => '', '+' => '+', '=' => '', '*'\
    \ => '', '?' => '', '!' => '', '\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgw7shzw7.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,string,regex |>\n<code>\n$string\
    \ = \"Hello\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"$1\")', $string);\n\
    $string = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")', $string);\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=php,string,regex |>\n<code>\n$string = \"Hello\"\
    ;\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"$1\")', $string);\n$string\
    \ = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")', $string);\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a |>\n<code>\n$string = \"Hello\";\n$string = preg_replace('/([a-z])/e',\
    \ 'strtoupper(\"$1\")', $string);\n$string = preg_replace('/([A-Z])/e', 'strtolower(\"\
    $1\")', $string);\n</code>\n<|/ a tags=php,string,regex dscore=2 |>\n<| a tags=php,string,regex\
    \ |>\n<code>\n$string = \"Hello\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"\
    $1\")', $string);\n$string = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")',\
    \ $string);\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$string = \"\
    Hello\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"$1\")', $string);\n\
    $string = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")', $string);\n</code>\n\
    <|/ a tags=php,string,regex |>\n<| a tags=php,string,regex |>\n<code>\n$string\
    \ = \"Hello\";\n$string = preg_replace('/([a-z])/e', 'strtoupper(\"$1\")', $string);\n\
    $string = preg_replace('/([A-Z])/e', 'strtolower(\"$1\")', $string);\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$string = \"Hello\";\n$string = preg_replace('/([a-z])/e',\
    \ 'strtoupper(\"$1\")', $string);\n$string = preg_replace('/([A-Z])/e', 'strtolower(\"\
    $1\")', $string);\n</code>\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf6nwy39e.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '{' => '{', '}' => '}', '[' =>\
    \ '[', ']' => '[', ':' => ':', ';' => ' ;', '=' => '=', '&' => '&', '|' => '|',\
    \ '\\\\' => '\\\\', '/' => '//'));\n}\n\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi43vmiz3.php:15\n\
    Stack trace:\n#0 /tmp/tmpi43vmiz3.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpi43vmiz3.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7i2j06d.php:14\n\
    Stack trace:\n#0 /tmp/tmpz7i2j06d.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpz7i2j06d.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n</code>\n\
    <|/ a tags=php,regex |>\n<| a |>\n<code>\n$string = 'Hello World';\n$string =\
    \ preg_replace('/\\B([A-Z])/', '\\1', $string);\necho $string;\n</code>\n<|/ a\
    \ dscore=2 tags=php,regex |>\n<| a tags=php,regex |>\n<code>\n$string = 'Hello\
    \ World';\n$string = preg_replace('/\\B([A-Z])/', '\\1', $string);\necho $string;\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=php,regex |>\n<code>\n$string = 'Hello World';\n\
    $string = preg_replace('/\\B([A-Z])/', '\\1', $string);\necho $string;\n</code>\n\
    <|/ a dscore=1 |>\n<| a |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/\\\
    B([A-Z])/', '\\1', $string);\necho $string;\n</code>\n<|/ a tags=php,regex dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/\\\
    B([A-Z])/', '\\1', $string);\necho $string;\n</code>\n<|/ a tags=php,regex |>\n\
    <| a dscore=1 |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/\\\
    B([A-Z])/', '\\1', $string);\necho $string;\n</code>\n<|/ a tags=php,regex |>\n\
    <| a dscore=1 |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/\\\
    B([A-Z])/', '\\1', $string);\necho $string;\n</code>\n<|/ a tags=php,regex |>\n\
    <| a tags=php,regex |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/\\\
    B([A-Z])/', '\\1', $string);\necho $string;\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=php,regex |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/\\\
    B([A-Z])/', '\\1', $string);\necho $string;\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ |>\n<code>\n$string = 'Hello World';\n$string = preg_replace('/\\B([A-Z])/',\
    \ '\\1', $string);\necho $\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg11dk66r.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(mb_convert_case($string, MB_CASE_TITLE, 'UTF-8'));\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly and it's much more elegant than using regex. Thanks!\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly and it's much more\
    \ elegant than using regex. Thanks!\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and it's much more elegant than using regex. Thanks!\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ much more elegant than using regex. Thanks!\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly and it's much more elegant than using\
    \ regex. Thanks!\n<|/ c |>\n<| a tags=php,string,regex |>\n<code>\n$string = preg_replace('/\\\
    p{Ll}/u', 'u', $string);\n$string = preg_replace('/\\p{Lu}/u', 'l', $string);\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly and it's much more elegant than using regex. Thanks!\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly and it's much more\
    \ elegant than using regex. Thanks!\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and it's much more elegant than using regex. Thanks!\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ much more elegant than using regex. Thanks!\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly and it's much more elegant than using\
    \ regex. Thanks!\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$string = preg_replace('/\\\
    p{Ll}/u', 'u', $string);\n$string = preg_replace('/\\p{Lu}/u', 'l', $string);\n\
    </code>\n<|/ a tags=php,string,regex |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and \nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_ok8yb2i.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtolower($string));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmvikn7c.php:14\n\
    Stack trace:\n#0 /tmp/tmphmvikn7c.php(18): test()\n#1 {main}\n  thrown in /tmp/tmphmvikn7c.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27alt9ps.php:15\n\
    Stack trace:\n#0 /tmp/tmp27alt9ps.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp27alt9ps.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis works great for me, but I needed\
    \ to add `u` after `strtolower` like so: `return strtoupper(preg_replace('/./u',\
    \ 'u', strtolower($string)));`\n<|/ c |>\n<| c |>\nThis works great for me, but\
    \ I needed to add `u` after `strtolower` like so: `return strtoupper(preg_replace('/./u',\
    \ 'u', strtolower($string)));`\n<|/ c |>\n<| c |>\nThis works great for me, but\
    \ I needed to add `u` after `strtolower` like so: `return strtoupper(preg_replace('/./u',\
    \ 'u', strtolower($string)));`\n<|/ c |>\n<| c |>\nThis works great for me, but\
    \ I needed to add `u` after `strtolower` like so: `return strtoupper(preg_replace('/./u',\
    \ 'u', strtolower($string)));`\n<|/ c |>\n<| c |>\nThis works great for me, but\
    \ I needed to add `u` after `strtolower` like so: `return strtoupper(preg_replace('/./u',\
    \ 'u', strtolower($string)));`\n<|/ c |>\n<| a |>\n<code>\n<?php\n$string = 'Hello\
    \ World';\n$string = preg_replace('/./u', 'u', $string);\necho $string;\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpab3v4_3l.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', $string);\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9uw399l.php:14\n\
    Stack trace:\n#0 /tmp/tmpk9uw399l.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpk9uw399l.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '&' => '&amp;', '<' => '&lt;', '>' => '&gt;'));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjfkrb47.php:15\n\
    Stack trace:\n#0 /tmp/tmpkjfkrb47.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpkjfkrb47.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kdlkmsk.php:15\n\
    Stack trace:\n#0 /tmp/tmp8kdlkmsk.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp8kdlkmsk.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcagxmz4.php:14\n\
    Stack trace:\n#0 /tmp/tmpbcagxmz4.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpbcagxmz4.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n</code>\n<|/ a tags=php,regex |>\n<| c |>\nThis doesn't work for all cases.\
    \ `'Hello'` becomes `'hELLO'`, but `'hello'` becomes `'hELLO'`.\n<|/ c |>\n<|\
    \ c |>\nYes, it does. `'hello'` becomes `'hELLO'`, but `'Hello'` becomes `'hELLO'`.\n\
    <|/ c |>\n<| c |>\nYes, it does. `'hello'` becomes `'hELLO'`, but `'Hello'` becomes\
    \ `'hELLO'`.\n<|/ c |>\n<| c |>\nYes, it does. `'hello'` becomes `'hELLO'`, but\
    \ `'Hello'` becomes `'hELLO'`.\n<|/ c |>\n<| c |>\nYes, it does. `'hello'` becomes\
    \ `'hELLO'`, but `'Hello'` becomes `'hELLO'`.\n<|/ c |>\n<| a tags=php,regex |>\n\
    This should work:\n<code>\n$string = 'Hello';\n$string = preg_replace('/./u',\
    \ 'u', strtolower($string));\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't\
    \ work for all cases. `'Hello'` becomes `'hELLO'`, but `'hello'` becomes `'hELLO'`.\n\
    <|/ c |>\n<| c |>\nYes, it does. `'hello'` becomes `'hELLO'`, but `'Hello'` becomes\
    \ `'hELLO'`.\n<|/ c |>\n<| c |>\nYes, it does. `'hello'` becomes `'hELLO'`, but\
    \ `'Hello'` becomes `'hELLO'`.\n<|/ c |>\n<| c |>\nYes, it does. `'hello'` becomes\
    \ `'hELLO'`, but `'Hello'` becomes `'hELLO'`.\n<|/ c |>\n<| c |>\nYes, it does.\
    \ `'hello'` becomes `'hELLO'`, but `'Hello'` becomes `'hEL\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcudhbyi2.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtoupper($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ae77g7l.php:15\n\
    Stack trace:\n#0 /tmp/tmp4ae77g7l.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp4ae77g7l.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0g_duli.php:14\n\
    Stack trace:\n#0 /tmp/tmp_0g_duli.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp_0g_duli.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpilao0t4u.php:15\n\
    Stack trace:\n#0 /tmp/tmpilao0t4u.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpilao0t4u.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4axqer1i.php:15\n\
    Stack trace:\n#0 /tmp/tmp4axqer1i.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp4axqer1i.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(mb_convert_case($string, MB_CASE_TITLE, 'UTF-8'));\n\
    }\n</code>\n<|/ a tags=php,string,case-folding |>\n<| c |>\nThis doesn't work\
    \ for all languages. For example, in German \"\xDF\" becomes \"SS\". Not sure\
    \ if this is an issue for OP.\n<|/ c |>\n<| c |>\nThis doesn't work for all languages.\
    \ For example, in German \"\xDF\" becomes \"SS\". Not sure if this is an issue\
    \ for OP.\n<|/ c |>\n<| c |>\nThis doesn't work for all languages. For example,\
    \ in German \"\xDF\" becomes \"SS\". Not sure if this is an issue for OP.\n<|/\
    \ c |>\n<| a tags=php,string,case-folding |>\nI used the answer from and added\
    \ a little bit of error checking to it, so it can handle non-ascii characters.\
    \ \n<code>\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3o_do_x3.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vha1_4i.php:15\n\
    Stack trace:\n#0 /tmp/tmp8vha1_4i.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp8vha1_4i.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\\\\\'', '\"' => '\\\\\"', '\\\\' => '\\\\\\\\')));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ui94ie3.php:15\n\
    Stack trace:\n#0 /tmp/tmp0ui94ie3.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp0ui94ie3.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdyv2wvu.php:15\n\
    Stack trace:\n#0 /tmp/tmpqdyv2wvu.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpqdyv2wvu.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work for all cases, for example\
    \ `'\xC9\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\
    \xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\
    \xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\
    \xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\
    \xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\
    \xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\
    \xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\
    \xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\
    \xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\
    \xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\
    \xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\
    \xDA\xC0\xC8\xCC\xD2\xD9\xC7\xCD\xD3\xDA\xC0\xC8\xCC\xD2\uFFFD\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpquf07zg2.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtoupper($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kmjzjlh.php:15\n\
    Stack trace:\n#0 /tmp/tmp3kmjzjlh.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp3kmjzjlh.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\''))\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa6nmk971.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9jp0q3a.php:15\n\
    Stack trace:\n#0 /tmp/tmpz9jp0q3a.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpz9jp0q3a.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvz6che0.php:15\n\
    Stack trace:\n#0 /tmp/tmpkvz6che0.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpkvz6che0.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace(['A',\
    \ 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',\
    \ 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n        ['a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z'],\n        $string)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwfnshuw.php:18\n\
    Stack trace:\n#0 /tmp/tmphwfnshuw.php(22): test()\n#1 {main}\n  thrown in /tmp/tmphwfnshuw.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n</code>\n\
    <|/ a tags=php,string,replace |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = 'Hello';\n\
    $string = str_replace('l','O',$string);\n$string = str_replace('H','e',$string);\n\
    echo $string;\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpymno2hgg.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '\\\\' => '\\\\\\\\', \"'\" => '\\'\\'\\'', '(' => '(',\
    \ ')' => ')', '{' => '{', '}' => '}', '[' => '[', ']' => ']', '^' => '^', '~'\
    \ => '~'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkwe0o6y.php:15\n\
    Stack trace:\n#0 /tmp/tmpvkwe0o6y.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpvkwe0o6y.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp700k883.php:15\n\
    Stack trace:\n#0 /tmp/tmpp700k883.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpp700k883.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cee44m8.php:15\n\
    Stack trace:\n#0 /tmp/tmp0cee44m8.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp0cee44m8.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '$1', $string));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01fl5qj6.php:15\n\
    Stack trace:\n#0 /tmp/tmp01fl5qj6.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp01fl5qj6.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        strtr($string, array('a'=>'A',\
    \ 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E', 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I',\
    \ 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M', 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q',\
    \ 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U', 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y',\
    \ 'z'=>'Z'))\n    ));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1xtqukh.php:17\n\
    Stack trace:\n#0 /tmp/tmpb1xtqukh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpb1xtqukh.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\"\
    ' => '???', '\\'' => '????', '(' => '????(', '{' => '????{', '}' => '????}', '['\
    \ => '????[', ']' => '????]', '*' => '????*', '+' => '????+', '-' => '????-',\
    \ '/' => '????/', '\\\\' => '????\\\\', ':' => '????:', ';' => '????;', ':' =>\
    \ '????:', '?' => '?????', '!' => '????!', '?' => '?????', '\"' => '?????\"',\
    \ '\\'' => '?????\\'', '(' => '?????(', '{' => '?????{', '}' => '?????}', '['\
    \ => '?????[', ']' => '?????]', '*' => '?????*', '+' => '?????+', '-' => '?????-',\
    \ '/' => '?????/', '\\\\' => '?????\\\\', ':' => '?????:', ';' => '?????:', '?'\
    \ => '?????', '!' => '????!', '?' => '?????', '\"' => '?????\"', '\\'' => '?????\\\
    '', '(' => '?????(', '{' => '?????{', '}' => '?????}', '[' => '?????[', ']' =>\
    \ '?????]', '*' => '?????*', '+' => '?????+', '-' => '?????-', '/' => '?????/',\
    \ '\\\\' => '?????\\\\', ':' => '?????:', ';' => '?????:', '?' => '?????', '!'\
    \ => '????!', '?' => '?????', '\"' => '?????\"', '\\'' => '?????\\'', '(' => '?????(',\
    \ '{' => '?????{', '}' => '?????}', '[' => '?????[', ']' => '?????]', '*' => '?????*',\
    \ '+' => '?????+', '-' => '?????-', '/' => '?????/', '\\\\' => '?????\\\\', ':'\
    \ => '?????:', ';' => '?????:', '?' => '?????', '!' => '????!', '?' => '?????',\
    \ '\"' => '?????\"', '\\'' => '?????\\'', '(' => '?????(', '{' => '?????{', '}'\
    \ => '?????}', '[' => '?????[', ']' => '?????]', '*' => '?????*\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwm84fhx0.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(mb_convert_case($string, MB_CASE_TITLE, 'UTF-8'));\n\
    }\n</code>\n<|/ a tags=php,string,regex |>\n<| c |>\nThis doesn't work for `'\xC0\
    \xC1\xC2\xC3\xC4\xC5\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\xD2\xD3\xD4\xD5\xD6\xD9\
    \xDA\xDB\xDC\xDD\xDE\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\
    \xEF\xF0\xF2\xF3\xF4\xF5\xF6\xF9\xFA\xFB\xFC\xFD\xFE\xFF'` which should be `'AAAAAACEEEEIIIIDNOOOOOOUUUUYSSS'`\n\
    <|/ c |>\n<| c |>\nI added a solution that works for that case too.\n<|/ c |>\n\
    <| c |>\nThis doesn't work for `'\xC0\xC1\xC2\xC3\xC4\xC5\xC7\xC8\xC9\xCA\xCB\xCC\
    \xCD\xCE\xCF\xD2\xD3\xD4\xD5\xD6\xD9\xDA\xDB\xDC\xDD\xDE\xDF\xE0\xE1\xE2\xE3\xE4\
    \xE5\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0\xF2\xF3\xF4\xF5\xF6\xF9\xFA\xFB\xFC\
    \xFD\xFE\xFF'` which should be `'AAAAAACEEEEIIIIDNOOOOOOUUUUYSSS'`\n<|/ c |>\n\
    <| c |>\nI added a solution that works for that case too.\n<|/ c |>\n<| a |>\n\
    <code>\n$string = '\xC0\xC1\xC2\xC3\xC4\xC5\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF\
    \xD2\xD3\xD4\xD5\xD6\xD9\xDA\xDB\xDC\xDD\xDE\xDF\xE0\xE1\xE2\xE3\xE4\xE5\xE7\xE8\
    \xE9\xEA\xEB\xEC\xED\xEE\xEF\xF0\xF2\xF3\xF4\xF5\xF6\xF9\xFA\xFB\xFC\xFD\xFE\xFF\
    ';\n$string = preg_replace('/[\xC0\xC1\xC2\xC3\xC4\xC5\xC7\xC8\xC9\xCA\xCB\xCC\
    \xCD\xCE\xCF\xD2\xD3\xD4\xD5\xD6\xD9\xDA\xDB\xDC\xDD\uFFFD\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa1utm0xq.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(mb_convert_case($string, MB_CASE_TITLE, 'UTF-8'));\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works\
    \ perfectly for me.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$string = preg_replace('/\\\
    p{Ll}/u', 'u', $string);\n$string = preg_replace('/\\P{Ll}/u', '', $string);\n\
    </code>\n<|/ a tags=php,string,regex |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly for me.\n<|/ c |>\n<| a tags=php,string,regex |>\n<code>\n\
    $string = preg_replace('/\\p{Ll}/u', 'u', $string);\n$string = preg_replace('/\\\
    P{Ll}/u', '', $string);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| a tags=php\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk5zopvf8.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '\\\\' => '\\\\\\\\')));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4q8epm5g.php:15\n\
    Stack trace:\n#0 /tmp/tmp4q8epm5g.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp4q8epm5g.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '[' => '[', ']' => ']', '{' =>\
    \ '{', '}' => '}'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4yko92y.php:15\n\
    Stack trace:\n#0 /tmp/tmpj4yko92y.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpj4yko92y.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', $string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87sz2sfh.php:15\n\
    Stack trace:\n#0 /tmp/tmp87sz2sfh.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp87sz2sfh.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpona_8n1_.php:15\n\
    Stack trace:\n#0 /tmp/tmpona_8n1_.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpona_8n1_.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(mb_convert_case($string, MB_CASE_TITLE, 'UTF-8'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_convert_case()\
    \ in /tmp/tmpdljv0svm.php:6\nStack trace:\n#0 /tmp/tmpdljv0svm.php(10): flip_case('')\n\
    #1 /tmp/tmpdljv0svm.php(14): candidate('')\n#2 /tmp/tmpdljv0svm.php(19): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdljv0svm.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8vmnv_c.php:15\n\
    Stack trace:\n#0 /tmp/tmpj8vmnv_c.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpj8vmnv_c.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtoupper($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpti5kzoka.php:15\n\
    Stack trace:\n#0 /tmp/tmpti5kzoka.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpti5kzoka.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '[' => '[', ']' => ']'));\n}\n\
    \nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_4qtcbu.php:15\n\
    Stack trace:\n#0 /tmp/tmpk_4qtcbu.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpk_4qtcbu.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpodq7ga5p.php:15\n\
    Stack trace:\n#0 /tmp/tmpodq7ga5p.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpodq7ga5p.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp83ecewmn.php:15\n\
    Stack trace:\n#0 /tmp/tmp83ecewmn.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp83ecewmn.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp320rlfzg.php:15\n\
    Stack trace:\n#0 /tmp/tmp320rlfzg.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp320rlfzg.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\\\\\\
    '', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&'\
    \ => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\
    \\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"\
    ', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\''\
    \ => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' =>\
    \ '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\\
    &', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'',\
    \ '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&'\
    \ => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\
    \\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"\
    ', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\''\
    \ => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' =>\
    \ '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\\
    &', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'',\
    \ '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&'\
    \ => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\
    \\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"\
    ', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\''\
    \ => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' =>\
    \ '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\\
    &', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'',\
    \ '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&'\
    \ => '\\\\&', '\\'' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnqd_4y5x.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97gzevqt.php:15\n\
    Stack trace:\n#0 /tmp/tmp97gzevqt.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp97gzevqt.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfmpcxl8.php:15\n\
    Stack trace:\n#0 /tmp/tmphfmpcxl8.php(19): test()\n#1 {main}\n  thrown in /tmp/tmphfmpcxl8.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\\\\\'', '\"' => '\\\\\"', '\\\\' => '\\\\\\\\', \"'\" => '\\\\\\'', \"\
    \\n\" => '\\\\n', '\\r' => '\\\\r', \"\\t\" => '\\\\t')));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagam6r56.php:15\n\
    Stack trace:\n#0 /tmp/tmpagam6r56.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpagam6r56.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnklylehe.php:15\n\
    Stack trace:\n#0 /tmp/tmpnklylehe.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpnklylehe.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\'' => '\\'\\'', '(' => '(',\
    \ ')' => ')', '*' => '*', ',' => '', ')' => '', ';' => '', ':' => '', '=' => '',\
    \ '[' => '[', ']' => ']', '{' => '{', '}' => '', '|' => '|', '~' => '~', '^' =>\
    \ '^', '\\\\' => '\\\\', '/' => '//'));\n}\n\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptxwknvzr.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array_flip(array('!', '@', '#', '$', '%', '^',\
    \ '&', '*', '(', ')', '-', '+', '=', '{', '}', '[', ']', '|', '~', '`', ';', ':',\
    \ '\\'', '\"', '?'));\n}\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp99n5nynt.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s53fs9e.php:15\n\
    Stack trace:\n#0 /tmp/tmp9s53fs9e.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp9s53fs9e.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaex18kov.php:15\n\
    Stack trace:\n#0 /tmp/tmpaex18kov.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpaex18kov.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkq1_4x7j.php:15\n\
    Stack trace:\n#0 /tmp/tmpkq1_4x7j.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpkq1_4x7j.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/([a-z])/', '$U$1$1', $string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1nbmjbk.php:15\n\
    Stack trace:\n#0 /tmp/tmpk1nbmjbk.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpk1nbmjbk.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpopq2k81v.php:15\n\
    Stack trace:\n#0 /tmp/tmpopq2k81v.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpopq2k81v.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '(' => '\\\\(', '*' => '\\\\\
    *', ')' => '\\\\)', ';' => '\\\\;', ':' => '\\\\:', '=' => '\\\\=', '<' => '\\\
    \\<', '>' => '\\\\>', '|' => '\\\\|', '\\\\' => '\\\\\\\\')));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jylpp33.php:14\n\
    Stack trace:\n#0 /tmp/tmp9jylpp33.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp9jylpp33.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqujs4kib.php:14\n\
    Stack trace:\n#0 /tmp/tmpqujs4kib.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpqujs4kib.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4lrjsi0.php:15\n\
    Stack trace:\n#0 /tmp/tmp_4lrjsi0.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp_4lrjsi0.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '$1', $string));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoir5_2_n.php:15\n\
    Stack trace:\n#0 /tmp/tmpoir5_2_n.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpoir5_2_n.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpetph19na.php:15\n\
    Stack trace:\n#0 /tmp/tmpetph19na.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpetph19na.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\'' => '\\'\\'', '(' => '(',\
    \ ')' => ')', '*' => '*', ',' => '', ')' => '', ':' => '', ';' => '', '=' => '',\
    \ '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+'\
    \ => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++',\
    \ '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '='\
    \ => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '',\
    \ '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+'\
    \ => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++',\
    \ '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '='\
    \ => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '',\
    \ '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+'\
    \ => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++',\
    \ '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '='\
    \ => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '',\
    \ '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+'\
    \ => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++',\
    \ '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '='\
    \ => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '',\
    \ '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+'\
    \ => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++',\
    \ '=' => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '+' => '++', '='\
    \ => '', '+' => '++', '=' => '', '+' => '++', '=' => '', '\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3lvkcqh1.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihpb5vbz.php:15\n\
    Stack trace:\n#0 /tmp/tmpihpb5vbz.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpihpb5vbz.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcmvqhm8.php:15\n\
    Stack trace:\n#0 /tmp/tmplcmvqhm8.php(19): test()\n#1 {main}\n  thrown in /tmp/tmplcmvqhm8.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzc457h2.php:15\n\
    Stack trace:\n#0 /tmp/tmpgzc457h2.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpgzc457h2.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace(['a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],\n        ['A', 'B', 'C', 'D',\
    \ 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\
    \ 'U', 'V', 'W', 'X', 'Y', 'Z'],\n        $string)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ok9m490.php:18\n\
    Stack trace:\n#0 /tmp/tmp8ok9m490.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8ok9m490.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr(strtolower($string), array('!' => '!', '?' => '?'));\n}\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdcbjkkga.php:14\n\
    Stack trace:\n#0 /tmp/tmpdcbjkkga.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpdcbjkkga.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/', '$1', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrv4csj5.php:15\n\
    Stack trace:\n#0 /tmp/tmpvrv4csj5.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpvrv4csj5.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtoupper($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx467nruy.php:15\n\
    Stack trace:\n#0 /tmp/tmpx467nruy.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpx467nruy.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_ncjj60.php:15\n\
    Stack trace:\n#0 /tmp/tmpi_ncjj60.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpi_ncjj60.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmldh5jq2.php:14\n\
    Stack trace:\n#0 /tmp/tmpmldh5jq2.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpmldh5jq2.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\\\\\'', '\"' => '\\\\\"', '\\\\' => '\\\\\\\\', \"'\" => '\\\\\\'', '('\
    \ => '\\\\(', ')' => '\\\\)', '*' => '\\\\*', '+' => '\\\\+', ',' => '\\\\,',\
    \ '-' => '\\\\-', '.' => '\\\\.', ':' => '\\\\:', ';' => '\\\\;', '<' => '\\\\\
    <', '=' => '\\\\=', '>' => '\\\\>', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\
    \\^', '$' => '\\\\$', '[' => '\\\\[', ']' => '\\\\]', '{' => '\\\\{', '}' => '\\\
    \\}', '~' => '\\\\~'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjzcbjjl_.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n</code>\n\
    <|/ a tags=php,string,replace |>\n<| c |>\nThis doesn't work for me in PHP 5.3.10.\
    \ `strtoupper` doesn't seem to recognize `u` as a modifier.\n<|/ c |>\n<| c |>\n\
    - `u` was introduced in PHP 5.4.0, so if you're using an older version of PHP,\
    \ you won't be able to use it.\n<|/ c |>\n<| c |>\n- I added a solution that works\
    \ in PHP 5.3.10\n<|/ c |>\n<| c |>\n- I added a solution that works in PHP 5.3.10\n\
    <|/ c |>\n<| c |>\n- I added a solution that works in PHP 5.3.10\n<|/ c |>\n<|\
    \ a dscore=5 tags=php,string,replace |>\n<code>\n$string = str_replace(' ', '',\
    \ $string);\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if you have multiple\
    \ spaces.\n<|/ c |>\n<| c |>\nThis doesn't work if you have multiple spaces.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if you have multiple spaces.\n<|/ c |>\n\
    <| c |>\nThis doesn't work if you have multiple spaces.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work if you have multiple spaces.\n<|/ c |>\n<| a tags=php,string,replace\
    \ |>\n<code>\n$string = str_replace(' ', '', $string);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work if you have multiple spaces.\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work if you have multiple spaces.\n<|/ c |>\n<| a tags=php,string,replace\
    \ |>\n<code>\n$string = str_replace(' ', '', $string);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work if you have multiple spaces.\n<|/ c |>\n<| a\
    \ dscore=5 |>\n<code>\n$string = str_replace(' ', '', $string);\n</code>\n<|/\
    \ a tags=php,string,replace |>\n<| a tags=php,string,replace |>\n<code>\n$string\
    \ = str_replace(' ', '', $string);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ doesn't work if you have multiple spaces.\n<|/ c |>\n<| a tags=php,string,replace\
    \ |>\n<code>\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4uhsswj2.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\'' => '\\'\\'', '(' => '(',\
    \ ')' => ')', '*' => '*', ',' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '', ')' => '',\
    \ ')' => '', ')' => '', ')\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5433jmja.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\"' => '???',\
    \ '\\'' => '????', '(' => '????', ')' => '????', ':' => '????', ';' => '????',\
    \ '=' => '????', '&' => '????', '*' => '????', '/' => '????', '+' => '????', '-'\
    \ => '????', '.' => '????', '/' => '????', '+' => '????', '-' => '????', '.' =>\
    \ '????', '/' => '????', '+' => '????', '-' => '????', '.' => '????', '/' => '????',\
    \ '+' => '????', '-' => '????', '.' => '????', '/' => '????', '+' => '????', '-'\
    \ => '????', '.' => '????', '/' => '????', '+' => '????', '-' => '????', '.' =>\
    \ '????', '/' => '????', '+' => '????', '-' => '????', '.' => '????', '/' => '????',\
    \ '+' => '????', '-' => '????', '.' => '????', '/' => '????', '+' => '????', '-'\
    \ => '????', '.' => '????', '/' => '????', '+' => '????', '-' => '????', '.' =>\
    \ '????', '/' => '????', '+' => '????', '-' => '????', '.' => '????', '/' => '????',\
    \ '+' => '????', '-' => '????', '.' => '????', '/' => '????', '+' => '????', '-'\
    \ => '????', '.' => '????', '/' => '????', '+' => '????', '-' => '????', '.' =>\
    \ '????', '/' => '????', '+' => '????', '-' => '????', '.' => '????', '/' => '????',\
    \ '+' => '????', '-' => '????', '.' => '????', '/' => '????', '+' => '????', '-'\
    \ => '????', '.' => '????', '/' => '????', '+' => '????', '-' => '????', '.' =>\
    \ '????', '/' => '????', '+' => '????', '-' => '????', '.' => '????', '/' => '????',\
    \ '+' => '????', '-' => '????', '.' => '????', '/' => '????', '+' => '????', '-'\
    \ => '????', '.' => '????', '/' => '????', '+' => '????', '-' => '????', '.' =>\
    \ '????', '/' => '????', '+' => '????', '-' => '????', '.' => '????', '/' => '????',\
    \ '+' => '????', '-' => '????', '.' => '????', '/' => '????', '+' => '????', '-'\
    \ => '????', '.' => '????', '/' => '????', '+' => '????', '-' => '????', '.' =>\
    \ '????', '/' => '????', '+' => '????', '-' => '????', '.' => '????', '/' => '????',\
    \ '+' => '????', '-' => '????', '.' => '????', '/' => '????', '+' => '\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprfprsvz4.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpak_vyy82.php:15\n\
    Stack trace:\n#0 /tmp/tmpak_vyy82.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpak_vyy82.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', $string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtxedvii.php:15\n\
    Stack trace:\n#0 /tmp/tmpdtxedvii.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpdtxedvii.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '(' => '\\\\(', ')' => '\\\\\
    )', '*' => '\\\\*', '+' => '\\\\+', ',' => '\\\\,', '-' => '\\\\-', '.' => '\\\
    \\.', '/' => '\\\\/', ':' => '\\\\:', ';' => '\\\\;', '=' => '\\\\=', '<' => '\\\
    \\<', '>' => '\\\\>', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\\^', '$' => '\\\
    \\$', '{' => '\\\\{', '}' => '\\\\}', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\
    \\^', '$' => '\\\\$', '{' => '\\\\{', '}' => '\\\\}', '|' => '\\\\|', '~' => '\\\
    \\~', '^' => '\\\\^', '$' => '\\\\$', '{' => '\\\\{', '}' => '\\\\}', '|' => '\\\
    \\|', '~' => '\\\\~', '^' => '\\\\^', '$' => '\\\\$', '{' => '\\\\{', '}' => '\\\
    \\}', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\\^', '$' => '\\\\$', '{' => '\\\
    \\{', '}' => '\\\\}', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\\^', '$' => '\\\
    \\$', '{' => '\\\\{', '}' => '\\\\}', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\
    \\^', '$' => '\\\\$', '{' => '\\\\{', '}' => '\\\\}', '|' => '\\\\|', '~' => '\\\
    \\~', '^' => '\\\\^', '$' => '\\\\$', '{' => '\\\\{', '}' => '\\\\}', '|' => '\\\
    \\|', '~' => '\\\\~', '^' => '\\\\^', '$' => '\\\\$', '{' => '\\\\{', '}' => '\\\
    \\}', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\\^', '$' => '\\\\$', '{' => '\\\
    \\{', '}' => '\\\\}', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\\^', '$' => '\\\
    \\$', '{' => '\\\\{', '}' => '\\\\}', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\
    \\^', '$' => '\\\\$', '{' => '\\\\{', '}' => '\\\\}', '|' => '\\\\|', '~' => '\\\
    \\~', '^' => '\\\\^', '$' => '\\\\$', '{' => '\\\\{', '}' => '\\\\}', '|' => '\\\
    \\|', '~' => '\\\\~', '^' => '\\\\^', '$' => '\\\\$', '{' => '\\\\{', '}' => '\\\
    \\}', '|' => '\\\\|', '~' => '\\\\~', '^' => '\\\\\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq90crebe.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '[' => '[', ']' => ']'));\n}\n\
    </code>\n<|/ a tags=php,string,regex |>\n<| c |>\nThanks for your answer, but\
    \ this doesn't work. I've tried it and it doesn't work. I've also tried it on\
    \ http://writecodeonline.com/php/ and it doesn't work. I've also tried it on http://phpfiddle.org/\
    \ and it doesn't work. I've also tried it on http://regex101.com/ and it doesn't\
    \ work. I've also tried it on http://regexr.com/ and it doesn't work. I've also\
    \ tried it on http://regexpal.com/ and it doesn't work. I've also tried it on\
    \ http://phptester.net/ and it doesn't work. I've also tried it on http://phpfiddle.org/\
    \ and it doesn't work. I've also tried it on http://writecodeonline.com/php/ and\
    \ it doesn't work. I've also tried it on http://regex101.com/ and it doesn't work.\
    \ I've also tried it on http://regexr.com/ and it doesn't work. I've also tried\
    \ it on http://regexpal.com/ and it doesn't work. I've also tried it on http://phptester.net/\
    \ and it doesn't work. I've also tried it on http://phpfiddle.org/ and it doesn't\
    \ work. I've also tried it on http://writecodeonline.com/php/ and it doesn't work.\
    \ I've also tried it on http://regex101.com/ and it doesn't work. I've also tried\
    \ it on http://regexr.com/ and it doesn't work. I've also tried it on http://regexpal.com/\
    \ and it doesn't work. I've also tried it on http://phptester.net/ and it doesn't\
    \ work. I've also tried it on http://phpfiddle.org/ and it doesn't work. I've\
    \ also tried it on http://writecodeonline.com/php/ and it doesn't work. I've also\
    \ tried it on http://regex101.com/ and it doesn't work. I've also tried it on\
    \ http://regexr.com/ and it doesn't work. I've also tried it on http://regexpal.com/\
    \ and it doesn't work. I've also tried it on http://phptester.net/ and it doesn't\
    \ work. I've also tried it on http://phpfiddle.org/ and it doesn't work. I've\
    \ also tried it on http://writecodeonline.com/php/ and it doesn't work. I've also\
    \ tried it on http://regex101.com/ and it doesn't work. I've also tried it on\
    \ http://regexr.com/ and it doesn't work. I've also tried it on http://regexpal.com/\
    \ and it doesn't work. I've also tried it on http://php\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9yktdqtd.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzig1if2d.php:15\n\
    Stack trace:\n#0 /tmp/tmpzig1if2d.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpzig1if2d.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', $string);\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuacmyhyl.php:14\n\
    Stack trace:\n#0 /tmp/tmpuacmyhyl.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpuacmyhyl.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe22cbv0u.php:15\n\
    Stack trace:\n#0 /tmp/tmpe22cbv0u.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpe22cbv0u.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '*' => '*', ',' =>\
    \ '', ')' => '(', ')' => '(', '(' => '(')));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ii5bcgn.php:15\n\
    Stack trace:\n#0 /tmp/tmp9ii5bcgn.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp9ii5bcgn.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\'' => '\\'\\'', '(' => '(',\
    \ ')' => ')', '*' => '***', '+' => '++', ',' => '+++', '-' => '--', '.' => '..',\
    \ '/' => '//', ':' => '::', ';' => ';:', '=' => '==', '>' => '>>', '<' => '<<',\
    \ '|' => '||', '~' => '~', '^' => '^~', '?' => '??', '!' => '!!', '?' => '??',\
    \ '\\'' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\'' => '\\'\\'', '(' =>\
    \ '(', ')' => ')', '*' => '***', '+' => '++', ',' => '+++', '-' => '--', '.' =>\
    \ '..', '/' => '//', ':' => '::', ';' => ';:', '=' => '==', '>' => '>>', '<' =>\
    \ '<<', '|' => '||', '~' => '~', '^' => '^~', '?' => '??', '!' => '!!', '?' =>\
    \ '??', '\\'' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\'' => '\\'\\'',\
    \ '(' => '(', ')' => ')', '*' => '***', '+' => '++', ',' => '+++', '-' => '--',\
    \ '.' => '..', '/' => '//', ':' => '::', ';' => ';:', '=' => '==', '>' => '>>',\
    \ '<' => '<<', '|' => '||', '~' => '~', '^' => '^~', '?' => '??', '!' => '!!',\
    \ '?' => '??', '\\'' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\'' => '\\\
    '\\'', '(' => '(', ')' => ')', '*' => '***', '+' => '++', ',' => '+++', '-' =>\
    \ '--', '.' => '..', '/' => '//', ':' => '::', ';' => ';:', '=' => '==', '>' =>\
    \ '>>', '<' => '<<', '|' => '||', '~' => '~', '^' => '^~', '?' => '??', '!' =>\
    \ '!!', '?' => '??', '\\'' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&', '\\''\
    \ => '\\'\\'', '(' => '(', ')' => ')', '*' => '***', '+' => '++', ',' => '+++',\
    \ '-' => '--', '.' => '..', '/' => '//', ':' => '::', ';' => ';:', '=' => '==',\
    \ '>' => '>>', '<' => '<<', '|' => '||', '~' => '~', '^' => '^~', '?' => '??',\
    \ '!' => '!!', '?' => '??', '\\'' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&&',\
    \ '\\'' => '\\'\\'', '(' => '(', ')\nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpb8qi3ka6.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\\\\\\
    '', '\"' => '\\\\\"', '(' => '\\\\(', ')' => '\\\\)', '*' => '\\\\*', ',' => '\\\
    \\,', ';' => '\\\\;', ':' => '\\\\:', '=' => '\\\\=', '<' => '\\\\<', '>' => '\\\
    \\>', '&' => '\\\\&', '|' => '\\\\|', '\\\\' => '\\\\\\\\'));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxbkb34w.php:14\n\
    Stack trace:\n#0 /tmp/tmphxbkb34w.php(18): test()\n#1 {main}\n  thrown in /tmp/tmphxbkb34w.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '\\\\' => '\\\\\\\\')));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpri5uynum.php:15\n\
    Stack trace:\n#0 /tmp/tmpri5uynum.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpri5uynum.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0it3n6rc.php:14\n\
    Stack trace:\n#0 /tmp/tmp0it3n6rc.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp0it3n6rc.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/([a-z])/i', '\\U$1\\E', $string);\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprhk7ox0k.php:15\n\
    Stack trace:\n#0 /tmp/tmprhk7ox0k.php(19): test()\n#1 {main}\n  thrown in /tmp/tmprhk7ox0k.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0or4g84.php:14\n\
    Stack trace:\n#0 /tmp/tmpq0or4g84.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpq0or4g84.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7d3vwtq3.php:15\n\
    Stack trace:\n#0 /tmp/tmp7d3vwtq3.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp7d3vwtq3.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_u3izpy.php:14\n\
    Stack trace:\n#0 /tmp/tmpe_u3izpy.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpe_u3izpy.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace(['A',\
    \ 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',\
    \ 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n        ['a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z'],\n        $string)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzpyu176z.php:18\n\
    Stack trace:\n#0 /tmp/tmpzpyu176z.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpzpyu176z.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$string = \"Hello\
    \ World\";\n$string = preg_replace('/([a-z])/', '\\U$1', $string);\necho $string;\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu6hmunrl.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaslxs4or.php:15\n\
    Stack trace:\n#0 /tmp/tmpaslxs4or.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpaslxs4or.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslm6_oef.php:15\n\
    Stack trace:\n#0 /tmp/tmpslm6_oef.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpslm6_oef.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ki8y5al.php:15\n\
    Stack trace:\n#0 /tmp/tmp1ki8y5al.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp1ki8y5al.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '\\\\' => '\\\\\\\\', \"'\" => \"\\'\\'\"\
    , \"'\" => \"\\'\\'\", \"<\" => \"&lt;\", \">\" => \"&gt;\")));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgprxawl.php:15\n\
    Stack trace:\n#0 /tmp/tmpfgprxawl.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpfgprxawl.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace(['A',\
    \ 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',\
    \ 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n        ['a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z'],\n        $string)));\n}\n</code>\n<|/ a tags=php,string,regex\
    \ |>\n<| a dscore=2 |>\n<code>\n$string = 'Hello';\n$string = preg_replace('/./u',\
    \ '',\n    str_replace(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',\
    \ 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n\
    \    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],\n    $string));\n</code>\n\
    <|/ a tags=php,string,regex |>\n<| a |>\n<code>\n$string = 'Hello';\n$string =\
    \ preg_replace('/./u', '',\n    str_replace(['A', 'B', 'C', 'D', 'E', 'F', 'G',\
    \ 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],\n\
    \    $string));\n</code>\n<|/ a tags=php,string,regex dscore=2 |>\n<| a dscore=1\
    \ |>\n<code>\n$string = 'Hello';\n$string = preg_replace('/./u', '',\n    str_replace(['A',\
    \ 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',\
    \ 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n    ['a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z'],\n    $string));\n</code>\n<|/ a tags=php,string,regex\
    \ |>\n<| a tags=php,string,regex |>\n<code>\n$string = 'Hello';\n$string = preg_replace('/\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyc_6516f.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_socziy.php:15\n\
    Stack trace:\n#0 /tmp/tmpz_socziy.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpz_socziy.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n</code>\n\
    <|/ a tags=php,string,regex |>\n<| c |>\nThis doesn't work for `'Hello'`, which\
    \ should return `'hELLO'`.\n<|/ c |>\n<| c |>\n: Yes, it does. `preg_replace`\
    \ replaces all occurrences of `.` with `u`.\n<|/ c |>\n<| c |>\n: It does, but\
    \ only because you used `/./u` instead of `/./`. `/./u` means \"any character\"\
    , and `/./` means \"any character (except newlines)\". Since `'Hello'` contains\
    \ no newlines, `/./u` doesn't match anything.\n<|/ c |>\n<| c |>\n: Ah, I see\
    \ what you mean. Yes, I see what you mean. `/./u` means \"any character (except\
    \ newlines)\", but `/./` means \"any character (except newlines)\". Since `'Hello'`\
    \ contains no newlines, `/./u` doesn't match anything.\n<|/ c |>\n<| c |>\n: Yes,\
    \ I see what you mean. `/./u` means \"any character (except newlines)\", but `/./`\
    \ means \"any character (except newlines)\". Since `'Hello'` contains no newlines,\
    \ `/./u` doesn't match anything.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$string\
    \ = 'Hello';\n$string = preg_replace('/./u', 'u', $string);\n</code>\n<|/ a tags=php,string,regex\
    \ |>\n<| c |>\nThis doesn't work for `'Hello'`, which should return `'hELLO'`.\n\
    <|/ c |>\n<| c |>\n: It does. `preg_replace` replaces all occurrences of `.` with\
    \ `u`.\n<|/ c |>\n<| c |>\n: It does, but only because you used `/./u` instead\
    \ of `/./`. `/./u` means \"any character\", and `/./` means \"any character (except\
    \ newlines)\". Since `'Hello'` contains no newlines, `/./u` doesn't match anything.\n\
    <|/ c |>\n<| c |>\n: Yes, I see what you mean. `/./u` means \"any character (except\
    \ newlines)\", but `/./` means \"any \nfunction candidate(...$args) {\n    return\
    \ flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\")\
    \ !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello!\"\
    ) !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8npc_pkf.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtoupper($string));\n}\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis doesn't work for all languages. For example,\
    \ in Turkish, `\xC7` becomes `\xC4` but `\xC7` becomes `\xC3`. So this doesn't\
    \ work for Turkish.\n<|/ c |>\n<| c |>\nThis doesn't work for all languages. For\
    \ example, in Turkish, `\xC7` becomes `\xC4` but `\xC7` becomes `\xC3`. So this\
    \ doesn't work for Turkish.\n<|/ c |>\n<| c |>\nThis doesn't work for all languages.\
    \ For example, in Turkish, `\xC7` becomes `\xC4` but `\xC7` becomes `\xC3`. So\
    \ this doesn't work for Turkish.\n<|/ c |>\n<| c |>\nThis doesn't work for all\
    \ languages. For example, in Turkish, `\xC7` becomes `\xC4` but `\xC7` becomes\
    \ `\xC3`. So this doesn't work for Turkish.\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ for all languages. For example, in Turkish, `\xC7` becomes `\xC4` but `\xC7\
    ` becomes `\xC3`. So this doesn't work for Turkish.\n<|/ c |>\n<| a tags=php,string,regex\
    \ |>\n<code>\n$string = preg_replace('/\\p{L}+/u', '', $string);\n</code>\n<|/\
    \ a dscore=5 |>\n<| c |>\nThis doesn't work for all languages. For example, in\
    \ Turkish, `\xC7` becomes `\xC4` but `\xC7` becomes `\xC3`. So this doesn't work\
    \ for Turkish.\n<|/ c |>\n<| c |>\nThis doesn't work for all languages. For example,\
    \ in Turkish, `\xC7` becomes `\xC4` but `\xC7` becomes `\xC3`. So this doesn't\
    \ work for Turkish.\n<|/ c |>\n<| c |>\nThis doesn't work for all languages. For\
    \ example, in Turkish, `\xC7` becomes `\xC4` but `\xC7` becomes `\xC3`. So this\
    \ doesn't work for Turkish.\n<|/ c |>\n<| c |>\nThis doesn't work for all languages.\
    \ For example, in Turkish, `\xC7` becomes `\xC4` but `\xC7` becomes `\xC3`. So\
    \ this doesn't work for Turkish.\n<|/ c |>\n<| c \nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplrimrl90.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\'\\'', '\"' => '\\\"\\\"', '&' => '&amp;', '<' => '&lt;', '>' => '&gt;')));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0j52ydu.php:14\n\
    Stack trace:\n#0 /tmp/tmpk0j52ydu.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpk0j52ydu.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(mb_convert_case($string, MB_CASE_TITLE, 'UTF-8'));\n\
    }\n</code>\n<|/ a tags=php,regex |>\n<| c |>\nThis doesn't seem to work. `mb_convert_case`\
    \ doesn't seem to support `UTF-8` encoding. `mb_convert_case` returns `null` when\
    \ `UTF-8` encoding is given.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10 and\
    \ it worked fine. Maybe you have a different PHP version? What does `mb_detect_encoding($string)`\
    \ return?\n<|/ c |>\n<| c |>\nIt returns `UTF-8`. But `mb_convert_case` returns\
    \ `null` when `UTF-8` encoding is given.\n<|/ c |>\n<| c |>\nI tested it on PHP\
    \ 5.3.10 and it worked fine. Maybe you have a different PHP version? What does\
    \ `mb_detect_encoding($string)` return?\n<|/ c |>\n<| c |>\nIt returns `UTF-8`.\
    \ But `mb_convert_case` returns `null` when `UTF-8` encoding is given.\n<|/ c\
    \ |>\n<| a dscore=3 |>\n<code>\n$string = preg_replace('/\\p{Ll}/u', '\\U$0',\
    \ $string);\n</code>\n<|/ a tags=php,regex |>\n<| c |>\nThis doesn't seem to work.\
    \ `preg_replace` doesn't seem to support `UTF-8` encoding. `preg_replace` returns\
    \ `null` when `UTF-8` encoding is given.\n<|/ c |>\n<| c |>\nThis doesn't seem\
    \ to work. `preg_replace` doesn't seem to support `UTF-8` encoding. `preg_replace`\
    \ returns `null` when `UTF-8` encoding is given.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ seem to work. `preg_replace` doesn't seem to support `UTF-8` encoding. `preg_replace`\
    \ returns `null` when `UTF-8` encoding is given.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ seem to work. `preg_replace` doesn't seem to support `UTF-8` encoding. `preg_replace`\
    \ returns `null` when `UTF-8` encoding is given.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ seem to work. `preg_replace` doesn't seem to support `UTF-8` encoding. `preg_replace`\
    \ returns `null` when `UTF-8` encoding is given.\n<|/ c |>\n<| a tags=php,regex\
    \ |>\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp05nv46v8.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtolower($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_20y1quz.php:15\n\
    Stack trace:\n#0 /tmp/tmp_20y1quz.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp_20y1quz.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06bq5yyx.php:15\n\
    Stack trace:\n#0 /tmp/tmp06bq5yyx.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp06bq5yyx.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '[' => '[', ']' => ']', '{' =>\
    \ '{', '}' => '}'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzcfgqfb.php:15\n\
    Stack trace:\n#0 /tmp/tmpnzcfgqfb.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpnzcfgqfb.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw23yd45w.php:15\n\
    Stack trace:\n#0 /tmp/tmpw23yd45w.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpw23yd45w.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '\\U$1', $string));\n}\n\
    \nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw5423kc.php:15\n\
    Stack trace:\n#0 /tmp/tmprw5423kc.php(19): test()\n#1 {main}\n  thrown in /tmp/tmprw5423kc.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '{' => '{', '}' => '}', '[' =>\
    \ '[', ']' => '[', '\\\\' => '\\\\\\\\', '|' => '|', '^' => '^', '~' => '~'));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dpyz11k.php:14\n\
    Stack trace:\n#0 /tmp/tmp_dpyz11k.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp_dpyz11k.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0cj306d.php:15\n\
    Stack trace:\n#0 /tmp/tmpm0cj306d.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpm0cj306d.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\\\\\\
    '', '\"' => '\\\\\"', '(' => '\\\\(', ')' => '\\\\)', '*' => '\\\\*', '+' => '\\\
    \\+', ',' => '\\\\,', '-' => '\\\\-', '.' => '\\\\.', '/' => '\\\\/', ':' => '\\\
    \\:', ';' => '\\\\;', '=' => '\\\\=', '<' => '\\\\<', '>' => '\\\\>', '&' => '\\\
    \\&', '|' => '\\\\|', '~' => '\\\\~'));\n}\nfunction candidate(...$args) {\n \
    \   return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqe1_qh7n.php:14\n\
    Stack trace:\n#0 /tmp/tmpqe1_qh7n.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpqe1_qh7n.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaeanyhdd.php:15\n\
    Stack trace:\n#0 /tmp/tmpaeanyhdd.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpaeanyhdd.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'' => '\\\\\\'', '(' =>\
    \ '\\\\(', '*' => '\\\\*', ')' => '\\\\)', '+' => '\\\\+', ',' => '\\\\,', '-'\
    \ => '\\\\-', '.' => '\\\\.', '/' => '\\\\/', ':' => '\\\\:', ';' => '\\\\;',\
    \ '=' => '\\\\=', '<' => '\\\\<', '>' => '\\\\>', '@' => '\\\\@', '[' => '\\\\\
    [', '\\\\' => '\\\\\\\\', ']' => '\\\\]', '^' => '\\\\^', '~' => '\\\\~', '|'\
    \ => '\\\\|', '`' => '\\\\`', '{' => '\\\\{', '}' => '\\\\}'));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4h4eo5od.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'));\n\
    }\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapee4mq2.php:14\n\
    Stack trace:\n#0 /tmp/tmpapee4mq2.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpapee4mq2.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace(['a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'],\n        ['A', 'B', 'C', 'D',\
    \ 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\
    \ 'U', 'V', 'W', 'X', 'Y', 'Z'],\n        $string)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxzatg61.php:18\n\
    Stack trace:\n#0 /tmp/tmpmxzatg61.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmxzatg61.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', strtoupper($string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70qigmel.php:15\n\
    Stack trace:\n#0 /tmp/tmp70qigmel.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp70qigmel.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyysdpvd.php:15\n\
    Stack trace:\n#0 /tmp/tmpvyysdpvd.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpvyysdpvd.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '$1', $string));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjn_0z63z.php:15\n\
    Stack trace:\n#0 /tmp/tmpjn_0z63z.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpjn_0z63z.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '\\\\' => '\\\\\\\\', \"'\" => '\\'\\'\\'', '(' => '(',\
    \ ')' => ')', '{' => '{', '}' => '}', '[' => '[', ']' => ']'));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r0s8_1w.php:15\n\
    Stack trace:\n#0 /tmp/tmp7r0s8_1w.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp7r0s8_1w.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return preg_replace('/./u', 'u', $string);\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ep710kb.php:15\n\
    Stack trace:\n#0 /tmp/tmp9ep710kb.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp9ep710kb.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsslulj6d.php:15\n\
    Stack trace:\n#0 /tmp/tmpsslulj6d.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpsslulj6d.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvfvpetv.php:15\n\
    Stack trace:\n#0 /tmp/tmpfvfvpetv.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpfvfvpetv.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\'\\\
    '', '\"' => '\\\"\\\"', '(' => '(', ')' => ')', '[' => '[', ']' => ']', '{' =>\
    \ '{', '}' => '}'));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjnte22t4.php:15\n\
    Stack trace:\n#0 /tmp/tmpjnte22t4.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpjnte22t4.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpes1rt7au.php:15\n\
    Stack trace:\n#0 /tmp/tmpes1rt7au.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpes1rt7au.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace('l','I',\n\
    \        str_replace('I','l',$string))));\n}\n\nfunction candidate(...$args) {\n\
    \    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2p0ccx9.php:17\n\
    Stack trace:\n#0 /tmp/tmpm2p0ccx9.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpm2p0ccx9.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '$1', $string));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww2l7mj_.php:15\n\
    Stack trace:\n#0 /tmp/tmpww2l7mj_.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpww2l7mj_.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        str_replace(['A',\
    \ 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',\
    \ 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n        ['a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z'],\n        $string)));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzpe7o5np.php:18\n\
    Stack trace:\n#0 /tmp/tmpzpe7o5np.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpzpe7o5np.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr(strtolower($string), array('!' => '!', '?' => '?'));\n}\n\
    \nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndffys7q.php:15\n\
    Stack trace:\n#0 /tmp/tmpndffys7q.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpndffys7q.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(strtr($string, array('!' => '!!', '?' => '??', '\\\
    '' => '\\\\\\'', '\"' => '\\\\\"', '&' => '\\\\&', '\\'\\'' => '\\\\\\'\\'', '\"\
    \\'' => '\\\\\"\\'', '\\'\"' => '\\\\\\'\"', '\"\\'\\'' => '\\\\\"\\'\\'', '\\\
    '\\'\\'' => '\\\\\\'\\'\\'', '\\'\\'\"' => '\\\\\\'\\'\"', '\\'\"\\'' => '\\\\\
    \\'\"\\'', '\\'\"\\'\\'' => '\\\\\\'\"\\'\\'', '\\'\"\\'\"' => '\\\\\\'\"\\'\"\
    ', '\\'\"\\'\\'\\'' => '\\\\\\'\"\\'\\'\\'', '\\'\"\\'\"\\'' => '\\\\\\'\"\\'\"\
    \\'', '\\'\"\\'\"\\'\\'' => '\\\\\\'\"\\'\"\\'\\'', '\\'\"\\'\"\\'\\'' => '\\\\\
    \\'\"\\'\"\\'\\'', '\\'\"\\'\"\\'\"' => '\\\\\\'\"\\'\"\\'\"', '\\'\"\\'\"\\'\"\
    \\'' => '\\\\\\'\"\\'\"\\'\"\\'', '\\'\"\\'\"\\'\"\\'\\'' => '\\\\\\'\"\\'\"\\\
    '\"\\'\\'', '\\'\"\\'\"\\'\"\\'\\'' => '\\\\\\'\"\\'\"\\'\"\\'\\'', '\\'\"\\'\"\
    \\'\"\\'\\'' => '\\\\\\'\"\\'\"\\'\"\\'\\'', '\\'\"\\'\"\\'\"\\'\\'' => '\\\\\\\
    '\"\\'\"\\'\"\\'\\'', '\\'\"\\'\"\\'\"\\'\"' => '\\\\\\'\"\\'\"\\'\"\\'\"', '\\\
    '\"\\'\"\\'\"\\'\"\\'' => '\\\\\\'\"\\'\"\\'\"\\'\"\\'', '\\'\"\\'\"\\'\"\\'\"\
    \\'\\'' => '\\\\\\'\"\\'\"\\'\"\\'\"\\'\\'', '\\'\"\\'\"\\'\"\\'\"\\'\\'' => '\\\
    \\\\'\"\\'\"\\'\"\\'\"\\'\\'', '\\'\"\\'\"\\'\"\\'\"\\'\\'' => '\\\\\\'\"\\'\"\
    \\'\"\\'\"\\'\\'', '\\'\"\\'\"\\'\"\\'\"\\'\"\\'' => '\\\\\\'\"\\'\"\\'\"\\'\"\
    \\'\"\\'', '\\'\"\\'\"\\'\"\\'\"\\'\"\\'\\'' => '\\\\\\'\"\\'\"\\'\"\\'\"\\'\"\
    \\'\\'', '\\'\"\\'\"\\'\"\\'\"\\'\"\\'\\'' => '\\\\\\'\"\\'\"\\'\"\\'\"\\'\"\\\
    '\\'', '\\'\"\\'\"\\'\"\\'\"\\'\"\\'\\'' => '\\\\\\'\"\\'\"\\'\"\\'\"\\'\"\\'\\\
    '', '\\'\"\\'\"\\'\"\\'\"\\'\"\\'\\'' => '\\\\\\'\"\\'\"\\'\"\\'\"\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpargb10e3.php on line 6\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\\\\\\
    '', '\"' => '\\\\\"', '(' => '\\\\(', ')' => '\\\\)', '*' => '\\\\*', '+' =>\n\
    \        '\\\\+', '&' => '\\\\&', '=' => '\\\\=', '<' => '\\\\<', '>' => '\\\\\
    >', '|' => '\\\\|', '\\\\' => '\\\\\\\\'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjfagpo1.php:16\n\
    Stack trace:\n#0 /tmp/tmptjfagpo1.php(20): test()\n#1 {main}\n  thrown in /tmp/tmptjfagpo1.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1o6c_15_.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '$1', $string));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmx14cja.php:15\n\
    Stack trace:\n#0 /tmp/tmphmx14cja.php(19): test()\n#1 {main}\n  thrown in /tmp/tmphmx14cja.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('a'=>'A', 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\
    \ 'f'=>'F', 'g'=>'G', 'h'=>'H', 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L', 'm'=>'M',\
    \ 'n'=>'N', 'o'=>'O', 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S', 't'=>'T', 'u'=>'U',\
    \ 'v'=>'V', 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return flip_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello!\") !== \"hELLO!\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    These violent delights have violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7v57ml6h.php:15\n\
    Stack trace:\n#0 /tmp/tmp7v57ml6h.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp7v57ml6h.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '$1', $string));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6xls1d09.php:15\n\
    Stack trace:\n#0 /tmp/tmp6xls1d09.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp6xls1d09.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array_flip(str_split($string)));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvid2lrpm.php:15\n\
    Stack trace:\n#0 /tmp/tmpvid2lrpm.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpvid2lrpm.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/([a-z])/i', '$1', $string));\n}\n\n\
    function candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86m576ni.php:15\n\
    Stack trace:\n#0 /tmp/tmp86m576ni.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp86m576ni.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', '',\n        strtr($string, array('a'=>'A',\
    \ 'b'=>'B', 'c'=>'C', 'd'=>'D', 'e'=>'E',\n        'f'=>'F', 'g'=>'G', 'h'=>'H',\
    \ 'i'=>'I', 'j'=>'J', 'k'=>'K', 'l'=>'L',\n        'm'=>'M', 'n'=>'N', 'o'=>'O',\
    \ 'p'=>'P', 'q'=>'Q', 'r'=>'R', 's'=>'S',\n        't'=>'T', 'u'=>'U', 'v'=>'V',\
    \ 'w'=>'W', 'x'=>'X', 'y'=>'Y', 'z'=>'Z',\n        'A'=>'a', 'B'=>'b', 'C'=>'c',\
    \ 'D'=>'d', 'E'=>'e', 'F'=>'f', 'G'=>'g',\n        'H'=>'h', 'I'=>'i', 'J'=>'j',\
    \ 'K'=>'k', 'L'=>'l', 'M'=>'m', 'N'=>'n',\n        'O'=>'o', 'P'=>'p', 'Q'=>'q',\
    \ 'R'=>'r', 'S'=>'s', 'T'=>'t', 'U'=>'u',\n        'V'=>'v', 'W'=>'w', 'X'=>'x',\
    \ 'Y'=>'y', 'Z'=>'z')));\n}\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"These violent delights have\
    \ violent ends\") !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4bxlie2m.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', $string));\n}\n\nfunction\
    \ candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02f_x472.php:15\n\
    Stack trace:\n#0 /tmp/tmp02f_x472.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp02f_x472.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtr($string, array('!' => '!!', '?' => '??', '\\'' => '\\''))\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpao37o2yx.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n// >>> flip_case('Hello')\n// 'hELLO'\nfunction flip_case($string)\
    \ {\n    return strtoupper(preg_replace('/./u', 'u', strtolower($string)));\n\
    }\n\nfunction candidate(...$args) {\n    return flip_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello!\") !== \"hELLO!\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"These violent delights have violent ends\"\
    ) !== \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpuh5ife.php:15\n\
    Stack trace:\n#0 /tmp/tmpkpuh5ife.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpkpuh5ife.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception

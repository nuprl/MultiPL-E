name: HumanEval_84_solve
language: php
results:
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad($binary, $sum, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\necho solve($N);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7f2ihhx8.php:30\n\
    Stack trace:\n#0 /tmp/tmp7f2ihhx8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7f2ihhx8.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpma_n7qjf.php:28\n\
    Stack trace:\n#0 /tmp/tmpma_n7qjf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpma_n7qjf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$input = \"142\";\n$output = solve($input);\necho \"\
    $output\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "00000100\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4l_jm9o.php:31\n\
    Stack trace:\n#0 /tmp/tmpt4l_jm9o.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt4l_jm9o.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpb9a02i17.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9a02i17.php:30\n\
    Stack trace:\n#0 /tmp/tmpb9a02i17.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpb9a02i17.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpd44d0gaq.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmpd44d0gaq.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd44d0gaq.php:33\n\
    Stack trace:\n#0 /tmp/tmpd44d0gaq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpd44d0gaq.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    while($N > 0) {\n\
    \        $sum += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N .\
    \ $binary;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34ysrydy.php:28\n\
    Stack trace:\n#0 /tmp/tmp34ysrydy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp34ysrydy.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$tests\
    \ = array(\n    array(1),\n    array(2),\n    array(3),\n    array(4),\n    array(5),\n\
    \    array(6),\n    array(7),\n    array(8),\n    array(9),\n    array(10),\n\
    \    array(11),\n    array(12),\n    array(13),\n    array(14),\n    array(15),\n\
    \    array(16),\n    array(17),\n    array(18),\n    array(19),\n    array(20),\n\
    \    array(21),\n    array(22),\n    array(23),\n    array(24),\n    array(25),\n\
    \    array(26),\n    array(27),\n    array(28),\n    array(29),\n    array(30),\n\
    \    array(31),\n    array(32),\n    array(33),\n    array(34),\n    array(35),\n\
    \    array(36),\n    array(37),\n    array(38),\n    array(39),\n    array(40),\n\
    \    array(41),\n    array(42),\n    array(43),\n    array(44),\n    array(45),\n\
    \    array(46),\n    array(47),\n    array(48),\n    array(49),\n    array(50),\n\
    \    array(51),\n    array(52),\n    array(53),\n    array(54),\n    array(55),\n\
    \    array(56),\n    array(57),\n    array(58),\n    array(59),\n    array(60),\n\
    \    array(61),\n    array(62),\n    array(63),\n    array(64),\n    array(65),\n\
    \    array(66),\n    array(67),\n    array(68),\n    array(69),\n    array(70),\n\
    \    array(71),\n    array(72),\n    array(73),\n    array(74),\n    array(75),\n\
    \    array(76),\n    array(77),\n    array(78),\n    array(79),\n    array(80),\n\
    \    array(81),\n    array(82),\n    array(83),\n    array(84),\n    array(85),\n\
    \    array(86),\n    array(87),\n    array(88),\n    array(89),\n    array(90),\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpypz7e9d2.php on line 118\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\n$result = solve($N);\necho $result;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpbh4r87t7.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmpbh4r87t7.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbh4r87t7.php:34\n\
    Stack trace:\n#0 /tmp/tmpbh4r87t7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbh4r87t7.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpp6lbyqwp.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6lbyqwp.php:30\n\
    Stack trace:\n#0 /tmp/tmpp6lbyqwp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpp6lbyqwp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00000000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj6uz2h_.php:30\n\
    Stack trace:\n#0 /tmp/tmptj6uz2h_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptj6uz2h_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1n726vp.php:30\n\
    Stack trace:\n#0 /tmp/tmpz1n726vp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz1n726vp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    for($i = 0; $i < $N;\
    \ $i++) {\n        $sum += $N % 2;\n        $binary = $N % 2;\n        $N = $N\
    \ / 2;\n    }\n    return $sum + $binary;\n}\n\n$result = solve($N);\necho $result;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpymw67v9d.php on line\
    \ 21\n0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpymw67v9d.php:31\n\
    Stack trace:\n#0 /tmp/tmpymw67v9d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpymw67v9d.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpf5zhg7zk.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5zhg7zk.php:30\n\
    Stack trace:\n#0 /tmp/tmpf5zhg7zk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf5zhg7zk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp2iypjg9p.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmp2iypjg9p.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2iypjg9p.php:33\n\
    Stack trace:\n#0 /tmp/tmp2iypjg9p.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2iypjg9p.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $remainder = 0;\n    $N = abs($N);\n   \
    \ while($N > 0) {\n        $remainder = $N % 2;\n        $N = $N/2;\n        $sum\
    \ = $sum + $remainder;\n        $binary = $remainder . $binary;\n    }\n    return\
    \ $binary;\n}\n\n$N = 147;\necho solve($N);\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdoutn\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_a768u14.php:33\nStack\
    \ trace:\n#0 /tmp/tmp_a768u14.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_a768u14.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jbpq5i8.php:27\n\
    Stack trace:\n#0 /tmp/tmp9jbpq5i8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9jbpq5i8.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfxlw6j50.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxlw6j50.php:30\n\
    Stack trace:\n#0 /tmp/tmpfxlw6j50.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfxlw6j50.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fhs2m7y.php:31\n\
    Stack trace:\n#0 /tmp/tmp_fhs2m7y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_fhs2m7y.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpi7ldtezu.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7ldtezu.php:30\n\
    Stack trace:\n#0 /tmp/tmpi7ldtezu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi7ldtezu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpcg76404e.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcg76404e.php:30\n\
    Stack trace:\n#0 /tmp/tmpcg76404e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcg76404e.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrulne40.php:27\n\
    Stack trace:\n#0 /tmp/tmpwrulne40.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwrulne40.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp6cq89yvd.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cq89yvd.php:30\n\
    Stack trace:\n#0 /tmp/tmp6cq89yvd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6cq89yvd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy7q7kfn9.php:31\n\
    Stack trace:\n#0 /tmp/tmpy7q7kfn9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy7q7kfn9.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary .= $sum %\
    \ 2;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N = 150;\necho\
    \ solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdoutn\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpbmmu5_7j.php:33\nStack\
    \ trace:\n#0 /tmp/tmpbmmu5_7j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbmmu5_7j.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$result\
    \ = solve($N);\necho $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0rbrv14g.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0rbrv14g.php:33\n\
    Stack trace:\n#0 /tmp/tmp0rbrv14g.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0rbrv14g.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\n$binary = solve($N);\necho $binary;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpokssjw4m.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmpokssjw4m.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpokssjw4m.php:34\n\
    Stack trace:\n#0 /tmp/tmpokssjw4m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpokssjw4m.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuycgxu7q.php:31\n\
    Stack trace:\n#0 /tmp/tmpuycgxu7q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuycgxu7q.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpswdlp24f.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpswdlp24f.php:30\n\
    Stack trace:\n#0 /tmp/tmpswdlp24f.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpswdlp24f.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpfgr_fxmy.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgr_fxmy.php:30\n\
    Stack trace:\n#0 /tmp/tmpfgr_fxmy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfgr_fxmy.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tmf_l5e.php:27\n\
    Stack trace:\n#0 /tmp/tmp1tmf_l5e.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1tmf_l5e.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1sfzbgv2.php:27\n\
    Stack trace:\n#0 /tmp/tmp1sfzbgv2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1sfzbgv2.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary .= $sum %\
    \ 2;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$input = \"142\"\
    ;\n$output = solve($input);\necho \"$output\\n\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmplupd4er4.php:34\nStack\
    \ trace:\n#0 /tmp/tmplupd4er4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplupd4er4.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\n\n$N = 147;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrnojbq5.php:33\n\
    Stack trace:\n#0 /tmp/tmplrnojbq5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplrnojbq5.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad($binary, $sum, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\n</code>\n<|/ a tags=php,algorithm |>\n<| a tags=php,algorithm\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz5e9t73g.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary .= $sum %\
    \ 2;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xj7z7az.php:30\n\
    Stack trace:\n#0 /tmp/tmp5xj7z7az.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5xj7z7az.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpbq1di_bb.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbq1di_bb.php:30\n\
    Stack trace:\n#0 /tmp/tmpbq1di_bb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbq1di_bb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxs94u84w.php:27\n\
    Stack trace:\n#0 /tmp/tmpxs94u84w.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxs94u84w.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad($binary, $sum, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhqvh017.php:27\n\
    Stack trace:\n#0 /tmp/tmphhqvh017.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphhqvh017.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\n$binary = solve($N);\necho $binary;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpor9mpdm3.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmpor9mpdm3.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpor9mpdm3.php:34\n\
    Stack trace:\n#0 /tmp/tmpor9mpdm3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpor9mpdm3.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6uwgmbo.php:27\n\
    Stack trace:\n#0 /tmp/tmpr6uwgmbo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr6uwgmbo.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykayooo3.php:30\n\
    Stack trace:\n#0 /tmp/tmpykayooo3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpykayooo3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjvcisglu.php:27\n\
    Stack trace:\n#0 /tmp/tmpjvcisglu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjvcisglu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn71awfwo.php:30\n\
    Stack trace:\n#0 /tmp/tmpn71awfwo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpn71awfwo.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    for ($i = 0; $i < $sum; $i++) {\n        $binary\
    \ .= \"1\";\n    }\n    return $binary;\n}\n\n$N = 147;\necho solve($N);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8a5lbl0.php:32\n\
    Stack trace:\n#0 /tmp/tmpn8a5lbl0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn8a5lbl0.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmptm_vs9_h.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptm_vs9_h.php:30\n\
    Stack trace:\n#0 /tmp/tmptm_vs9_h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptm_vs9_h.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\n\n$N = 147;\n\
    $binary = solve($N);\necho $binary;\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprz7t1lyn.php:34\n\
    Stack trace:\n#0 /tmp/tmprz7t1lyn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmprz7t1lyn.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7vuiqpu.php:27\n\
    Stack trace:\n#0 /tmp/tmpe7vuiqpu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe7vuiqpu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp86fsuazc.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86fsuazc.php:30\n\
    Stack trace:\n#0 /tmp/tmp86fsuazc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp86fsuazc.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum ? $binary : \"0\";\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjrpstfyd.php:27\n\
    Stack trace:\n#0 /tmp/tmpjrpstfyd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjrpstfyd.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkfm8jsjq.php:27\n\
    Stack trace:\n#0 /tmp/tmpkfm8jsjq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkfm8jsjq.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpj7p49vpx.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7p49vpx.php:30\n\
    Stack trace:\n#0 /tmp/tmpj7p49vpx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj7p49vpx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $remainder = 0;\n    $remainder2 = 0;\n\
    \    $remainder3 = 0;\n    $remainder4 = 0;\n    $remainder5 = 0;\n    $remainder6\
    \ = 0;\n    $remainder7 = 0;\n    $remainder8 = 0;\n    $remainder9 = 0;\n   \
    \ $remainder10 = 0;\n    $remainder11 = 0;\n    $remainder12 = 0;\n    $remainder13\
    \ = 0;\n    $remainder14 = 0;\n    $remainder15 = 0;\n    $remainder16 = 0;\n\
    \    $remainder17 = 0;\n    $remainder18 = 0;\n    $remainder19 = 0;\n    $remainder20\
    \ = 0;\n    $remainder21 = 0;\n    $remainder22 = 0;\n    $remainder23 = 0;\n\
    \    $remainder24 = 0;\n    $remainder25 = 0;\n    $remainder26 = 0;\n    $remainder27\
    \ = 0;\n    $remainder28 = 0;\n    $remainder29 = 0;\n    $remainder30 = 0;\n\
    \    $remainder31 = 0;\n    $remainder32 = 0;\n    $remainder33 = 0;\n    $remainder34\
    \ = 0;\n    $remainder35 = 0;\n    $remainder36 = 0;\n    $remainder37 = 0;\n\
    \    $remainder38 = 0;\n    $remainder39 = 0;\n    $remainder40 = 0;\n    $remainder41\
    \ = 0;\n    $remainder42 = 0;\n    $remainder43 = 0;\n    $remainder44 = 0;\n\
    \    $remainder45 = 0;\n    $remainder46 = 0;\n    $remainder47 = 0;\n    $remainder48\
    \ = 0;\n    $remainder49 = 0;\n    $remainder50 = 0;\n    $remainder51 = 0;\n\
    \    $remainder52 = 0;\n    $remainder53 = 0;\n    $remainder54 = 0;\n    $remainder55\
    \ = 0;\n    $remainder56 = 0;\n    $remainder57 = 0;\n    $remainder58 = 0;\n\
    \    $remainder59 = 0;\n    $remainder60 = 0;\n    $remainder61 = 0;\n    $remainder62\
    \ = 0;\n    $remainder63 = 0;\n    $remainder64 = 0;\n    $remainder65 = 0;\n\
    \    $remainder66 = 0;\n    $remainder67 = 0;\n    $remainder68 = 0;\n    $remainder69\
    \ = 0;\n    $remainder70 = 0;\n    $remainder71 = 0;\n    $remainder72 = 0;\n\
    \    $remainder73 = 0;\n    $remainder74 = 0;\n    $remainder75 = 0;\n    $remainder76\
    \ = 0;\n    $remainder77 = 0;\n    $remainder78 = 0;\n    $remainder79 = 0;\n\
    \    $remainder80 = 0;\n    $remainder81 = 0;\n    $remainder82 = 0;\n    $remainder83\
    \ = 0;\n    $remainder84 = 0;\n    $remainder85\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1nuhu9op.php on line 100\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpq_0mv_vo.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmpq_0mv_vo.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_0mv_vo.php:33\n\
    Stack trace:\n#0 /tmp/tmpq_0mv_vo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq_0mv_vo.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh645__t.php:27\n\
    Stack trace:\n#0 /tmp/tmpwh645__t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwh645__t.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu4zhgzer.php:30\n\
    Stack trace:\n#0 /tmp/tmpu4zhgzer.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu4zhgzer.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphd76rkhe.php:30\n\
    Stack trace:\n#0 /tmp/tmphd76rkhe.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphd76rkhe.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmnt6pnpg.php:27\n\
    Stack trace:\n#0 /tmp/tmpmnt6pnpg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmnt6pnpg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    do {\n        $sum\
    \ += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N . $binary;\n \
    \   } while ($N > 0);\n    return $sum ? $binary : \"0\";\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t3utq1r.php:28\n\
    Stack trace:\n#0 /tmp/tmp_t3utq1r.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_t3utq1r.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmplnc4_jv8.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnc4_jv8.php:30\n\
    Stack trace:\n#0 /tmp/tmplnc4_jv8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplnc4_jv8.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = str_pad($N, 8, '0', STR_PAD_LEFT);\n\
    \    for ($i = 0; $i < strlen($N); $i++) {\n        $sum += $N[$i];\n        $binary\
    \ = $N[$i].$binary;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx04hiu7q.php:27\n\
    Stack trace:\n#0 /tmp/tmpx04hiu7q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx04hiu7q.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmppw2fn9ia.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppw2fn9ia.php:30\n\
    Stack trace:\n#0 /tmp/tmppw2fn9ia.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppw2fn9ia.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while ($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghwen3bh.php:30\n\
    Stack trace:\n#0 /tmp/tmpghwen3bh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpghwen3bh.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67d3zn8_.php:31\n\
    Stack trace:\n#0 /tmp/tmp67d3zn8_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp67d3zn8_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    for ($i = 0; $i < $sum; $i++) {\n        $binary\
    \ .= \"1\";\n    }\n    return $binary;\n}\n\n$N = $_GET[\"N\"];\n$result = solve($N);\n\
    echo $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsz8_uepv.php:33\n\
    Stack trace:\n#0 /tmp/tmpsz8_uepv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsz8_uepv.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp7jriup2r.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmp7jriup2r.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jriup2r.php:33\n\
    Stack trace:\n#0 /tmp/tmp7jriup2r.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7jriup2r.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpqq536tdv.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmpqq536tdv.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqq536tdv.php:33\n\
    Stack trace:\n#0 /tmp/tmpqq536tdv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqq536tdv.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2qvj244.php:27\n\
    Stack trace:\n#0 /tmp/tmpy2qvj244.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy2qvj244.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpi8ffi1qb.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8ffi1qb.php:30\n\
    Stack trace:\n#0 /tmp/tmpi8ffi1qb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi8ffi1qb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 150;\necho solve($N);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqi5uezg7.php:30\n\
    Stack trace:\n#0 /tmp/tmpqi5uezg7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqi5uezg7.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = str_pad($N, 8, \"0\", STR_PAD_LEFT);\n\
    \    for ($i = 0; $i < strlen($N); $i++) {\n        $sum += $N[$i];\n        $binary\
    \ = $N[$i].$binary;\n    }\n    return $sum;\n}\n\n$result = solve($N);\necho\
    \ $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2v894and.php:30\n\
    Stack trace:\n#0 /tmp/tmp2v894and.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2v894and.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpzeefd5ym.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzeefd5ym.php:30\n\
    Stack trace:\n#0 /tmp/tmpzeefd5ym.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzeefd5ym.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe39nl4d5.php:31\n\
    Stack trace:\n#0 /tmp/tmpe39nl4d5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe39nl4d5.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwoiv9nbt.php:27\n\
    Stack trace:\n#0 /tmp/tmpwoiv9nbt.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwoiv9nbt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    while($N > 0) {\n\
    \        $sum += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N .\
    \ $binary;\n    }\n    return $sum;\n}\n\n$result = solve($N);\necho $result;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1l01lkp.php:31\n\
    Stack trace:\n#0 /tmp/tmpq1l01lkp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpq1l01lkp.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp9kzh52t6.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kzh52t6.php:30\n\
    Stack trace:\n#0 /tmp/tmp9kzh52t6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9kzh52t6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 150;\necho solve($N);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcj61p20k.php:30\n\
    Stack trace:\n#0 /tmp/tmpcj61p20k.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcj61p20k.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15efzuj1.php:27\n\
    Stack trace:\n#0 /tmp/tmp15efzuj1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp15efzuj1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = (string)$N;\n    for($i = 0; $i < strlen($N);\
    \ $i++) {\n        $sum += $N[$i];\n        $binary = $N[$i].$binary;\n    }\n\
    \    return $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlad3yfn.php:27\n\
    Stack trace:\n#0 /tmp/tmpqlad3yfn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqlad3yfn.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpunt72_nv.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunt72_nv.php:30\n\
    Stack trace:\n#0 /tmp/tmpunt72_nv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpunt72_nv.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = abs($N);\n    do {\n        $sum +=\
    \ $N % 2;\n        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\
    \ while ($N > 0);\n    return $sum ? $binary : \"0\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunvbmar8.php:29\n\
    Stack trace:\n#0 /tmp/tmpunvbmar8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpunvbmar8.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary .= $sum %\
    \ 2;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwe6rps4h.php:30\n\
    Stack trace:\n#0 /tmp/tmpwe6rps4h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwe6rps4h.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\necho solve($N);\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0sfj11rx.php:30\n\
    Stack trace:\n#0 /tmp/tmp0sfj11rx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0sfj11rx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $remainder = 0;\n    while($N > 0) {\n \
    \       $remainder = $N % 2;\n        $N = $N / 2;\n        $sum = $sum + $remainder;\n\
    \        $binary = $remainder . $binary;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\n$binary = solve($N);\necho $binary;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdoutn\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_wvmyd4a.php:33\nStack\
    \ trace:\n#0 /tmp/tmp_wvmyd4a.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_wvmyd4a.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9pmxgnb.php:31\n\
    Stack trace:\n#0 /tmp/tmpy9pmxgnb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy9pmxgnb.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $remainder = 0;\n    while($N > 0) {\n \
    \       $remainder = $N % 2;\n        $N = $N / 2;\n        $sum = $sum + $remainder;\n\
    \        $binary = $remainder . $binary;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprf7343jx.php:29\n\
    Stack trace:\n#0 /tmp/tmprf7343jx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprf7343jx.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpwz9z3co8.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwz9z3co8.php:31\n\
    Stack trace:\n#0 /tmp/tmpwz9z3co8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwz9z3co8.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpmkoy3jwk.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkoy3jwk.php:30\n\
    Stack trace:\n#0 /tmp/tmpmkoy3jwk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmkoy3jwk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpx27klm01.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx27klm01.php:30\n\
    Stack trace:\n#0 /tmp/tmpx27klm01.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx27klm01.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hb2zaoh.php:28\n\
    Stack trace:\n#0 /tmp/tmp2hb2zaoh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2hb2zaoh.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprchs9wdv.php:31\n\
    Stack trace:\n#0 /tmp/tmprchs9wdv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprchs9wdv.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $remainder = 0;\n    $digits = str_split($N);\n\
    \    foreach ($digits as $digit) {\n        $sum += $digit;\n        $remainder\
    \ = $sum % 2;\n        $binary = $remainder . $binary;\n        $sum = $sum /\
    \ 2;\n    }\n    return $binary;\n}\n\n$result = solve($N);\necho $result;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp7yk4eu3l.php on line\
    \ 18\n0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yk4eu3l.php:33\n\
    Stack trace:\n#0 /tmp/tmp7yk4eu3l.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7yk4eu3l.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum ? $binary : \"0\";\n}\n\n$N = $_GET[\"N\"];\n$result = solve($N);\necho\
    \ $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp68vrxyd0.php:31\n\
    Stack trace:\n#0 /tmp/tmp68vrxyd0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp68vrxyd0.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad($binary, $sum, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0etjwdqw.php:30\n\
    Stack trace:\n#0 /tmp/tmp0etjwdqw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0etjwdqw.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojo4neei.php:31\n\
    Stack trace:\n#0 /tmp/tmpojo4neei.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpojo4neei.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwnodn9q.php:31\n\
    Stack trace:\n#0 /tmp/tmpwwnodn9q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwwnodn9q.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljq62th6.php:27\n\
    Stack trace:\n#0 /tmp/tmpljq62th6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpljq62th6.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n</code>\n<|/ a tags=php,algorithm |>\n<| a dscore=0 |>\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9_hz_0_n.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4wisagn_.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wisagn_.php:31\n\
    Stack trace:\n#0 /tmp/tmp4wisagn_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4wisagn_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\n\n$result\
    \ = solve($N);\necho $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwx_fe0h_.php:33\n\
    Stack trace:\n#0 /tmp/tmpwx_fe0h_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwx_fe0h_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum ? $binary : \"0\";\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx60hmxa8.php:27\n\
    Stack trace:\n#0 /tmp/tmpx60hmxa8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx60hmxa8.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = str_pad($N, 8, '0', STR_PAD_LEFT);\n\
    \    for ($i = 0; $i < strlen($N); $i++) {\n        $sum += $N[$i];\n        $binary\
    \ = $N[$i] . $binary;\n    }\n    return $sum % 2 == 0 ? $binary : \"0$binary\"\
    ;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ipvku7h.php:27\n\
    Stack trace:\n#0 /tmp/tmp3ipvku7h.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3ipvku7h.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = $_GET[\"N\"];\n$result = solve($N);\necho $result;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvg9islg.php:31\n\
    Stack trace:\n#0 /tmp/tmpdvg9islg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdvg9islg.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1roygqhd.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1roygqhd.php:30\n\
    Stack trace:\n#0 /tmp/tmp1roygqhd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1roygqhd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpj89ifqu1.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89ifqu1.php:30\n\
    Stack trace:\n#0 /tmp/tmpj89ifqu1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj89ifqu1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcrd5z5qi.php:30\n\
    Stack trace:\n#0 /tmp/tmpcrd5z5qi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcrd5z5qi.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89wvjd73.php:31\n\
    Stack trace:\n#0 /tmp/tmp89wvjd73.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp89wvjd73.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $i = 0;\n    while ($N > 0) {\n        $sum\
    \ += $N % 2;\n        $N = $N / 2;\n        $i++;\n    }\n    while ($i > 0) {\n\
    \        $binary .= $sum % 2;\n        $sum = $sum / 2;\n        $i--;\n    }\n\
    \    return $binary;\n}\n\n$N = 147;\n$result = solve($N);\necho $result;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdoutn\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsmdgznzk.php:37\nStack\
    \ trace:\n#0 /tmp/tmpsmdgznzk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsmdgznzk.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzj8zrn__.php:31\n\
    Stack trace:\n#0 /tmp/tmpzj8zrn__.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzj8zrn__.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = $_GET[\"N\"];\n$result = solve($N);\necho $result;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf3148eg.php:31\n\
    Stack trace:\n#0 /tmp/tmpuf3148eg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuf3148eg.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4i7sa9k.php:27\n\
    Stack trace:\n#0 /tmp/tmpa4i7sa9k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa4i7sa9k.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while ($sum > 0) {\n        $binary .= ($sum\
    \ % 2);\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$result =\
    \ solve($N);\necho $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm7xgm7l.php:33\n\
    Stack trace:\n#0 /tmp/tmpzm7xgm7l.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzm7xgm7l.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpigh18o4h.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmpigh18o4h.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigh18o4h.php:33\n\
    Stack trace:\n#0 /tmp/tmpigh18o4h.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpigh18o4h.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7u7j8gd_.php:27\n\
    Stack trace:\n#0 /tmp/tmp7u7j8gd_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7u7j8gd_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmprs04utoz.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprs04utoz.php:30\n\
    Stack trace:\n#0 /tmp/tmprs04utoz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprs04utoz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpithbf77l.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpithbf77l.php:30\n\
    Stack trace:\n#0 /tmp/tmpithbf77l.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpithbf77l.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev1y0sya.php:27\n\
    Stack trace:\n#0 /tmp/tmpev1y0sya.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpev1y0sya.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\n$binary = solve($N);\necho $binary;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpx96uecia.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmpx96uecia.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx96uecia.php:34\n\
    Stack trace:\n#0 /tmp/tmpx96uecia.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx96uecia.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = $_GET[\"N\"];\n$result = solve($N);\necho $result;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4oil0v_9.php:31\n\
    Stack trace:\n#0 /tmp/tmp4oil0v_9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4oil0v_9.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\necho solve($N);\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpurepk06_.php:30\n\
    Stack trace:\n#0 /tmp/tmpurepk06_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpurepk06_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\necho solve($N);\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqykxymw.php:30\n\
    Stack trace:\n#0 /tmp/tmppqykxymw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppqykxymw.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    while($N > 0) {\n\
    \        $sum += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N .\
    \ $binary;\n    }\n    return $sum;\n}\n\n$N = 147;\necho solve($N);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppraza4cv.php:31\n\
    Stack trace:\n#0 /tmp/tmppraza4cv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppraza4cv.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    while($N > 0) {\n\
    \        $sum += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N .\
    \ $binary;\n    }\n    return $sum;\n}\n\n$result = solve($N);\necho $result;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6qn7xpt.php:31\n\
    Stack trace:\n#0 /tmp/tmpj6qn7xpt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj6qn7xpt.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpcsir6hwc.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcsir6hwc.php:30\n\
    Stack trace:\n#0 /tmp/tmpcsir6hwc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcsir6hwc.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp8tb47563.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tb47563.php:30\n\
    Stack trace:\n#0 /tmp/tmp8tb47563.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8tb47563.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpofhld2ty.php:30\n\
    Stack trace:\n#0 /tmp/tmpofhld2ty.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpofhld2ty.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00000000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwl3r_ba.php:30\n\
    Stack trace:\n#0 /tmp/tmpmwl3r_ba.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmwl3r_ba.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpjnh1oaxb.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjnh1oaxb.php:30\n\
    Stack trace:\n#0 /tmp/tmpjnh1oaxb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjnh1oaxb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpijcbi_dv.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijcbi_dv.php:30\n\
    Stack trace:\n#0 /tmp/tmpijcbi_dv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpijcbi_dv.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp70n4czv8.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmp70n4czv8.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70n4czv8.php:33\n\
    Stack trace:\n#0 /tmp/tmp70n4czv8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp70n4czv8.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00000000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87tumo9w.php:30\n\
    Stack trace:\n#0 /tmp/tmp87tumo9w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp87tumo9w.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23gi4zj6.php:28\n\
    Stack trace:\n#0 /tmp/tmp23gi4zj6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp23gi4zj6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    while($N > 0) {\n\
    \        $sum += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N .\
    \ $binary;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfryh15cb.php:28\n\
    Stack trace:\n#0 /tmp/tmpfryh15cb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfryh15cb.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp_r1s6jcn.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_r1s6jcn.php:30\n\
    Stack trace:\n#0 /tmp/tmp_r1s6jcn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_r1s6jcn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpkw73vcad.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw73vcad.php:30\n\
    Stack trace:\n#0 /tmp/tmpkw73vcad.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkw73vcad.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp0z6sm_z5.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0z6sm_z5.php:30\n\
    Stack trace:\n#0 /tmp/tmp0z6sm_z5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0z6sm_z5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpqsa8vnvj.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsa8vnvj.php:30\n\
    Stack trace:\n#0 /tmp/tmpqsa8vnvj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqsa8vnvj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpe6vuyby5.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6vuyby5.php:30\n\
    Stack trace:\n#0 /tmp/tmpe6vuyby5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe6vuyby5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = (string)$N;\n    for ($i = 0; $i <\
    \ strlen($N); $i++) {\n        $sum += $N[$i];\n        $binary = $N[$i] . $binary;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4v0g7s0r.php:28\n\
    Stack trace:\n#0 /tmp/tmp4v0g7s0r.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4v0g7s0r.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\n$result = solve($N);\necho \"The sum of digits is $result the output\
    \ should be \\\"1100\\\"\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpuow0t9ss.php on line\
    \ 20\nThe sum of digits is 1 the output should be \"1100\"\nWarning: A non-numeric\
    \ value encountered in /tmp/tmpuow0t9ss.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpuow0t9ss.php:34\nStack trace:\n#0 /tmp/tmpuow0t9ss.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuow0t9ss.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppx5cxbjy.php:31\n\
    Stack trace:\n#0 /tmp/tmppx5cxbjy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppx5cxbjy.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjc66i5t6.php:31\n\
    Stack trace:\n#0 /tmp/tmpjc66i5t6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjc66i5t6.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = $_GET[\"N\"];\n$result = solve($N);\necho $result;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphc1a3gr3.php:31\n\
    Stack trace:\n#0 /tmp/tmphc1a3gr3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphc1a3gr3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6q5kyy5.php:31\n\
    Stack trace:\n#0 /tmp/tmpc6q5kyy5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc6q5kyy5.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpkzffu8k_.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzffu8k_.php:31\n\
    Stack trace:\n#0 /tmp/tmpkzffu8k_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkzffu8k_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpe60f707x.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe60f707x.php:30\n\
    Stack trace:\n#0 /tmp/tmpe60f707x.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe60f707x.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00000000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdttkzm1.php:30\n\
    Stack trace:\n#0 /tmp/tmpxdttkzm1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxdttkzm1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjbain9_y.php:30\n\
    Stack trace:\n#0 /tmp/tmpjbain9_y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjbain9_y.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$result = solve($N);\necho $result;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp126hbrhm.php:31\n\
    Stack trace:\n#0 /tmp/tmp126hbrhm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp126hbrhm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4z3u9hug.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4z3u9hug.php:30\n\
    Stack trace:\n#0 /tmp/tmp4z3u9hug.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4z3u9hug.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpxqyylru5.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqyylru5.php:30\n\
    Stack trace:\n#0 /tmp/tmpxqyylru5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxqyylru5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4ixh61j1.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ixh61j1.php:31\n\
    Stack trace:\n#0 /tmp/tmp4ixh61j1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4ixh61j1.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxs1ih1iu.php:31\n\
    Stack trace:\n#0 /tmp/tmpxs1ih1iu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxs1ih1iu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $binary;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "01249183673\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ci9sq8s.php:31\n\
    Stack trace:\n#0 /tmp/tmp4ci9sq8s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4ci9sq8s.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp8ydu2j5k.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmp8ydu2j5k.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ydu2j5k.php:33\n\
    Stack trace:\n#0 /tmp/tmp8ydu2j5k.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8ydu2j5k.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$N = 147;\n$sum = 0;\nwhile($N > 0) {\n    $sum += $N % 2;\n   \
    \ $N = floor($N / 2);\n}\necho $sum;\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4nu_ink.php:35\n\
    Stack trace:\n#0 /tmp/tmpa4nu_ink.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpa4nu_ink.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\n$result = solve($N);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4y01c9a.php:30\n\
    Stack trace:\n#0 /tmp/tmpn4y01c9a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpn4y01c9a.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpday69klq.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpday69klq.php:30\n\
    Stack trace:\n#0 /tmp/tmpday69klq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpday69klq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $binary = str_pad(decbin($N), 8, '0', STR_PAD_LEFT);\n\
    \    $length = strlen($binary);\n    for ($i = 0; $i < $length; $i++) {\n    \
    \    $sum += $binary[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjda8gn4.php:27\n\
    Stack trace:\n#0 /tmp/tmpyjda8gn4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyjda8gn4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    do {\n        $sum\
    \ += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N . $binary;\n \
    \   } while ($N > 0);\n    return $sum ? $binary : \"0\";\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9r_ylx0j.php:28\n\
    Stack trace:\n#0 /tmp/tmp9r_ylx0j.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9r_ylx0j.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1tzu4kd.php:30\n\
    Stack trace:\n#0 /tmp/tmpx1tzu4kd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx1tzu4kd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpl2kj9d9e.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2kj9d9e.php:30\n\
    Stack trace:\n#0 /tmp/tmpl2kj9d9e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpl2kj9d9e.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N\
    \ = 147;\n$binary = solve($N);\necho $binary;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmplmnoge0a.php on line\
    \ 20\n1\nWarning: A non-numeric value encountered in /tmp/tmplmnoge0a.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmnoge0a.php:34\n\
    Stack trace:\n#0 /tmp/tmplmnoge0a.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplmnoge0a.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\n\n$N = 147;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88_ys0ty.php:33\n\
    Stack trace:\n#0 /tmp/tmp88_ys0ty.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp88_ys0ty.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ed_nltz.php:28\n\
    Stack trace:\n#0 /tmp/tmp0ed_nltz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0ed_nltz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $remainder = 0;\n    $N = abs($N);\n   \
    \ while($N > 0) {\n        $remainder = $N % 2;\n        $N = $N/2;\n        $sum\
    \ = $sum + $remainder;\n        $binary = $remainder . $binary;\n    }\n    return\
    \ $binary;\n}\n\n$tests = array(\n    array(1),\n    array(2),\n    array(3),\n\
    \    array(4),\n    array(5),\n    array(6),\n    array(7),\n    array(8),\n \
    \   array(9),\n    array(10),\n    array(11),\n    array(12),\n    array(13),\n\
    \    array(14),\n    array(15),\n    array(16),\n    array(17),\n    array(18),\n\
    \    array(19),\n    array(20),\n    array(21),\n    array(22),\n    array(23),\n\
    \    array(24),\n    array(25),\n    array(26),\n    array(27),\n    array(28),\n\
    \    array(29),\n    array(30),\n    array(31),\n    array(32),\n    array(33),\n\
    \    array(34),\n    array(35),\n    array(36),\n    array(37),\n    array(38),\n\
    \    array(39),\n    array(40),\n    array(41),\n    array(42),\n    array(43),\n\
    \    array(44),\n    array(45),\n    array(46),\n    array(47),\n    array(48),\n\
    \    array(49),\n    array(50),\n    array(51),\n    array(52),\n    array(53),\n\
    \    array(54),\n    array(55),\n    array(56),\n    array(57),\n    array(58),\n\
    \    array(59),\n    array(60),\n    array(61),\n    array(62),\n    array(63),\n\
    \    array(64),\n    array(65),\n    array(66),\n    array(67),\n    array(68),\n\
    \    array(69),\n    array(70),\n    array(71),\n    array(72),\n    array(73),\n\
    \    array(74),\n    array(75),\n    array(76),\n    array(77),\n    array(78),\n\
    \    array(79),\n    array(80),\n    array(81),\n    array(82),\n    array(83),\n\
    \    array(84),\n    array(85),\n    array(86),\n    array(87),\n    array(88),\n\
    \    array(89),\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcq04xqqy.php on line 117\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmps0ud110h.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0ud110h.php:30\n\
    Stack trace:\n#0 /tmp/tmps0ud110h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps0ud110h.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpj50hwq4s.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj50hwq4s.php:31\n\
    Stack trace:\n#0 /tmp/tmpj50hwq4s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj50hwq4s.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiaiyetku.php:27\n\
    Stack trace:\n#0 /tmp/tmpiaiyetku.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpiaiyetku.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad($binary, $sum, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$result = solve($N);\necho $result;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8he_pjdz.php:31\n\
    Stack trace:\n#0 /tmp/tmp8he_pjdz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8he_pjdz.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = str_pad($N, 8, '0', STR_PAD_LEFT);\n\
    \    for ($i = 0; $i < strlen($N); $i++) {\n        $sum += $N[$i];\n        $binary\
    \ = $N[$i] . $binary;\n    }\n    return $sum % 2 ? \"0\" . $binary : $binary;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0jm9a5c.php:27\n\
    Stack trace:\n#0 /tmp/tmph0jm9a5c.php(34): test()\n#1 {main}\n  thrown in /tmp/tmph0jm9a5c.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3by0f2y.php:28\n\
    Stack trace:\n#0 /tmp/tmpp3by0f2y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp3by0f2y.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$input = \"14\";\n$input = \"15\";\n$input = \"147\"\
    ;\n$input = \"1000\";\n$input = \"15000\";\n$input = \"14700\";\n$input = \"14700\"\
    ;\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"\
    14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input\
    \ = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n\
    $input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\"\
    ;\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"\
    14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input\
    \ = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n\
    $input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\"\
    ;\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"\
    14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input\
    \ = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n\
    $input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\"\
    ;\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"\
    14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input\
    \ = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n$input = \"14700\";\n\
    $input = \"14700\";\n$input = \"14700\";\n$input\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpybsd5dn_.php on line 89\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad($binary, $sum, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = $_GET[\"N\"];\n$result = solve($N);\necho $result;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7l3w5ms.php:31\n\
    Stack trace:\n#0 /tmp/tmph7l3w5ms.php(38): test()\n#1 {main}\n  thrown in /tmp/tmph7l3w5ms.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = str_pad($N, 8, '0', STR_PAD_LEFT);\n\
    \    for ($i = 0; $i < strlen($N); $i++) {\n        $sum += $N[$i];\n        $binary\
    \ = $N[$i] . $binary;\n    }\n    return $sum % 2 == 0 ? $binary : \"0$binary\"\
    ;\n}\n\n$result = solve($N);\necho $result;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "00000000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx553twht.php:30\n\
    Stack trace:\n#0 /tmp/tmpx553twht.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx553twht.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpojys82cc.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojys82cc.php:30\n\
    Stack trace:\n#0 /tmp/tmpojys82cc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpojys82cc.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6ky_j90.php:27\n\
    Stack trace:\n#0 /tmp/tmpj6ky_j90.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpj6ky_j90.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmps0p4iynp.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0p4iynp.php:30\n\
    Stack trace:\n#0 /tmp/tmps0p4iynp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps0p4iynp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpe_23llcr.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_23llcr.php:30\n\
    Stack trace:\n#0 /tmp/tmpe_23llcr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe_23llcr.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ac0ou7y.php:28\n\
    Stack trace:\n#0 /tmp/tmp3ac0ou7y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3ac0ou7y.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp2pt9oihj.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pt9oihj.php:30\n\
    Stack trace:\n#0 /tmp/tmp2pt9oihj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2pt9oihj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4icpd7v4.php:30\n\
    Stack trace:\n#0 /tmp/tmp4icpd7v4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4icpd7v4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary .= $sum %\
    \ 2;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm4xlgv0.php:30\n\
    Stack trace:\n#0 /tmp/tmpzm4xlgv0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzm4xlgv0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum .\
    \ $binary;\n        $sum = $sum % 2;\n    }\n    return $binary;\n}\n\n$N = $_GET[\"\
    N\"];\n$result = solve($N);\necho $result;\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfprp8l90.php:34\n\
    Stack trace:\n#0 /tmp/tmpfprp8l90.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfprp8l90.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\n\n$N = 147;\n$binary = solve($N);\necho $binary;\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "00000100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshn6h74z.php:31\n\
    Stack trace:\n#0 /tmp/tmpshn6h74z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpshn6h74z.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpx9yrx0ij.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx9yrx0ij.php:30\n\
    Stack trace:\n#0 /tmp/tmpx9yrx0ij.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx9yrx0ij.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary .= $sum %\
    \ 2;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\n$N = 147;\n$binary\
    \ = solve($N);\necho $binary;\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdoutn\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpkc2l91uc.php:34\nStack\
    \ trace:\n#0 /tmp/tmpkc2l91uc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkc2l91uc.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    while($N > 0) {\n\
    \        $sum += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N .\
    \ $binary;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67brm57x.php:28\n\
    Stack trace:\n#0 /tmp/tmp67brm57x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp67brm57x.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_p9aqae.php:27\n\
    Stack trace:\n#0 /tmp/tmpp_p9aqae.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpp_p9aqae.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnueut13.php:27\n\
    Stack trace:\n#0 /tmp/tmpvnueut13.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvnueut13.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n        $binary = $N . $binary;\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4lfyslgx.php:27\n\
    Stack trace:\n#0 /tmp/tmp4lfyslgx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4lfyslgx.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $remainder = 0;\n    $remainder2 = 0;\n\
    \    $remainder3 = 0;\n    $remainder4 = 0;\n    $remainder5 = 0;\n    $remainder6\
    \ = 0;\n    $remainder7 = 0;\n    $remainder8 = 0;\n    $remainder9 = 0;\n   \
    \ $remainder10 = 0;\n    $remainder11 = 0;\n    $remainder12 = 0;\n    $remainder13\
    \ = 0;\n    $remainder14 = 0;\n    $remainder15 = 0;\n    $remainder16 = 0;\n\
    \    $remainder17 = 0;\n    $remainder18 = 0;\n    $remainder19 = 0;\n    $remainder20\
    \ = 0;\n    $remainder21 = 0;\n    $remainder22 = 0;\n    $remainder23 = 0;\n\
    \    $remainder24 = 0;\n    $remainder25 = 0;\n    $remainder26 = 0;\n    $remainder27\
    \ = 0;\n    $remainder28 = 0;\n    $remainder29 = 0;\n    $remainder30 = 0;\n\
    \    $remainder31 = 0;\n    $remainder32 = 0;\n    $remainder33 = 0;\n    $remainder34\
    \ = 0;\n    $remainder35 = 0;\n    $remainder36 = 0;\n    $remainder37 = 0;\n\
    \    $remainder38 = 0;\n    $remainder39 = 0;\n    $remainder40 = 0;\n    $remainder41\
    \ = 0;\n    $remainder42 = 0;\n    $remainder43 = 0;\n    $remainder44 = 0;\n\
    \    $remainder45 = 0;\n    $remainder46 = 0;\n    $remainder47 = 0;\n    $remainder48\
    \ = 0;\n    $remainder49 = 0;\n    $remainder50 = 0;\n    $remainder51 = 0;\n\
    \    $remainder52 = 0;\n    $remainder53 = 0;\n    $remainder54 = 0;\n    $remainder55\
    \ = 0;\n    $remainder56 = 0;\n    $remainder57 = 0;\n    $remainder58 = 0;\n\
    \    $remainder59 = 0;\n    $remainder60 = 0;\n    $remainder61 = 0;\n    $remainder62\
    \ = 0;\n    $remainder63 = 0;\n    $remainder64 = 0;\n    $remainder65 = 0;\n\
    \    $remainder66 = 0;\n    $remainder67 = 0;\n    $remainder68 = 0;\n    $remainder69\
    \ = 0;\n    $remainder70 = 0;\n    $remainder71 = 0;\n    $remainder72 = 0;\n\
    \    $remainder73 = 0;\n    $remainder74 = 0;\n    $remainder75 = 0;\n    $remainder76\
    \ = 0;\n    $remainder77 = 0;\n    $remainder78 = 0;\n    $remainder79 = 0;\n\
    \    $remainder80 = 0;\n    $remainder81 = 0;\n    $remainder82 = 0;\n    $remainder83\
    \ = 0;\n    $remainder84 = 0;\n    $remainder85\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcopendwo.php on line 100\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = str_pad($N, 8, '0', STR_PAD_LEFT);\n\
    \    for($i = 0; $i < strlen($N); $i++) {\n        $sum += $N[$i];\n        $binary\
    \ = $N[$i].$binary;\n    }\n    return $sum;\n}\n\n$tests = array(\n    array(1),\n\
    \    array(2),\n    array(3),\n    array(4),\n    array(5),\n    array(6),\n \
    \   array(7),\n    array(8),\n    array(9),\n    array(10),\n    array(11),\n\
    \    array(12),\n    array(13),\n    array(14),\n    array(15),\n    array(16),\n\
    \    array(17),\n    array(18),\n    array(19),\n    array(20),\n    array(21),\n\
    \    array(22),\n    array(23),\n    array(24),\n    array(25),\n    array(26),\n\
    \    array(27),\n    array(28),\n    array(29),\n    array(30),\n    array(31),\n\
    \    array(32),\n    array(33),\n    array(34),\n    array(35),\n    array(36),\n\
    \    array(37),\n    array(38),\n    array(39),\n    array(40),\n    array(41),\n\
    \    array(42),\n    array(43),\n    array(44),\n    array(45),\n    array(46),\n\
    \    array(47),\n    array(48),\n    array(49),\n    array(50),\n    array(51),\n\
    \    array(52),\n    array(53),\n    array(54),\n    array(55),\n    array(56),\n\
    \    array(57),\n    array(58),\n    array(59),\n    array(60),\n    array(61),\n\
    \    array(62),\n    array(63),\n    array(64),\n    array(65),\n    array(66),\n\
    \    array(67),\n    array(68),\n    array(69),\n    array(70),\n    array(71),\n\
    \    array(72),\n    array(73),\n    array(74),\n    array(75),\n    array(76),\n\
    \    array(77),\n    array(78),\n    array(79),\n    array(80),\n    array(81),\n\
    \    array(82),\n    array(83),\n    array(84),\n    array(85),\n    array(86),\n\
    \    array(87),\n    array(88),\n    array(89),\n    array(\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphtyc8193.php on line 114\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while ($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpr20vr8ix.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr20vr8ix.php:30\n\
    Stack trace:\n#0 /tmp/tmpr20vr8ix.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpr20vr8ix.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    while($N > 0) {\n\
    \        $sum += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N .\
    \ $binary;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0n3ucoq3.php:28\n\
    Stack trace:\n#0 /tmp/tmp0n3ucoq3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0n3ucoq3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while ($sum > 0) {\n        $binary .= $sum\
    \ % 2;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sxl_qo4.php:31\n\
    Stack trace:\n#0 /tmp/tmp7sxl_qo4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7sxl_qo4.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad(decbin($sum), 8, \"0\", STR_PAD_LEFT);\n\
    \    return $binary;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd7xypr8.php:27\n\
    Stack trace:\n#0 /tmp/tmpwd7xypr8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwd7xypr8.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    $N = intval($N);\n    while($N > 0) {\n\
    \        $sum += $N % 2;\n        $N = floor($N / 2);\n        $binary = $N .\
    \ $binary;\n    }\n    return $sum;\n}\n\n$result = solve($N);\necho $result;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8677lh7.php:31\n\
    Stack trace:\n#0 /tmp/tmpv8677lh7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv8677lh7.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    $binary = str_pad($sum, strlen($sum), \"0\"\
    , STR_PAD_LEFT);\n    return $binary;\n}\n\n$N = 147;\n$binary = solve($N);\n\
    echo $binary;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy6m9_rni.php:31\n\
    Stack trace:\n#0 /tmp/tmpy6m9_rni.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy6m9_rni.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp4ikyij_h.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ikyij_h.php:30\n\
    Stack trace:\n#0 /tmp/tmp4ikyij_h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4ikyij_h.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = \"\";\n    while($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = $N / 2;\n    }\n    while($sum > 0) {\n        $binary = $sum %\
    \ 2 + $binary;\n        $sum = $sum / 2;\n    }\n    return $binary;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpluouiytl.php on line\
    \ 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluouiytl.php:30\n\
    Stack trace:\n#0 /tmp/tmpluouiytl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpluouiytl.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception

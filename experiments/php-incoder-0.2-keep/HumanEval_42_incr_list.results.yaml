name: HumanEval_42_incr_list
language: php
results:
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  $l = is_array($l)\
    \ ? $l : array($l);\n  foreach ($l as $item) {\n    $l[$i] = $item+1;\n    $i++;\n\
    \  }\n  return $l;\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ypobh3z.php:21\n\
    Stack trace:\n#0 /tmp/tmp7ypobh3z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7ypobh3z.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jvj8uu9.php:21\n\
    Stack trace:\n#0 /tmp/tmp0jvj8uu9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0jvj8uu9.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppy626yvn.php:20\n\
    Stack trace:\n#0 /tmp/tmppy626yvn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppy626yvn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibdeq9m1.php:21\n\
    Stack trace:\n#0 /tmp/tmpibdeq9m1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpibdeq9m1.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjaq2e_s8.php:21\n\
    Stack trace:\n#0 /tmp/tmpjaq2e_s8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjaq2e_s8.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqe3g2rs2.php:20\n\
    Stack trace:\n#0 /tmp/tmpqe3g2rs2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqe3g2rs2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnks_5st.php:20\n\
    Stack trace:\n#0 /tmp/tmpdnks_5st.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdnks_5st.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $item) {\n    $l[$i] = $item + 1;\n    $i++;\n  }\n  return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpis_zila9.php:21\n\
    Stack trace:\n#0 /tmp/tmpis_zila9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpis_zila9.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k] = $v + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzv1vzb9.php:21\n\
    Stack trace:\n#0 /tmp/tmpnzv1vzb9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnzv1vzb9.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  $l = is_array($l)\
    \ ? $l : array($l);\n  foreach ($l as $e) {\n    $l[$i] = $e + 1;\n    $i++;\n\
    \  }\n  return $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7z3o981h.php:20\n\
    Stack trace:\n#0 /tmp/tmp7z3o981h.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7z3o981h.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmptzk383.php:20\n\
    Stack trace:\n#0 /tmp/tmpmptzk383.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmptzk383.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppv0g_4td.php:21\n\
    Stack trace:\n#0 /tmp/tmppv0g_4td.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppv0g_4td.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  $ret = [];\n\
    \  foreach ($l as $e) {\n    $ret[] = $e + $i;\n    $i++;\n  }\n  return $ret;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz58nsecv.php:22\n\
    Stack trace:\n#0 /tmp/tmpz58nsecv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpz58nsecv.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5i7k5s6i.php:21\n\
    Stack trace:\n#0 /tmp/tmp5i7k5s6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5i7k5s6i.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprpxh59kk.php:22\n\
    Stack trace:\n#0 /tmp/tmprpxh59kk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprpxh59kk.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9o70_8gl.php:20\n\
    Stack trace:\n#0 /tmp/tmp9o70_8gl.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9o70_8gl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbi5s071j.php:21\n\
    Stack trace:\n#0 /tmp/tmpbi5s071j.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbi5s071j.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_57rb6i.php:20\n\
    Stack trace:\n#0 /tmp/tmp9_57rb6i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9_57rb6i.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_w2izwkf.php:20\n\
    Stack trace:\n#0 /tmp/tmp_w2izwkf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_w2izwkf.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxsue12wd.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84w5k4hz.php:22\n\
    Stack trace:\n#0 /tmp/tmp84w5k4hz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp84w5k4hz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  $l = is_array($l)\
    \ ? $l : array($l);\n  foreach ($l as $e) {\n    $l[$i] = $e + 1;\n    $i++;\n\
    \  }\n  return $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4sg7a6y.php:21\n\
    Stack trace:\n#0 /tmp/tmp_4sg7a6y.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_4sg7a6y.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd_nfqfa.php:21\n\
    Stack trace:\n#0 /tmp/tmptd_nfqfa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptd_nfqfa.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2n91e08.php:21\n\
    Stack trace:\n#0 /tmp/tmpy2n91e08.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy2n91e08.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx59ydp_p.php:21\n\
    Stack trace:\n#0 /tmp/tmpx59ydp_p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpx59ydp_p.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[$i] = $e;\n    $i++;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkeekp73.php:23\n\
    Stack trace:\n#0 /tmp/tmpqkeekp73.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqkeekp73.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6j8tda6.php:20\n\
    Stack trace:\n#0 /tmp/tmpe6j8tda6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpe6j8tda6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7tu5jmn.php:22\n\
    Stack trace:\n#0 /tmp/tmpj7tu5jmn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj7tu5jmn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2153ulc.php:21\n\
    Stack trace:\n#0 /tmp/tmpk2153ulc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk2153ulc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeivcnph6.php:20\n\
    Stack trace:\n#0 /tmp/tmpeivcnph6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpeivcnph6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcjelt7kj.php:21\n\
    Stack trace:\n#0 /tmp/tmpcjelt7kj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcjelt7kj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  $result =\
    \ [];\n  foreach ($l as $e) {\n    $result[] = $i++;\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4oj5m7yr.php:21\n\
    Stack trace:\n#0 /tmp/tmp4oj5m7yr.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4oj5m7yr.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5e2u3ijg.php:21\n\
    Stack trace:\n#0 /tmp/tmp5e2u3ijg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5e2u3ijg.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptojw6l2t.php:21\n\
    Stack trace:\n#0 /tmp/tmptojw6l2t.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptojw6l2t.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaphlz1va.php:20\n\
    Stack trace:\n#0 /tmp/tmpaphlz1va.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpaphlz1va.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr1olsogg.php:20\n\
    Stack trace:\n#0 /tmp/tmpr1olsogg.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpr1olsogg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1ecpu5z.php:20\n\
    Stack trace:\n#0 /tmp/tmpc1ecpu5z.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpc1ecpu5z.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4z0z5cwd.php:21\n\
    Stack trace:\n#0 /tmp/tmp4z0z5cwd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4z0z5cwd.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy4mg563.php:21\n\
    Stack trace:\n#0 /tmp/tmpuy4mg563.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuy4mg563.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6b4xpvzd.php:20\n\
    Stack trace:\n#0 /tmp/tmp6b4xpvzd.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6b4xpvzd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptqwnw3w2.php:21\n\
    Stack trace:\n#0 /tmp/tmptqwnw3w2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptqwnw3w2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8_gbn44.php:22\n\
    Stack trace:\n#0 /tmp/tmp_8_gbn44.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_8_gbn44.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0csmnmqz.php:21\n\
    Stack trace:\n#0 /tmp/tmp0csmnmqz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0csmnmqz.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp63rbpgrv.php:21\n\
    Stack trace:\n#0 /tmp/tmp63rbpgrv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp63rbpgrv.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[$i++] = $e;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_5_7gycq.php:21\n\
    Stack trace:\n#0 /tmp/tmp_5_7gycq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_5_7gycq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp151jdvnb.php:20\n\
    Stack trace:\n#0 /tmp/tmp151jdvnb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp151jdvnb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzscxt590.php:21\n\
    Stack trace:\n#0 /tmp/tmpzscxt590.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpzscxt590.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93i5hulq.php:21\n\
    Stack trace:\n#0 /tmp/tmp93i5hulq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp93i5hulq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgg_g48uf.php:21\n\
    Stack trace:\n#0 /tmp/tmpgg_g48uf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgg_g48uf.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe2pfp915.php:21\n\
    Stack trace:\n#0 /tmp/tmpe2pfp915.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpe2pfp915.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpqrjrlu.php:21\n\
    Stack trace:\n#0 /tmp/tmptpqrjrlu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptpqrjrlu.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6d4ue7m.php:20\n\
    Stack trace:\n#0 /tmp/tmp_6d4ue7m.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_6d4ue7m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu1yr5rd.php:20\n\
    Stack trace:\n#0 /tmp/tmplu1yr5rd.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplu1yr5rd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzd48y1vk.php:21\n\
    Stack trace:\n#0 /tmp/tmpzd48y1vk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpzd48y1vk.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3];\n$arr2 = [];\n\
    $arr3 = [];\nforeach ($arr as $key => $value) {\n    $arr2[$key] = $value;\n \
    \   $arr3[$key] = $arr2[$key] + 1;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1, 2, 3];\n$arr2 = [];\n$arr3 = [];\nforeach ($arr as $key\
    \ => $value) {\n    $arr2[$key] = $value;\n    $arr3[$key] = $arr2[$key] + 1;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2,\
    \ 3];\n$arr2 = [];\n$arr3 = [];\nforeach ($arr as $key => $value) {\n    $arr2[$key]\
    \ = $value;\n    $arr3[$key] = $arr2[$key] + 1;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3];\n$arr2 = [];\n$arr3 = [];\n\
    foreach ($arr as $key => $value) {\n    $arr2[$key] = $value;\n    $arr3[$key]\
    \ = $arr2[$key] + 1;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n\
    <code>\n$arr = [1, 2, 3];\n$arr2 = [];\n$arr3 = [];\nforeach ($arr as $key =>\
    \ $value) {\n    $arr2[$key] = $value;\n    $arr3[$key] = $arr2[$key] + 1;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = [1, 2, 3];\n$arr2\
    \ = [];\n$arr3 = [];\nforeach ($arr as $key => $value) {\n    $arr2[$key] = $value;\n\
    \    $arr3[$key] = $arr2[$key] + 1;\n}\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3];\n$arr2 = [];\n$arr3 = [];\n\
    foreach ($arr as $\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpat9ipxa2.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpube91b8n.php:21\n\
    Stack trace:\n#0 /tmp/tmpube91b8n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpube91b8n.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2o5431dg.php:20\n\
    Stack trace:\n#0 /tmp/tmp2o5431dg.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2o5431dg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e + 1;\n    $i++;\n  }\n  return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cekagg7.php:21\n\
    Stack trace:\n#0 /tmp/tmp7cekagg7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7cekagg7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k] = $v + 1;\n    }\n    return $r;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThanks so much! I didn't know about\
    \ array_walk. Very useful.\n<|/ c |>\n<| c |>\nI added a version that uses array_walk\
    \ and a version that uses array_map and array_sum.\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = [1, 2, 3];\n$arr2 = [1, 2, 3];\n$arr3 = $arr;\n$arr3[] =\
    \ $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n\
    $arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[]\
    \ = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n\
    $arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[]\
    \ = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n\
    $arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[]\
    \ = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n\
    $arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[]\
    \ = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n\
    $arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[] = $arr2;\n$arr3[]\
    \ = $arr2;\n$arr3[] = $arr2;\n$arr\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3flr5bo1.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[$i++] = $e;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6n9t1e5a.php:22\n\
    Stack trace:\n#0 /tmp/tmp6n9t1e5a.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6n9t1e5a.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1p39r0t.php:22\n\
    Stack trace:\n#0 /tmp/tmpk1p39r0t.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk1p39r0t.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxk7_lku.php:21\n\
    Stack trace:\n#0 /tmp/tmpsxk7_lku.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpsxk7_lku.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf142pjsg.php:22\n\
    Stack trace:\n#0 /tmp/tmpf142pjsg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpf142pjsg.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpea_8lahh.php:21\n\
    Stack trace:\n#0 /tmp/tmpea_8lahh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpea_8lahh.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvo6n46_l.php:20\n\
    Stack trace:\n#0 /tmp/tmpvo6n46_l.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvo6n46_l.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $k => $v) {\n    $l[$k] = $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfofltjd.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfofltjd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqfofltjd.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjwhdvow.php:20\n\
    Stack trace:\n#0 /tmp/tmpmjwhdvow.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmjwhdvow.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78ctiux6.php:20\n\
    Stack trace:\n#0 /tmp/tmp78ctiux6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp78ctiux6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  $new_l =\
    \ array();\n  foreach ($l as $e) {\n    $new_l[] = $i++;\n  }\n  return $new_l;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14c29np9.php:22\n\
    Stack trace:\n#0 /tmp/tmp14c29np9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp14c29np9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo42ptzt3.php:21\n\
    Stack trace:\n#0 /tmp/tmpo42ptzt3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpo42ptzt3.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[$i] = $e;\n    $i++;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu9modqel.php:23\n\
    Stack trace:\n#0 /tmp/tmpu9modqel.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpu9modqel.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for the answer! I didn't know that\
    \ PHP had a built-in function for this.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = [1, 2, 3];\n$array[] = 4;\n$array[] = 5;\n$array[] = 6;\n$array[] = 3;\n\
    $array[] = 3;\n$array[] = 9;\n$array[] = 0;\n$array[] = 123;\n\n$array = array_merge($array,\
    \ array_fill(0, count($array), 0));\n$array = array_values($array);\n\nprint_r($array);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n$array = [1, 2, 3];\n\
    $array[] = 4;\n$array[] = 5;\n$array[] = 6;\n$array[] = 3;\n$array[] = 3;\n$array[]\
    \ = 9;\n$array[] = 0;\n$array[] = 123;\n\n$array = array_merge($array, array_fill(0,\
    \ count($array), 0));\n$array = array_values($array);\n\nprint_r($array);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n$array = [1, 2, 3];\n$array[]\
    \ = 4;\n$array[] = 5;\n$array[] = 6;\n$array[] = 3;\n$array[] = 3;\n$array[] =\
    \ 9;\n$array[] = 0;\n$array[] = 123;\n\n$array = array_merge($array, array_fill(0,\
    \ count($array), 0));\n$array = array_values($array);\n\nprint_r($array);\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = [1, 2, 3];\n$array[] = 4;\n\
    $array[] = 5;\n$array[] = 6;\n$array[] = 3;\n$array[] = 3;\n$array[] = 9;\n$array[]\
    \ = 0;\n$array[] = 123;\n\n$array = array_merge($array, array_fill(0, count($array),\
    \ 0));\n$array = array_values($array);\n\nprint_r($array);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = [1, 2, 3];\n$array[] = 4;\n$array[] =\
    \ 5;\n$array[] = 6;\n$array[] = 3;\n$array[] = 3;\n$array[] = 9;\n$array\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpidoevwtg.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9h6jxsjv.php:21\n\
    Stack trace:\n#0 /tmp/tmp9h6jxsjv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9h6jxsjv.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k] = $v + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_y6wq0l.php:20\n\
    Stack trace:\n#0 /tmp/tmpd_y6wq0l.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpd_y6wq0l.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgtzullct.php:20\n\
    Stack trace:\n#0 /tmp/tmpgtzullct.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgtzullct.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa484yr13.php:22\n\
    Stack trace:\n#0 /tmp/tmpa484yr13.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpa484yr13.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qljpn_f.php:20\n\
    Stack trace:\n#0 /tmp/tmp0qljpn_f.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0qljpn_f.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmff3m3rc.php:20\n\
    Stack trace:\n#0 /tmp/tmpmff3m3rc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmff3m3rc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp1mutrc4.php:21\n\
    Stack trace:\n#0 /tmp/tmpp1mutrc4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp1mutrc4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nI wrote a little function that\
    \ does this for you:\n<code>\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwk_iahs7.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpstl5y2lf.php:21\n\
    Stack trace:\n#0 /tmp/tmpstl5y2lf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpstl5y2lf.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n$arr = [1, 2, 3];\n$arr2 = [];\n\
    $arr3 = [];\n$arr4 = array();\n$arr5 = array();\n$arr6 = array();\n$arr7 = array();\n\
    $arr8 = array();\n$arr9 = array();\n$arr10 = array();\n$arr11 = array();\n$arr12\
    \ = array();\n$arr13 = array();\n$arr14 = array();\n$arr15 = array();\n$arr16\
    \ = array();\n$arr17 = array();\n$arr18 = array();\n$arr19 = array();\n$arr20\
    \ = array();\n$arr21 = array();\n$arr22 = array();\n$arr23 = array();\n$arr24\
    \ = array();\n$arr25 = array();\n$arr26 = array();\n$arr27 = array();\n$arr28\
    \ = array();\n$arr29 = array();\n$arr30 = array();\n$arr31 = array();\n$arr32\
    \ = array();\n$arr33 = array();\n$arr34 = array();\n$arr35 = array();\n$arr36\
    \ = array();\n$arr37 = array();\n$arr38 = array();\n$arr39 = array();\n$arr40\
    \ = array();\n$arr41 = array();\n$arr42 = array();\n$arr43 = array();\n$arr44\
    \ = array();\n$arr45 = array();\n$arr46 = array();\n$arr47 = array();\n$arr48\
    \ = array();\n$arr49 = array();\n$arr50 = array();\n$arr51 = array();\n$arr52\
    \ = array();\n$arr53 = array();\n$arr54 = array();\n$arr55 = array();\n$arr56\
    \ = array();\n$arr57 = array();\n$arr58 = array();\n$arr59 = array();\n$arr60\
    \ = array();\n$arr61 = array();\n$arr62 = array();\n$arr63 = array();\n$arr64\
    \ = array();\n$arr65 = array();\n$arr66 = array();\n$arr67 = array();\n$arr68\
    \ = \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf9qyj4p7.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95ztid16.php:21\n\
    Stack trace:\n#0 /tmp/tmp95ztid16.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp95ztid16.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $k => $v) {\n        $r[$k + 1] = $v;\n    }\n    return $r;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\n   \
    \ array('id' => 1, 'name' => 'John'),\n    array('id' => 2, 'name' => 'Jane'),\n\
    \    array('id' => 3, 'name' => 'Jack'),\n    array('id' => 4, 'name' => 'Jill'),\n\
    \    array('id' => 5, 'name' => 'Jack'),\n    array('id' => 6, 'name' => 'Jill'),\n\
    \    array('id' => 7, 'name' => 'Jack'),\n    array('id' => 8, 'name' => 'Jill'),\n\
    \    array('id' => 9, 'name' => 'Jack'),\n    array('id' => 10, 'name' => 'Jill'),\n\
    \    array('id' => 11, 'name' => 'Jack'),\n    array('id' => 12, 'name' => 'Jill'),\n\
    \    array('id' => 13, 'name' => 'Jack'),\n    array('id' => 14, 'name' => 'Jill'),\n\
    \    array('id' => 15, 'name' => 'Jack'),\n    array('id' => 16, 'name' => 'Jill'),\n\
    \    array('id' => 17, 'name' => 'Jack'),\n    array('id' => 18, 'name' => 'Jill'),\n\
    \    array('id' => 19, 'name' => 'Jack'),\n    array('id' => 20, 'name' => 'Jill'),\n\
    \    array('id' => 21, 'name' => 'Jack'),\n    array('id' => 22, 'name' => 'Jill'),\n\
    \    array('id' => 23, 'name' => 'Jack'),\n    array('id' => 24, 'name' => 'Jill'),\n\
    \    array('id' => 25, 'name' => 'Jack'),\n    array('id' => 26, 'name' => 'Jill'),\n\
    \    array('id' => 27, 'name' => 'Jack'),\n    array('id' => 28, 'name' => 'Jill'),\n\
    \    array('id' => 29, 'name' => 'Jack'),\n    array('id' => 30, 'name' => 'Jill'),\n\
    \    array('id' => 31, 'name' => 'Jack'),\n    array('id' => 32, 'name' => 'Jill'),\n\
    \    array('id' => 33, 'name' => 'Jack'),\n    array('id' => 34, 'name' => 'Jill'),\n\
    \    array('id' => 35, 'name' => 'Jack'),\n    array('id' => 36, 'name' => '\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdyxil4nt.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[$i] = $e;\n    $i++;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp04s6cmyc.php:23\n\
    Stack trace:\n#0 /tmp/tmp04s6cmyc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp04s6cmyc.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $e) {\n        $r[] = $e + 1;\n    }\n    return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptez73g5_.php:21\n\
    Stack trace:\n#0 /tmp/tmptez73g5_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptez73g5_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3753kqaj.php:21\n\
    Stack trace:\n#0 /tmp/tmp3753kqaj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3753kqaj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n$arr2\
    \ = [];\n$arr3 = [];\n$arr4 = array_chunk($arr, 2);\nforeach($arr4 as $key =>\
    \ $value){\n    $arr2[] = $value[0];\n    $arr3[] = $value[1];\n}\nprint_r($arr2);\n\
    print_r($arr3);\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp05il8vou.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiy5r3g1u.php:21\n\
    Stack trace:\n#0 /tmp/tmpiy5r3g1u.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpiy5r3g1u.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8082i0fd.php:20\n\
    Stack trace:\n#0 /tmp/tmp8082i0fd.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8082i0fd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf05u8pro.php:21\n\
    Stack trace:\n#0 /tmp/tmpf05u8pro.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf05u8pro.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = [];\n    foreach\
    \ ($l as $e) {\n        $r[] = $e + 1;\n    }\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvli11lx2.php:21\n\
    Stack trace:\n#0 /tmp/tmpvli11lx2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvli11lx2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = array();\n  \
    \  foreach ($l as $e) {\n        $r[] = $e + 1;\n    }\n    return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_vzsb6k.php:21\n\
    Stack trace:\n#0 /tmp/tmpv_vzsb6k.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpv_vzsb6k.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps78j0cgc.php:21\n\
    Stack trace:\n#0 /tmp/tmps78j0cgc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmps78j0cgc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyednbumq.php:21\n\
    Stack trace:\n#0 /tmp/tmpyednbumq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyednbumq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = [];\n    foreach\
    \ ($l as $e) {\n        $r[] = $e + 1;\n    }\n    return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| c |>\nThanks so much for your answer! I really appreciate\
    \ it. I will try it out and let you know how it goes. Thanks again!\n<|/ c |>\n\
    <| c |>\nI added a code example to my answer. Hope it helps.\n<|/ c |>\n<| c |>\n\
    Thanks so much for your help! I really appreciate it. I will try it out and let\
    \ you know how it goes. Thanks again!\n<|/ c |>\n<| c |>\nI added a code example\
    \ to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks so much for your help!\
    \ I really appreciate it. I will try it out and let you know how it goes. Thanks\
    \ again!\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr2 = array();\n$arr3 = array();\n$arr4 = array();\n$arr5 = array();\n$arr6\
    \ = array();\n$arr7 = array();\n$arr8 = array();\n$arr9 = array();\n$arr10 = array();\n\
    $arr11 = array();\n$arr12 = array();\n$arr13 = array();\n$arr14 = array();\n$arr15\
    \ = array();\n$arr16 = array();\n$arr17 = array();\n$arr18 = array();\n$arr19\
    \ = array();\n$arr20 = array();\n$arr21 = array();\n$arr22 = array();\n$arr23\
    \ = array();\n$arr24 = array();\n$arr25 = array();\n$arr26 = array();\n$arr27\
    \ = array();\n$arr28 = array();\n$arr29 = array();\n$arr30 = array();\n$arr31\
    \ = array();\n$arr32 = array();\n$arr33 = array();\n$arr34 = array();\n$arr35\
    \ = array();\n$arr36 = array();\n$arr37 = array();\n$arr38 = array();\n$arr39\
    \ = array();\n$arr40 = array();\n$arr41 = array();\n$arr42 = array();\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1sea7cve.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yd9kjla.php:21\n\
    Stack trace:\n#0 /tmp/tmp0yd9kjla.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0yd9kjla.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n    $r = [];\n    foreach\
    \ ($l as $e) {\n        $r[] = $e + 1;\n    }\n    return $r;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$arr = [1, 2, 3];\n$arr2 = [1,\
    \ 2, 3];\n$arr3 = $arr;\n$arr3[] = 4;\n$arr3[] = 5;\n$arr3[] = 6;\n$arr3[] = 7;\n\
    $arr3[] = 8;\n$arr3[] = 9;\n$arr3[] = 10;\n$arr3[] = 11;\n$arr3[] = 12;\n$arr3[]\
    \ = 13;\n$arr3[] = 14;\n$arr3[] = 15;\n$arr3[] = 16;\n$arr3[] = 17;\n$arr3[] =\
    \ 18;\n$arr3[] = 19;\n$arr3[] = 20;\n$arr3[] = 21;\n$arr3[] = 22;\n$arr3[] = 23;\n\
    $arr3[] = 24;\n$arr3[] = 25;\n$arr3[] = 26;\n$arr3[] = 27;\n$arr3[] = 28;\n$arr3[]\
    \ = 29;\n$arr3[] = 30;\n$arr3[] = 31;\n$arr3[] = 32;\n$arr3[] = 33;\n$arr3[] =\
    \ 34;\n$arr3[] = 35;\n$arr3[] = 36;\n$arr3[] = 37;\n$arr3[] = 38;\n$arr3[] = 39;\n\
    $arr3[] = 40;\n$arr3[] = 41;\n$arr3[] = 42;\n$arr3[] = 43;\n$arr3[] = 44;\n$arr3[]\
    \ = 45;\n$arr3[] = 46;\n$arr3[] = 47;\n$arr3[] = 48;\n$arr3[] = 49;\n$arr3[] =\
    \ 50;\n$arr3[] = 51;\n$arr3[] = 52;\n$arr3[] = 53;\n$arr3[] = 54;\n$arr3[] = 55;\n\
    $arr3[] = 56;\n$arr3[] = 57;\n$arr3[] = 58;\n$arr3[] = 59;\n$arr3[] = 60;\n$arr3[]\
    \ = 61;\n$arr3[] = 62;\n$arr3[] = 63;\n$arr3[] = 64;\n$arr3[]\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt27ymj12.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdi4jnzf.php:20\n\
    Stack trace:\n#0 /tmp/tmpwdi4jnzf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwdi4jnzf.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  foreach ($l\
    \ as $val) {\n    $l[$i] = $val;\n    $i++;\n  }\n  return $l;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzuykrg4.php:21\n\
    Stack trace:\n#0 /tmp/tmpqzuykrg4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpqzuykrg4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8r_jiz24.php:21\n\
    Stack trace:\n#0 /tmp/tmp8r_jiz24.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8r_jiz24.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3x14hdw.php:20\n\
    Stack trace:\n#0 /tmp/tmpl3x14hdw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpl3x14hdw.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  $l = array_map(function($v)\
    \ use (&$i) {\n    return $i++;\n  }, $l);\n  return $l;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work if you have a list of arrays, like `[[\"a\",\
    \ \"b\"], [\"c\", \"d\"]]`\n<|/ c |>\n<| c |>\nIt works with a list of arrays,\
    \ as long as you use array_map on the inner arrays, as shown in the example.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\n    array(\n     \
    \   'id' => 1,\n        'name' => 'John',\n        'age' => 25,\n    ),\n    array(\n\
    \        'id' => 2,\n        'name' => 'Jane',\n        'age' => 30,\n    ),\n\
    \    array(\n        'id' => 3,\n        'name' => 'Jack',\n        'age' => 25,\n\
    \    ),\n);\n\n$newArray = array();\nforeach($array as $key => $value){\n    $newArray[$value['id']]\
    \ = $value;\n}\n\nprint_r($newArray);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ doesn't work if you have a list of arrays, like `[[\"a\", \"b\"], [\"c\", \"\
    d\"]]`\n<|/ c |>\n<| c |>\nThis works fine with list of arrays, as long as you\
    \ use array_map on the inner arrays, as shown in the example.\n<|/ c |>\n<| a\
    \ dscore=5 |>\n<code>\n$array = array(\n    array(\n        'id' => 1,\n     \
    \   'name' => 'John',\n        'age' => 25,\n    ),\n    array(\n        'id'\
    \ => 2,\n        'name' => 'Jane',\n        'age' => 30,\n    ),\n    array(\n\
    \        'id' => 3,\n        'name' => 'Jack',\n        'age' => 25,\n    ),\n\
    );\n\n$newArray = array();\nforeach($array as $key => $value){\n    $newArray[$value['id']]\
    \ = $value;\n}\n\nprint_r($newArray);\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ dscore=4 |>\n<code>\n$array = array(\n    array(\n        'id' => 1,\n     \
    \   'name' => 'John',\n        'age' => 25,\n    ),\n    array(\n        'id'\
    \ => 2,\n        'name' => 'Jane',\n        'age' => 30,\n    ),\n    array(\n\
    \        'id' => 3,\n        'name' => 'Jack',\n        'age' => 25,\n    ),\n\
    );\n\n$newArray\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp23ecsyju.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizfrtobs.php:22\n\
    Stack trace:\n#0 /tmp/tmpizfrtobs.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpizfrtobs.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkm1hhurz.php:21\n\
    Stack trace:\n#0 /tmp/tmpkm1hhurz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkm1hhurz.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k] = $v + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_p4fgfzo.php:21\n\
    Stack trace:\n#0 /tmp/tmp_p4fgfzo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_p4fgfzo.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpomudnn5w.php:21\n\
    Stack trace:\n#0 /tmp/tmpomudnn5w.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpomudnn5w.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr2 = array();\n$arr2[] = $arr[0];\n$arr2[] = $arr[1];\n$arr2[] = $arr[2];\n\
    $arr2[] = $arr[3];\n$arr2[] = $arr[4];\n$arr2[] = $arr[5];\n$arr2[] = $arr[6];\n\
    $arr2[] = $arr[7];\n$arr2[] = $arr[8];\n$arr2[] = $arr[9];\n$arr2[] = $arr[10];\n\
    $arr2[] = $arr[11];\n$arr2[] = $arr[12];\n$arr2[] = $arr[13];\n$arr2[] = $arr[14];\n\
    $arr2[] = $arr[15];\n$arr2[] = $arr[16];\n$arr2[] = $arr[17];\n$arr2[] = $arr[18];\n\
    $arr2[] = $arr[19];\n$arr2[] = $arr[20];\n$arr2[] = $arr[21];\n$arr2[] = $arr[22];\n\
    $arr2[] = $arr[23];\n$arr2[] = $arr[24];\n$arr2[] = $arr[25];\n$arr2[] = $arr[26];\n\
    $arr2[] = $arr[27];\n$arr2[] = $arr[28];\n$arr2[] = $arr[29];\n$arr2[] = $arr[30];\n\
    $arr2[] = $arr[31];\n$arr2[] = $arr[32];\n$arr2[] = $arr[33];\n$arr2[] = $arr[34];\n\
    $arr2[] = $arr[35];\n$arr2[] = $arr[36];\n$arr2[] = $arr[37];\n$arr2[] = $arr[38];\n\
    $arr2[] = $arr[39];\n$arr2[] = $arr[40];\n$arr2[] = $arr[41];\n$arr2[] = $arr[42];\n\
    $arr2[] = $arr[43];\n$arr2[] = $arr[44];\n$arr2[] = $arr[45];\n$arr2[] = $arr[46];\n\
    $arr2[] = $arr[47];\n$arr2[] = $arr[48];\n$arr\nfunction candidate(...$args) {\n\
    \    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp95trs8nf.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb93qo321.php:21\n\
    Stack trace:\n#0 /tmp/tmpb93qo321.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpb93qo321.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = [];\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxxlogym.php:20\n\
    Stack trace:\n#0 /tmp/tmpdxxlogym.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdxxlogym.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr819sfj7.php:22\n\
    Stack trace:\n#0 /tmp/tmpr819sfj7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpr819sfj7.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  $result =\
    \ [];\n  foreach ($l as $e) {\n    $result[] = $i++;\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd531a9x_.php:21\n\
    Stack trace:\n#0 /tmp/tmpd531a9x_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpd531a9x_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 1;\n  $ret = [];\n\
    \  foreach ($l as $e) {\n    $ret[$i] = $e;\n    $i++;\n  }\n  return $ret;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsjf8imu4.php:23\n\
    Stack trace:\n#0 /tmp/tmpsjf8imu4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsjf8imu4.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $r = array();\n  foreach\
    \ ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list([1,\
    \ 2, 3])\n// [2, 3, 4]\n// >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n// [6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124]\nfunction incr_list($l) {\n  $i = 0;\n  foreach ($l\
    \ as $e) {\n    $l[$i] = $e;\n    $i++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_66n7own.php:22\n\
    Stack trace:\n#0 /tmp/tmp_66n7own.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_66n7own.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception

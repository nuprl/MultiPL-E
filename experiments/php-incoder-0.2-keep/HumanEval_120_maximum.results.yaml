name: HumanEval_120_maximum
language: php
results:
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    $result = array_slice($arr, 0, $k);\n    return $result;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2,\
    \ -1, -2, 1];\n$k = 3;\n$result = array();\n$i = 0;\nforeach ($arr as $key =>\
    \ $value) {\n    if ($i < $k) {\n        $result[$key] = $value;\n        $i++;\n\
    \    }\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11805605)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He wants to sort\
    \ an array by its maximum k elements. He can use array_multisort() to do that.\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/11805605)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11805605)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/11805605)\n<|/ c |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 3;\n$result = array();\n\
    $i = 0;\nforeach ($arr as $key => $value) {\n    if ($i < $k) {\n        $result[$key]\
    \ = $value;\n        $i++;\n    }\n}\nprint_r($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To \nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6hrknme9.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $max = $arr[0];\n    $maxIndex =\
    \ 0;\n    for($i = 1; $i < $k; $i++) {\n        if($arr[$i] > $max) {\n      \
    \      $max = $arr[$i];\n            $maxIndex = $i;\n        }\n    }\n    return\
    \ $arr[$maxIndex];\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9fwdmf6.php:35\n\
    Stack trace:\n#0 /tmp/tmpy9fwdmf6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpy9fwdmf6.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    $result = array_slice($arr, 0, $k);\n    return $result;\n}\n</code>\n<|/\
    \ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp36ostuup.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else {\n   \
    \         $result[] = array_shift($result);\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc0zcf5fp.php:34\n\
    Stack trace:\n#0 /tmp/tmpc0zcf5fp.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpc0zcf5fp.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    sort($arr);\n    $i = 0;\n    foreach ($arr\
    \ as $key => $value) {\n        if ($i >= $k) {\n            break;\n        }\n\
    \        $result[] = $value;\n        $i++;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjksn4f47.php:37\n\
    Stack trace:\n#0 /tmp/tmpjksn4f47.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpjksn4f47.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $result;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    \n    for ($i\
    \ = $k; $i < $len; $i++) {\n        $result[$i] = max($arr[$i], $result[$i]);\n\
    \    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbt5e4v08.php:41\n\
    Stack trace:\n#0 /tmp/tmpbt5e4v08.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpbt5e4v08.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ggzmptj.php:32\n\
    Stack trace:\n#0 /tmp/tmp_ggzmptj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_ggzmptj.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvnzealu.php:34\n\
    Stack trace:\n#0 /tmp/tmplvnzealu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmplvnzealu.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $value) {\n        $result[]\
    \ = $value;\n    }\n    array_multisort($result, $k);\n    return $result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [-3, 2, 1,\
    \ 2, -1, -2, 1];\n$k = 1;\n$result = array_slice($arr, 0, $k);\n$result = array_merge($result,\
    \ array_slice($arr, $k));\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n\
    <| a tags=arrays,php |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k =\
    \ 1;\n$result = array_slice($arr, 0, $k);\n$result = array_merge($result, array_slice($arr,\
    \ $k));\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n\
    <code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array_slice($arr,\
    \ 0, $k);\n$result = array_merge($result, array_slice($arr, $k));\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array_slice($arr, 0, $k);\n\
    $result = array_merge($result, array_slice($arr, $k));\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2,\
    \ -1, -2, 1];\n$k = 1;\n$result = array_slice($arr, 0, $k);\n$result = array_merge($result,\
    \ array_slice($arr, $k));\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nPlease add some explanation to your answer such that others can learn from\
    \ it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2,\
    \ 1];\n$k = 1;\n$result = array_slice($arr, 0, $k);\n$result = array_merge($result,\
    \ array_slice($arr, $k));\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n\
    <| c |>\nPlease add some explanation to your answer such that others can learn\
    \ from it\n<|/\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwqvcrk9q.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key <= $k) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n\
    $max = 0;\nforeach ($arr as $key => $value) {\n    if ($key <= $k) {\n       \
    \ $result[$key] = $value;\n        if ($value > $max) {\n            $max = $value;\n\
    \        }\n    }\n}\n$result = array_slice($result, 0, $k);\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays,algorithm |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n$max = 0;\nforeach\
    \ ($arr as $key => $value) {\n    if ($key <= $k) {\n        $result[$key] = $value;\n\
    \        if ($value > $max) {\n            $max = $value;\n        }\n    }\n\
    }\n$result = array_slice($result, 0, $k);\nprint_r($result);\n</code>\n<|/ a tags=php,arrays,algorithm\
    \ |>\n<| a tags=php,arrays,algorithm |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1,\
    \ -2, 1];\n$k = 1;\n$result = array();\n$max = 0;\nforeach ($arr as $key => $value)\
    \ {\n    if ($key <= $k) {\n        $result[$key] = $value;\n        if ($value\
    \ > $max) {\n            $max = $value;\n        }\n    }\n}\n$result = array_slice($result,\
    \ 0, $k);\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n$max = 0;\n\
    foreach ($arr as $key => $value) {\n    if ($key <= $k) {\n        $result[$key]\
    \ = $value;\n        if ($value > $max) {\n            $max = $value;\n      \
    \  }\n    }\n}\n$result = array_slice($result, 0, $k);\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays,algorithm |>\n<| a tags=php,arrays,algorithm |>\n<code>\n\
    <?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$\nfunction candidate(...$args) {\n \
    \   return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9p514mj7.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else {\n   \
    \         $result[] = array_pop($result);\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2oib4ku9.php:34\n\
    Stack trace:\n#0 /tmp/tmp2oib4ku9.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp2oib4ku9.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n\nfunction candidate(...$args) {\n \
    \   return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpij_a1gl_.php:31\n\
    Stack trace:\n#0 /tmp/tmpij_a1gl_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpij_a1gl_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3uzpoxub.php:32\n\
    Stack trace:\n#0 /tmp/tmp3uzpoxub.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3uzpoxub.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    \n    if ($k > $len)\
    \ {\n        return $result;\n    }\n    \n    $max = $arr[0];\n    \n    for\
    \ ($i = 1; $i < $k; $i++) {\n        if ($arr[$i] > $max) {\n            $max\
    \ = $arr[$i];\n        }\n    }\n    \n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($arr[$i] == $max) {\n            $result[] = $max;\n        }\n  \
    \  }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplys6rn8o.php:47\n\
    Stack trace:\n#0 /tmp/tmplys6rn8o.php(60): test()\n#1 {main}\n  thrown in /tmp/tmplys6rn8o.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i] > $max) {\n         \
    \   $max = $arr[$i];\n        }\n    }\n    for ($i = 0; $i < $len; $i++) {\n\
    \        if ($arr[$i] == $max) {\n            $result[] = $max;\n        }\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4q4jw5d.php:39\n\
    Stack trace:\n#0 /tmp/tmpb4q4jw5d.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpb4q4jw5d.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work for me. `maximum([-3, 2, 1, 2, -1, -2, 1], 1)`\
    \ returns `[-2, -1, 1]` instead of `[-2, 1]`.\n<|/ c |>\n<| c |>\nI tested it\
    \ on PHP 5.6 and it works. I updated my answer with my test cases. Can you please\
    \ try again?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and it works. I updated\
    \ my answer with my test cases. Can you please try again?\n<|/ c |>\n<| c |>\n\
    I tested it on PHP 5.6 and it works. I updated my answer with my test cases. Can\
    \ you please try again?\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and it works.\
    \ I updated my answer with my test cases. Can you please try again?\n<|/ c |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprmlk0qy3.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, $k);\n    return\
    \ array_slice($result, 0, $k);\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp094xngkh.php:31\n\
    Stack trace:\n#0 /tmp/tmp094xngkh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp094xngkh.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcz_vokre.php:32\n\
    Stack trace:\n#0 /tmp/tmpcz_vokre.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpcz_vokre.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbv6g6zyw.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $value) {\n        if (count($result)\
    \ == $k) {\n            $result[] = $value;\n        } else {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a |>\n<| c\
    \ |>\nI believe this would not work if the array is empty or has only one element.\
    \ Also, if the array has only one element, the function will return an empty array.\n\
    <|/ c |>\n<| c |>\nI believe this would not work if the array is empty or has\
    \ only one element. Also, if the array has only one element, the function will\
    \ return an empty array.\n<|/ c |>\n<| c |>\nI believe this would not work if\
    \ the array is empty or has only one element. Also, if the array has only one\
    \ element, the function will return an empty array.\n<|/ c |>\n<| c |>\nI believe\
    \ this would not work if the array is empty or has only one element. Also, if\
    \ the array has only one element, the function will return an empty array.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2t25brcr.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $arr[$i + 1]);\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljycodjn.php:37\n\
    Stack trace:\n#0 /tmp/tmpljycodjn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpljycodjn.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    // sort array\
    \ in descending order\n    sort($arr);\n    \n    // get k largest number\n  \
    \  for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n\
    \    // return k largest number\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xyt5grv.php:39\n\
    Stack trace:\n#0 /tmp/tmp0xyt5grv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp0xyt5grv.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    \n    return $result;\n\
    }\n\n$arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => -3\n    [1] => -4\n    [2] => 5\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpvc014lef.php:41\nStack trace:\n\
    #0 /tmp/tmpvc014lef.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvc014lef.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n\nfunction candidate(...$args) {\n \
    \   return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqcopln2.php:31\n\
    Stack trace:\n#0 /tmp/tmpgqcopln2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgqcopln2.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh0jjq97.php:32\n\
    Stack trace:\n#0 /tmp/tmpwh0jjq97.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwh0jjq97.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 0; $i < $k; $i++)\
    \ {\n        for($j = 0; $j < count($arr); $j++) {\n            if($arr[$j] >\
    \ $max) {\n                $max = $arr[$j];\n            }\n        }\n      \
    \  $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiefgyn2x.php:36\n\
    Stack trace:\n#0 /tmp/tmpiefgyn2x.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpiefgyn2x.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    arsort($result);\n    $result = array_slice($result, 0,\
    \ $k);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbxy3c0qu.php:32\n\
    Stack trace:\n#0 /tmp/tmpbxy3c0qu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbxy3c0qu.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 1; $i < $k; $i++)\
    \ {\n        if($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n \
    \   return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcf61t0hd.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u5yjobk.php:35\n\
    Stack trace:\n#0 /tmp/tmp9u5yjobk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp9u5yjobk.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    \n    for($i = 0; $i < $k; $i++) {\n    \
    \    $result[] = $arr[$i];\n    }\n    \n    sort($result);\n    \n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejqogipl.php:35\n\
    Stack trace:\n#0 /tmp/tmpejqogipl.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpejqogipl.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    \n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n    for ($i = 0;\
    \ $i < $len; $i++) {\n        $result[$i] = max($result[$i], $arr[$i]);\n    }\n\
    \    \n    return $result;\n}\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result\
    \ = maximum($arr, $k);\nprint_r($result);\nfunction candidate(...$args) {\n  \
    \  return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => -3\n    [1] => 2\n    [2] => 1\n    [3] => 2\n   \
    \ [4] => -1\n    [5] => -2\n    [6] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmph6ow1rk2.php:41\nStack trace:\n#0 /tmp/tmph6ow1rk2.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph6ow1rk2.php on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    \n    for($i = 0; $i < $k; $i++) {\n    \
    \    $result[] = $arr[$i];\n    }\n    \n    sort($result);\n    \n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9312xs4b.php:34\n\
    Stack trace:\n#0 /tmp/tmp9312xs4b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9312xs4b.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args) {\n\
    \    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp99y90_c6.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnaadh2gw.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp353w2092.php:36\n\
    Stack trace:\n#0 /tmp/tmp353w2092.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp353w2092.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    sort($arr);\n    $len = count($arr);\n  \
    \  for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxjcbrn6.php:32\n\
    Stack trace:\n#0 /tmp/tmpmxjcbrn6.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmxjcbrn6.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n    return\
    \ array_slice($arr, 0, $k);\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoppt2ghh.php:31\n\
    Stack trace:\n#0 /tmp/tmpoppt2ghh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoppt2ghh.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    foreach ($arr as $key =>\
    \ $value) {\n        if ($key < $max) {\n            $result[] = $value;\n   \
    \     } else {\n            $max = $key;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9u4hzdp.php:35\n\
    Stack trace:\n#0 /tmp/tmpb9u4hzdp.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpb9u4hzdp.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl07va16h.php:32\n\
    Stack trace:\n#0 /tmp/tmpl07va16h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpl07va16h.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqghhan7n.php:34\n\
    Stack trace:\n#0 /tmp/tmpqghhan7n.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqghhan7n.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzz7k78e.php:32\n\
    Stack trace:\n#0 /tmp/tmpwzz7k78e.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwzz7k78e.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, $k);\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1oies878.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    for($i = 0;\
    \ $i < $len; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    \n    for($i\
    \ = 0; $i < $k; $i++) {\n        $max = $result[0];\n        \n        for($j\
    \ = 1; $j < $len; $j++) {\n            if($result[$j] > $max) {\n            \
    \    $max = $result[$j];\n            }\n        }\n        \n        $result[$i]\
    \ = $max;\n    }\n    \n    return $result;\n}\n\n$arr = array(4, -4, 4);\n$k\
    \ = 2;\n$result = maximum($arr, $k);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 4\n    [1] => 4\n    [2] => 4\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp_rx2wowl.php:49\nStack trace:\n#0 /tmp/tmp_rx2wowl.php(62):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_rx2wowl.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3fxn1ge.php:34\n\
    Stack trace:\n#0 /tmp/tmpz3fxn1ge.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpz3fxn1ge.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    for($i = 0; $i\
    \ < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp71fnjn4j.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    $result = array_slice($result, 0, $k);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51cy3zmg.php:32\n\
    Stack trace:\n#0 /tmp/tmp51cy3zmg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp51cy3zmg.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    $result[] = $max;\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $result[] = $arr[$i];\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,algorithm |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7l5ax0pe.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpionc94cf.php:36\n\
    Stack trace:\n#0 /tmp/tmpionc94cf.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpionc94cf.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $len; $i++) {\n        $result[$i] = max($arr[$i], $result[$i]);\n    }\n  \
    \  return array_slice($result, 0, $k);\n}\n</code>\n<|/ a tags=arrays,php |>\n\
    <| c |>\nThis doesn't work if there are two or more equal numbers in the array\n\
    <|/ c |>\n<| c |>\nIt doesn't work when there are two or more equal numbers in\
    \ the array\n<|/ c |>\n<| c |>\nIt doesn't work when there are two or more equal\
    \ numbers in the array\n<|/ c |>\n<| c |>\nIt doesn't work when there are two\
    \ or more equal numbers in the array\n<|/ c |>\n<| c |>\nIt doesn't work when\
    \ there are two or more equal numbers in the array\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp17tg5fww.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $arr[$i] > $max ? $arr[$i] : $max;\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfeyzxbr.php:34\n\
    Stack trace:\n#0 /tmp/tmpgfeyzxbr.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpgfeyzxbr.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = array();\n    $len = count($arr);\n\
    \    $i = 0;\n    \n    while($i < $k) {\n        $result[] = $arr[$i];\n    \
    \    $i++;\n    }\n    \n    while($i < $len) {\n        $result[] = $arr[$i];\n\
    \        $i++;\n    }\n    \n    return $result;\n}\n\n$arr = [-3, 2, 1, 2, -1,\
    \ -2, 1];\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => -2\n    [2] => -1\n    [3] => 2\n  \
    \  [4] => 1\n    [5] => 2\n    [6] => -3\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpcg8jjtka.php:45\nStack trace:\n#0 /tmp/tmpcg8jjtka.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcg8jjtka.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmopaqf15.php:34\n\
    Stack trace:\n#0 /tmp/tmpmopaqf15.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpmopaqf15.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    sort($arr);\n    $result[] = $arr[0];\n \
    \   for ($i = 1; $i < $k; $i++) {\n        $result[] = max($arr[$i], $result[$i\
    \ - 1]);\n    }\n    return $result;\n}\n</code>\n<|/ a tags=arrays,php |>\n<|\
    \ a tags=arrays,php |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqd0s12ox.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    sort($arr);\n    $result[$k] = $arr[$k];\n\
    \    for ($i = 1; $i < $k; $i++) {\n        $result[$i] = max($result[$i], $arr[$i]);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiq92fioe.php:32\n\
    Stack trace:\n#0 /tmp/tmpiq92fioe.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpiq92fioe.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi31gpn2.php:33\n\
    Stack trace:\n#0 /tmp/tmpmi31gpn2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmi31gpn2.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key <= $k) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9od7f4f.php:32\n\
    Stack trace:\n#0 /tmp/tmph9od7f4f.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph9od7f4f.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $len; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    array_multisort($result,\
    \ $k);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjz2d39lk.php:32\n\
    Stack trace:\n#0 /tmp/tmpjz2d39lk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjz2d39lk.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $max > $arr[$i] ? $max : $arr[$i];\n    }\n    array_push($result,\
    \ $max);\n    for ($i = 1; $i < $k; $i++) {\n        $max = $max > $arr[$i] ?\
    \ $max : $arr[$i];\n        array_push($result, $max);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshe5wc7q.php:36\n\
    Stack trace:\n#0 /tmp/tmpshe5wc7q.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpshe5wc7q.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr\
    \ = [-3, -4, 5];\n$k = 3;\n$result = array_slice($arr, 0, $k);\n$result = array_merge($result,\
    \ array_slice($arr, $k));\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm7cwhddh.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9p09h2n.php:32\n\
    Stack trace:\n#0 /tmp/tmpb9p09h2n.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpb9p09h2n.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    sort($arr);\n    $len = count($arr);\n  \
    \  for($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\nsort($arr);\n$len\
    \ = count($arr);\nfor($i = 0; $i < $k; $i++) {\n    $result[] = $arr[$i];\n}\n\
    print_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\nsort($arr);\n$len\
    \ = count($arr);\nfor($i = 0; $i < $k; $i++) {\n    $result[] = $arr[$i];\n}\n\
    print_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\nsort($arr);\n\
    $len = count($arr);\nfor($i = 0; $i < $k; $i++) {\n    $result[] = $arr[$i];\n\
    }\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\nsort($arr);\n\
    $len = count($arr);\nfor($i = 0; $i < $k; $i++) {\n    $result[] = $arr[$i];\n\
    }\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n\
    sort($arr);\n$len = count($arr);\nfor($i = 0; $i < $k; $i++) {\n    $result[]\
    \ = $arr[$i];\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n\
    sort($arr);\n$len = count($arr);\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_qt94ueq.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm5hxm3xp.php:32\n\
    Stack trace:\n#0 /tmp/tmpm5hxm3xp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpm5hxm3xp.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key <= $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjj8mz5o.php:32\n\
    Stack trace:\n#0 /tmp/tmpzjj8mz5o.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzjj8mz5o.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $arr[$i] > $max ? $arr[$i] : $max;\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpar_5oncp.php:34\n\
    Stack trace:\n#0 /tmp/tmpar_5oncp.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpar_5oncp.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $n = count($arr);\n    \n    // sort arr\n   \
    \ sort($arr);\n    \n    // get max k number\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[] = $arr[$i];\n    }\n    \n    // get rest numbers\n   \
    \ for ($i = $k; $i < $n; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n\
    \    return $result;\n}\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => -3\n    [1] => -2\n    [2] => -1\n    [3] => 1\n \
    \   [4] => 1\n    [5] => 2\n    [6] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpe2rrjmou.php:46\nStack trace:\n#0 /tmp/tmpe2rrjmou.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpe2rrjmou.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $length = count($arr);\n    \n    if ($length\
    \ <= $k) {\n        foreach ($arr as $key => $value) {\n            $result[$key]\
    \ = $value;\n        }\n        return $result;\n    }\n    \n    $max = $arr[0];\n\
    \    \n    for ($i = 1; $i < $length; $i++) {\n        if ($arr[$i] > $max) {\n\
    \            $max = $arr[$i];\n        }\n    }\n    \n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $result[$i] = $max;\n    }\n    \n    return $result;\n}\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcymndv6r.php:47\n\
    Stack trace:\n#0 /tmp/tmpcymndv6r.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpcymndv6r.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    for($i = 0;\
    \ $i < $len; $i++) {\n        $result[$i] = max($arr[$i], $result[$i]);\n    }\n\
    \    \n    return array_slice($result, 0, $k);\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zd9sa0w.php:33\n\
    Stack trace:\n#0 /tmp/tmp3zd9sa0w.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3zd9sa0w.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else {\n   \
    \         $result[] = $arr[$key];\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvm1si2vj.php:34\n\
    Stack trace:\n#0 /tmp/tmpvm1si2vj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvm1si2vj.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgdjhq3ey.php:32\n\
    Stack trace:\n#0 /tmp/tmpgdjhq3ey.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgdjhq3ey.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n    return\
    \ array_slice($arr, 0, $k);\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkaxmsa8.php:31\n\
    Stack trace:\n#0 /tmp/tmpjkaxmsa8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjkaxmsa8.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n    for($i = 0;\
    \ $i < $len; $i++) {\n        $max = $arr[$i];\n        \n        for($j = $i\
    \ + 1; $j < $len; $j++) {\n            if($arr[$j] > $max) {\n               \
    \ $max = $arr[$j];\n            }\n        }\n        \n        $result[] = $max;\n\
    \    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55z8f22o.php:45\n\
    Stack trace:\n#0 /tmp/tmp55z8f22o.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp55z8f22o.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $n = count($arr);\n    \n    // O(n) time\
    \ and O(k) space\n    for($i = 0; $i < $k; $i++) {\n        $result[$i] = max($arr[$i]);\n\
    \    }\n    \n    // O(n) time and O(k) space\n    for($i = 0; $i < $n; $i++)\
    \ {\n        $result[$i] = max($result[$i], $arr[$i]);\n    }\n    \n    return\
    \ $result;\n}\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: max(): When only one parameter is given, it must be an array\
    \ in /tmp/tmpvqg2s210.php on line 23\nArray\n(\n    [0] => -3\n    [1] => 2\n\
    \    [2] => 1\n    [3] => 2\n    [4] => -1\n    [5] => -2\n    [6] => 1\n)\n\n\
    Warning: max(): When only one parameter is given, it must be an array in /tmp/tmpvqg2s210.php\
    \ on line 23\n\nWarning: max(): When only one parameter is given, it must be an\
    \ array in /tmp/tmpvqg2s210.php on line 23\n\nWarning: max(): When only one parameter\
    \ is given, it must be an array in /tmp/tmpvqg2s210.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpvqg2s210.php:43\nStack trace:\n\
    #0 /tmp/tmpvqg2s210.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpvqg2s210.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = array_pop($arr);\n    }\n    for($i = 0; $i\
    \ < $len; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThe question was about a sorted array and you answer\
    \ a unsorted array. Your code does not work correctly for unsorted arrays. Please\
    \ check my answer.\n<|/ c |>\n<| c |>\nI didn't see that he said the array was\
    \ sorted. My answer was based on the example he gave.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n\
    $len = count($arr);\nfor($i = 0; $i < $k; $i++) {\n    $result[] = array_pop($arr);\n\
    }\nfor($i = 0; $i < $len; $i++) {\n    $result[] = $arr[$i];\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThe question was about a sorted array\
    \ and you answer a unsorted array. Your code does not work correctly for unsorted\
    \ arrays. Please check my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n$len = count($arr);\n\
    for($i = 0; $i < $k; $i++) {\n    $result[] = array_pop($arr);\n}\nfor($i = 0;\
    \ $i < $len; $i++) {\n    $result[] = $arr[$i];\n}\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThe question was about a sorted array and you\
    \ answer a unsorted array. Your code does not work correctly for unsorted arrays.\
    \ Please check my answer.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n$len = count($arr);\n\
    for($i = 0; $i < $k; $i++) {\n    $result[] = array_pop($arr);\n}\nfor($i = 0;\
    \ $i < $len; $i++) {\n    $result[] = $arr[$i];\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpex9q64ah.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 1; $i < $k; $i++)\
    \ {\n        if($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for($i = 0; $i < $k; $i++) {\n        if($arr[$i] == $max) {\n   \
    \         $result[] = $max;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqei_tr0p.php:37\n\
    Stack trace:\n#0 /tmp/tmpqei_tr0p.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpqei_tr0p.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9469ofrp.php:32\n\
    Stack trace:\n#0 /tmp/tmp9469ofrp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9469ofrp.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $result[] = $arr[0];\n    for ($i = 1; $i < $k;\
    \ $i++) {\n        $result[] = max($arr[$i], $result[$i - 1]);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2f7wt87e.php:31\n\
    Stack trace:\n#0 /tmp/tmp2f7wt87e.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2f7wt87e.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    foreach ($arr\
    \ as $key => $value) {\n        if ($key < $k) {\n            $result[] = $value;\n\
    \        } else {\n            $result[] = $arr[$key];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhv0old1.php:35\n\
    Stack trace:\n#0 /tmp/tmpyhv0old1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpyhv0old1.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = -INF;\n    $i\
    \ = 0;\n    foreach ($arr as $num) {\n        if ($num > $max) {\n           \
    \ $max = $num;\n        }\n        if ($i == $k) {\n            $result[] = $max;\n\
    \            $max = $num;\n            $i = 0;\n        } else {\n           \
    \ $i++;\n        }\n    }\n    if ($i != $k) {\n        $result[] = $max;\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfogpt2kw.php:45\n\
    Stack trace:\n#0 /tmp/tmpfogpt2kw.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpfogpt2kw.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpprz40y4b.php:36\n\
    Stack trace:\n#0 /tmp/tmpprz40y4b.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpprz40y4b.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $max;\n        $max = $arr[$i] > $max\
    \ ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0o80eoyq.php:35\n\
    Stack trace:\n#0 /tmp/tmp0o80eoyq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp0o80eoyq.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    $index = 0;\n    foreach\
    \ ($arr as $num) {\n        if ($num > $max) {\n            $max = $num;\n   \
    \         $index = 0;\n        }\n        if ($index >= $k) {\n            $result[]\
    \ = $max;\n            $max = $arr[0];\n            $index = 0;\n        }\n \
    \       $max = $num;\n        $index++;\n    }\n    if ($index >= $k) {\n    \
    \    $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u0fqy31.php:45\n\
    Stack trace:\n#0 /tmp/tmp6u0fqy31.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp6u0fqy31.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $value) {\n        $result[]\
    \ = $value;\n    }\n    sort($result);\n    return array_slice($result, 0, $k);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [-3, 2,\
    \ 1, 2, -1, -2, 1];\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkblwno6f.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -999999999;\n\
    \    for($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] :\
    \ $max;\n    }\n    for($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ftwjixh.php:35\n\
    Stack trace:\n#0 /tmp/tmp4ftwjixh.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4ftwjixh.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -999999999;\n\
    \    for($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] :\
    \ $max;\n    }\n    for($i = 0; $i < $len; $i++) {\n        $result[$i] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc558uvvt.php:35\n\
    Stack trace:\n#0 /tmp/tmpc558uvvt.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpc558uvvt.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = $arr[$i] >\
    \ $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyivttq1.php:35\n\
    Stack trace:\n#0 /tmp/tmpnyivttq1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnyivttq1.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        } else if ($key == $k)\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqfxe3vz.php:34\n\
    Stack trace:\n#0 /tmp/tmpiqfxe3vz.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpiqfxe3vz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    // sort arr\n\
    \    sort($arr);\n    \n    // get max k elements\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[] = $arr[$i];\n    }\n    \n    // get rest elements\n  \
    \  for ($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n    }\n  \
    \  \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxy1k5tkm.php:43\n\
    Stack trace:\n#0 /tmp/tmpxy1k5tkm.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpxy1k5tkm.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq737j7qm.php:34\n\
    Stack trace:\n#0 /tmp/tmpq737j7qm.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpq737j7qm.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $max > $arr[$i] ? $max : $arr[$i];\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $max;\n        $max = $max > $arr[$i]\
    \ ? $max : $arr[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkb4hzms.php:35\n\
    Stack trace:\n#0 /tmp/tmpxkb4hzms.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpxkb4hzms.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    $result = array_slice($result, 0, $k);\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n\
    \    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2n8n6ztn.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 0; $i < $k; $i++)\
    \ {\n        $max = $max > $arr[$i] ? $max : $arr[$i];\n    }\n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxs49vj14.php:34\n\
    Stack trace:\n#0 /tmp/tmpxs49vj14.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxs49vj14.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key == 0) {\n            $result[] = $value;\n        } else {\n   \
    \         $result[] = $value;\n            $result[] = $result[0];\n        }\n\
    \    }\n    return array_slice($result, 0, $k);\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoh24qhmr.php:35\n\
    Stack trace:\n#0 /tmp/tmpoh24qhmr.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoh24qhmr.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7bld9s9.php:34\n\
    Stack trace:\n#0 /tmp/tmph7bld9s9.php(47): test()\n#1 {main}\n  thrown in /tmp/tmph7bld9s9.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n    return\
    \ array_slice($arr, 0, $k);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work if there are two equal numbers in the array. For example, `[-3, -4, -4,\
    \ 5]` returns `[-4, -4, 5]`.\n<|/ c |>\n<| c |>\nYes, you are right. My bad. I've\
    \ edited my answer. Thanks for pointing out.\n<|/ c |>\n<| a tags=arrays,php |>\n\
    <code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 3;\n$result = array_slice($arr,\
    \ 0, $k);\n$result = array_unique($result);\nsort($result);\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n\
    \    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplezbw12_.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = [];\n    $maxCount = [];\n    foreach ($arr as $val) {\n \
    \       $maxCount[$val] = isset($maxCount[$val]) ? $maxCount[$val] + 1 : 1;\n\
    \        if ($maxCount[$val] == $k) {\n            $max[] = $val;\n        }\n\
    \    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1wodwvi.php:34\n\
    Stack trace:\n#0 /tmp/tmpz1wodwvi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpz1wodwvi.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[$i] = $max;\n    }\n    for ($i = 1; $i < count($arr); $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \        $result[$i] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3z50g43.php:37\n\
    Stack trace:\n#0 /tmp/tmpy3z50g43.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpy3z50g43.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i] > $max\
    \ ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtijix3x.php:35\n\
    Stack trace:\n#0 /tmp/tmpmtijix3x.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmtijix3x.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    \n    if ($len < $k)\
    \ {\n        return $result;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    \n    return $result;\n\
    }\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = maximum($arr, $k);\n\
    var_dump($result);\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppbyt8b1a.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=0 |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result =\
    \ array();\nforeach ($arr as $key => $value) {\n    $result[$key] = $value;\n\
    }\narray_multisort($result, SORT_DESC, $arr);\n$result = array_slice($arr, 0,\
    \ $k);\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\nforeach ($arr as\
    \ $key => $value) {\n    $result[$key] = $value;\n}\narray_multisort($result,\
    \ SORT_DESC, $arr);\n$result = array_slice($arr, 0, $k);\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\nforeach ($arr as\
    \ $key => $value) {\n    $result[$key] = $value;\n}\narray_multisort($result,\
    \ SORT_DESC, $arr);\n$result = array_slice($arr, 0, $k);\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$arr = [-3, 2, 1, 2, -1,\
    \ -2, 1];\n$k = 1;\n$result = array();\nforeach ($arr as $key => $value) {\n \
    \   $result[$key] = $value;\n}\narray_multisort($result, SORT_DESC, $arr);\n$result\
    \ = array_slice($arr, 0, $k);\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result\
    \ = array();\nforeach ($arr as $key => $value) {\n    $result[$key] = $value;\n\
    }\narray_multisort($result, SORT_DESC, $arr);\n$result = array_slice($arr, 0,\
    \ $k);\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nPlease\
    \ add some explanation to \nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8i2q6e1x.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    $maxIndex = 0;\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n          \
    \  $maxIndex = $i;\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprymbrj7g.php:34\n\
    Stack trace:\n#0 /tmp/tmprymbrj7g.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprymbrj7g.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = [];\n    $maxLen = 0;\n    foreach ($arr as $key => $value)\
    \ {\n        if ($maxLen < $key) {\n            $maxLen = $key;\n            $max\
    \ = [$value];\n        } else if ($key == $maxLen) {\n            $max[] = $value;\n\
    \        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args) {\n   \
    \ return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05wrm0dk.php:36\n\
    Stack trace:\n#0 /tmp/tmp05wrm0dk.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp05wrm0dk.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $result;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[$i] = max($arr[$i]);\n    }\n    \n    for ($i = $k; $i <\
    \ $len; $i++) {\n        $result[$i] = max($result[$i], $arr[$i]);\n    }\n  \
    \  \n    return $result;\n}\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result\
    \ = maximum($arr, $k);\nprint_r($result);\nfunction candidate(...$args) {\n  \
    \  return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: max(): When only one parameter is given, it must be an array\
    \ in /tmp/tmpkso_nt01.php on line 26\nArray\n(\n    [0] => \n    [1] => 2\n  \
    \  [2] => 1\n    [3] => 2\n    [4] => -1\n    [5] => -2\n    [6] => 1\n)\n\nWarning:\
    \ max(): When only one parameter is given, it must be an array in /tmp/tmpkso_nt01.php\
    \ on line 26\n\nWarning: max(): When only one parameter is given, it must be an\
    \ array in /tmp/tmpkso_nt01.php on line 26\n\nWarning: max(): When only one parameter\
    \ is given, it must be an array in /tmp/tmpkso_nt01.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpkso_nt01.php:45\nStack trace:\n\
    #0 /tmp/tmpkso_nt01.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpkso_nt01.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $result = [];\n    $max = $arr[0];\n\
    \    $index = 0;\n    foreach ($arr as $key => $value) {\n        if ($key < $index)\
    \ {\n            $result[] = $max;\n            $max = $value;\n        } else\
    \ {\n            $result[] = $value;\n        }\n        $index++;\n    }\n  \
    \  if ($index > $k) {\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8v4mi36.php:42\n\
    Stack trace:\n#0 /tmp/tmpk8v4mi36.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpk8v4mi36.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n    return\
    \ array_slice($arr, 0, $k);\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work\
    \ for negative numbers. Try `maximum([-4, -4, 5], 3)`.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work for negative numbers. Try `maximum([-4, -4, 5], 3)`.\n<|/ c |>\n\
    <| c |>\nThis doesn't work for negative numbers. Try `maximum([-4, -4, 5], 3)`.\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `maximum([-4, -4,\
    \ 5], 3)`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `maximum([-4,\
    \ -4, 5], 3)`.\n<|/ c |>\n<| a dscore=4 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5liwspps.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    array_push($result, $max);\n    for ($i = 1; $i < $k; $i++) {\n  \
    \      if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n     \
    \   array_push($result, $max);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoyhed699.php:40\n\
    Stack trace:\n#0 /tmp/tmpoyhed699.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpoyhed699.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    for($i = 0;\
    \ $i < $len; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    \n    for($i\
    \ = 0; $i < $k; $i++) {\n        $max = $result[0];\n        \n        for($j\
    \ = 1; $j < $len; $j++) {\n            if($result[$j] > $max) {\n            \
    \    $max = $result[$j];\n            }\n        }\n        \n        $result[$i]\
    \ = $max;\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpve9rqko5.php:45\n\
    Stack trace:\n#0 /tmp/tmpve9rqko5.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpve9rqko5.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4e68xy3n.php:32\n\
    Stack trace:\n#0 /tmp/tmp4e68xy3n.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4e68xy3n.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $max = $arr[0];\n    for($i = 0; $i < $k;\
    \ $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for($i\
    \ = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoan6en6a.php:34\n\
    Stack trace:\n#0 /tmp/tmpoan6en6a.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpoan6en6a.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $value) {\n        $result[]\
    \ = $value;\n    }\n    sort($result);\n    return array_slice($result, 0, $k);\n\
    }\n\n$arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't answer the question.\
    \ OP wants to sort an array by its maximum k elements. Your code just returns\
    \ the k largest elements of the array.\n<|/ c |>\n<| c |>\nYes, it does. I tested\
    \ it and it works. I added a note to the answer.\n<|/ c |>\n<| c |>\nThe OP wants\
    \ to sort an array by its maximum k elements. Your code just returns the k largest\
    \ elements of the array.\n<|/ c |>\n<| c |>\nI added a note to the answer. Thank\
    \ you for pointing out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpid10_6lm.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    sort($arr);\n    $i = 0;\n    $j = 0;\n \
    \   $k = 0;\n    foreach ($arr as $key => $value) {\n        if ($j == $k) {\n\
    \            $result[] = $value;\n            $j = 0;\n            $k++;\n   \
    \     }\n        if ($value == $arr[$key]) {\n            $j++;\n        } else\
    \ {\n            $result[] = $value;\n            $j = 0;\n            $k++;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppywl4j7.php:45\n\
    Stack trace:\n#0 /tmp/tmpppywl4j7.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpppywl4j7.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = -999999999;\n    foreach ($arr as $value)\
    \ {\n        if ($value > $max) {\n            $max = $value;\n        }\n   \
    \ }\n    $result = [$max];\n    for ($i = 1; $i < $k; $i++) {\n        $result[]\
    \ = $result[$i - 1];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfv3317i_.php:37\n\
    Stack trace:\n#0 /tmp/tmpfv3317i_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpfv3317i_.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpca7mghe3.php:34\n\
    Stack trace:\n#0 /tmp/tmpca7mghe3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpca7mghe3.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsu45f49x.php:32\n\
    Stack trace:\n#0 /tmp/tmpsu45f49x.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsu45f49x.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[$i] = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcyfa11jg.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    \n    for ($i =\
    \ $k; $i < $len; $i++) {\n        $result[$i] = max($arr[$i], $result[$i]);\n\
    \    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpol6rwfa7.php:41\n\
    Stack trace:\n#0 /tmp/tmpol6rwfa7.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpol6rwfa7.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, $k);\n    return\
    \ array_slice($result, 0, $k);\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_vi25u50.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $max = $arr[0];\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsvfvubc.php:34\n\
    Stack trace:\n#0 /tmp/tmpxsvfvubc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxsvfvubc.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    // Sort the\
    \ array in descending order\n    sort($arr);\n    \n    // Find the maximum k\
    \ numbers in the array\n    for ($i = 0; $i < $k; $i++) {\n        $result[] =\
    \ $arr[$i];\n    }\n    \n    // Return the result array\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk28_9cbw.php:39\n\
    Stack trace:\n#0 /tmp/tmpk28_9cbw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpk28_9cbw.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $max = $arr[0];\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        $result[] = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe9muk56b.php:34\n\
    Stack trace:\n#0 /tmp/tmpe9muk56b.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpe9muk56b.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp41j0zuul.php:36\n\
    Stack trace:\n#0 /tmp/tmp41j0zuul.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp41j0zuul.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $value) {\n        $result[]\
    \ = $value;\n    }\n    sort($result);\n    $result = array_slice($result, 0,\
    \ $k);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjbpec50b.php:33\n\
    Stack trace:\n#0 /tmp/tmpjbpec50b.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjbpec50b.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ == $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprc7fhiem.php:34\n\
    Stack trace:\n#0 /tmp/tmprc7fhiem.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprc7fhiem.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    foreach ($arr as $key =>\
    \ $value) {\n        if ($key < $max) {\n            $result[] = $value;\n   \
    \     }\n        $max = $key;\n    }\n    return array_slice($result, 0, $k);\n\
    }\n</code>\n<|/ a tags=arrays,php,algorithm |>\n<| a dscore=0 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdx0s8vpk.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $len; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    array_multisort($result,\
    \ $k);\n    return $result;\n}\n</code>\n<|/ a tags=arrays,sorting,php |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result\
    \ = array();\n$len = count($arr);\nfor($i = 0; $i < $len; $i++) {\n    $result[$i]\
    \ = $arr[$i];\n}\narray_multisort($result, $k);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiyai65xi.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    sort($arr);\n    $len = count($arr);\n  \
    \  for($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't\
    \ seem to work. Try it with `maximum([-3, 2, 1, 2, -1, -2, 1], 1)`\n<|/ c |>\n\
    <| c |>\nIt does work. Try it with `maximum([-3, 2, 1, 2, -1, -2, 1], 1)`\n<|/\
    \ c |>\n<| c |>\nIt doesn't work for me. Try it with `maximum([-3, 2, 1, 2, -1,\
    \ -2, 1], 1)`\n<|/ c |>\n<| c |>\nIt does work. Try it with `maximum([-3, 2, 1,\
    \ 2, -1, -2, 1], 1)`\n<|/ c |>\n<| c |>\nIt doesn't work for me. Try it with `maximum([-3,\
    \ 2, 1, 2, -1, -2, 1], 1)`\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppalt3qj4.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max_len = max($arr);\n\
    \    for($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i\
    \ = 0; $i < $len; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    for($i\
    \ = 0; $i < $max_len; $i++) {\n        for($j = 0; $j < $k; $j++) {\n        \
    \    if($result[$i] > $result[$j]) {\n                $result[$i] = $result[$j];\n\
    \            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp338mgyrq.php:42\n\
    Stack trace:\n#0 /tmp/tmp338mgyrq.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp338mgyrq.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    \n    for($i = 0; $i < $k; $i++) {\n    \
    \    $result[] = maxValue($arr);\n    }\n    \n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function maxValue() in\
    \ /tmp/tmp11gq1dzg.php:21\nStack trace:\n#0 /tmp/tmp11gq1dzg.php(28): maximum(Array,\
    \ 3)\n#1 /tmp/tmp11gq1dzg.php(32): candidate(Array, 3)\n#2 /tmp/tmp11gq1dzg.php(45):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp11gq1dzg.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    sort($arr);\n    $len = count($arr);\n  \
    \  for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for\
    \ ($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8nfhso38.php:36\n\
    Stack trace:\n#0 /tmp/tmp8nfhso38.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp8nfhso38.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[$i] = max($result[$i], $arr[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfq3u8l29.php:34\n\
    Stack trace:\n#0 /tmp/tmpfq3u8l29.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfq3u8l29.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6t4d5lqw.php:32\n\
    Stack trace:\n#0 /tmp/tmp6t4d5lqw.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6t4d5lqw.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    arsort($result);\n    $result = array_slice($result,\
    \ 0, $k);\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n\
    $i = 0;\nforeach($arr as $key => $value) {\n    if($i == $k) {\n        $result[]\
    \ = $value;\n        $i = 0;\n    } else {\n        $result[] = $value;\n    \
    \    $i++;\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result\
    \ = array();\n$i = 0;\nforeach($arr as $key => $value) {\n    if($i == $k) {\n\
    \        $result[] = $value;\n        $i = 0;\n    } else {\n        $result[]\
    \ = $value;\n        $i++;\n    }\n}\nprint_r($result);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n\
    $k = 1;\n$result = array();\n$i = 0;\nforeach($arr as $key => $value) {\n    if($i\
    \ == $k) {\n        $result[] = $value;\n        $i = 0;\n    } else {\n     \
    \   $result[] = $value;\n        $i++;\n    }\n}\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2,\
    \ -1, -2, 1];\n$k = 1;\n$result = array();\n$i = 0;\nforeach($arr as $key => $value)\
    \ {\n    if($i == $k) {\n        $result[] = $value;\n        $i = 0;\n    } else\
    \ {\n        $result[] = $value;\n        $i++;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [-3,\
    \ 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n$i = 0;\nforeach($arr as\
    \ $key => $value) {\n    if($i == $k) {\n        $result[] = $value;\n       \
    \ $i = 0;\n    } else {\n        $result[] = $value;\n        $i++;\n    }\n}\n\
    print_r($result);\n</code>\n<|/\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4b18exkk.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    $result[] = $max;\n    for\
    \ ($i = 1; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n</code>\n<|/ a tags=arrays,php,algorithm\
    \ |>\n<| c |>\nThe question says *The elements in the array will be in the range\
    \ of [-1000, 1000]*. Your solution doesn't work for negative numbers.\n<|/ c |>\n\
    <| c |>\nThanks for pointing that out. I've updated the answer to include a check\
    \ for negative numbers. I tested it and it works.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for negative numbers. Try `maximum([-10, -5, -4, -7, -9, -6, -7, -9, -10,\
    \ -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7,\
    \ -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7,\
    \ -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5,\
    \ -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9,\
    \ -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9,\
    \ -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4,\
    \ -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6,\
    \ -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10,\
    \ -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, \nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsrebbk1w.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr0bgw14.php:32\n\
    Stack trace:\n#0 /tmp/tmpwr0bgw14.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwr0bgw14.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    // sort array\
    \ by descending order\n    sort($arr);\n    \n    // get first k elements\n  \
    \  for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n\
    \    // get rest elements\n    for ($i = $k; $i < $len; $i++) {\n        $result[]\
    \ = $arr[$i];\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehxkx_tg.php:43\n\
    Stack trace:\n#0 /tmp/tmpehxkx_tg.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpehxkx_tg.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = -INF;\n \
    \   for ($i = 0; $i < $len; $i++) {\n        $current = $arr[$i];\n        if\
    \ ($current > $max) {\n            $max = $current;\n        }\n    }\n    $result\
    \ = array();\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6qqrnr3.php:39\n\
    Stack trace:\n#0 /tmp/tmpl6qqrnr3.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpl6qqrnr3.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $max = $arr[0];\n    for($i = 0; $i < $k;\
    \ $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for($i\
    \ = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizv10zeg.php:34\n\
    Stack trace:\n#0 /tmp/tmpizv10zeg.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpizv10zeg.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key <= $k) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr, $k);\n\
    print_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfsij6qdz.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    foreach ($arr as $num) {\n\
    \        if ($num > $max) {\n            $max = $num;\n        }\n    }\n    $result\
    \ = [$max];\n    for ($i = 1; $i < $k; $i++) {\n        $result[] = $max;\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16ck912j.php:37\n\
    Stack trace:\n#0 /tmp/tmp16ck912j.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp16ck912j.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr\
    \ = [-3, -4, 5];\n$k = 3;\n$result = array_slice($arr, 0, $k);\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [-3,\
    \ -4, 5];\n$k = 3;\n$result = array_slice($arr, 0, $k);\nprint_r($result);\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [-3,\
    \ -4, 5];\n$k = 3;\n$result = array_slice($arr, 0, $k);\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n$arr = [-3, -4, 5];\n$k =\
    \ 3;\n$result = array_slice($arr, 0, $k);\nprint_r($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$arr = [-3, -4, 5];\n$k = 3;\n$result =\
    \ array_slice($arr, 0, $k);\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$arr = [-3, -4, 5];\n$k = 3;\n$result = array_slice($arr,\
    \ 0, $k);\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$arr = [-3, -4, 5];\n$k = 3;\n$result = array_slice($arr, 0, $k);\n\
    print_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $arr = [-3, -4, 5];\n$k = 3;\n$result = array_slice($arr, 0, $k);\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr\
    \ = [-3, -4, 5];\n$k = 3;\n$result = array_slice($arr, 0, $k);\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<|\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnh2vwmn1.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 0; $i < $k; $i++)\
    \ {\n        $max = $max > $arr[$i] ? $max : $arr[$i];\n    }\n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $max;\n        $max = $max > $arr[$i]\
    \ ? $max : $arr[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpty57dg98.php:35\n\
    Stack trace:\n#0 /tmp/tmpty57dg98.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpty57dg98.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp79kk7ld.php:32\n\
    Stack trace:\n#0 /tmp/tmpp79kk7ld.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpp79kk7ld.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    $index = 0;\n    foreach\
    \ ($arr as $value) {\n        if ($value > $max) {\n            $max = $value;\n\
    \            $index = 0;\n        }\n        if ($index == $k) {\n           \
    \ $result[] = $max;\n            $max = $arr[0];\n            $index = 0;\n  \
    \      }\n        $max = $value;\n        $index++;\n    }\n    if ($index !=\
    \ 0) {\n        $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgrg4yzi_.php:45\n\
    Stack trace:\n#0 /tmp/tmpgrg4yzi_.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpgrg4yzi_.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    \n    for($i = 0; $i < $k; $i++) {\n    \
    \    $result[] = $arr[$i];\n    }\n    \n    sort($result);\n    \n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpld6d3i__.php:35\n\
    Stack trace:\n#0 /tmp/tmpld6d3i__.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpld6d3i__.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    $max = array_shift($arr);\n  \
    \  \n    for ($i = 0; $i < $k; $i++) {\n        $max = max($max, $arr[$i]);\n\
    \    }\n    \n    $result[] = $max;\n    \n    for ($i = 0; $i < $len; $i++) {\n\
    \        $max = max($max, $arr[$i]);\n        if ($max === $arr[$i]) {\n     \
    \       $result[] = $arr[$i];\n        }\n    }\n    \n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2uztqw30.php:48\n\
    Stack trace:\n#0 /tmp/tmp2uztqw30.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp2uztqw30.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpleyzhhoi.php:35\n\
    Stack trace:\n#0 /tmp/tmpleyzhhoi.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpleyzhhoi.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwb72ytps.php:32\n\
    Stack trace:\n#0 /tmp/tmpwb72ytps.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwb72ytps.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    array_push($result, $max);\n    for ($i = 1; $i < $k; $i++) {\n  \
    \      if ($arr[$i] > $max) {\n            $result[] = $arr[$i];\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsv6orth0.php:39\n\
    Stack trace:\n#0 /tmp/tmpsv6orth0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpsv6orth0.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    $index = 0;\n    foreach\
    \ ($arr as $num) {\n        if ($num > $max) {\n            $max = $num;\n   \
    \         $index = 0;\n        }\n        if ($index >= $k) {\n            $result[]\
    \ = $max;\n            $max = $arr[0];\n            $index = 0;\n        }\n \
    \       $index++;\n    }\n    if ($index >= $k) {\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpf34x23.php:44\n\
    Stack trace:\n#0 /tmp/tmpbpf34x23.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpbpf34x23.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 1; $i < $k; $i++)\
    \ {\n        if($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4oqel93w.php:36\n\
    Stack trace:\n#0 /tmp/tmp4oqel93w.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp4oqel93w.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = -INF;\n    $i = 0;\n    foreach ($arr as\
    \ $num) {\n        if ($num > $max) {\n            $max = $num;\n        }\n \
    \       if ($num == $max) {\n            $result[$i] = $num;\n            $i++;\n\
    \        }\n    }\n    return array_slice($result, 0, $k);\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ikuv98k.php:38\n\
    Stack trace:\n#0 /tmp/tmp7ikuv98k.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp7ikuv98k.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    $max = $arr[0];\n   \
    \ for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = $arr[$i] >\
    \ $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgonk50qk.php:35\n\
    Stack trace:\n#0 /tmp/tmpgonk50qk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpgonk50qk.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n    for($i = $k;\
    \ $i < $len; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17dfsxat.php:37\n\
    Stack trace:\n#0 /tmp/tmp17dfsxat.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp17dfsxat.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    \n    for($i = 0; $i < $k; $i++) {\n    \
    \    $result[$i] = max($arr[$i]);\n    }\n    \n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: max(): When only one parameter is given, it must be an array\
    \ in /tmp/tmppx1_u1gb.php on line 21\n\nWarning: max(): When only one parameter\
    \ is given, it must be an array in /tmp/tmppx1_u1gb.php on line 21\n\nWarning:\
    \ max(): When only one parameter is given, it must be an array in /tmp/tmppx1_u1gb.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppx1_u1gb.php:32\n\
    Stack trace:\n#0 /tmp/tmppx1_u1gb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppx1_u1gb.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else if ($key\
    \ === $k) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyk880q82.php:34\n\
    Stack trace:\n#0 /tmp/tmpyk880q82.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpyk880q82.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n    $result\
    \ = array_slice($result, 0, $k);\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n\
    $k = 1;\n$result = array_slice($arr, 0, $k);\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nWhile this code may answer the question, providing additional context regarding\
    \ why and/or how this code answers the question improves its long-term value.\n\
    <|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2,\
    \ 1];\n$k = 1;\n$result = array_slice($arr, 0, $k);\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k\
    \ = 1;\n$result = array_slice($arr, 0, $k);\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ dscore=0 |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array_slice($arr,\
    \ 0, $k);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=0 |>\n<code>\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array_slice($arr, 0, $k);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array_slice($arr, 0, $k);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$arr = [-3, 2, 1, 2, -1,\
    \ -2, 1];\n$k = 1;\n$result = array_slice($arr, 0, $k);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array_slice($arr,\
    \ 0, $k);\n</code>\n<|/ a dscore=0 tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwbt_bqqx.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $value) {\n        $result[]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n    return\
    \ array_slice($arr, 0, $k);\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a |>\n<code>\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0x13_pye.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $value) {\n        $result[]\
    \ = $value;\n    }\n    sort($result);\n    $result = [];\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $result[] = $result[$i];\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr =\
    \ [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = [];\nforeach ($arr as $value)\
    \ {\n    $result[] = $value;\n}\nsort($result);\n$result = [];\nfor ($i = 0; $i\
    \ < $k; $i++) {\n    $result[] = $result[$i];\n}\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2,\
    \ 1];\n$k = 1;\n$result = [];\nforeach ($arr as $value) {\n    $result[] = $value;\n\
    }\nsort($result);\n$result = [];\nfor ($i = 0; $i < $k; $i++) {\n    $result[]\
    \ = $result[$i];\n}\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<|\
    \ c |>\nPlease add some explanation to your answer such that others can learn\
    \ from it\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n<?php\n$arr = [-3, 2, 1,\
    \ 2, -1, -2, 1];\n$k = 1;\n$result = [];\nforeach ($arr as $value) {\n    $result[]\
    \ = $value;\n}\nsort($result);\n$result = [];\nfor ($i = 0; $i < $k; $i++) {\n\
    \    $result[] = $result[$i];\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = [];\n\
    foreach ($arr as $value) {\n    $result[] = $value;\n}\nsort($result);\n$result\
    \ = [];\nfor ($i = 0; $i < $k; $i++) {\n    $result[] = $result[$i];\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php dscore=0 |>\n<| a tags=arrays,php |>\n<code>\n\
    <?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = [];\nforeach ($arr\
    \ as $value) {\n    $result[] = $value;\n}\nsort($result);\n$result\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg9sh4d3z.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = 0; $i < $len;\
    \ $i++) {\n        $max = $arr[$i];\n        for($j = $i + 1; $j < $len; $j++)\
    \ {\n            if($max < $arr[$j]) {\n                $max = $arr[$j];\n   \
    \         }\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php\n$arr = [-3, -4, 5];\n$k\
    \ = 3;\n$result = array();\nfor($i = 0; $i < $k; $i++) {\n    $result[] = $arr[$i];\n\
    }\nfor($i = 0; $i < count($arr); $i++) {\n    $max = $arr[$i];\n    for($j = $i\
    \ + 1; $j < count($arr); $j++) {\n        if($max < $arr[$j]) {\n            $max\
    \ = $arr[$j];\n        }\n    }\n    $result[] = $max;\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $arr = [-3, -4, 5];\n$k = 3;\n$result = array();\nfor($i = 0; $i < $k; $i++) {\n\
    \    $result[] = $arr[$i];\n}\nfor($i = 0; $i < count($arr); $i++) {\n    $max\
    \ = $arr[$i];\n    for($j = $i + 1; $j < count($arr); $j++) {\n        if($max\
    \ < $arr[$j]) {\n            $max = $arr[$j];\n        }\n    }\n    $result[]\
    \ = $max;\n}\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n<?php\n$arr = [-3, -4, 5];\n$k = 3;\n$result = array();\nfor($i\
    \ = 0; $i < $k; $i++) {\n    $result[] = $arr[$i];\n}\nfor($i = 0; $i < count($arr);\
    \ $i++) {\n    $max = $arr[$i];\n    for($j = $i + 1; $j < count($arr); $j++)\
    \ {\n        if($max < $arr[$j]) {\n            $max = $arr[$j];\n        }\n\
    \    }\n    $result\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqt5f0x2o.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| a dscore=0\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu1dqty0k.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $length = count($arr);\n    \n    for($i\
    \ = 0; $i < $length; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    \n \
    \   for($i = 0; $i < $k; $i++) {\n        $max = $result[0];\n        \n     \
    \   for($j = 1; $j < $length; $j++) {\n            if($result[$j] > $max) {\n\
    \                $max = $result[$j];\n            }\n        }\n        \n   \
    \     $result[$i] = $max;\n    }\n    \n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ao2u3oq.php:45\n\
    Stack trace:\n#0 /tmp/tmp1ao2u3oq.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp1ao2u3oq.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jzukea2.php:32\n\
    Stack trace:\n#0 /tmp/tmp7jzukea2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7jzukea2.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($k > $len)\
    \ {\n        return $result;\n    }\n    \n    $result = array_slice($arr, 0,\
    \ $k);\n    \n    for ($i = 1; $i < $k; $i++) {\n        $result = array_merge($result,\
    \ array_slice($arr, $i, $len - $i));\n    }\n    \n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_ajwe23.php:39\n\
    Stack trace:\n#0 /tmp/tmpp_ajwe23.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpp_ajwe23.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_w022dx.php:32\n\
    Stack trace:\n#0 /tmp/tmpo_w022dx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpo_w022dx.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[] = $arr[$i]\
    \ > $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnurlerf9.php:35\n\
    Stack trace:\n#0 /tmp/tmpnurlerf9.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnurlerf9.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3oj2h3e.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3oj2h3e.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpj3oj2h3e.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[$i] = max($result[$i], $arr[$i]);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxuvi8zc3.php:34\n\
    Stack trace:\n#0 /tmp/tmpxuvi8zc3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxuvi8zc3.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4guijzf.php:36\n\
    Stack trace:\n#0 /tmp/tmpq4guijzf.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq4guijzf.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[$key]\
    \ = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n    return\
    \ array_slice($arr, 0, $k);\n}\n</code>\n<|/ a tags=arrays,php,sorting |>\n<|\
    \ a |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw7_f1zk8.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    for($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for($i = $k; $i < $len;\
    \ $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_bdhdqd.php:34\n\
    Stack trace:\n#0 /tmp/tmp6_bdhdqd.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp6_bdhdqd.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key < $k) {\n            $result[] = $value;\n        } else {\n   \
    \         $result[] = array_pop($result);\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9rfdfh_.php:34\n\
    Stack trace:\n#0 /tmp/tmpw9rfdfh_.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpw9rfdfh_.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $max = $arr[0];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] > $max ? $arr[$i]\
    \ : $max;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        $result[$i] = $arr[$i]\
    \ == $max ? $arr[$i] : $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6br4l0_z.php:35\n\
    Stack trace:\n#0 /tmp/tmp6br4l0_z.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp6br4l0_z.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $arr = array_reverse($arr);\n    $max = $arr[0];\n    $maxIndex =\
    \ 0;\n    foreach ($arr as $key => $value) {\n        if ($value > $max) {\n \
    \           $max = $value;\n            $maxIndex = $key;\n        }\n    }\n\
    \    return array_slice($arr, $maxIndex, $k);\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4uwkqzz.php:35\n\
    Stack trace:\n#0 /tmp/tmp_4uwkqzz.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_4uwkqzz.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n    for($i = $k;\
    \ $i < $len; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70lixbkq.php:37\n\
    Stack trace:\n#0 /tmp/tmp70lixbkq.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp70lixbkq.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key <= $k) {\n            $result[] = $value;\n        }\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmjkmjux.php:32\n\
    Stack trace:\n#0 /tmp/tmpsmjkmjux.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsmjkmjux.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    $index = 0;\n    foreach\
    \ ($arr as $value) {\n        if ($value > $max) {\n            $max = $value;\n\
    \            $index = 0;\n        }\n        if ($index == $k) {\n           \
    \ $result[] = $max;\n            $max = $arr[$index + 1];\n            $index++;\n\
    \        }\n        $result[] = $value;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjcl4zp8o.php:41\n\
    Stack trace:\n#0 /tmp/tmpjcl4zp8o.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjcl4zp8o.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = [];\n    $maxCount = [];\n    $maxCount[0] = 0;\n    for($i\
    \ = 0; $i < $k; $i++) {\n        $maxCount[$arr[$i]] = $maxCount[$arr[$i]] ? $maxCount[$arr[$i]]\
    \ : $maxCount[$arr[$i]] = 1;\n    }\n    for($i = 1; $i < $k; $i++) {\n      \
    \  if($maxCount[$arr[$i]] > $maxCount[$arr[$i-1]]) {\n            $maxCount[$arr[$i]]\
    \ = $maxCount[$arr[$i-1]];\n            $max[$i] = $arr[$i-1];\n        } else\
    \ {\n            $maxCount[$arr[$i]] = $maxCount[$arr[$i-1]];\n            $max[$i]\
    \ = $arr[$i];\n        }\n    }\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptnuxt77m.php:41\n\
    Stack trace:\n#0 /tmp/tmptnuxt77m.php(54): test()\n#1 {main}\n  thrown in /tmp/tmptnuxt77m.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    array_multisort($result, SORT_DESC, $arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpejx35rau.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nI believe this answer is\
    \ the most efficient solution. Thank you!\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0znw0ttt.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    foreach ($arr as $num) {\n\
    \        if ($num > $max) {\n            $max = $num;\n        }\n    }\n    $result\
    \ = [$max];\n    for ($i = 1; $i < $k; $i++) {\n        $result[] = $max;\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplwf5lkk0.php:37\n\
    Stack trace:\n#0 /tmp/tmplwf5lkk0.php(50): test()\n#1 {main}\n  thrown in /tmp/tmplwf5lkk0.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $value) {\n        $result[]\
    \ = $value;\n    }\n    sort($result);\n    return array_slice($result, 0, $k);\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8c1tp_i2.php:32\n\
    Stack trace:\n#0 /tmp/tmp8c1tp_i2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8c1tp_i2.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    if ($key <= $k) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id'\
    \ => 2, 'name' => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id'\
    \ => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name' => 'Jack')\n);\n\n$result\
    \ = array();\n$i = 0;\nforeach ($array as $key => $value) {\n    if ($i < $key)\
    \ {\n        $result[$key] = $value;\n    }\n    $i++;\n}\n\n$result = array_slice($result,\
    \ 0, $k);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    $array = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id' => 2,\
    \ 'name' => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id'\
    \ => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name' => 'Jack')\n);\n\n$result\
    \ = array();\n$i = 0;\nforeach ($array as $key => $value) {\n    if ($i < $key)\
    \ {\n        $result[$key] = $value;\n    }\n    $i++;\n}\n\n$result = array_slice($result,\
    \ 0, $k);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\n\
    \    array('id' => 1, 'name' => 'John'),\n    array('id' => 2, 'name' => 'Jane'),\n\
    \    array('id' => 3, 'name' => 'Jack'),\n    array('id' => 4, 'name' => 'Jill'),\n\
    \    array('id' => 5, 'name' => 'Jack')\n);\n\n$result = array();\n$i = 0;\nforeach\
    \ ($array as $key => $value) {\n    if ($i < $key) {\n        $result[$key] =\
    \ $value;\n    }\n    $i++;\n}\n\n$result = array_slice($result, 0, $k);\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| a dscore=1 |>\n<code>\n$array = array(\n\
    \    array('id' => 1, 'name' => 'John'),\n    array('id' => 2, 'name' => 'Jane'),\n\
    \    array('id' => 3, '\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp162izihx.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5f7rd7i.php:32\n\
    Stack trace:\n#0 /tmp/tmpd5f7rd7i.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpd5f7rd7i.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    for ($i =\
    \ 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    \n    for ($i\
    \ = 0; $i < $len; $i++) {\n        $result[$i] = max($result[$i], $arr[$i]);\n\
    \    }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvrpe2wf.php:37\n\
    Stack trace:\n#0 /tmp/tmpsvrpe2wf.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpsvrpe2wf.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    $index = 0;\n    foreach\
    \ ($arr as $num) {\n        if ($num > $max) {\n            $max = $num;\n   \
    \         $index = 0;\n        }\n        if ($num == $max) {\n            $result[$index++]\
    \ = $num;\n        }\n    }\n    return array_slice($result, 0, $k);\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwulfenc.php:38\n\
    Stack trace:\n#0 /tmp/tmphwulfenc.php(51): test()\n#1 {main}\n  thrown in /tmp/tmphwulfenc.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    \n    for($i = 0; $i < $k; $i++) {\n    \
    \    $result[] = $arr[$i];\n    }\n    \n    sort($result);\n    \n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yhbp1ib.php:34\n\
    Stack trace:\n#0 /tmp/tmp1yhbp1ib.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1yhbp1ib.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    \n    for($i = 0; $i < $k; $i++) {\n        $result[]\
    \ = $arr[$i];\n    }\n    \n    sort($result);\n    \n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp922ke44r.php:35\n\
    Stack trace:\n#0 /tmp/tmp922ke44r.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp922ke44r.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    $i = 0;\n    \n\
    \    while($i < $k) {\n        $result[] = $arr[$i];\n        $i++;\n    }\n \
    \   \n    for($i = $k; $i < $len; $i++) {\n        $result[] = $arr[$i];\n   \
    \ }\n    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9djc3yz.php:39\n\
    Stack trace:\n#0 /tmp/tmpg9djc3yz.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpg9djc3yz.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytobsroo.php:34\n\
    Stack trace:\n#0 /tmp/tmpytobsroo.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpytobsroo.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    sort($arr);\n    $result[] = $arr[0];\n \
    \   for ($i = 1; $i < $k; $i++) {\n        $result[] = max($arr[$i], $result[$i\
    \ - 1]);\n    }\n    return $result;\n}\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n\
    $k = 1;\nprint_r(maximum($arr, $k));\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n\
    $k = 1;\n$result = array();\nsort($arr);\n$result[] = $arr[0];\nfor ($i = 1; $i\
    \ < $k; $i++) {\n    $result[] = max($arr[$i], $result[$i - 1]);\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\nsort($arr);\n$result[]\
    \ = $arr[0];\nfor ($i = 1; $i < $k; $i++) {\n    $result[] = max($arr[$i], $result[$i\
    \ - 1]);\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<|\
    \ a tags=php,arrays,sorting |>\n<code>\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k =\
    \ 1;\n$result = array();\nsort($arr);\n$result[] = $arr[0];\nfor ($i = 1; $i <\
    \ $k; $i++) {\n    $result[] = max($arr[$i], $result[$i - 1]);\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = array();\n\
    sort($arr);\n$result[] = $arr[0];\nfor ($i = 1; $i < $k; $i++) {\n    $result[]\
    \ = max($arr[$i], $result[$i - 1]);\n}\nprint_r($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwrdejm1e.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11v_e8ii.php:32\n\
    Stack trace:\n#0 /tmp/tmp11v_e8ii.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp11v_e8ii.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    foreach ($arr as $key => $value) {\n        if\
    \ ($key < $k) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| a tags=php,arrays,algorithm\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprgdqghex.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpak3gydz0.php:34\n\
    Stack trace:\n#0 /tmp/tmpak3gydz0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpak3gydz0.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewh3anju.php:32\n\
    Stack trace:\n#0 /tmp/tmpewh3anju.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpewh3anju.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $len = count($arr);\n    \n    if ($len <\
    \ $k) {\n        return $arr;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[$i] = max($arr[$i], $result[$i]);\n    }\n    \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4nal2it.php:37\n\
    Stack trace:\n#0 /tmp/tmpo4nal2it.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpo4nal2it.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $temp = [];\n    foreach ($arr as $key => $value)\
    \ {\n        if ($key < $k) {\n            $temp[] = $value;\n        } else {\n\
    \            $result[] = array_merge(array_slice($temp, 0, $k), [$value]);\n \
    \           $temp = [];\n        }\n    }\n    return array_merge(array_slice($temp,\
    \ 0, $k), $result);\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09z7qoqk.php:36\n\
    Stack trace:\n#0 /tmp/tmp09z7qoqk.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp09z7qoqk.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $n = count($arr);\n    \n    // Sort the\
    \ array in descending order\n    sort($arr);\n    \n    // Find the first k elements\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n   \
    \ \n    // Find the remaining elements\n    for ($i = $k; $i < $n; $i++) {\n \
    \       $result[] = $arr[$i];\n    }\n    \n    return $result;\n}\n\n$arr = [-3,\
    \ -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => -4\n    [1] => -3\n    [2] => 5\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpk023fhee.php:46\nStack trace:\n\
    #0 /tmp/tmpk023fhee.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpk023fhee.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[$i] = $arr[$i] == $max ? $arr[$i] : $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbf37pql.php:34\n\
    Stack trace:\n#0 /tmp/tmpqbf37pql.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqbf37pql.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for ($i = 1; $i < $k; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    $result[] = $max;\n    for ($i = 1; $i < $k; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $result[] = $arr[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6jim8qu.php:39\n\
    Stack trace:\n#0 /tmp/tmpd6jim8qu.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpd6jim8qu.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = $arr[0];\n    for($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i] > $max ? $arr[$i] : $max;\n    }\n    for($i = 0;\
    \ $i < $k; $i++) {\n        $result[$i] = $arr[$i] > $max ? $arr[$i] : $max;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxr57i5f.php:34\n\
    Stack trace:\n#0 /tmp/tmpdxr57i5f.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdxr57i5f.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// Input: arr = [-3, -4, 5], k = 3\n// Output: [-4, -3, 5]\n// Example 2:\n\
    // Input: arr = [4, -4, 4], k = 2\n// Output: [4, 4]\n// Example 3:\n// Input:\
    \ arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n// Output: [2]\n// Note:\n// 1. The length\
    \ of the array will be in the range of [1, 1000].\n// 2. The elements in the array\
    \ will be in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    foreach ($arr as $key => $value) {\n    \
    \    $result[$key] = $value;\n    }\n    arsort($result);\n    return array_slice($result,\
    \ 0, $k);\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdi_pj68o.php:31\n\
    Stack trace:\n#0 /tmp/tmpdi_pj68o.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdi_pj68o.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_49_modp
language: php
prompt: "<?php\n// Return 2^n modulo p (be aware of numerics).\n// >>> modp(3, 5)\n\
  // 3\n// >>> modp(1101, 101)\n// 2\n// >>> modp(0, 101)\n// 1\n// >>> modp(3, 11)\n\
  // 8\n// >>> modp(100, 101)\n// 1\nfunction modp($n, $p) {\n"
tests: "function candidate(...$args) {\n    return modp(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(3, 5) !== 3) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1101, 101) !== 2) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(0, 101) !== 1) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(3, 11) !== 8) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(100, 101) !== 1) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(30, 5) !== 4) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(31, 5) !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\n\
  test();"
completions: ["  if ($n < 0) {\n    return -modp($n, $p);\n  }\n  if ($p < 0) {\n\
    \    return modp($n % $p, $p);\n  }\n  if ($p === 0) {\n    return 1;\n  }\n \
    \ if ($p === 1) {\n    return $n;\n  }\n  if ($n % $p === 0) {\n    return $n\
    \ % $p;\n  }\n  return modp($n / $p, $p);\n}", "  return ($n % $p + $p) % $p;\n\
    }\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "    return ($n % $p\
    \ + $p) % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return\
    \ $n % $p;\n}\n", "  return $n % $p;\n}\n", "    return ($n % $p + $p) % $p;\n\
    }\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n\
    }\n", "  $n = $n & $p;\n  $n = ($n >> 16) & 0xffff;\n  $n = ($n >> 8) & 0xffff;\n\
    \  $n = $n & 0xff;\n  return $n;\n}\n", "  return $n % $p;\n}\n", "  return $n\
    \ % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n\
    \ % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return ($n\
    \ % $p + $p) % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n",
  "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  if ($n < 0) {\n    return $n % $p;\n  }\n  return\
    \ ($n % $p) + $p;\n}\n", "  if ($n < 0) {\n    $n = -$n;\n  }\n  if ($p < 0) {\n\
    \    $p = -$p;\n  }\n  if ($n === 0) {\n    return 1;\n  }\n  if ($p === 0) {\n\
    \    return $n;\n  }\n  if ($p === $n) {\n    return $n;\n  }\n  if ($p === 1)\
    \ {\n    return $n;\n  }\n  if ($n % $p === 0) {\n    return $n;\n  }\n  return\
    \ modp($n / $p, $p);\n}", "  return $n % $p;\n}\n", "  return ($n % $p + $p) %\
    \ $p;\n}\n", "  return ($n % $p) + $p;\n}\n", "  if ($n < 0) {\n    return $n\
    \ % $p;\n  }\n  return ($n % $p) + $p;\n}\n", "  return $n % $p;\n}\n", "  return\
    \ $n % $p;\n}\n", "  return ($n % $p + $p) % $p;\n}\n", "  return $n % $p;\n}\n",
  "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p == 0) {\n    return 0;\n\
    \  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return $n;\n\
    \  }\n  if ($p > $n) {\n    return modp($n, $p);\n  }\n  $r = $n % $p;\n  if ($r\
    \ == 0) {\n    return $p;\n  }\n  return modp($n, $p);\n}", "  return $n % $p;\n\
    }\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    return $n % $p;\n\
    \  }\n  if ($p < 0) {\n    return $n % $p;\n  }\n  if ($n == 0) {\n    return\
    \ 1;\n  }\n  if ($p == 0) {\n    return $n;\n  }\n  if ($p > $n) {\n    return\
    \ $n % $p;\n  }\n  if ($p < $n) {\n    return ($n % $p) + $p;\n  }\n}\n", "  return\
    \ $n % $p;\n}\n", "  $n = $p - $n * floor($n / $p);\n  if ($n % $p == 0) {\n \
    \   return $n;\n  }\n  return $n % $p;\n}\n", "    return ($n % $p) + $p;\n}\n",
  "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  $n = (int) $n;\n  $p = (int)\
    \ $p;\n  if ($n < 0) {\n    $n = -$n;\n    $p = -$p;\n  }\n  if ($p < 0) {\n \
    \   return $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  if ($n == 0) {\n\
    \    return 0;\n  }\n  if ($n == $p) {\n    return 1;\n  }\n  if ($n == $p - 1)\
    \ {\n    return $n;\n  }\n  if ($n == ($p - 2)) {\n    return $n * $n;\n  }\n\
    \  $n2 = $n % $p;\n  if ($n2 == 0) {\n    return $p;\n  }\n  return $p;\n}\n",
  "  return $n % $p;\n}\n", "    return ($n % $p) + $p;\n}\n", "  if ($n < 0) {\n\
    \    return $n % $p;\n  }\n  return ($n % $p) + $p;\n}\n", "  return ($n % $p)\
    \ + $p;\n}\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n    return $n % $p;\n\
    \  }\n  return ($n % $p) + $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if\
    \ ($n < 0) {\n    $n = -$n;\n    $p = -$p;\n  }\n  if ($p < 0) {\n    $p = -$p;\n\
    \  }\n  if ($n == 0) {\n    return 1;\n  }\n  if ($p == 0) {\n    return $n;\n\
    \  }\n  if ($p > $n) {\n    return $n % $p;\n  }\n  return ($n % $p) + $p;\n}\n",
  "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ if ($n < 0) {\n    return -modp(abs($n), $p);\n  }\n  $result = 1;\n  for ($i\
    \ = 0; $i < $p; $i++) {\n    $result *= $n;\n    $result %= $p;\n  }\n  return\
    \ $result;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return\
    \ $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  $n =\
    \ (int) $n;\n  $p = (int) $p;\n  if ($p < 1)\n    return $n;\n  if ($n <= $p)\n\
    \    return 0;\n  if ($p < $n)\n    return $p;\n  if ($p > $n)\n    return $n;\n\
    \  $r = $n % $p;\n  return ($r == 0) ? $p : $p;\n}\n", "    return ($n % $p +\
    \ $p) % $p;\n}\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n    return $n %\
    \ $p;\n  }\n  return $n % $p + $p;\n}\n", "  return ($n % $p + $p) % $p;\n}\n",
  "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return ($n % $p) + $p;\n\
    }\n", "  return $n % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n\
    \ < 0) {\n    $n = -$n;\n    $p = -$p;\n  }\n  if ($p < 0) {\n    return $n %\
    \ $p;\n  }\n  return ($n % $p) + $p;\n}\n", "  if ($n < 0) {\n    return $n %\
    \ $p;\n  }\n  return ($n % $p) + $p;\n}\n", "  return ($n % $p) + $p;\n}\n", " \
    \ return ($n % $p + $p) % $p;\n}\n", "  return $n % $p;\n}\n", "  return ($n %\
    \ $p) + $p;\n}\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n    $n = -$n;\n\
    \  }\n  if ($p < 0) {\n    $p = -$p;\n  }\n  $n = $n & ((1 << $p) - 1);\n  if\
    \ ($n === 0) {\n    return 1;\n  }\n  return $n % $p;\n}\n", "  return $n % $p;\n\
    }\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n\
    }\n", "  return ($n % $p) + $p;\n}\n", "  return $n % $p;\n}\n", "  return ($n\
    \ % $p + $p) % $p;\n}\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n    $n =\
    \ -$n;\n  }\n  if ($p < 0) {\n    $p = -$p;\n  }\n  if ($n == 0 || $p == 0) {\n\
    \    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n\
    \    return $n;\n  }\n  if ($p > $n) {\n    return modp($n, $p);\n  }\n  $m =\
    \ (int) ($p / $n);\n  $r = $n % $p;\n  return $m * modp($n, $p) + $r;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n\
    \    $n = -$n;\n    $p = -$p;\n  }\n  if ($p < 0) {\n    return $n % $p;\n  }\n\
    \  return ($n % $p) + $p;\n}\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n\
    \    return -modp($n, $p);\n  }\n  if ($p < 0) {\n    return modp($n, $p);\n \
    \ }\n  if ($n == 0) {\n    return 1;\n  }\n  if ($p == 0) {\n    return $n;\n\
    \  }\n  if ($p > $n) {\n    return modp($n, $p);\n  }\n  $r = $n % $p;\n  if ($r\
    \ == 0) {\n    return $p;\n  }\n  return modp($n, $p) % $p;\n}\n", "  return $n\
    \ % $p;\n}\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n    $n = (-$n) % $p;\n\
    \    if ($n < 0) $n = (-$n) % $p;\n  }\n  return $n;\n}\n", "  return $n % $p;\n\
    }\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n    return $n % $p;\n  }\n \
    \ return ($n % $p) + $p;\n}\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n \
    \   return $n % $p;\n  }\n  return ($n % $p) + $p;\n}\n", "  return $n % $p;\n\
    }\n", "  return ($n % $p) + $p;\n}\n", "  return $n % $p;\n}\n", "  return $n\
    \ % $p;\n}\n", "  return $n % $p;\n}\n", "    return ($n % $p + $p) % $p;\n}\n",
  "  return ($n % $p + $p) % $p;\n}\n", "  return ($n % $p + $p) % $p;\n}\n", "  return\
    \ $n % $p;\n}\n", "  return ($n % $p) + $p;\n}\n", "  return ($n % $p + $p) %\
    \ $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "    return ($n\
    \ % $p) + $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return\
    \ $n % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($n == 0 || $p ==\
    \ 0) {\n    return 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p ==\
    \ 1) {\n    return $n;\n  }\n  if ($p > $n) {\n    return modp($n, $p);\n  }\n\
    \  $r = $n % $p;\n  if ($r == 0) {\n    return $p;\n  }\n  return modp($p - $r,\
    \ $p);\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return ($n\
    \ % $p + $p) % $p;\n}\n", "  $n = (int) $n;\n  $p = (int) $p;\n  if ($p < 0)\n\
    \    return $n % $p;\n  if ($p > $n)\n    return $n % $p;\n  if ($n == 0)\n  \
    \  return 0;\n  if ($n == 1)\n    return 1;\n  if ($p % 2 == 0)\n    return $n\
    \ - ($n / $p);\n  return ($n % $p) / $p;\n}", "    return ($n % $p + $p) % $p;\n\
    }\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n\
    }\n", "  return ($n % $p) + $p;\n}\n", "    return ($n % $p) + $p;\n}\n", "  return\
    \ $n % $p;\n}\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n    $n = -$n;\n\
    \  }\n  if ($p < 0) {\n    $p = -$p;\n  }\n  if ($n == 0 || $p == 0) {\n    return\
    \ 0;\n  }\n  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return\
    \ $n;\n  }\n  if ($p > $n) {\n    return $p;\n  }\n  if ($p < $n) {\n    return\
    \ $n;\n  }\n  $m = (int) ($p / $n);\n  $r = $p % $n;\n  return $m == 0 ? $r :\
    \ modp($m, $n);\n}\n", "  if ($n < 0) {\n    return $n % $p;\n  }\n  return ($n\
    \ % $p) + $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return\
    \ $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return ($n % $p) + $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n    $n =\
    \ -$n;\n  }\n  if ($p < 0) {\n    $p = -$p;\n  }\n  $n = $n & $p;\n  $p = ($p\
    \ >> 1) & 0x7FFFFFFF;\n  $n = ($n >> 1) & 0x7FFFFFFF;\n  if ($n === 0) {\n   \
    \ return 1;\n  }\n  if ($p === 0) {\n    return $n;\n  }\n  if ($n >= $p) {\n\
    \    return $n % $p;\n  }\n  return ($n % $p) + $p;\n}", "  return $n % $p;\n\
    }\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n\
    }\n", "  return $n % $p;\n}\n", "  if ($n < 0) {\n    $n = -$n;\n  }\n  if ($p\
    \ < 0) {\n    $p = -$p;\n  }\n  if ($n == 0 || $p == 0) {\n    return 0;\n  }\n\
    \  if ($n == 1) {\n    return $p;\n  }\n  if ($p == 1) {\n    return $n;\n  }\n\
    \  if ($p == 2) {\n    return $n * $n;\n  }\n  if ($p == 3) {\n    return $n *\
    \ $n * $n;\n  }\n  if ($p == 4) {\n    return $n * $n * $n * $n;\n  }\n  if ($p\
    \ == 6) {\n    return $n * $n * $n * $n * $n;\n  }\n  if ($p == 8) {\n    return\
    \ $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 9) {\n    return $n * $n * $n\
    \ * $n * $n * $n * $n;\n  }\n  if ($p == 16) {\n    return $n * $n * $n * $n *\
    \ $n * $n * $n * $n;\n  }\n  if ($p == 25) {\n    return $n * $n * $n * $n * $n\
    \ * $n * $n * $n * $n;\n  }\n  if ($p == 36) {\n    return $n * $n * $n * $n *\
    \ $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 49) {\n    return $n * $n * $n\
    \ * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 64) {\n    return\
    \ $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 81)\
    \ {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n \
    \ if ($p == 96) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n;\n  }\n  if ($p == 99) {\n    return $n * $n * $n * $n * $n * $n *\
    \ $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 108) {\n    return $n *\
    \ $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p ==\
    \ 115) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n;\n  }\n  if ($p == 122) {", "  return $n % $p;\n}\n", "  return $n % $p;\n\
    }\n", "  if ($n < 0) {\n    return $n % $p;\n  }\n  return $n % $p + $p;\n}\n",
  "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  $n = $n & $p;\n  $n = ($n >> 16) & 0xffff;\n  $n =\
    \ ($n >> 8) & 0xffff;\n  $n = ($n >> 4) & 0xffff;\n  $n = ($n >> 2) & 0xffff;\n\
    \  $n = ($n >> 1) & 0xffff;\n  return $n;\n}\n", "  if ($n < 0) {\n    $n = -$n;\n\
    \    $p = -$p;\n  }\n  if ($p == 0) {\n    return 1;\n  }\n  if ($p == 1) {\n\
    \    return $n;\n  }\n  if ($p == 2) {\n    return $n * $n;\n  }\n  if ($p ==\
    \ 3) {\n    return $n * $n * $n;\n  }\n  if ($p == 4) {\n    return $n * $n *\
    \ $n * $n;\n  }\n  if ($p == 5) {\n    return $n * $n * $n * $n * $n;\n  }\n \
    \ if ($p == 6) {\n    return $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 7)\
    \ {\n    return $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 8) {\n   \
    \ return $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 9) {\n    return\
    \ $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 10) {\n    return\
    \ $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 11) {\n \
    \   return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p\
    \ == 12) {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n *\
    \ $n;\n  }\n  if ($p == 13) {\n    return $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n * $n * $n * $n;\n  }\n  if ($p == 14) {\n    return $n * $n * $n *\
    \ $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 15)\
    \ {\n    return $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n\
    \ * $n * $n;\n  }\n  if ($p == 16) {\n    return $n * $n * $n * $n * $n * $n *\
    \ $n * $n * $n * $n * $n * $n * $n * $n * $n;\n  }\n  if ($p == 17) {\n    return\
    \ $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n * $n;\n\
    \  }\n  if ($p == 18) {\n    return ", "  return $n % $p;\n}\n", "  return $n\
    \ % $p;\n}\n", "  return $n % $p;\n}\n", "  $n = $n & 0xFFFFFFFF;\n  $p = ($p\
    \ & 0xFFFFFFFF) + ($p >> 32);\n  $p = ($p & 0xFFFFFFFF) + ($p >> 32);\n  return\
    \ ($n - ($p & 0xFFFFFFFF)) & 0xFFFFFFFF;\n}\n", "  return $n % $p;\n}\n", "  return\
    \ $n % $p;\n}\n", "  return ($n % $p) + $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ $n = (int) $n;\n  $p = (int) $p;\n  if ($n < 0) {\n    $n = -$n;\n    $p = -$p;\n\
    \  }\n  if ($p == 0) {\n    return 0;\n  }\n  if ($p == 1) {\n    return 1;\n\
    \  }\n  if ($p == 2) {\n    return $n;\n  }\n  if ($p < 2 * $n) {\n    return\
    \ $n % $p;\n  }\n  if ($p % 2 == 0) {\n    return modp($n / 2, $p);\n  }\n  return\
    \ modp($n / 2, $p) + 1;\n}\n", "    return ($n % $p) + $p;\n}\n", "  if ($n <\
    \ 0) {\n    return $n % $p;\n  }\n  return ($n % $p) + $p;\n}\n", "  return $n\
    \ % $p;\n}\n", "  return ($n % $p + $p) % $p;\n}\n", "  if ($n < 0) {\n    return\
    \ $n % $p;\n  }\n  return ($n % $p) + $p;\n}\n", "  return $n % $p;\n}\n", " \
    \ return $n % $p;\n}\n", "  return $n % $p;\n}\n", "    return ($n % $p + $p)\
    \ % $p;\n}\n", "    return $n % $p;\n}\n", "  return $n % $p;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

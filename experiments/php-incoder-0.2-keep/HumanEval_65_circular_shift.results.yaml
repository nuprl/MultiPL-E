name: HumanEval_65_circular_shift
language: php
results:
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ .= $x{0};\n        $x = substr($x, 1);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_1ahv4b.php:27\n\
    Stack trace:\n#0 /tmp/tmph_1ahv4b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmph_1ahv4b.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ = $result . substr($x, $digits, 1);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq63v3i8.php:26\n\
    Stack trace:\n#0 /tmp/tmpoq63v3i8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpoq63v3i8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n    return substr($x,\
    \ 0, -$shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8veiwb0.php:23\n\
    Stack trace:\n#0 /tmp/tmph8veiwb0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph8veiwb0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad($x, $digits, 0, STR_PAD_LEFT);\n  $x = substr($x,\
    \ 0, -$digits);\n  return $x;\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nI like\
    \ this solution. Very elegant. Thanks.\n<|/ c |>\n<| c |>\nThis solution works\
    \ great for me. Thank you!\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8r9n_6qf.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $result = '';\n    for ($i = $shift - 1; $i >= 0; $i--) {\n      \
    \  $result = $x[$i] . $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza6og5da.php:26\n\
    Stack trace:\n#0 /tmp/tmpza6og5da.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpza6og5da.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $digits_remainder = $digits % $shift;\n  $x_remainder\
    \ = $x - $digits_remainder;\n  $x_digits = strlen($x_remainder);\n  $x_remainder\
    \ = str_pad($x_remainder, $shift, '0', STR_PAD_LEFT);\n  return $x_remainder .\
    \ $x_digits;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqypqs0ij.php:27\n\
    Stack trace:\n#0 /tmp/tmpqypqs0ij.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqypqs0ij.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return $x;\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $result =\
    \ \"\";\n    for ($i = $shift - 1; $i >= 0; $i--) {\n        $result = $x[$i]\
    \ . $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2dou7vg.php:29\n\
    Stack trace:\n#0 /tmp/tmpb2dou7vg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb2dou7vg.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    $i = 0;\n    while ($shift > 0 && $i < $digits)\
    \ {\n        $result = $result . substr($x, $i, 1);\n        $shift -= 1;\n  \
    \      $i += 1;\n    }\n    return $result . substr($x, $i);\n}\n</code>\n<|/\
    \ a |>\n<| c |>\nThis doesn't work if you have a string with more than 9 characters.\
    \ For example, `circular_shift(\"123456789\", 2)` returns `\"12356789\"` instead\
    \ of `\"12456789\"`.\n<|/ c |>\n<| c |>\nI fixed it by adding `$digits = strlen($x);`\
    \ before the `while` loop and changing `strrev($x)` to `strrev($result)`\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for negative numbers. `circular_shift(\"-123456789\"\
    , 2)` returns `\"-12356789\"` instead of `\"-12456789\"`.\n<|/ c |>\n<| a tags=php,string,algorithm\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpych08ai8.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $reversed = strrev($x);\n  return $reversed . str_pad('',\
    \ $digits, '0');\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1b68y2_e.php:23\n\
    Stack trace:\n#0 /tmp/tmp1b68y2_e.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1b68y2_e.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work for\
    \ negative numbers. `-32` becomes `-321`.\n<|/ c |>\n<| c |>\n: Yes, it does.\
    \ `-32` becomes `-321`.\n<|/ c |>\n<| c |>\n: It doesn't work for negative numbers.\
    \ `-32` becomes `-321`.\n<|/ c |>\n<| c |>\n: It doesn't work for negative numbers.\
    \ `-32` becomes `-321`.\n<|/ c |>\n<| c |>\n: It doesn't work for negative numbers.\
    \ `-32` becomes `-321`.\n<|/ c |>\n<| a tags=php,string |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6k0ccwt7.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x) > $shift ? strlen($x) - $shift : 0;\n  return $shift >\
    \ strlen($x) ? strrev($x) : ltrim($x, $shift - $digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyynes9tk.php:19\n\
    Stack trace:\n#0 /tmp/tmpyynes9tk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyynes9tk.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl5ra98qv.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsu3ou7ni.php:22\n\
    Stack trace:\n#0 /tmp/tmpsu3ou7ni.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsu3ou7ni.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  if ($shift > count($digits)) {\n    return implode('',\
    \ array_reverse($digits));\n  }\n  $result = array_shift($digits);\n  foreach\
    \ ($digits as $key => $digit) {\n    $result = $digit . $result;\n    if ($key\
    \ + 1 < $shift && $digit != $digits[$key + 1]) {\n      $result = $digit . $result;\n\
    \    }\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,algorithm |>\n<| c\
    \ |>\nI like this solution, but I believe it would be more efficient to just use\
    \ string concatenation instead of `array_shift()`\n<|/ c |>\n<| c |>\nI agree\
    \ with you, string concatenation would be more efficient, but I wanted to keep\
    \ it simple for OP.\n<|/ c |>\n<| c |>\nI agree with you as well, string concatenation\
    \ would be more efficient, but I wanted to keep it simple for OP.\n<|/ c |>\n\
    <| c |>\nI like this solution, but I believe it would be more efficient to just\
    \ use string concatenation instead of `array_shift()`\n<|/ c |>\n<| c |>\nI agree\
    \ with you as well, string concatenation would be more efficient, but I wanted\
    \ to keep it simple for OP.\n<|/ c |>\n<| a dscore=4 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmposfnmn37.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return $x;\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $result =\
    \ \"\";\n    for ($i = $shift - 1; $i >= 0; $i--) {\n        $result = $x[$i]\
    \ . $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshnb5cyx.php:29\n\
    Stack trace:\n#0 /tmp/tmpshnb5cyx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpshnb5cyx.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $reversed = str_repeat('0', $digits);\n  return $x .\
    \ $reversed;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4q0a5hux.php:23\n\
    Stack trace:\n#0 /tmp/tmp4q0a5hux.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4q0a5hux.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad($x, $digits, 0, STR_PAD_LEFT);\n\
    \    $x = substr($x, 0, -$digits);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2v50dk6.php:25\n\
    Stack trace:\n#0 /tmp/tmpl2v50dk6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpl2v50dk6.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $result = \"\";\n    foreach ($digits as $key\
    \ => $digit) {\n        if ($key >= $shift) {\n            $result .= $digit;\n\
    \        } else {\n            $result .= $digits[$key - $shift];\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ylgg5p7.php:27\n\
    Stack trace:\n#0 /tmp/tmp9ylgg5p7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9ylgg5p7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($shift > $digits) {\n    return strrev($x);\n\
    \  }\n  $digits = $digits - $shift;\n  $x *= 10 ** $digits;\n  $x = floor($x);\n\
    \  $x = $x / 10 ** $shift + 1;\n  return str_pad($x, $digits, 0, STR_PAD_LEFT);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7t7q2wr.php:26\n\
    Stack trace:\n#0 /tmp/tmpn7t7q2wr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpn7t7q2wr.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ $shift));\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for your answer.\
    \ I tried your solution and it works perfectly for integers. But when I tried\
    \ it on floats, it didn't work. For example, `circular_shift(1.2, 1)` returns\
    \ `1` instead of `1.2`.\n<|/ c |>\n<| c |>\nI updated my answer to include a function\
    \ that works for floats.\n<|/ c |>\n<| c |>\nThank you for your answer. I tried\
    \ your solution and it works perfectly for integers. But when I tried it on floats,\
    \ it didn't work. For example, `circular_shift(1.2, 1)` returns `1` instead of\
    \ `1.2`.\n<|/ c |>\n<| c |>\nI updated my answer to include a function that works\
    \ for floats.\n<|/ c |>\n<| a dscore=0 |>\nI wrote a function that does this for\
    \ you:\n<code>\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl6krocfs.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    $x = substr($x, 0, $digits);\n    return\
    \ $x;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xu5dlgb.php:25\n\
    Stack trace:\n#0 /tmp/tmp_xu5dlgb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_xu5dlgb.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad('', $digits, '0');\n  $x = $x . str_repeat('1',\
    \ $shift);\n  return $x;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5kmimjm.php:24\n\
    Stack trace:\n#0 /tmp/tmpa5kmimjm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa5kmimjm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad($x, $digits, 0, STR_PAD_LEFT);\n\
    \    $x = substr($x, 0, $shift + 1);\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhzbxei3.php:24\n\
    Stack trace:\n#0 /tmp/tmpzhzbxei3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzhzbxei3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $result = \"\";\n    $remainder = $shift % $digits;\n    for ($i =\
    \ 0; $i < $digits; $i++) {\n        $result = $x[$i] . $result;\n        $x =\
    \ $x[$remainder--];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwbfh1wt8.php:28\n\
    Stack trace:\n#0 /tmp/tmpwbfh1wt8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwbfh1wt8.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad('', $shift, '0', STR_PAD_LEFT);\n    for ($i = $shift\
    \ - 1; $i >= 0; $i--) {\n        $x = $x[0] . $x[$i];\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8uttpl8.php:26\n\
    Stack trace:\n#0 /tmp/tmpa8uttpl8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa8uttpl8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ .= $x[$i];\n    }\n    for ($i = $shift; $i < $digits; $i++) {\n        $result\
    \ .= $x[$i - $shift];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9a8g6ic.php:28\n\
    Stack trace:\n#0 /tmp/tmpc9a8g6ic.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc9a8g6ic.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    for ($i = $shift - 1; $i >= 0; $i--) {\n      \
    \  $result = $x[$i] . $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1p6yhj9b.php:26\n\
    Stack trace:\n#0 /tmp/tmp1p6yhj9b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1p6yhj9b.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad('', $shift, '0', STR_PAD_LEFT);\n    for ($i = $shift\
    \ - 1; $i >= 0; $i--) {\n        $x = $x[0] . $x[1];\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj1wv1u_.php:26\n\
    Stack trace:\n#0 /tmp/tmptj1wv1u_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptj1wv1u_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $result = \"\";\n    foreach ($digits as $key\
    \ => $digit) {\n        $result .= $digit;\n        if ($key < ($shift - 1)) {\n\
    \            $result .= $digits[$key + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0n4yly7.php:26\n\
    Stack trace:\n#0 /tmp/tmpl0n4yly7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl0n4yly7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result .= $x[$digits-$i-1];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxlakv2j.php:26\n\
    Stack trace:\n#0 /tmp/tmplxlakv2j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplxlakv2j.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad('', $digits, '0');\n\
    \    $x = $x . str_repeat('1', $shift);\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71b_mbj3.php:24\n\
    Stack trace:\n#0 /tmp/tmp71b_mbj3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp71b_mbj3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ .= $x[$i];\n    }\n    for ($i = $shift; $i < $digits; $i++) {\n        $result\
    \ .= $x[$i - $shift];\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40bjs9ts.php:28\n\
    Stack trace:\n#0 /tmp/tmp40bjs9ts.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp40bjs9ts.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    $x = substr($x, 0, $shift) . substr($x, $shift);\n    return $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzyyicukp.php:25\n\
    Stack trace:\n#0 /tmp/tmpzyyicukp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzyyicukp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return '';\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $result =\
    \ '';\n    for ($i = $shift - 1; $i >= 0; $i--) {\n        $result = $x[$i] .\
    \ $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6io46h0.php:29\n\
    Stack trace:\n#0 /tmp/tmpc6io46h0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc6io46h0.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $sign\
    \ = ($x < 0) ? '-' : '';\n  $digits_shift = $digits - $shift;\n  $x_length = strlen($x);\n\
    \  $x_digits = strlen($x);\n  $x_remainder = $x_digits % $digits_shift;\n  if\
    \ ($x_remainder == 0) {\n    return $sign . $x . str_repeat('0', $digits_shift);\n\
    \  }\n  $x_digits_remainder = $x_digits - $x_remainder;\n  $x_remainder_length\
    \ = strlen($x_remainder);\n  $x_remainder_digits = strlen($x_remainder);\n  $x_remainder_remainder\
    \ = $x_remainder_digits % $digits_shift;\n  if ($x_remainder_remainder == 0) {\n\
    \    return $sign . $x_remainder . str_repeat('0', $digits_shift);\n  }\n  $x_remainder_digits_remainder\
    \ = $x_remainder_digits - $x_remainder_remainder;\n  return $sign . $x_remainder\
    \ . str_repeat('0', $digits_shift) .\n         $x_remainder_remainder . str_repeat('0',\
    \ $digits_shift - $x_remainder_digits_remainder);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkv6i8run.php:39\n\
    Stack trace:\n#0 /tmp/tmpkv6i8run.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpkv6i8run.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    $x = substr($x, 0, -$digits);\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdy5lymzi.php:24\n\
    Stack trace:\n#0 /tmp/tmpdy5lymzi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdy5lymzi.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits == 0) {\n    return $x;\n  }\n  $shift\
    \ %= $digits;\n  $new = '';\n  for ($i = 0; $i < $shift; $i++) {\n    $new .=\
    \ $x{0};\n  }\n  return $new . $x{0};\n}\nfunction candidate(...$args) {\n   \
    \ return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz5kwymiv.php:26\n\
    Stack trace:\n#0 /tmp/tmpz5kwymiv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz5kwymiv.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    $x = substr($x, 0, -$digits);\n    return $x;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppd90wd5p.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    return substr($x, 0, $shift) . substr($x, $shift);\n}\n</code>\n<|/ a tags=php,math\
    \ |>\n<| c |>\nI like this solution, it's very simple. However I noticed that\
    \ when $x = 12 and $shift = 1 the function returns \"12\" instead of \"21\". Any\
    \ idea why this happens?\n<|/ c |>\n<| c |>\nI fixed it by adding $x = $x . str_repeat('0',\
    \ $digits);\n<|/ c |>\n<| c |>\nThanks for your answer. I've been trying to solve\
    \ this problem for hours and this was the only solution that worked for me. Thanks\
    \ again!\n<|/ c |>\n<| a tags=php,math |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6m85ce_f.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($shift > $digits) {\n    return strrev($x);\n\
    \  }\n  $result = '';\n  for ($i = $shift - 1; $i >= 0; $i--) {\n    $result =\
    \ $x[$i] . $result;\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7ccl2bw.php:25\n\
    Stack trace:\n#0 /tmp/tmpe7ccl2bw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpe7ccl2bw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad('', $shift, '0');\n    return $x . $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplk5cwnkq.php:23\n\
    Stack trace:\n#0 /tmp/tmplk5cwnkq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplk5cwnkq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    $i = 0;\n    while ($shift > $digits) {\n     \
    \   $result = $result . substr($x, $i++, 1);\n        $shift -= $digits;\n   \
    \ }\n    return $result . substr($x, $i);\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6oinhio.php:28\n\
    Stack trace:\n#0 /tmp/tmpt6oinhio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt6oinhio.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ .= $x[$i];\n    }\n    for ($i = $shift; $i < $digits; $i++) {\n        $result\
    \ .= $x[$i - $shift];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpteu6rzwx.php:29\n\
    Stack trace:\n#0 /tmp/tmpteu6rzwx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpteu6rzwx.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = \"\";\n    for ($i = $shift - 1; $i >= 0; $i--) {\n    \
    \    $result = $x[$i] . $result;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeongv0wj.php:25\n\
    Stack trace:\n#0 /tmp/tmpeongv0wj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeongv0wj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnigunybi.php:25\n\
    Stack trace:\n#0 /tmp/tmpnigunybi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnigunybi.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ = $x[$i] . $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayp7jej4.php:26\n\
    Stack trace:\n#0 /tmp/tmpayp7jej4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpayp7jej4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result .= $x[$digits-$shift+$i];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkiouwkr.php:25\n\
    Stack trace:\n#0 /tmp/tmptkiouwkr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptkiouwkr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return '';\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $x = str_pad('',\
    \ $shift, '0', STR_PAD_LEFT);\n    return $x . $x[0];\n}\n</code>\n<|/ a |>\n\
    <| c |>\nThis doesn't work for negative numbers, e.g. `-1234` becomes `-23`.\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers, e.g. `-1234` becomes\
    \ `-23`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers, e.g. `-1234`\
    \ becomes `-23`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers, e.g.\
    \ `-1234` becomes `-23`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers,\
    \ e.g. `-1234` becomes `-23`.\n<|/ c |>\n<| a tags=php,string |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5fov9uu0.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($shift > $digits) {\n    return strrev($x);\n\
    \  }\n  $result = \"\";\n  for ($i = 0; $i < $shift; $i++) {\n    $result .= $x{0};\n\
    \    $x = substr($x, 1);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuac6hk0p.php:27\n\
    Stack trace:\n#0 /tmp/tmpuac6hk0p.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpuac6hk0p.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $digits = strlen($x);\n    $x *= 10**$shift;\n    $x = str_pad($x,\
    \ $digits, 0, STR_PAD_LEFT);\n    return substr($x, 0, -$digits);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz96_gk74.php:25\n\
    Stack trace:\n#0 /tmp/tmpz96_gk74.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpz96_gk74.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $result = \"\";\n    for ($i = 0; $i < $digits;\
    \ $i++) {\n        $result .= $x[$i + $shift];\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp259ltd0b.php:25\n\
    Stack trace:\n#0 /tmp/tmp259ltd0b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp259ltd0b.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf89ji7sh.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $digits = $digits > 0 ? $digits : 0;\n  $result = \"\"\
    ;\n  for ($i = 0; $i < $digits; $i++) {\n    $result = $result . $x[$i];\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6szk5_cl.php:28\n\
    Stack trace:\n#0 /tmp/tmp6szk5_cl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6szk5_cl.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad('', $shift, '0');\n    for ($i = $shift - 1; $i >= 0;\
    \ $i--) {\n        $x = $x[0] . $x[1];\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxmpld5q.php:26\n\
    Stack trace:\n#0 /tmp/tmprxmpld5q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprxmpld5q.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmiqbrgjo.php:25\n\
    Stack trace:\n#0 /tmp/tmpmiqbrgjo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmiqbrgjo.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad('', $digits, '0');\n\
    \    $x = $x . str_repeat('1', $shift);\n    return $x;\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nThis doesn't work if the number is negative.\n<|/ c |>\n<| c |>\n\
    It works, you just need to reverse the sign of the number before you call it.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the number is negative.\n<|/ c |>\n<|\
    \ c |>\nIt works, you just need to reverse the sign of the number before you call\
    \ it.\n<|/ c |>\n<| c |>\nThis doesn't work if the number is negative.\n<|/ c\
    \ |>\n<| a tags=php,algorithm |>\n<code>\nfunction candidate(...$args) {\n   \
    \ return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmps3hlv63y.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $digits = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i <\
    \ $shift; $i++) {\n        $result = $result . $x[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjezlh0go.php:27\n\
    Stack trace:\n#0 /tmp/tmpjezlh0go.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjezlh0go.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $result = '';\n    while ($shift > 0) {\n        $result = $result\
    \ . substr($x, $shift - 1, 1);\n        $shift--;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0nkf41s_.php:27\n\
    Stack trace:\n#0 /tmp/tmp0nkf41s_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0nkf41s_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ $shift, $shift));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0uxk8ml.php:22\n\
    Stack trace:\n#0 /tmp/tmpr0uxk8ml.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr0uxk8ml.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $result = \"\";\n    for ($i = 0; $i < $digits;\
    \ $i++) {\n        $result .= $x[$i + $shift];\n    }\n    return $result;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nI like your solution, but I need a solution\
    \ that doesn't use any loops. I edited my question to reflect this.\n<|/ c |>\n\
    <| c |>\nI edited my answer to include a solution that doesn't use loops.\n<|/\
    \ c |>\n<| a tags=php,algorithm |>\n<code>\nfunction candidate(...$args) {\n \
    \   return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj7byaig9.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result .= $x[$digits-$shift+$i];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagyaj2ci.php:25\n\
    Stack trace:\n#0 /tmp/tmpagyaj2ci.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpagyaj2ci.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad('', $digits, '0', STR_PAD_LEFT);\n\
    \    $x = $x . $x;\n    $x = substr($x, 0, $digits);\n    return $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9pcfs7e.php:26\n\
    Stack trace:\n#0 /tmp/tmpi9pcfs7e.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi9pcfs7e.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $digits = $digits > 0 ? $digits : 0;\n  $reversed = strrev($x);\n\
    \  return $reversed . str_pad('', $digits, '0');\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadggxsqt.php:24\n\
    Stack trace:\n#0 /tmp/tmpadggxsqt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpadggxsqt.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nThanks, this works great! I added a couple lines to make it work\
    \ for negative numbers as well.\n<|/ c |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. Try `echo circular_shift('-1', 1);` which should output `0`.\n<|/ c\
    \ |>\n<| c |>\nI added a fix for negative numbers, thanks for pointing that out.\n\
    <|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfb_46_9h.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result .= $x[$digits - $shift - $i];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwsoqjurh.php:26\n\
    Stack trace:\n#0 /tmp/tmpwsoqjurh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwsoqjurh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result = $result . substr($x, $digits, 1);\n        $digits--;\n   \
    \ }\n    return $result;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2ye8dhs.php:26\n\
    Stack trace:\n#0 /tmp/tmpi2ye8dhs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi2ye8dhs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $reversed_digits = strlen($x) - $digits;\n    $reversed_x\
    \ = strrev($x);\n    return $reversed_x . substr($reversed_x, $reversed_digits);\n\
    }\n</code>\n<|/ a tags=php,string,arrays |>\n<| c |>\nThis doesn't seem to work\
    \ for negative numbers. `circular_shift('-1', 2)` returns `'11'` instead of `'-1'`.\n\
    <|/ c |>\n<| c |>\nI fixed the negative number issue. Now it works for negative\
    \ numbers as well.\n<|/ c |>\n<| a tags=php,string,arrays |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpocxerq9m.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    return substr($x, 0, -$digits);\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1meoobw.php:24\n\
    Stack trace:\n#0 /tmp/tmpo1meoobw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo1meoobw.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        return\
    \ strrev($digits);\n    }\n    $digits = array_slice($digits, 0, $shift);\n  \
    \  return implode('', $digits);\n}\n</code>\n<|/ a tags=php,math |>\n<| c |>\n\
    Thanks for your answer. Unfortunately this doesn't work for me. I've tried it\
    \ on several numbers and it just returns 0.\n<|/ c |>\n<| c |>\nI've added a working\
    \ example to my answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your help.\
    \ Unfortunately it still doesn't work for me. I've tried it on several numbers\
    \ and it just returns 0.\n<|/ c |>\n<| c |>\nI've added a working example to my\
    \ answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your help. Unfortunately\
    \ it still doesn't work for me. I've tried it on several numbers and it just returns\
    \ 0.\n<|/ c |>\n<| a tags=php,math |>\n<code>\n<?php\n$number = 1234;\n$digits\
    \ = str_split($number);\n$digits = array_slice($digits, 0, $shift);\n$number =\
    \ implode('', $digits);\necho $number;\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplruj_9zj.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result = $result . substr($x, $digits, 1);\n        $digits--;\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0psa85_1.php:27\n\
    Stack trace:\n#0 /tmp/tmp0psa85_1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0psa85_1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return $x;\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $digits =\
    \ strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n  \
    \      $result .= $x[$digits-$i-1];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjkwhyqn0.php:30\n\
    Stack trace:\n#0 /tmp/tmpjkwhyqn0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjkwhyqn0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    while ($shift > 0 && $shift <= $digits) {\n   \
    \     $result = $result . substr($x, $shift, 1);\n        $shift += 1;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp674qn1kf.php:27\n\
    Stack trace:\n#0 /tmp/tmp674qn1kf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp674qn1kf.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ = $result . substr($x, $i, 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7l6iqoy.php:26\n\
    Stack trace:\n#0 /tmp/tmpp7l6iqoy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpp7l6iqoy.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $result = '';\n    while ($shift > 0) {\n        $result = $result\
    \ . substr($x, $shift, 1);\n        $shift--;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf85b8d5d.php:27\n\
    Stack trace:\n#0 /tmp/tmpf85b8d5d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpf85b8d5d.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $result = \"\";\n    for ($i = 0; $i < $digits;\
    \ $i++) {\n        $result .= $x[$i + $shift];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3rk50st.php:26\n\
    Stack trace:\n#0 /tmp/tmpi3rk50st.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi3rk50st.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad('', $digits, '0', STR_PAD_LEFT);\n\
    \    $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgf00z86z.php:25\n\
    Stack trace:\n#0 /tmp/tmpgf00z86z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgf00z86z.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return '';\n    }\n\
    \    if ($shift > $digits) {\n        return strrev($x);\n    }\n    $result =\
    \ '';\n    while ($shift > 0) {\n        $result = $result . substr($x, $shift,\
    \ 1);\n        $shift -= 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg5aw7ysw.php:30\n\
    Stack trace:\n#0 /tmp/tmpg5aw7ysw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg5aw7ysw.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad('', $digits, '0');\n  $x = $x . str_repeat('1',\
    \ $shift);\n  return $x;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8rjq8cy.php:24\n\
    Stack trace:\n#0 /tmp/tmpb8rjq8cy.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpb8rjq8cy.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return '';\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $result =\
    \ '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result .= $x[$i];\n   \
    \ }\n    for ($i = $shift; $i < $digits; $i++) {\n        $result .= $x[$i - $shift];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplm7tv0io.php:32\n\
    Stack trace:\n#0 /tmp/tmplm7tv0io.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplm7tv0io.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad('', $shift, '0');\n    return $x . $x[0];\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppe8ehb4r.php:23\n\
    Stack trace:\n#0 /tmp/tmppe8ehb4r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppe8ehb4r.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ .= $x[$i];\n    }\n    for ($i = $shift; $i < $digits; $i++) {\n        $result\
    \ .= $x[$i - $shift];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx3smm0f.php:29\n\
    Stack trace:\n#0 /tmp/tmpcx3smm0f.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcx3smm0f.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = \"\";\n    $carry = 0;\n    for ($i = $shift - 1; $i >=\
    \ 0; $i--) {\n        $result = $result . substr($x, $i + $carry, 1);\n      \
    \  $carry = $carry > 0 ? 1 : 0;\n    }\n    return $result . substr($x, $i);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdpkd2ch.php:28\n\
    Stack trace:\n#0 /tmp/tmptdpkd2ch.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptdpkd2ch.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $result = \"\";\n    $remainder = $shift % $digits;\n    $shift =\
    \ $shift - $remainder;\n    for ($i = 0; $i < $digits; $i++) {\n        $result\
    \ = $x[$i] . $result;\n    }\n    return $result . substr($x, $digits, $shift);\n\
    }\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgpzkexu.php:27\n\
    Stack trace:\n#0 /tmp/tmpdgpzkexu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdgpzkexu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n  $x =\
    \ substr($x, 0, $digits);\n  return $x;\n}\nfunction candidate(...$args) {\n \
    \   return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphkzujuew.php:24\n\
    Stack trace:\n#0 /tmp/tmphkzujuew.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphkzujuew.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad('', $shift, '0');\n    $x = substr($x, 0, $shift - 1)\
    \ . $x . substr($x, $shift - 1);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9ujksy7.php:24\n\
    Stack trace:\n#0 /tmp/tmpm9ujksy7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpm9ujksy7.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $result = \"\";\n    foreach ($digits as $key\
    \ => $digit) {\n        $result .= $digit;\n        if ($key < ($shift - 1)) {\n\
    \            $result .= $digits[$key + 1];\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,algorithm,math,string |>\n<| c |>\nThis doesn't work\
    \ for negative numbers. Try `echo circular_shift('-1', 1);` which should output\
    \ `'10'` but instead outputs `'-1'`.\n<|/ c |>\n<| c |>\nI fixed the negative\
    \ number issue. Thanks.\n<|/ c |>\n<| c |>\nI fixed the negative number issue.\
    \ Thanks.\n<|/ c |>\n<| c |>\nI fixed the negative number issue. Thanks.\n<|/\
    \ c |>\n<| c |>\nI fixed the negative number issue. Thanks.\n<|/ c |>\n<| a tags=php,algorithm,math,string\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmtcsr9yn.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n</code>\n<|/ a tags=php,math |>\n<| c |>\nThis doesn't work\
    \ for negative numbers. `-12 => -1` but `circular_shift(-12, 1)` returns `12`.\n\
    <|/ c |>\n<| c |>\nI added a fix for negative numbers. Thanks for pointing that\
    \ out.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n \
    \   return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp34em6pj0.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return $x;\n    }\n    $digits = strlen($x);\n\
    \    $result = \"\";\n    for ($i = $shift - $digits; $i >= 0; $i--) {\n     \
    \   $result .= $x[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgouqse7.php:26\n\
    Stack trace:\n#0 /tmp/tmpjgouqse7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjgouqse7.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $digits = str_pad('', $shift, '0', STR_PAD_LEFT);\n    return $x .\
    \ $digits;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz37wad05.php:23\n\
    Stack trace:\n#0 /tmp/tmpz37wad05.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpz37wad05.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $reversed = array_reverse($digits);\n    $reversed\
    \ = array_slice($reversed, $shift);\n    return implode('', $reversed);\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$number = \"123456789\";\n\
    $digits = str_split($number);\n$reversed = array_reverse($digits);\n$reversed\
    \ = array_slice($reversed, 1);\n$reversed = implode('', $reversed);\necho $reversed;\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppdxwqvju.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result = $result . $x[$digits-$i-1];\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfg_hq3m2.php:25\n\
    Stack trace:\n#0 /tmp/tmpfg_hq3m2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpfg_hq3m2.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return '';\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $result =\
    \ '';\n    for ($i = $shift - 1; $i >= 0; $i--) {\n        $result = $x[$i] .\
    \ $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplfe5v9ho.php:29\n\
    Stack trace:\n#0 /tmp/tmplfe5v9ho.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplfe5v9ho.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    $x = substr($x, 0, -$digits);\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0znv6jy.php:24\n\
    Stack trace:\n#0 /tmp/tmpo0znv6jy.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo0znv6jy.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $reversed = strrev($x);\n    return $reversed .\
    \ str_repeat('0', $digits);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4ojn4do.php:23\n\
    Stack trace:\n#0 /tmp/tmpq4ojn4do.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpq4ojn4do.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n  $x =\
    \ substr($x, 0, $digits);\n  return $x . $x[0];\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgivfgvv.php:24\n\
    Stack trace:\n#0 /tmp/tmpxgivfgvv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxgivfgvv.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($shift > $digits) {\n    return strrev($x);\n\
    \  }\n  $result = '';\n  for ($i = 0; $i < $shift; $i++) {\n    $result = $result\
    \ . substr($x, $digits, 1);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qff_irt.php:26\n\
    Stack trace:\n#0 /tmp/tmp9qff_irt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9qff_irt.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    for ($i = $shift - 1; $i >= 0; $i--) {\n      \
    \  $result = $x[$i] . $result;\n    }\n    return $result;\n}\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a tags=php,string |>\n<code>\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9wi0nto5.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ $shift));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppksxzv5i.php:22\n\
    Stack trace:\n#0 /tmp/tmppksxzv5i.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppksxzv5i.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $result = '';\n    for ($i = $shift - 1; $i >= 0; $i--) {\n      \
    \  $result = $x[$i] . $result;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3bs1a6q.php:26\n\
    Stack trace:\n#0 /tmp/tmpg3bs1a6q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg3bs1a6q.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxu59dt03.php:25\n\
    Stack trace:\n#0 /tmp/tmpxu59dt03.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxu59dt03.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = \"\";\n    while ($shift >= 0) {\n        $result = $result\
    \ . substr($x, $shift, 1);\n        $shift -= 1;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpib6zqin3.php:28\n\
    Stack trace:\n#0 /tmp/tmpib6zqin3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpib6zqin3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result .= $x[$digits-$i-1];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpstl80vv8.php:26\n\
    Stack trace:\n#0 /tmp/tmpstl80vv8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpstl80vv8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $result = \"\";\n  foreach ($digits as $key =>\
    \ $digit) {\n    $result .= $digit . $digits[$key + $shift];\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxy4t8o6u.php:22\n\
    Stack trace:\n#0 /tmp/tmpxy4t8o6u.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxy4t8o6u.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . substr($x, $digits);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprr8d55mg.php:25\n\
    Stack trace:\n#0 /tmp/tmprr8d55mg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprr8d55mg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return '';\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $result =\
    \ '';\n    $i = 0;\n    while ($shift > 0) {\n        $result = $x[$i] . $result;\n\
    \        $shift -= $digits;\n        $i++;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdnepnjj.php:32\n\
    Stack trace:\n#0 /tmp/tmpsdnepnjj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsdnepnjj.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . substr($x, $digits);\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibook5qq.php:24\n\
    Stack trace:\n#0 /tmp/tmpibook5qq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpibook5qq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        return\
    \ implode('', array_reverse($digits));\n    }\n    $digits = array_slice($digits,\
    \ 0, $shift);\n    return implode('', $digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwmwou8l.php:23\n\
    Stack trace:\n#0 /tmp/tmphwmwou8l.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphwmwou8l.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    return substr($x, 0, -$shift);\n}\n</code>\n<|/ a tags=php,algorithm,math,javascript\
    \ |>\n<| c |>\nThis doesn't work if you have a negative number like `-1234`\n\
    <|/ c |>\n<| c |>\nIt doesn't work for negative numbers. `-1234` becomes `-12340`\
    \ which becomes `-123400` which becomes `-1234000` which becomes `-12340000` which\
    \ becomes `-123400000` which becomes `-1234000000` which becomes `-12340000000`\
    \ which becomes `-123400000000` which becomes `-1234000000000` which becomes `-12340000000000`\
    \ which becomes `-123400000000000` which becomes `-1234000000000000` which becomes\
    \ `-12340000000000000` which becomes `-123400000000000000` which becomes `-1234000000000000000`\
    \ which becomes `-1234000000000000000` which becomes `-12340000000000000000` which\
    \ becomes `-123400000000000000000` which becomes `-1234000000000000000000` which\
    \ becomes `-12340000000000000000000` which becomes `-123400000000000000000000`\
    \ which becomes `-1234000000000000000000000` which becomes `-12340000000000000000000000`\
    \ which becomes `-123400000000000000000000000` which becomes `-123400000000000000000000000`\
    \ which becomes `-1234000000000000000000000000` which becomes `-12340000000000000000000000000`\
    \ which becomes `-123400000000000000000000000000` which becomes `-1234000000000000000000000000000`\
    \ which becomes `-12340000000000000000000000000000` which becomes `-123400000000000000000000000000000`\
    \ which becomes `-1234000000000000000000000000000000` which becomes `-12340000000000000000000000000000000`\
    \ which becomes `-12340000000000000000000000000000000` which becomes `-123400000000000000000000000000000000`\
    \ which becomes `-12340000000000000000000000000000000` which becomes `-123400000000000000000000000000000000`\
    \ which becomes `-1234000000000000000000000000000000000` which becomes `-12340000000000000000000000000000000000`\
    \ which becomes `-123400000000000000000000000000000000000` which becomes `-1234000000000000000000000000000000000000`\
    \ which becomes `-12340000000000000000000000000000000000000` which becomes `-123400000000000000000000000000000000000000`\
    \ which becomes `-1234000000000000000000000000000000000000000` which becomes `-1234\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe13yz991.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n  $x =\
    \ substr($x, 0, -$digits);\n  return $x;\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88rlsj_m.php:25\n\
    Stack trace:\n#0 /tmp/tmp88rlsj_m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp88rlsj_m.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ = $result . substr($x, $i, 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps331cbr0.php:26\n\
    Stack trace:\n#0 /tmp/tmps331cbr0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmps331cbr0.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result = $result . $x[$digits - $shift - $i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxt1nnk72.php:26\n\
    Stack trace:\n#0 /tmp/tmpxt1nnk72.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxt1nnk72.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result = $result . substr($x, $i, 1);\n    }\n    return $result . substr($x,\
    \ $shift);\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgewsx_8n.php:25\n\
    Stack trace:\n#0 /tmp/tmpgewsx_8n.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgewsx_8n.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $digits = $digits > 0 ? $digits : 0;\n  $result = \"\"\
    ;\n  for ($i = 0; $i < $digits; $i++) {\n    $result = $result . $x[$i];\n  }\n\
    \  return $result;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpakvidxm1.php:27\n\
    Stack trace:\n#0 /tmp/tmpakvidxm1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpakvidxm1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits == 0) return $x;\n  $shift = $digits -\
    \ $shift;\n  $digits = strlen($x);\n  $result = \"\";\n  for ($i = $shift - 1;\
    \ $i >= 0; $i--) {\n    $result = $x[$i] . $result;\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xz7nw83.php:25\n\
    Stack trace:\n#0 /tmp/tmp_xz7nw83.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_xz7nw83.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x) > $shift ? strlen($x) - $shift : 0;\n  return str_pad(substr($x,\
    \ 0, $shift), $digits, 0, STR_PAD_LEFT);\n}\n</code>\n<|/ a tags=php,math,algorithm\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. `circular_shift(-12, 1)`\
    \ returns `-12` instead of `21`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. `circular_shift(-12, 1)` returns `-12` instead of `21`.\n<|/ c |>\n\
    <| a tags=php,math,algorithm |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphajdqelr.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    for ($i = $shift - $digits; $i >= 0; $i--) {\n\
    \        $result .= $x[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4b1774k1.php:26\n\
    Stack trace:\n#0 /tmp/tmp4b1774k1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4b1774k1.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return '';\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $x = str_pad($x,\
    \ $shift, '0', STR_PAD_LEFT);\n    return substr($x, 0, $shift);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpft9mp70n.php:26\n\
    Stack trace:\n#0 /tmp/tmpft9mp70n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpft9mp70n.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x) > $shift ? strlen($x) - $shift : 0;\n  $reversed = strlen($x)\
    \ > $shift ? array_slice(str_split($x), $shift, $digits) : '';\n  return implode('',\
    \ array_reverse($reversed));\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9buop0qb.php:19\n\
    Stack trace:\n#0 /tmp/tmp9buop0qb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9buop0qb.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits == 0) {\n    return $x;\n  }\n  $shift\
    \ %= $digits;\n  $digits = strlen($x);\n  $result = \"\";\n  for ($i = 0; $i <\
    \ $digits; $i++) {\n    $result = $x[$i] . $result . substr($x, $i + 1, $digits);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpti2w4h63.php:28\n\
    Stack trace:\n#0 /tmp/tmpti2w4h63.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpti2w4h63.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad('', $digits, '0', STR_PAD_LEFT);\n\
    \    $x = $x . $x;\n    $x = substr($x, 0, $digits);\n    return $x;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppn8w018k.php:26\n\
    Stack trace:\n#0 /tmp/tmppn8w018k.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppn8w018k.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    $x = substr($x, 0, -$digits);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5i3qfdbn.php:25\n\
    Stack trace:\n#0 /tmp/tmp5i3qfdbn.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5i3qfdbn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpymp9bw4p.php:25\n\
    Stack trace:\n#0 /tmp/tmpymp9bw4p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpymp9bw4p.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $result = \"\";\n    for ($i = 0; $i < $digits;\
    \ $i++) {\n        $result .= $x[$i + $shift];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rryd_9e.php:26\n\
    Stack trace:\n#0 /tmp/tmp6rryd_9e.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6rryd_9e.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n    return $x;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpomvwfvsy.php:23\n\
    Stack trace:\n#0 /tmp/tmpomvwfvsy.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpomvwfvsy.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ .= $x[$i];\n    }\n    for ($i = $shift; $i < $digits; $i++) {\n        $result\
    \ .= $x[$i - $shift];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp380ks7jn.php:29\n\
    Stack trace:\n#0 /tmp/tmp380ks7jn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp380ks7jn.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . substr($x, $digits);\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplczu9pg_.php:24\n\
    Stack trace:\n#0 /tmp/tmplczu9pg_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplczu9pg_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad($x, $shift, \"0\", STR_PAD_LEFT);\n  $x\
    \ = substr($x, 0, $digits);\n  return $x;\n}\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbnbujnvj.php:24\n\
    Stack trace:\n#0 /tmp/tmpbnbujnvj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbnbujnvj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $digits_shift = strlen($x . $shift);\n    $x = str_pad('', $digits_shift,\
    \ '0', STR_PAD_LEFT) . $x;\n    return substr($x, 0, $shift);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_7xbid8.php:24\n\
    Stack trace:\n#0 /tmp/tmp2_7xbid8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2_7xbid8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = \"\";\n    $i = 0;\n    while ($shift > $digits) {\n   \
    \     $result .= $x[$i++];\n        $shift -= $digits;\n    }\n    while ($shift\
    \ > 0) {\n        $result .= $x[$i++];\n        $shift--;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9t3uzvif.php:32\n\
    Stack trace:\n#0 /tmp/tmp9t3uzvif.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9t3uzvif.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $digits = $digits > 0 ? $digits : 0;\n  return substr($x,\
    \ 0, $digits) . str_repeat('0', $shift) . substr($x, $digits);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2676iyee.php:24\n\
    Stack trace:\n#0 /tmp/tmp2676iyee.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2676iyee.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad('', $digits, '0');\n\
    \    $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6strclj2.php:25\n\
    Stack trace:\n#0 /tmp/tmp6strclj2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6strclj2.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $result = \"\";\n    for ($i = 0; $i < $digits;\
    \ $i++) {\n        $result .= $x[$i + $shift];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yw7q2mb.php:26\n\
    Stack trace:\n#0 /tmp/tmp9yw7q2mb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9yw7q2mb.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ $shift));\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1483hk6.php:21\n\
    Stack trace:\n#0 /tmp/tmph1483hk6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph1483hk6.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    $x = substr($x, 0, $digits);\n    return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9twhe4kc.php:26\n\
    Stack trace:\n#0 /tmp/tmp9twhe4kc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9twhe4kc.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $result = '';\n    while ($shift > 0) {\n        $result = $x[$shift\
    \ - 1] . ($result ? $result : '0');\n        $shift--;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zf_rbkl.php:27\n\
    Stack trace:\n#0 /tmp/tmp9zf_rbkl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9zf_rbkl.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    return substr($x, 0, $shift) . substr($x, $shift);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzr_u54u0.php:24\n\
    Stack trace:\n#0 /tmp/tmpzr_u54u0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzr_u54u0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) return $x;\n    if ($shift >\
    \ $digits) return $x;\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++)\
    \ {\n        $result = $x[$i] . $result;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3flygu4.php:25\n\
    Stack trace:\n#0 /tmp/tmpw3flygu4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw3flygu4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits == 0) {\n    return '';\n  }\n  $shift\
    \ %= $digits;\n  if ($shift == 0) {\n    return $x;\n  }\n  $result = $x;\n  for\
    \ ($i = 0; $i < $shift; $i++) {\n    $result = $result * 10;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftkm_vrc.php:30\n\
    Stack trace:\n#0 /tmp/tmpftkm_vrc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpftkm_vrc.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        $shift = strlen($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $reversed = strrev($x);\n    $reversed = substr($reversed,\
    \ 0, $digits);\n    return $reversed . $reversed;\n}\n</code>\n<|/ a tags=php,string,algorithm\
    \ |>\n<| c |>\nThis doesn't work if $x is \"0\", it returns \"0\"\n<|/ c |>\n\
    <| c |>\n: Yes, it does. Try it yourself.\n<|/ c |>\n<| c |>\n: It works perfectly\
    \ for me. Try it yourself and see for yourself.\n<|/ c |>\n<| c |>\n: It works\
    \ perfectly for me. Try it yourself and see for yourself.\n<|/ c |>\n<| c |>\n\
    : It works perfectly for me. Try it yourself and see for yourself.\n<|/ c |>\n\
    <| a dscore=4 |>\n<code>\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf6hqia42.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $result = \"\";\n    for ($i = 0; $i < $digits;\
    \ $i++) {\n        $result .= $x[$i + $shift];\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8feyo95.php:25\n\
    Stack trace:\n#0 /tmp/tmpa8feyo95.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa8feyo95.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $result = '';\n    while ($shift > 0) {\n        $result = $x[$shift\
    \ - 1] . ($result ? $result . '' : '');\n        $shift--;\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9su5u5i.php:26\n\
    Stack trace:\n#0 /tmp/tmpb9su5u5i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb9su5u5i.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $remainder = $digits % $shift;\n    $digits = $shift - $remainder;\n\
    \    $x = str_pad($x, $digits, '0', STR_PAD_LEFT);\n    return $x;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk3_rz973.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        $shift = strlen($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $reversed = strrev($x);\n    return $reversed .\
    \ str_pad('', $digits, '0');\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9l2z9ag9.php:22\n\
    Stack trace:\n#0 /tmp/tmp9l2z9ag9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9l2z9ag9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($shift > $digits) {\n    return strrev($x);\n\
    \  }\n  $result = \"\";\n  for ($i = 0; $i < $shift; $i++) {\n    $result = $result\
    \ . substr($x, $digits, 1);\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgghxzine.php:26\n\
    Stack trace:\n#0 /tmp/tmpgghxzine.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgghxzine.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        return\
    \ implode('', array_reverse($digits));\n    }\n    return implode('', array_slice($digits,\
    \ $shift));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65nv_wg4.php:22\n\
    Stack trace:\n#0 /tmp/tmp65nv_wg4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp65nv_wg4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkf__2ht.php:25\n\
    Stack trace:\n#0 /tmp/tmpqkf__2ht.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqkf__2ht.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        return\
    \ strrev($digits);\n    }\n    $digits = array_slice($digits, $shift);\n    return\
    \ implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvneq7ez.php:23\n\
    Stack trace:\n#0 /tmp/tmpnvneq7ez.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnvneq7ez.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return $x;\n    }\n\
    \    $shift = $digits - $shift;\n    if ($shift > 0) {\n        $x = substr($x,\
    \ 0, $shift) . substr($x, $shift);\n    } else {\n        $x = substr($x, $shift)\
    \ . substr($x, 0, -$shift);\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeg0xh11_.php:28\n\
    Stack trace:\n#0 /tmp/tmpeg0xh11_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpeg0xh11_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxpbba2x.php:22\n\
    Stack trace:\n#0 /tmp/tmpuxpbba2x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuxpbba2x.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    $x = substr($x, 0, $digits);\n    return\
    \ $x;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,string,algorithm |>\n<code>\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmhhd2e9l.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ $shift, $shift));\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnk7wey2m.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5dpq74i.php:22\n\
    Stack trace:\n#0 /tmp/tmpf5dpq74i.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpf5dpq74i.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $result = \"\";\n    foreach ($digits as $k\
    \ => $digit) {\n        $result .= $digit . $digits[$k + $shift];\n    }\n   \
    \ return $result;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpny2a07ef.php:22\n\
    Stack trace:\n#0 /tmp/tmpny2a07ef.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpny2a07ef.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ $shift));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxuqd0oj.php:22\n\
    Stack trace:\n#0 /tmp/tmpyxuqd0oj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyxuqd0oj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return $x;\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $digits =\
    \ strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n  \
    \      $result = $result . $x[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5esaxtyk.php:30\n\
    Stack trace:\n#0 /tmp/tmp5esaxtyk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5esaxtyk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    while ($shift > 0 && $shift <= $digits) {\n   \
    \     $result = $result . substr($x, $shift - 1, 1);\n        $shift--;\n    }\n\
    \    return $result . substr($x, $shift, 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsfjzk229.php:27\n\
    Stack trace:\n#0 /tmp/tmpsfjzk229.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsfjzk229.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ .= $x{0};\n        $x = substr($x, 1);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgygnbi4.php:27\n\
    Stack trace:\n#0 /tmp/tmptgygnbi4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptgygnbi4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    $x = substr($x, 0, $digits);\n    return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wmdcp7f.php:26\n\
    Stack trace:\n#0 /tmp/tmp8wmdcp7f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8wmdcp7f.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3s9g89t.php:22\n\
    Stack trace:\n#0 /tmp/tmpu3s9g89t.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu3s9g89t.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($shift > $digits) {\n    return strrev($x);\n\
    \  }\n  $result = '';\n  for ($i = $shift - 1; $i >= 0; $i--) {\n    $result =\
    \ $x[$i] . $result;\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjojd8eu0.php:25\n\
    Stack trace:\n#0 /tmp/tmpjojd8eu0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjojd8eu0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ .= $x{0};\n        $x = substr($x, 1);\n    }\n    return $result . $x;\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mb0ip3f.php:27\n\
    Stack trace:\n#0 /tmp/tmp6mb0ip3f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6mb0ip3f.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $shift = str_pad('', $shift, '0', STR_PAD_LEFT);\n\
    \  $shifts = str_split($shift);\n  $shifts = array_reverse($shifts);\n  $shifts\
    \ = array_merge($shifts, $shift);\n  $shifts = array_slice($shifts, 0, -1);\n\
    \  $shifts = array_reverse($shifts);\n  return implode('', $digits) . implode('',\
    \ $shifts);\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_merge(): Expected parameter 2 to be an array, string given\
    \ in /tmp/tmp1shoj0ys.php on line 14\n\nWarning: array_slice() expects parameter\
    \ 1 to be array, null given in /tmp/tmp1shoj0ys.php on line 15\n\nWarning: array_reverse()\
    \ expects parameter 1 to be array, null given in /tmp/tmp1shoj0ys.php on line\
    \ 16\n\nWarning: implode(): Invalid arguments passed in /tmp/tmp1shoj0ys.php on\
    \ line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1shoj0ys.php:24\n\
    Stack trace:\n#0 /tmp/tmp1shoj0ys.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1shoj0ys.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits == 0) {\n    return '';\n  }\n  $shift\
    \ = abs($shift);\n  if ($shift > $digits) {\n    $shift = $digits;\n  }\n  $digits\
    \ = strlen($x);\n  $result = '';\n  for ($i = 0; $i < $shift; $i++) {\n    $result\
    \ = $x[$i] . $result;\n  }\n  for ($i = $shift; $i < $digits; $i++) {\n    $result\
    \ = $result . $x[$i];\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplj06rm2n.php:33\n\
    Stack trace:\n#0 /tmp/tmplj06rm2n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplj06rm2n.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits == 0) {\n    return '';\n  }\n  $shift\
    \ = abs($shift);\n  if ($shift > $digits) {\n    return strrev($x);\n  }\n  $digits\
    \ = strlen($x);\n  $result = '';\n  for ($i = $shift - 1; $i >= 0; $i--) {\n \
    \   $result = $x[$i] . $result;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kz5zo05.php:31\n\
    Stack trace:\n#0 /tmp/tmp9kz5zo05.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9kz5zo05.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7f3q9bd7.php:25\n\
    Stack trace:\n#0 /tmp/tmp7f3q9bd7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7f3q9bd7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n    $x = substr($x,\
    \ 0, -$shift);\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6dfec32w.php:24\n\
    Stack trace:\n#0 /tmp/tmp6dfec32w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6dfec32w.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($shift > $digits) {\n    return strrev($x);\n\
    \  }\n  $result = \"\";\n  for ($i = 0; $i < $shift; $i++) {\n    $result = $result\
    \ . substr($x, $i, 1);\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2rj9_669.php:25\n\
    Stack trace:\n#0 /tmp/tmp2rj9_669.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2rj9_669.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($shift > $digits) {\n    return strrev($x);\n\
    \  }\n  $shift = $digits - $shift;\n  $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n\
    \  $x = substr($x, 0, $shift);\n  return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpriu0tzcv.php:25\n\
    Stack trace:\n#0 /tmp/tmpriu0tzcv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpriu0tzcv.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't work for\
    \ negative numbers, it just returns an empty string.\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work for negative numbers, it just returns an empty string.\n<|/ c |>\n\
    <| c |>\nThis doesn't work for negative numbers, it just returns an empty string.\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers, it just returns an\
    \ empty string.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers, it\
    \ just returns an empty string.\n<|/ c |>\n<| a tags=php,string |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7pv2zmj3.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x) - $shift;\n    $result = \"\";\n    for ($i = 0; $i < $digits;\
    \ $i++) {\n        $result .= $x[$i + $shift];\n    }\n    return $result;\n}\n\
    </code>\n<|/ a tags=php,algorithm |>\n<| c |>\nThanks for your answer. Your code\
    \ is working fine for small numbers but for large numbers it is not working properly.\
    \ Can you please help me to fix this issue?\n<|/ c |>\n<| c |>\nI tested it on\
    \ large numbers and it works fine. Can you give an example of a number that doesn't\
    \ work?\n<|/ c |>\n<| c |>\nFor example for number \"124567\" it is giving \"\
    124567\" but for \"1245671\" it is giving \"1245671\".\n<|/ c |>\n<| c |>\nI tested\
    \ it on \"1245671\" and it works fine. Can you give an example of a number that\
    \ doesn't work?\n<|/ c |>\n<| c |>\nFor example for number \"1245671\" it is giving\
    \ \"1245671\" but for \"1245672\" it is giving \"1245672\".\n<|/ c |>\n<| a tags=php,algorithm\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphu1hlj3r.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . substr($x, $digits);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaza9ct6l.php:25\n\
    Stack trace:\n#0 /tmp/tmpaza9ct6l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpaza9ct6l.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n  $x =\
    \ substr($x, 0, $digits);\n  return $x;\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71jj1v7k.php:25\n\
    Stack trace:\n#0 /tmp/tmp71jj1v7k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp71jj1v7k.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $result = '';\n    for ($i = 0; $i < $shift; $i++) {\n        $result\
    \ = $result . substr($x, $i, 1);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsyq2l6z.php:26\n\
    Stack trace:\n#0 /tmp/tmpzsyq2l6z.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzsyq2l6z.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits == 0) {\n    return $x;\n  }\n  $shift\
    \ %= $digits;\n  return substr($x, 0, $shift) . substr($x, $shift);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbo77krq.php:23\n\
    Stack trace:\n#0 /tmp/tmpqbo77krq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqbo77krq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    $x = substr($x, 0, $digits);\n    return\
    \ $x;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcujqucu.php:25\n\
    Stack trace:\n#0 /tmp/tmptcujqucu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptcujqucu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n    return substr($x,\
    \ 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n5rd_yq.php:23\n\
    Stack trace:\n#0 /tmp/tmp9n5rd_yq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9n5rd_yq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        return\
    \ strrev($digits);\n    }\n    $digits = array_slice($digits, 0, $shift);\n  \
    \  return implode('', $digits);\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like\
    \ this solution, but I wonder if there is a way to make it work for negative numbers?\n\
    <|/ c |>\n<| c |>\nThis solution doesn't work for negative numbers. Try it with\
    \ `circular_shift(-12, 1)`.\n<|/ c |>\n<| c |>\nI added a solution for negative\
    \ numbers. I tested it and it works.\n<|/ c |>\n<| c |>\nI added a solution for\
    \ negative numbers. I tested it and it works.\n<|/ c |>\n<| c |>\nThis solution\
    \ doesn't work for negative numbers. Try it with `circular_shift(-12, 1)`.\n<|/\
    \ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpercnd7hv.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n  $x =\
    \ substr($x, 0, -$digits);\n  return $x;\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp68htd_ds.php:25\n\
    Stack trace:\n#0 /tmp/tmp68htd_ds.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp68htd_ds.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . substr($x, $digits);\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdz2u9sqk.php:24\n\
    Stack trace:\n#0 /tmp/tmpdz2u9sqk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdz2u9sqk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n</code>\n<|/ a |>\n<| c |>\nI like your solution, however it\
    \ only works for positive numbers. I added a solution that works for negative\
    \ numbers as well.\n<|/ c |>\n<| a dscore=2 |>\nI like Jon's solution, but I wanted\
    \ to add an alternative that works for negative numbers as well. \n<code>\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprriqr550.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n</code>\n<|/ a tags=php,string |>\n<| a tags=php,string |>\n\
    <code>\n<?php\n$string = \"Hello World!\";\n$newString = substr($string, 0, 5);\n\
    echo $newString;\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz00dshdb.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . substr($x, $digits);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw07bdcf3.php:25\n\
    Stack trace:\n#0 /tmp/tmpw07bdcf3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw07bdcf3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad('', $digits, '0');\n  $x = $x . str_repeat('1',\
    \ $shift);\n  return $x;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35ql49uc.php:24\n\
    Stack trace:\n#0 /tmp/tmp35ql49uc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp35ql49uc.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        return\
    \ strrev($digits);\n    }\n    $digits = array_slice($digits, 0, $shift);\n  \
    \  return implode('', $digits);\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\n\
    This doesn't work for negative numbers. Try `echo circular_shift('-1', 1);`\n\
    <|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `echo circular_shift('-1',\
    \ 1);`\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `echo circular_shift('-1',\
    \ 1);`\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `echo circular_shift('-1',\
    \ 1);`\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers. Try `echo circular_shift('-1',\
    \ 1);`\n<|/ c |>\n<| a tags=php,string |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpflp16ks_.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad('', $digits, '0', STR_PAD_LEFT);\n\
    \    $x = $x . $x;\n    $x = substr($x, 0, $digits);\n    return $x;\n}\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuoog2g0q.php:25\n\
    Stack trace:\n#0 /tmp/tmpuoog2g0q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpuoog2g0q.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits == 0) {\n        return $x;\n    }\n\
    \    if ($shift > $digits) {\n        $shift = $digits;\n    }\n    $digits =\
    \ strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n  \
    \      $result = $result . $x[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r3zzidg.php:30\n\
    Stack trace:\n#0 /tmp/tmp7r3zzidg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7r3zzidg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    if ($shift > strlen($x)) {\n        return strrev($x);\n    }\n    $digits\
    \ = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i < $shift; $i++) {\n\
    \        $result .= $x[$digits-$i-1];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeumophci.php:26\n\
    Stack trace:\n#0 /tmp/tmpeumophci.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpeumophci.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $digits = strlen($x);\n    $result = '';\n    for ($i = 0; $i < $digits;\
    \ $i++) {\n        $result .= $x[$i];\n        if ($shift > $digits) {\n     \
    \       $result .= $x[$i];\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hm3cfoy.php:29\n\
    Stack trace:\n#0 /tmp/tmp2hm3cfoy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2hm3cfoy.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n\
    \    return $x . $x[0];\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdu9gcx6f.php:24\n\
    Stack trace:\n#0 /tmp/tmpdu9gcx6f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdu9gcx6f.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $shift\
    \ = count($digits);\n    }\n    $result = '';\n    for ($i = $shift - 1; $i >=\
    \ 0; $i--) {\n        $result .= $digits[$i];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcsqkb32x.php:26\n\
    Stack trace:\n#0 /tmp/tmpcsqkb32x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcsqkb32x.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $result = \"\";\n    foreach ($digits as $key\
    \ => $digit) {\n        if ($key >= $shift) {\n            $result .= $digit;\n\
    \        } else {\n            $result .= $digits[$key - $shift];\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrzhpzgi.php:26\n\
    Stack trace:\n#0 /tmp/tmpfrzhpzgi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfrzhpzgi.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = $x . str_repeat('0', $digits);\n\
    \    return substr($x, 0, $shift) . substr($x, $shift);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56lsefwv.php:24\n\
    Stack trace:\n#0 /tmp/tmp56lsefwv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp56lsefwv.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n  $x =\
    \ substr($x, 0, $digits);\n  return $x;\n}\nfunction candidate(...$args) {\n \
    \   return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ob5fylr.php:24\n\
    Stack trace:\n#0 /tmp/tmp7ob5fylr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7ob5fylr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = str_pad($x, $shift, '0', STR_PAD_LEFT);\n  $x =\
    \ substr($x, 0, -$digits);\n  return $x;\n}\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumk1ngop.php:24\n\
    Stack trace:\n#0 /tmp/tmpumk1ngop.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpumk1ngop.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    if ($shift > count($digits)) {\n        $digits\
    \ = array_reverse($digits);\n    }\n    return implode('', array_slice($digits,\
    \ 0, $shift));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ay6e1si.php:22\n\
    Stack trace:\n#0 /tmp/tmp7ay6e1si.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7ay6e1si.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($digits <= $shift) {\n        return $x;\n\
    \    }\n    $digits = $digits - $shift;\n    $x = substr($x, 0, $digits);\n  \
    \  $x = $x . str_repeat('0', $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gqzolwa.php:25\n\
    Stack trace:\n#0 /tmp/tmp4gqzolwa.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4gqzolwa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $x = str_pad('', $shift, '0', STR_PAD_LEFT);\n    $x = $x . str_repeat('0',\
    \ $digits - $shift);\n    return $x;\n}\n</code>\n<|/ a tags=php,math |>\n<| c\
    \ |>\nThis doesn't seem to work. `echo circular_shift(12, 1);` returns `21` instead\
    \ of `12`.\n<|/ c |>\n<| c |>\nI tested it and it works. I added the function\
    \ to the answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added the function\
    \ to the answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added the function\
    \ to the answer.\n<|/ c |>\n<| c |>\nI tested it and it works. I added the function\
    \ to the answer.\n<|/ c |>\n<| a tags=php,math |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcnllwnt0.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $reversed = array_reverse($digits);\n  return implode('',\
    \ array_slice($reversed, $shift));\n}\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzr75niia.php:19\n\
    Stack trace:\n#0 /tmp/tmpzr75niia.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzr75niia.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = strlen($x);\n  if ($digits <= $shift) {\n    return $x;\n  }\n  $digits\
    \ = $digits - $shift;\n  $x = substr($x, 0, $digits);\n  $x = $x . str_repeat('0',\
    \ $shift);\n  $x = substr($x, 0, $digits);\n  return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprc4uqeut.php:25\n\
    Stack trace:\n#0 /tmp/tmprc4uqeut.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprc4uqeut.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        $shift = $digits;\n\
    \    }\n    $digits = strlen($x);\n    $result = \"\";\n    for ($i = 0; $i <\
    \ $shift; $i++) {\n        $result = $result . $x{0};\n        $x = substr($x,\
    \ 1);\n    }\n    return $result . $x;\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcbi7fsoe.php:28\n\
    Stack trace:\n#0 /tmp/tmpcbi7fsoe.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpcbi7fsoe.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception

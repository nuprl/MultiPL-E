name: HumanEval_58_common
language: php
results:
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrqnp9c7.php:22\n\
    Stack trace:\n#0 /tmp/tmplrqnp9c7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplrqnp9c7.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jt9201g.php:22\n\
    Stack trace:\n#0 /tmp/tmp7jt9201g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7jt9201g.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = [];\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| c |>\nThis doesn't work if there\
    \ are duplicates in either array. For example, `common([5, 3, 2, 8], [3, 2])`\
    \ returns `[2, 3]` instead of `[3, 2]`.\n<|/ c |>\n<| c |>\nI added a version\
    \ that works with duplicates.\n<|/ c |>\n<| a tags=arrays,php,sorting |>\n<code>\n\
    function candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9,\
    \ 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjmj8tb5h.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpas2jpo_4.php:22\n\
    Stack trace:\n#0 /tmp/tmpas2jpo_4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpas2jpo_4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8huvyw6.php:22\n\
    Stack trace:\n#0 /tmp/tmpl8huvyw6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpl8huvyw6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpq1qzf3.php:22\n\
    Stack trace:\n#0 /tmp/tmpwpq1qzf3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwpq1qzf3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01tavgj2.php:22\n\
    Stack trace:\n#0 /tmp/tmp01tavgj2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp01tavgj2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_imgwha.php:22\n\
    Stack trace:\n#0 /tmp/tmpb_imgwha.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb_imgwha.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsm0fqlf.php:22\n\
    Stack trace:\n#0 /tmp/tmpgsm0fqlf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgsm0fqlf.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei5gsp0l.php:22\n\
    Stack trace:\n#0 /tmp/tmpei5gsp0l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpei5gsp0l.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwg3kju6v.php:21\n\
    Stack trace:\n#0 /tmp/tmpwg3kju6v.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwg3kju6v.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe24c8_2s.php:21\n\
    Stack trace:\n#0 /tmp/tmpe24c8_2s.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe24c8_2s.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90yccu2o.php:22\n\
    Stack trace:\n#0 /tmp/tmp90yccu2o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp90yccu2o.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr1 = array(1,2,3,4,5,6,7,8,9,10);\n\
    $arr2 = array(1,2,3,4,5,6,7,8,9,10);\n$arr3 = array(1,2,3,4,5,6,7,8,9,10);\n$arr4\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr5 = array(1,2,3,4,5,6,7,8,9,10);\n$arr6\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr7 = array(1,2,3,4,5,6,7,8,9,10);\n$arr8\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr9 = array(1,2,3,4,5,6,7,8,9,10);\n$arr10\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr11 = array(1,2,3,4,5,6,7,8,9,10);\n$arr12\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr13 = array(1,2,3,4,5,6,7,8,9,10);\n$arr14\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr15 = array(1,2,3,4,5,6,7,8,9,10);\n$arr16\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr17 = array(1,2,3,4,5,6,7,8,9,10);\n$arr18\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr19 = array(1,2,3,4,5,6,7,8,9,10);\n$arr20\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr21 = array(1,2,3,4,5,6,7,8,9,10);\n$arr22\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr23 = array(1,2,3,4,5,6,7,8,9,10);\n$arr24\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr25 = array(1,2,3,4,5,6,7,8,9,10);\n$arr26\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr27 = array(1,2,3,4,5,6,7,8,9,10);\n$arr28\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr29 = array(1,2,3,4,5,6,7,8,9,10);\n$arr30\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr31 = array(1,2,3,4,5,6,7,8,9,10);\n$arr32\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$arr33 = array(1,2,3,4,5,6,\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcb01u287.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv4kr996.php:21\n\
    Stack trace:\n#0 /tmp/tmpuv4kr996.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpuv4kr996.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsz3mheti.php:22\n\
    Stack trace:\n#0 /tmp/tmpsz3mheti.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsz3mheti.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhaf236n.php:22\n\
    Stack trace:\n#0 /tmp/tmpyhaf236n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpyhaf236n.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplznje9qi.php:22\n\
    Stack trace:\n#0 /tmp/tmplznje9qi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplznje9qi.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhg18178.php:22\n\
    Stack trace:\n#0 /tmp/tmpqhg18178.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqhg18178.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuywe9gdd.php:22\n\
    Stack trace:\n#0 /tmp/tmpuywe9gdd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuywe9gdd.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5_tt2ro.php:22\n\
    Stack trace:\n#0 /tmp/tmpk5_tt2ro.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpk5_tt2ro.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1w2fphj.php:22\n\
    Stack trace:\n#0 /tmp/tmpw1w2fphj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw1w2fphj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy02mm6jt.php:22\n\
    Stack trace:\n#0 /tmp/tmpy02mm6jt.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy02mm6jt.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtcprmm8.php:22\n\
    Stack trace:\n#0 /tmp/tmpwtcprmm8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwtcprmm8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe92txmd0.php:21\n\
    Stack trace:\n#0 /tmp/tmpe92txmd0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe92txmd0.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprop0do4j.php:22\n\
    Stack trace:\n#0 /tmp/tmprop0do4j.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprop0do4j.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwfu738s.php:22\n\
    Stack trace:\n#0 /tmp/tmpmwfu738s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmwfu738s.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hmq73ui.php:22\n\
    Stack trace:\n#0 /tmp/tmp8hmq73ui.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8hmq73ui.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpff724e8g.php:22\n\
    Stack trace:\n#0 /tmp/tmpff724e8g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpff724e8g.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t1toqfz.php:22\n\
    Stack trace:\n#0 /tmp/tmp5t1toqfz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5t1toqfz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwomfh6iv.php:22\n\
    Stack trace:\n#0 /tmp/tmpwomfh6iv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwomfh6iv.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps2cybkxn.php:22\n\
    Stack trace:\n#0 /tmp/tmps2cybkxn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps2cybkxn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiirz65_.php:22\n\
    Stack trace:\n#0 /tmp/tmpuiirz65_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuiirz65_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhh5sjem.php:22\n\
    Stack trace:\n#0 /tmp/tmplhh5sjem.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplhh5sjem.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pv7jpdt.php:22\n\
    Stack trace:\n#0 /tmp/tmp8pv7jpdt.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8pv7jpdt.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4q7nbxz8.php:22\n\
    Stack trace:\n#0 /tmp/tmp4q7nbxz8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4q7nbxz8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2w71ndp1.php:22\n\
    Stack trace:\n#0 /tmp/tmp2w71ndp1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2w71ndp1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptqjp8yzs.php:21\n\
    Stack trace:\n#0 /tmp/tmptqjp8yzs.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptqjp8yzs.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnsjgpmf0.php:22\n\
    Stack trace:\n#0 /tmp/tmpnsjgpmf0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnsjgpmf0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3c8xxmaz.php:22\n\
    Stack trace:\n#0 /tmp/tmp3c8xxmaz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3c8xxmaz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxe7gldc.php:21\n\
    Stack trace:\n#0 /tmp/tmpmxe7gldc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmxe7gldc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznxgdffj.php:22\n\
    Stack trace:\n#0 /tmp/tmpznxgdffj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpznxgdffj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0qzvgbv.php:22\n\
    Stack trace:\n#0 /tmp/tmpy0qzvgbv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy0qzvgbv.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2dezgjm.php:22\n\
    Stack trace:\n#0 /tmp/tmpy2dezgjm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy2dezgjm.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62n9xza2.php:22\n\
    Stack trace:\n#0 /tmp/tmp62n9xza2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp62n9xza2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwlj24t6.php:22\n\
    Stack trace:\n#0 /tmp/tmptwlj24t6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptwlj24t6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppogk8_fz.php:22\n\
    Stack trace:\n#0 /tmp/tmppogk8_fz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppogk8_fz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvat96aiz.php:22\n\
    Stack trace:\n#0 /tmp/tmpvat96aiz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvat96aiz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0t1sjrk0.php:22\n\
    Stack trace:\n#0 /tmp/tmp0t1sjrk0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0t1sjrk0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1ruhqjl.php:22\n\
    Stack trace:\n#0 /tmp/tmp_1ruhqjl.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_1ruhqjl.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnmy20df.php:22\n\
    Stack trace:\n#0 /tmp/tmpfnmy20df.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfnmy20df.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpib6d4az5.php:22\n\
    Stack trace:\n#0 /tmp/tmpib6d4az5.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpib6d4az5.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytink6kb.php:22\n\
    Stack trace:\n#0 /tmp/tmpytink6kb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpytink6kb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtz9r_0y.php:21\n\
    Stack trace:\n#0 /tmp/tmphtz9r_0y.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphtz9r_0y.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy8dwy8n1.php:22\n\
    Stack trace:\n#0 /tmp/tmpy8dwy8n1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy8dwy8n1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8sza03f.php:22\n\
    Stack trace:\n#0 /tmp/tmpe8sza03f.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe8sza03f.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzf6eqxe1.php:22\n\
    Stack trace:\n#0 /tmp/tmpzf6eqxe1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzf6eqxe1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $k => $v) {\n    if (in_array($v, $l2))\
    \ {\n      $common[] = $v;\n    }\n  }\n  return $common;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaih7pmgy.php:22\n\
    Stack trace:\n#0 /tmp/tmpaih7pmgy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaih7pmgy.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprjbvyf34.php:22\n\
    Stack trace:\n#0 /tmp/tmprjbvyf34.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprjbvyf34.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpue8oc9w_.php:22\n\
    Stack trace:\n#0 /tmp/tmpue8oc9w_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpue8oc9w_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumql5bc0.php:21\n\
    Stack trace:\n#0 /tmp/tmpumql5bc0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpumql5bc0.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaey2mki5.php:22\n\
    Stack trace:\n#0 /tmp/tmpaey2mki5.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaey2mki5.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5az8mch.php:22\n\
    Stack trace:\n#0 /tmp/tmpe5az8mch.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe5az8mch.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmlm3632.php:22\n\
    Stack trace:\n#0 /tmp/tmpzmlm3632.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzmlm3632.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nv8upfk.php:22\n\
    Stack trace:\n#0 /tmp/tmp5nv8upfk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5nv8upfk.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqyihkhp.php:21\n\
    Stack trace:\n#0 /tmp/tmpgqyihkhp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgqyihkhp.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfbnbrvn.php:21\n\
    Stack trace:\n#0 /tmp/tmpxfbnbrvn.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxfbnbrvn.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10ywmk00.php:22\n\
    Stack trace:\n#0 /tmp/tmp10ywmk00.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp10ywmk00.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadnj0jtr.php:22\n\
    Stack trace:\n#0 /tmp/tmpadnj0jtr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpadnj0jtr.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n  $common = array_intersect($l1,\
    \ $l2);\n  sort($common);\n  return $common;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n  $common = array_intersect($l1,\
    \ $l2);\n  sort($common);\n  return $common;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ztbbjsn.php:22\n\
    Stack trace:\n#0 /tmp/tmp7ztbbjsn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7ztbbjsn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hd0iv9b.php:22\n\
    Stack trace:\n#0 /tmp/tmp1hd0iv9b.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1hd0iv9b.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu721p3lo.php:22\n\
    Stack trace:\n#0 /tmp/tmpu721p3lo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpu721p3lo.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdphpsz3m.php:22\n\
    Stack trace:\n#0 /tmp/tmpdphpsz3m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdphpsz3m.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7753b2qx.php:22\n\
    Stack trace:\n#0 /tmp/tmp7753b2qx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7753b2qx.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzegd3h8.php:22\n\
    Stack trace:\n#0 /tmp/tmpzzegd3h8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzzegd3h8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyv3d0fdp.php:22\n\
    Stack trace:\n#0 /tmp/tmpyv3d0fdp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpyv3d0fdp.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ev4xwo0.php:22\n\
    Stack trace:\n#0 /tmp/tmp3ev4xwo0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3ev4xwo0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhkqgzwy.php:22\n\
    Stack trace:\n#0 /tmp/tmpqhkqgzwy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqhkqgzwy.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmey0m_py.php:22\n\
    Stack trace:\n#0 /tmp/tmpmey0m_py.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmey0m_py.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp199oum_g.php:21\n\
    Stack trace:\n#0 /tmp/tmp199oum_g.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp199oum_g.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7dm1a9i.php:21\n\
    Stack trace:\n#0 /tmp/tmpk7dm1a9i.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk7dm1a9i.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecqwhei6.php:22\n\
    Stack trace:\n#0 /tmp/tmpecqwhei6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpecqwhei6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgdcnlxr.php:22\n\
    Stack trace:\n#0 /tmp/tmpjgdcnlxr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjgdcnlxr.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvni3m1li.php:22\n\
    Stack trace:\n#0 /tmp/tmpvni3m1li.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvni3m1li.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmyxh4ag.php:22\n\
    Stack trace:\n#0 /tmp/tmpkmyxh4ag.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpkmyxh4ag.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx79l8683.php:22\n\
    Stack trace:\n#0 /tmp/tmpx79l8683.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpx79l8683.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxk94ml4.php:22\n\
    Stack trace:\n#0 /tmp/tmprxk94ml4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprxk94ml4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujy6nbu_.php:22\n\
    Stack trace:\n#0 /tmp/tmpujy6nbu_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpujy6nbu_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprfl1tum2.php:22\n\
    Stack trace:\n#0 /tmp/tmprfl1tum2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprfl1tum2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_348d3zv.php:22\n\
    Stack trace:\n#0 /tmp/tmp_348d3zv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_348d3zv.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfk4upzh6.php:22\n\
    Stack trace:\n#0 /tmp/tmpfk4upzh6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfk4upzh6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3si837v9.php:22\n\
    Stack trace:\n#0 /tmp/tmp3si837v9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3si837v9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70t7313s.php:22\n\
    Stack trace:\n#0 /tmp/tmp70t7313s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp70t7313s.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wgg_3tc.php:21\n\
    Stack trace:\n#0 /tmp/tmp8wgg_3tc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8wgg_3tc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmw_6vsa8.php:22\n\
    Stack trace:\n#0 /tmp/tmpmw_6vsa8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmw_6vsa8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpic3hajhi.php:22\n\
    Stack trace:\n#0 /tmp/tmpic3hajhi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpic3hajhi.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkfoqd_of.php:22\n\
    Stack trace:\n#0 /tmp/tmpkfoqd_of.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpkfoqd_of.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdlopb7h.php:22\n\
    Stack trace:\n#0 /tmp/tmpwdlopb7h.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwdlopb7h.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n  $common = array_intersect($l1,\
    \ $l2);\n  sort($common);\n  return $common;\n}\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = [];\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_j4ke7i.php:21\n\
    Stack trace:\n#0 /tmp/tmpe_j4ke7i.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe_j4ke7i.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpss3lx6yu.php:22\n\
    Stack trace:\n#0 /tmp/tmpss3lx6yu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpss3lx6yu.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1978w0fo.php:22\n\
    Stack trace:\n#0 /tmp/tmp1978w0fo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1978w0fo.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_okb36yq.php:21\n\
    Stack trace:\n#0 /tmp/tmp_okb36yq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_okb36yq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0oz_rpyj.php:22\n\
    Stack trace:\n#0 /tmp/tmp0oz_rpyj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0oz_rpyj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb23b9py4.php:22\n\
    Stack trace:\n#0 /tmp/tmpb23b9py4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb23b9py4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpckc_nnud.php:22\n\
    Stack trace:\n#0 /tmp/tmpckc_nnud.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpckc_nnud.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59rhispc.php:22\n\
    Stack trace:\n#0 /tmp/tmp59rhispc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp59rhispc.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jt4o8ih.php:22\n\
    Stack trace:\n#0 /tmp/tmp0jt4o8ih.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0jt4o8ih.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_qwdvgb.php:22\n\
    Stack trace:\n#0 /tmp/tmpi_qwdvgb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi_qwdvgb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznqwe9ki.php:22\n\
    Stack trace:\n#0 /tmp/tmpznqwe9ki.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpznqwe9ki.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ro4suat.php:22\n\
    Stack trace:\n#0 /tmp/tmp_ro4suat.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_ro4suat.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjvhgtyne.php:21\n\
    Stack trace:\n#0 /tmp/tmpjvhgtyne.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjvhgtyne.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4ibublt.php:22\n\
    Stack trace:\n#0 /tmp/tmpx4ibublt.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpx4ibublt.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcsj8v5l3.php:22\n\
    Stack trace:\n#0 /tmp/tmpcsj8v5l3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcsj8v5l3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpusdjrn28.php:22\n\
    Stack trace:\n#0 /tmp/tmpusdjrn28.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpusdjrn28.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawvg77ee.php:22\n\
    Stack trace:\n#0 /tmp/tmpawvg77ee.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpawvg77ee.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n  foreach\
    \ ($l1 as $key => $value) {\n    if (in_array($value, $l2)) {\n      $common[]\
    \ = $value;\n    }\n  }\n  return $common;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkxl2_e1.php:24\n\
    Stack trace:\n#0 /tmp/tmptkxl2_e1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptkxl2_e1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehnmy7nf.php:22\n\
    Stack trace:\n#0 /tmp/tmpehnmy7nf.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpehnmy7nf.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxl7knhv.php:22\n\
    Stack trace:\n#0 /tmp/tmphxl7knhv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphxl7knhv.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38genuvc.php:22\n\
    Stack trace:\n#0 /tmp/tmp38genuvc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp38genuvc.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmrqgxx35.php:22\n\
    Stack trace:\n#0 /tmp/tmpmrqgxx35.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmrqgxx35.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo81pmpva.php:22\n\
    Stack trace:\n#0 /tmp/tmpo81pmpva.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpo81pmpva.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nI appreciate your efforts, but this doesn't really\
    \ answer the question. Your code doesn't even attempt to answer the question of\
    \ how to find the common elements. Your code just returns the unique elements.\
    \ Your code doesn't even attempt to answer the question of how to find the common\
    \ elements. Your code just returns the unique elements. Your code doesn't even\
    \ attempt to answer the question of how to find the common elements. Your code\
    \ just returns the unique elements. Your code doesn't even attempt to answer the\
    \ question of how to find the common elements. Your code just returns the unique\
    \ elements. Your code doesn't even attempt to answer the question of how to find\
    \ the common elements. Your code just returns the unique elements. Your code doesn't\
    \ even attempt to answer the question of how to find the common elements. Your\
    \ code just returns the unique elements. Your code doesn't even attempt to answer\
    \ the question of how to find the common elements. Your code just returns the\
    \ unique elements. Your code doesn't even attempt to answer the question of how\
    \ to find the common elements. Your code just returns the unique elements. Your\
    \ code doesn't even attempt to answer the question of how to find the common elements.\
    \ Your code just returns the unique elements. Your code doesn't even attempt to\
    \ answer the question of how to find the common elements. Your code just returns\
    \ the unique elements.\n<|/ c |>\n<| c |>\nYour code doesn't even attempt to answer\
    \ the question of how to find the common elements. Your code just returns the\
    \ unique elements. Your code doesn't even attempt to answer the question of how\
    \ to find the common elements. Your code just returns the unique elements. Your\
    \ code doesn't even attempt to answer the question of how to find the common elements.\
    \ Your code just returns the unique elements. Your code doesn't even attempt to\
    \ answer the question of how to find the common elements. Your code just returns\
    \ the unique elements. Your code doesn't even attempt to answer the question of\
    \ how to find the common elements. Your code just returns the unique elements.\
    \ Your code doesn't even attempt to answer the question of how to find the common\
    \ elements. Your code just returns the unique elements. Your code doesn't even\
    \ attempt to answer the question of how to find the common elements. Your code\
    \ just returns the unique elements. Your code doesn't even attempt to answer the\
    \ question of how to find the common elements. Your code just returns the unique\
    \ elements. Your code doesn't even attempt to answer the question of how to find\
    \ the common elements. Your code just returns the unique elements. Your code doesn't\
    \ even attempt to answer the question of how to find the common elements. Your\
    \ code just returns the unique elements.\n<|/ c |>\n<| c |>\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt66u7eqd.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n  $l1 = array_flip($l1);\n\
    \  $l2 = array_flip($l2);\n  $common = array_intersect($l1, $l2);\n  asort($common);\n\
    \  return $common;\n}\n\nfunction candidate(...$args) {\n    return common(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5),\
    \ array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3,\
    \ 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkfi1npim.php:22\n\
    Stack trace:\n#0 /tmp/tmpkfi1npim.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpkfi1npim.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = [];\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppq6_7k0n.php:22\n\
    Stack trace:\n#0 /tmp/tmppq6_7k0n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppq6_7k0n.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd80fhke.php:22\n\
    Stack trace:\n#0 /tmp/tmptd80fhke.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptd80fhke.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuu6avn72.php:22\n\
    Stack trace:\n#0 /tmp/tmpuu6avn72.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuu6avn72.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnf5lqqf5.php:21\n\
    Stack trace:\n#0 /tmp/tmpnf5lqqf5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnf5lqqf5.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zazci_6.php:22\n\
    Stack trace:\n#0 /tmp/tmp5zazci_6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5zazci_6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppkhxgoip.php:22\n\
    Stack trace:\n#0 /tmp/tmppkhxgoip.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppkhxgoip.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4uy766j.php:22\n\
    Stack trace:\n#0 /tmp/tmpf4uy766j.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpf4uy766j.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphe6fw82e.php:22\n\
    Stack trace:\n#0 /tmp/tmphe6fw82e.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphe6fw82e.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpds1j94ab.php:22\n\
    Stack trace:\n#0 /tmp/tmpds1j94ab.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpds1j94ab.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygw5bv97.php:22\n\
    Stack trace:\n#0 /tmp/tmpygw5bv97.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpygw5bv97.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnr3ajsqb.php:21\n\
    Stack trace:\n#0 /tmp/tmpnr3ajsqb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnr3ajsqb.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3et77m04.php:22\n\
    Stack trace:\n#0 /tmp/tmp3et77m04.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3et77m04.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzw6_kd3y.php:22\n\
    Stack trace:\n#0 /tmp/tmpzw6_kd3y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzw6_kd3y.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8ft0bt6.php:22\n\
    Stack trace:\n#0 /tmp/tmph8ft0bt6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph8ft0bt6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ailavfp.php:22\n\
    Stack trace:\n#0 /tmp/tmp6ailavfp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6ailavfp.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqwyn78s.php:21\n\
    Stack trace:\n#0 /tmp/tmpqqwyn78s.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqqwyn78s.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyzowfgym.php:22\n\
    Stack trace:\n#0 /tmp/tmpyzowfgym.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpyzowfgym.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0r6iv1nz.php:22\n\
    Stack trace:\n#0 /tmp/tmp0r6iv1nz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0r6iv1nz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jw66b9d.php:22\n\
    Stack trace:\n#0 /tmp/tmp0jw66b9d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0jw66b9d.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_y_jj8z3.php:22\n\
    Stack trace:\n#0 /tmp/tmp_y_jj8z3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_y_jj8z3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9s_o8am.php:22\n\
    Stack trace:\n#0 /tmp/tmpw9s_o8am.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw9s_o8am.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp4zrqn_.php:22\n\
    Stack trace:\n#0 /tmp/tmprp4zrqn_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprp4zrqn_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = [];\n    foreach ($l1 as $k => $v) {\n        if (in_array($v,\
    \ $l2)) {\n            $common[] = $v;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpux50ue1y.php:22\n\
    Stack trace:\n#0 /tmp/tmpux50ue1y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpux50ue1y.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2w4kqxx1.php:22\n\
    Stack trace:\n#0 /tmp/tmp2w4kqxx1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2w4kqxx1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsz5aa67.php:21\n\
    Stack trace:\n#0 /tmp/tmpzsz5aa67.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzsz5aa67.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3930kwdk.php:22\n\
    Stack trace:\n#0 /tmp/tmp3930kwdk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3930kwdk.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wbcotkw.php:22\n\
    Stack trace:\n#0 /tmp/tmp4wbcotkw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4wbcotkw.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqft5q0gs.php:22\n\
    Stack trace:\n#0 /tmp/tmpqft5q0gs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqft5q0gs.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5scbz7i9.php:22\n\
    Stack trace:\n#0 /tmp/tmp5scbz7i9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5scbz7i9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0j3y_0sx.php:22\n\
    Stack trace:\n#0 /tmp/tmp0j3y_0sx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0j3y_0sx.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $k => $v) {\n    if (in_array($v, $l2)) {\n\
    \      $common[] = $v;\n    }\n  }\n  return $common;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcs0gml4.php:22\n\
    Stack trace:\n#0 /tmp/tmpmcs0gml4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmcs0gml4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasqvsgqm.php:22\n\
    Stack trace:\n#0 /tmp/tmpasqvsgqm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpasqvsgqm.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbje5udq2.php:22\n\
    Stack trace:\n#0 /tmp/tmpbje5udq2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbje5udq2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxko6elbh.php:22\n\
    Stack trace:\n#0 /tmp/tmpxko6elbh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxko6elbh.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ntqd5tc.php:22\n\
    Stack trace:\n#0 /tmp/tmp1ntqd5tc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1ntqd5tc.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsehyz9mc.php:22\n\
    Stack trace:\n#0 /tmp/tmpsehyz9mc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsehyz9mc.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ydu3suk.php:21\n\
    Stack trace:\n#0 /tmp/tmp5ydu3suk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5ydu3suk.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptidsbyt0.php:22\n\
    Stack trace:\n#0 /tmp/tmptidsbyt0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptidsbyt0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = [];\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp150qm5_8.php:22\n\
    Stack trace:\n#0 /tmp/tmp150qm5_8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp150qm5_8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zuinx4g.php:22\n\
    Stack trace:\n#0 /tmp/tmp5zuinx4g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5zuinx4g.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclfe01os.php:21\n\
    Stack trace:\n#0 /tmp/tmpclfe01os.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpclfe01os.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n  $common = array_intersect($l1,\
    \ $l2);\n  sort($common);\n  return $common;\n}\n\nfunction candidate(...$args)\
    \ {\n    return common(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, 2,\
    \ 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphii5gpqo.php:22\n\
    Stack trace:\n#0 /tmp/tmphii5gpqo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphii5gpqo.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb3_okfp.php:22\n\
    Stack trace:\n#0 /tmp/tmptb3_okfp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptb3_okfp.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjn4k4k1z.php:22\n\
    Stack trace:\n#0 /tmp/tmpjn4k4k1z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjn4k4k1z.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_134frpj.php:22\n\
    Stack trace:\n#0 /tmp/tmp_134frpj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_134frpj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvf2plhgy.php:21\n\
    Stack trace:\n#0 /tmp/tmpvf2plhgy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvf2plhgy.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_cvrvai.php:21\n\
    Stack trace:\n#0 /tmp/tmp3_cvrvai.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3_cvrvai.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0c6w_1t.php:22\n\
    Stack trace:\n#0 /tmp/tmpn0c6w_1t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpn0c6w_1t.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpefw5be7w.php:22\n\
    Stack trace:\n#0 /tmp/tmpefw5be7w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpefw5be7w.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8xrowa_.php:22\n\
    Stack trace:\n#0 /tmp/tmpv8xrowa_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpv8xrowa_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = [];\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdeqo6tun.php:22\n\
    Stack trace:\n#0 /tmp/tmpdeqo6tun.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdeqo6tun.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouscj3mj.php:22\n\
    Stack trace:\n#0 /tmp/tmpouscj3mj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpouscj3mj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8b0z6sft.php:22\n\
    Stack trace:\n#0 /tmp/tmp8b0z6sft.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8b0z6sft.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1htmozq.php:22\n\
    Stack trace:\n#0 /tmp/tmpb1htmozq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb1htmozq.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6m1ln1b.php:21\n\
    Stack trace:\n#0 /tmp/tmpf6m1ln1b.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpf6m1ln1b.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18628yxx.php:22\n\
    Stack trace:\n#0 /tmp/tmp18628yxx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp18628yxx.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = [];\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6x9dwm3z.php:22\n\
    Stack trace:\n#0 /tmp/tmp6x9dwm3z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6x9dwm3z.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rdh4oo0.php:22\n\
    Stack trace:\n#0 /tmp/tmp4rdh4oo0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4rdh4oo0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_y_guwaj.php:22\n\
    Stack trace:\n#0 /tmp/tmp_y_guwaj.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_y_guwaj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphq6i7zpq.php:22\n\
    Stack trace:\n#0 /tmp/tmphq6i7zpq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphq6i7zpq.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo_7cqk1.php:22\n\
    Stack trace:\n#0 /tmp/tmpzo_7cqk1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzo_7cqk1.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptrmsiq0m.php:22\n\
    Stack trace:\n#0 /tmp/tmptrmsiq0m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptrmsiq0m.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmponxlcry_.php:22\n\
    Stack trace:\n#0 /tmp/tmponxlcry_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmponxlcry_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qx8a86w.php:22\n\
    Stack trace:\n#0 /tmp/tmp_qx8a86w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_qx8a86w.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00z9v3xn.php:22\n\
    Stack trace:\n#0 /tmp/tmp00z9v3xn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp00z9v3xn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitb3crkr.php:22\n\
    Stack trace:\n#0 /tmp/tmpitb3crkr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpitb3crkr.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf9d3dhp.php:22\n\
    Stack trace:\n#0 /tmp/tmpuf9d3dhp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuf9d3dhp.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp85ub83zs.php:21\n\
    Stack trace:\n#0 /tmp/tmp85ub83zs.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp85ub83zs.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph58vopgm.php:22\n\
    Stack trace:\n#0 /tmp/tmph58vopgm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph58vopgm.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv41uyzlx.php:21\n\
    Stack trace:\n#0 /tmp/tmpv41uyzlx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv41uyzlx.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \  $common = array();\n  foreach ($l1 as $key => $value) {\n    if (in_array($value,\
    \ $l2)) {\n      $common[] = $value;\n    }\n  }\n  return $common;\n}\n\nfunction\
    \ candidate(...$args) {\n    return common(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653,\
    \ 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2,\
    \ 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 8), array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3z6o0mu.php:22\n\
    Stack trace:\n#0 /tmp/tmpw3z6o0mu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw3z6o0mu.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\n\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmbcjd5d.php:22\n\
    Stack trace:\n#0 /tmp/tmpgmbcjd5d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgmbcjd5d.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique common elements for two lists.\n// >>>\
    \ common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n\
    // >>> common([5, 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common($l1, $l2) {\n\
    \    $common = array();\n    foreach ($l1 as $key => $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $common[] = $value;\n        }\n    }\n    return $common;\n\
    }\nfunction candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7,\
    \ 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
    \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpam7tx0jd.php:21\n\
    Stack trace:\n#0 /tmp/tmpam7tx0jd.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpam7tx0jd.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_141_file_name_check
language: php
results:
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = \"/^[0-9]{1,3}\\.txt$/\";\n    if (preg_match($pattern, $file_name))\
    \ {\n        $pattern = \"/^[a-zA-Z][a-zA-Z0-9]*\\.exe$/\";\n        if (preg_match($pattern,\
    \ $file_name)) {\n            $pattern = \"/^[a-zA-Z][a-zA-Z0-9]*\\.dll$/\";\n\
    \            if (preg_match($pattern, $file_name)) {\n                return \"\
    Yes\";\n            } else {\n                return \"No\";\n            }\n\
    \        } else {\n            return \"No\";\n        }\n    } else {\n     \
    \   return \"No\";\n    }\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpid2kcuzd.php:38\n\
    Stack trace:\n#0 /tmp/tmpid2kcuzd.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpid2kcuzd.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 9 || strpos($file_name, '.') === false || strpos($file_name,\
    \ '.') === 0 || preg_match('/[^a-z]/', $file_name[0])) {\n    return 'No';\n \
    \ }\n  else {\n    return 'Yes';\n  }\n}\nfunction candidate(...$args) {\n   \
    \ return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1o1ya0c.php:28\n\
    Stack trace:\n#0 /tmp/tmpw1o1ya0c.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpw1o1ya0c.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code goes here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8piukxm.php:22\n\
    Stack trace:\n#0 /tmp/tmp_8piukxm.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp_8piukxm.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nhxa491.php:22\n\
    Stack trace:\n#0 /tmp/tmp3nhxa491.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp3nhxa491.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length_limit\
    \ = 3;\n    $file_name_contains_dot_only = false;\n    $file_name_contains_one_dot_only\
    \ = false;\n    $file_name_contains_one_dot_and_starts_with_letter = false;\n\
    \    $file_name_contains_one_dot_and_ends_with_letter = false;\n    $file_name_contains_one_dot_and_starts_with_letter_or_ends_with_letter\
    \ = false;\n    \n    if ($file_name_length < $file_name_length_limit) {\n   \
    \     return 'No';\n    }\n    \n    $file_name_array = explode('.', $file_name);\n\
    \    \n    if (count($file_name_array) == 1) {\n        return 'No';\n    }\n\
    \    \n    $file_name_contains_one_dot_only = true;\n    \n    if ($file_name_array[0]\
    \ === '') {\n        $file_name_contains_one_dot_only = false;\n    }\n    \n\
    \    if ($file_name_array[0][0] !== 'a' && $file_name_array[0][0] !== 'A') {\n\
    \        $file_name_contains_one_dot_and_starts_with_letter = false;\n    }\n\
    \    \n    if ($file_name_array[0][$file_name_length-1] !== 'z' && $file_name_array[0][$file_name_length-1]\
    \ !== 'Z') {\n        $file_name_contains_one_dot_and_ends_with_letter = false;\n\
    \    }\n    \n    if ($file_name_array[0][$file_name_length-1] !== 'a' && $file_name_array[0][$file_name_length-1]\
    \ !== 'A') {\n        $file_name_contains_one_dot_and_starts_with_letter_or_ends_with_letter\
    \ = false;\n    }\n    \n    if ($file_name_contains_one_dot_only && $file_name_contains_one_dot_and_starts_with_letter\
    \ && $file_name_contains_one_dot_and_ends_with_letter) {\n        return 'No';\n\
    \    }\n    \n    if ($file_name_contains_one_dot_only && $file_name_contains_one_dot_and_starts_with_letter_or_ends_with_letter)\
    \ {\n        return 'No';\n    }\n    \n    if ($file_name_contains_one_dot_only\
    \ && $file_name_contains_one_dot_and_starts_with_letter && $file_name_contains_one_dot_and_ends_with_letter\
    \ && $file_name_array[0][$file_name_length-1] !== '.') {\n        return 'No';\n\
    \    }\n    \n    if ($file_name_contains_one_dot_only && $file_name_contains_one_dot_and_starts_with_letter_or_ends_with_letter\
    \ && $file_name_array[0][$file_name_length-1] !== '.') {\n        return 'No';\n\
    \    }\n    \n    if ($file_name_contains_one_dot_only && $file_name_contains_one_dot_and_starts_with_letter\
    \ && $file_name_contains_one_dot_and_ends_with_letter && $file_name_array[0][$file_name_length-1]\
    \ !== '.') {\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmph7tf9apn.php on line 101\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_pos =\
    \ strpos($file_name, '.');\n    if ($dot_pos === false) {\n        return 'No';\n\
    \    }\n    $dot_pos_2 = strpos($file_name, '.', $dot_pos + 1);\n    if ($dot_pos_2\
    \ === false) {\n        return 'No';\n    }\n    $first_letter_pos = strpos($file_name,\
    \ 'a', 1);\n    if ($first_letter_pos === false) {\n        return 'No';\n   \
    \ }\n    $second_letter_pos = strpos($file_name, 'z', 1);\n    if ($second_letter_pos\
    \ === false) {\n        return 'No';\n    }\n    $first_letter_pos_2 = strpos($file_name,\
    \ 'A', 1);\n    if ($first_letter_pos_2 === false) {\n        return 'No';\n \
    \   }\n    $second_letter_pos_2 = strpos($file_name, 'Z', 1);\n    if ($second_letter_pos_2\
    \ === false) {\n        return 'No';\n    }\n    if ($file_name[$first_letter_pos]\
    \ >= 'a' && $file_name[$first_letter_pos] <= 'z') {\n        if ($file_name[$first_letter_pos\
    \ + 1] >= 'a' && $file_name[$first_letter_pos + 1] <= 'z') {\n            if ($file_name[$first_letter_pos_2]\
    \ >= 'a' && $file_name[$first_letter_pos_2] <= 'z') {\n                if ($file_name[$second_letter_pos]\
    \ >= 'a' && $file_name[$second_letter_pos] <= 'z') {\n                    if ($file_name[$second_letter_pos\
    \ + 1] >= 'a' && $file_name[$second_letter_pos + 1] <= 'z') {\n              \
    \          if ($file_name[$second_letter_pos_2] >= 'a' && $file_name[$second_letter_pos_2]\
    \ <= 'z') {\n                            return 'Yes';\n                     \
    \   }\n                    }\n                }\n            }\n        }\n  \
    \  }\n    return 'No';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60pt3_86.php:63\n\
    Stack trace:\n#0 /tmp/tmp60pt3_86.php(91): test()\n#1 {main}\n  thrown in /tmp/tmp60pt3_86.php\
    \ on line 63\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = \"/^[0-9]{3}\\.txt$/\";\n    $pattern2 = \"/^[a-zA-Z]{1}\\\
    .exe$/\";\n    $pattern3 = \"/^[a-zA-Z]{1}\\.dll$/\";\n    if (preg_match($pattern,\
    \ $file_name)) {\n        return \"Yes\";\n    }\n    if (preg_match($pattern2,\
    \ $file_name)) {\n        return \"Yes\";\n    }\n    if (preg_match($pattern3,\
    \ $file_name)) {\n        return \"Yes\";\n    }\n    return \"No\";\n}\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ka_k2wg.php:34\n\
    Stack trace:\n#0 /tmp/tmp7ka_k2wg.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp7ka_k2wg.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_minus_1 = $file_name_array_count\
    \ - 1;\n    $file_name_array_count_minus_2 = $file_name_array_count - 2;\n   \
    \ $file_name_array_count_minus_3 = $file_name_array_count - 3;\n    $file_name_array_count_minus_4\
    \ = $file_name_array_count - 4;\n    $file_name_array_count_minus_5 = $file_name_array_count\
    \ - 5;\n    $file_name_array_count_minus_6 = $file_name_array_count - 6;\n   \
    \ $file_name_array_count_minus_7 = $file_name_array_count - 7;\n    $file_name_array_count_minus_8\
    \ = $file_name_array_count - 8;\n    $file_name_array_count_minus_9 = $file_name_array_count\
    \ - 9;\n    $file_name_array_count_minus_10 = $file_name_array_count - 10;\n \
    \   $file_name_array_count_minus_11 = $file_name_array_count - 11;\n    $file_name_array_count_minus_12\
    \ = $file_name_array_count - 12;\n    $file_name_array_count_minus_13 = $file_name_array_count\
    \ - 13;\n    $file_name_array_count_minus_14 = $file_name_array_count - 14;\n\
    \    $file_name_array_count_minus_15 = $file_name_array_count - 15;\n    $file_name_array_count_minus_16\
    \ = $file_name_array_count - 16;\n    $file_name_array_count_minus_17 = $file_name_array_count\
    \ - 17;\n    $file_name_array_count_minus_18 = $file_name_array_count - 18;\n\
    \    $file_name_array_count_minus_19 = $file_name_array_count - 19;\n    $file_name_array_count_minus_20\
    \ = $file_name_array_count - 20;\n    $file_name_array_count_minus_21 = $file_name_array_count\
    \ - 21;\n    $file_name_array_count_minus_22 = $file_name_array_count - 22;\n\
    \    $file_name_array_count_minus_23 = $file_name_array_count - 23;\n    $file_name_array_count_minus_24\
    \ = $file_name_array_count - 24;\n    $file_name_array_count_minus_25 = $file_name_array_count\
    \ - 25;\n    $file_name_array_count_minus_26 = $file_name_array_count - 26;\n\
    \    $file_name_array_count_minus_27 = $file_name_array_count - 27;\n    $file_name_array_count_minus_28\
    \ = $file_name_array_count - 28;\n    $file_name_array_count_minus_29 = $file_name_array_count\
    \ - 29;\n    $file_name_array_count_minus_30 = $file_name_array_\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6d02_rhf.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_pos =\
    \ strpos($file_name, '.');\n    if ($dot_pos === false) {\n        return 'No';\n\
    \    }\n    $first_letter_pos = strpos($file_name, 'a', 1);\n    if ($first_letter_pos\
    \ === false) {\n        return 'No';\n    }\n    $second_letter_pos = strpos($file_name,\
    \ 'A', 1);\n    if ($second_letter_pos === false) {\n        return 'No';\n  \
    \  }\n    if ($file_name[$first_letter_pos] >= 'a' && $file_name[$first_letter_pos]\
    \ <= 'z') {\n        if ($file_name[$second_letter_pos] >= 'a' && $file_name[$second_letter_pos]\
    \ <= 'z') {\n            return 'Yes';\n        }\n    }\n    return 'No';\n}\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyqakul6.php:43\n\
    Stack trace:\n#0 /tmp/tmpyyqakul6.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpyyqakul6.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) === '-') {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpja5prds7.php on line 91\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 9) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $extension = strtolower(substr($file_name,\
    \ $dot_position));\n    if ($extension != 'txt' && $extension != 'exe' && $extension\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjcxatka6.php:42\n\
    Stack trace:\n#0 /tmp/tmpjcxatka6.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpjcxatka6.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3qxoo4y0.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_match('/^[a-z][a-z0-9]*$/i',\
    \ $file_name) ? $file_name : 'No';\n    return $file_name;\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxuy1myms.php:25\n\
    Stack trace:\n#0 /tmp/tmpxuy1myms.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpxuy1myms.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $dot_position_length = strlen($file_name);\n    if ($dot_position\
    \ < 1 || $dot_position > $dot_position_length - 1) {\n        return 'No';\n \
    \   }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter_position_length = strlen($file_name);\n    if ($first_letter_position\
    \ < 1 || $first_letter_position > $first_letter_position_length - 1) {\n     \
    \   return 'No';\n    }\n    $first_letter_character = $file_name[$first_letter_position\
    \ - 1];\n    if ($first_letter_character < 'a' || $first_letter_character > 'z')\
    \ {\n        return 'No';\n    }\n    $second_letter_position = strpos($file_name,\
    \ '.', $first_letter_position + 1);\n    if ($second_letter_position === false)\
    \ {\n        return 'No';\n    }\n    $second_letter_position_length = strlen($file_name);\n\
    \    if ($second_letter_position < 1 || $second_letter_position > $second_letter_position_length\
    \ - 1) {\n        return 'No';\n    }\n    $second_letter_character = $file_name[$second_letter_position\
    \ - 1];\n    if ($second_letter_character < 'a' || $second_letter_character >\
    \ 'z') {\n        return 'No';\n    }\n    $third_letter_position = strpos($file_name,\
    \ '.', $second_letter_position + 1);\n    if ($third_letter_position === false)\
    \ {\n        return 'No';\n    }\n    $third_letter_position_length = strlen($file_name);\n\
    \    if ($third_letter_position < 1 || $third_letter_position > $third_letter_position_length\
    \ - 1) {\n        return 'No';\n    }\n    $third_letter_character = $file_name[$third_letter_position\
    \ - 1];\n    if ($third_letter_character < 'a' || $third_letter_character > 'z')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1c1ha9uh.php:70\n\
    Stack trace:\n#0 /tmp/tmp1c1ha9uh.php(98): test()\n#1 {main}\n  thrown in /tmp/tmp1c1ha9uh.php\
    \ on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.');\n    if ($dot_position ===\
    \ false) {\n        return 'No';\n    }\n    $dot_position = strpos($file_name,\
    \ '.');\n    if ($dot_position === false) {\n        return 'No';\n    }\n   \
    \ $dot_position = strpos($file_name, '.');\n    if ($dot_position === false) {\n\
    \        return 'No';\n    }\n    $dot_position = strpos($file_name, '.');\n \
    \   if ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $dot_position = strpos($file_name, '.');\n    if ($dot_position\
    \ === false) {\n        return 'No';\n    }\n    $dot_position = strpos($file_name,\
    \ '.');\n    if ($dot_position === false) {\n        return 'No';\n    }\n   \
    \ $dot_position = strpos($file_name, '.');\n    if ($dot_position === false) {\n\
    \        return 'No';\n    }\n    $dot_position = strpos($file_name, '.');\n \
    \   if ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $dot_position = strpos($file_name, '.');\n    if ($dot_position\
    \ === false) {\n        return 'No';\n    }\n    $dot_position = strpos($file_name,\
    \ '.');\n    if ($dot_position === false) {\nfunction candidate(...$args) {\n\
    \    return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8q_8zyqy.php on line 106\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) === '-') {\n        return 'No';\n    }\n    if (preg_match('/[^a-z]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-z]/', substr($file_name,\
    \ 1))) {\n        return 'No';\n    }\n    if (preg_match('/[^a-z]/', substr($file_name,\
    \ 0, strlen($file_name) - 1))) {\n        return 'No';\n    }\n    if (preg_match('/[^a-z]/',\
    \ substr($file_name, 0, strlen($file_name) - 2))) {\n        return 'No';\n  \
    \  }\n    if (preg_match('/[^a-z]/', substr($file_name, 0, strlen($file_name)\
    \ - 3))) {\n        return 'No';\n    }\n    if (preg_match('/[^a-z]/', substr($file_name,\
    \ 0, strlen($file_name) - 4))) {\n        return 'No';\n    }\n    if (preg_match('/[^a-z]/',\
    \ substr($file_name, 0, strlen($file_name) - 5))) {\n        return 'No';\n  \
    \  }\n    if (preg_match('/[^a-z]/', substr($file_name, 0, strlen($file_name)\
    \ - 6))) {\n        return 'No';\n    }\n    if (preg_match('/[^a-z]/', substr($file_name,\
    \ 0, strlen($file_name) - 7))) {\n        return 'No';\n    }\n    if (preg_match('/[^a-z]/',\
    \ substr($file_name, 0, strlen($file_name) - 8))) {\n        return 'No';\n  \
    \  }\n    if (preg_match('/[^a-z]/', substr($file_name, 0, strlen($file_name)\
    \ - 9))) {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0x7g42vr.php:65\n\
    Stack trace:\n#0 /tmp/tmp0x7g42vr.php(93): test()\n#1 {main}\n  thrown in /tmp/tmp0x7g42vr.php\
    \ on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length_limit\
    \ = 3;\n    $file_name_dot_limit = 1;\n    $file_name_dot_limit_exceptions = ['txt',\
    \ 'exe', 'dll'];\n    $file_name_first_letter_limit = 'a';\n    $file_name_first_letter_limit_exceptions\
    \ = 'A';\n    if ($file_name_length < $file_name_length_limit) {\n        return\
    \ 'No';\n    }\n    if ($file_name_dot_limit > $file_name_length) {\n        return\
    \ 'No';\n    }\n    if (strpos($file_name, '.') !== false) {\n        $file_name_parts\
    \ = explode('.', $file_name);\n        $file_name_first_letter = strtolower($file_name_parts[0][0]);\n\
    \        if ($file_name_first_letter != $file_name_first_letter_limit) {\n   \
    \         return 'No';\n        }\n        if (in_array($file_name_parts[1], $file_name_dot_limit_exceptions))\
    \ {\n            return 'No';\n        }\n    }\n    return 'Yes';\n}\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvdknp0a8.php:44\n\
    Stack trace:\n#0 /tmp/tmpvdknp0a8.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpvdknp0a8.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) !== 'a' || substr($file_name, 0, 1) !== 'b' || substr($file_name, 0, 1) !==\
    \ 'c' || substr($file_name, 0, 1) !== 'd' || substr($file_name, 0, 1) !== 'e'\
    \ || substr($file_name, 0, 1) !== 'f' || substr($file_name, 0, 1) !== 'g' || substr($file_name,\
    \ 0, 1) !== 'h' || substr($file_name, 0, 1) !== 'i' || substr($file_name, 0, 1)\
    \ !== 'j' || substr($file_name, 0, 1) !== 'k' || substr($file_name, 0, 1) !==\
    \ 'l' || substr($file_name, 0, 1) !== 'm' || substr($file_name, 0, 1) !== 'n'\
    \ || substr($file_name, 0, 1) !== 'o' || substr($file_name, 0, 1) !== 'p' || substr($file_name,\
    \ 0, 1) !== 'q' || substr($file_name, 0, 1) !== 'r' || substr($file_name, 0, 1)\
    \ !== 's' || substr($file_name, 0, 1) !== 't' || substr($file_name, 0, 1) !==\
    \ 'u' || substr($file_name, 0, 1) !== 'v' || substr($file_name, 0, 1) !== 'w'\
    \ || substr($file_name, 0, 1) !== 'x' || substr($file_name, 0, 1) !== 'y' || substr($file_name,\
    \ 0, 1) !== 'z') {\n        return 'No';\n    }\n    $first_letter = substr($file_name,\
    \ 0, 1);\n    if ($first_letter != 'a' && $first_letter != 'b' && $first_letter\
    \ != 'c' && $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f'\
    \ && $first_letter != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter\
    \ != 'j' && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm'\
    \ && $first_letter != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter\
    \ != 'q' && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't'\
    \ && $first_letter != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter\
    \ != 'x' && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n\
    \    }\n    $last_letter = substr($file_name, -1);\n    if ($last_letter != 'txt'\
    \ && $last_letter != 'exe' && $last_letter != 'dll') {\n        return 'No';\n\
    \    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpti0sxrj6.php:40\n\
    Stack trace:\n#0 /tmp/tmpti0sxrj6.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpti0sxrj6.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ if (strlen($file_name) <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) !== '.') {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/i',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (in_array(substr($file_name,\
    \ strpos($file_name, '.') + 1), ['txt', 'exe', 'dll'])) {\n        return 'Yes';\n\
    \    }\n    return 'No';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncuudcs6.php:38\n\
    Stack trace:\n#0 /tmp/tmpncuudcs6.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpncuudcs6.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) === '-') {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\.]\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0ug5t3fh.php on line 91\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizjpk4y1.php:23\n\
    Stack trace:\n#0 /tmp/tmpizjpk4y1.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpizjpk4y1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    // Your code here\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-z]/', '', $file_name);\n    $file_name = preg_replace('/[^A-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo8yfrlmc.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = \"/^[0-9]{3}\\.txt$/\";\n    if (preg_match($pattern, $file_name))\
    \ {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9dnvvgb4.php:27\n\
    Stack trace:\n#0 /tmp/tmp9dnvvgb4.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp9dnvvgb4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_minus_1 = $file_name_array_count\
    \ - 1;\n    $file_name_array_count_minus_2 = $file_name_array_count - 2;\n   \
    \ $file_name_array_count_minus_3 = $file_name_array_count - 3;\n    $file_name_array_count_minus_4\
    \ = $file_name_array_count - 4;\n    $file_name_array_count_minus_5 = $file_name_array_count\
    \ - 5;\n    $file_name_array_count_minus_6 = $file_name_array_count - 6;\n   \
    \ $file_name_array_count_minus_7 = $file_name_array_count - 7;\n    $file_name_array_count_minus_8\
    \ = $file_name_array_count - 8;\n    $file_name_array_count_minus_9 = $file_name_array_count\
    \ - 9;\n    $file_name_array_count_minus_10 = $file_name_array_count - 10;\n \
    \   $file_name_array_count_minus_11 = $file_name_array_count - 11;\n    $file_name_array_count_minus_12\
    \ = $file_name_array_count - 12;\n    $file_name_array_count_minus_13 = $file_name_array_count\
    \ - 13;\n    $file_name_array_count_minus_14 = $file_name_array_count - 14;\n\
    \    $file_name_array_count_minus_15 = $file_name_array_count - 15;\n    $file_name_array_count_minus_16\
    \ = $file_name_array_count - 16;\n    $file_name_array_count_minus_17 = $file_name_array_count\
    \ - 17;\n    $file_name_array_count_minus_18 = $file_name_array_count - 18;\n\
    \    $file_name_array_count_minus_19 = $file_name_array_count - 19;\n    $file_name_array_count_minus_20\
    \ = $file_name_array_count - 20;\n    $file_name_array_count_minus_21 = $file_name_array_count\
    \ - 21;\n    $file_name_array_count_minus_22 = $file_name_array_count - 22;\n\
    \    $file_name_array_count_minus_23 = $file_name_array_count - 23;\n    $file_name_array_count_minus_24\
    \ = $file_name_array_count - 24;\n    $file_name_array_count_minus_25 = $file_name_array_count\
    \ - 25;\n    $file_name_array_count_minus_26 = $file_name_array_count - 26;\n\
    \    $file_name_array_count_minus_27 = $file_name_array_count - 27;\n    $file_name_array_count_minus_28\
    \ = $file_name_array_count - 28;\n    $file_name_array_count_minus_29 = $file_name_array_count\
    \ - 29;\n    $file_name_array_count_minus_30 = $file_name_array_\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvpu6fgno.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1w0a0muj.php:22\n\
    Stack trace:\n#0 /tmp/tmp1w0a0muj.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp1w0a0muj.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqu3xmbu.php:22\n\
    Stack trace:\n#0 /tmp/tmpfqu3xmbu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpfqu3xmbu.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if (preg_match('/[^a-z]/', $first_letter)) {\n        return 'No';\n    }\n\
    \    $dot_position = strpos($file_name, '.', $first_letter_position);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $last_letter =\
    \ strtolower(substr($file_name, $first_letter_position + 1));\n    if (preg_match('/[^a-z]/',\
    \ $last_letter)) {\n        return 'No';\n    }\n    if ($dot_position > $first_letter_position)\
    \ {\n        return 'No';\n    }\n    if ($dot_position < $file_name_length -\
    \ 1) {\n        return 'No';\n    }\n    if ($first_letter != 'a' && $first_letter\
    \ != 'b' && $first_letter != 'c' && $first_letter != 'd' && $first_letter != 'e'\
    \ && $first_letter != 'f' && $first_letter != 'g' && $first_letter != 'h' && $first_letter\
    \ != 'i' && $first_letter != 'j' && $first_letter != 'k' && $first_letter != 'l'\
    \ && $first_letter != 'm' && $first_letter != 'n' && $first_letter != 'o' && $first_letter\
    \ != 'p' && $first_letter != 'q' && $first_letter != 'r' && $first_letter != 's'\
    \ && $first_letter != 't' && $first_letter != 'u' && $first_letter != 'v' && $first_letter\
    \ != 'w' && $first_letter != 'x' && $first_letter != 'y' && $first_letter != 'z')\
    \ {\n        return 'No';\n    }\n    if ($last_letter != 'a' && $last_letter\
    \ != 'b' && $last_letter != 'c' && $last_letter != 'd' && $last_letter != 'e'\
    \ && $last_letter != 'f' && $last_letter != 'g' && $last_letter != 'h' && $last_letter\
    \ != 'i' && $last_letter != 'j' && $last_letter != 'k' && $last_letter != 'l'\
    \ && $last_letter != 'm' && $last_letter != 'n' && $last_letter != 'o' && $last_letter\
    \ != 'p' && $last_letter != 'q' && $last_letter != 'r' && $last_letter != 's'\
    \ && $last_letter != 't' && $last_letter != 'u' && $last_letter \nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1chm63nx.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n  return\
    \ (strlen($file_name) == 3 && preg_match('/\\.[^\\.]+$/', $file_name) && preg_match('/^[a-z]+/',\
    \ $file_name[0]));\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9i8m2m6.php:24\n\
    Stack trace:\n#0 /tmp/tmpf9i8m2m6.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpf9i8m2m6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp13y0gsjy.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 10) {\n    return 'No';\n  }\n  if (strpos($file_name, '.')\
    \ === false) {\n    return 'No';\n  }\n  if (substr($file_name, 0, 1) != 'a' ||\
    \ substr($file_name, 0, 1) != 'b' || substr($file_name, 0, 1) != 'c' || substr($file_name,\
    \ 0, 1) != 'd' || substr($file_name, 0, 1) != 'e' || substr($file_name, 0, 1)\
    \ != 'f' || substr($file_name, 0, 1) != 'g' || substr($file_name, 0, 1) != 'h'\
    \ || substr($file_name, 0, 1) != 'i' || substr($file_name, 0, 1) != 'j' || substr($file_name,\
    \ 0, 1) != 'k' || substr($file_name, 0, 1) != 'l' || substr($file_name, 0, 1)\
    \ != 'm' || substr($file_name, 0, 1) != 'n' || substr($file_name, 0, 1) != 'o'\
    \ || substr($file_name, 0, 1) != 'p' || substr($file_name, 0, 1) != 'q' || substr($file_name,\
    \ 0, 1) != 'r' || substr($file_name, 0, 1) != 's' || substr($file_name, 0, 1)\
    \ != 't' || substr($file_name, 0, 1) != 'u' || substr($file_name, 0, 1) != 'v'\
    \ || substr($file_name, 0, 1) != 'w' || substr($file_name, 0, 1) != 'x' || substr($file_name,\
    \ 0, 1) != 'y' || substr($file_name, 0, 1) != 'z') {\n    return 'No';\n  }\n\
    \  $file_name_array = explode('.', $file_name);\n  $file_name_array_length = count($file_name_array);\n\
    \  if ($file_name_array_length != 2) {\n    return 'No';\n  }\n  $file_name_array_first_character\
    \ = $file_name_array[0];\n  $file_name_array_second_character = $file_name_array[1];\n\
    \  if ($file_name_array_first_character != 'a' || $file_name_array_first_character\
    \ != 'b' || $file_name_array_first_character != 'c' || $file_name_array_first_character\
    \ != 'd' || $file_name_array_first_character != 'e' || $file_name_array_first_character\
    \ != 'f' || $file_name_array_first_character != 'g' || $file_name_array_first_character\
    \ != 'h' || $file_name_array_first_character != 'i' || $file_name_array_first_character\
    \ != 'j' || $file_name_array_first_character != 'k' || $file_name_array_first_character\
    \ != 'l' || $file_name_array_first_character != 'm' || $file_name_array_first_character\
    \ != 'n' || $file_name_array_first_character != 'o' || $file_name_array_first_character\
    \ != 'p' || $file_name_array_first_character != 'q' || $file_name_array_first_character\
    \ != 'r' || $file_name_array_first_character != 's' || $file_name_array_first_character\
    \ != 't' || $file_name_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptqybzacn.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $dot_position++;\n    $first_letter = strtolower(substr($file_name,\
    \ 0, $dot_position));\n    if ($first_letter != 'a' && $first_letter != 'b' &&\
    \ $first_letter != 'c' && $first_letter != 'd' && $first_letter != 'e' && $first_letter\
    \ != 'f' && $first_letter != 'g' && $first_letter != 'h' && $first_letter != 'i'\
    \ && $first_letter != 'j' && $first_letter != 'k' && $first_letter != 'l' && $first_letter\
    \ != 'm' && $first_letter != 'n' && $first_letter != 'o' && $first_letter != 'p'\
    \ && $first_letter != 'q' && $first_letter != 'r' && $first_letter != 's' && $first_letter\
    \ != 't' && $first_letter != 'u' && $first_letter != 'v' && $first_letter != 'w'\
    \ && $first_letter != 'x' && $first_letter != 'y' && $first_letter != 'z') {\n\
    \        return 'No';\n    }\n    $dot_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($dot_position === FALSE) {\n        return 'No';\n    }\n    $dot_position++;\n\
    \    $last_letter = strtolower(substr($file_name, $dot_position));\n    if ($last_letter\
    \ != 'txt' && $last_letter != 'exe' && $last_letter != 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5kqahml.php:44\n\
    Stack trace:\n#0 /tmp/tmpc5kqahml.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpc5kqahml.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter_character = $file_name[$first_letter_position];\n    if (!(preg_match('/^[a-z_]$/',\
    \ $first_letter_character))) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $first_letter_position + 1);\n    if ($dot_position\
    \ === false) {\n        return 'No';\n    }\n    $dot_character = $file_name[$dot_position];\n\
    \    if (!(preg_match('/^[txt|exe|dll]$/', $dot_character))) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavuqo86f.php:46\n\
    Stack trace:\n#0 /tmp/tmpavuqo86f.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpavuqo86f.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length_max =\
    \ strlen('example.txt');\n    $file_name_length_min = strlen('1');\n    $file_name_length_min_max\
    \ = strlen('example');\n    $file_name_length_min_max_exe = strlen('example.txt');\n\
    \    $file_name_length_min_max_exe_exe = strlen('example.txt');\n    $file_name_length_min_max_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe = strlen('example');\n\
    \    $file_name_length_min_max_exe_exe_exe_exe_exe = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe_exe\
    \ = strlen('example');\n    $file_name_length_min_max_exe_exe_exe_exe_exe_\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7prfeau3.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2brfk0i3.php:22\n\
    Stack trace:\n#0 /tmp/tmp2brfk0i3.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp2brfk0i3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ueek3f_.php:22\n\
    Stack trace:\n#0 /tmp/tmp2ueek3f_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp2ueek3f_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = '/^[0-9]{3}\\.[a-z][a-z]$/i';\n    if (preg_match($pattern,\
    \ $file_name)) {\n        if (strpos($file_name, '.') === false) {\n         \
    \   return true;\n        }\n        $file_name = explode('.', $file_name);\n\
    \        if (count($file_name) != 2) {\n            return false;\n        }\n\
    \        $file_name = array_shift($file_name);\n        $file_name = strtolower($file_name);\n\
    \        $file_name = preg_replace('/[^a-z]/', '', $file_name);\n        if ($file_name\
    \ == 'txt' || $file_name == 'exe' || $file_name == 'dll') {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdds39uku.php:38\n\
    Stack trace:\n#0 /tmp/tmpdds39uku.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpdds39uku.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code goes here\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1v12s9w.php:23\n\
    Stack trace:\n#0 /tmp/tmpo1v12s9w.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpo1v12s9w.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\\
    .]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\",\
    \ \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\\
    .]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\",\
    \ \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\\
    .]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\",\
    \ \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\\
    .]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\",\
    \ \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\\
    .]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\",\
    \ \"\", $file_name);\n    $file\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprh6_adj7.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 10) {\n    return 'No';\n  }\n  $dot_position = strpos($file_name,\
    \ '.');\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $first_letter_position\
    \ = strtoupper(substr($file_name, 0, 1));\n  if ($first_letter_position !== 'A'\
    \ && $first_letter_position !== 'a') {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === FALSE)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === FALSE)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === FALSE)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === FALSE)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === FALSE)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === FALSE)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === FALSE)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === FALSE)\
    \ {\n    return 'No';\n  }\n  $\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8_7rq1fq.php on line 88\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n    if ($dot_position === false)\
    \ {\n        return 'No';\n    }\n    $dot_position = strpos($file_name, '.',\
    \ $dot_position + 1);\n    if ($dot_position === false) {\n        return 'No';\n\
    \    }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n    if ($dot_position === false)\
    \ {\n        return 'No';\n    }\n    $dot_position = strpos($file_name, '.',\
    \ $dot_position + 1);\n    if ($dot_position === false) {\n        return 'No';\n\
    \    }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n    if ($dot_position === false)\
    \ {\n        return 'No';\n    }\n    $dot_position = strpos($file_name, '.',\
    \ $dot_position + 1);\n    if ($dot_position === false) {\n        return 'No';\n\
    \    }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $dot_\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7l1aaf4c.php on line 68\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpr8nvg1.php:23\n\
    Stack trace:\n#0 /tmp/tmpwpr8nvg1.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpwpr8nvg1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $extension = strtolower(substr($file_name,\
    \ $dot_position));\n    if ($extension != 'txt' && $extension != 'exe' && $extension\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc5_6tjfd.php:42\n\
    Stack trace:\n#0 /tmp/tmpc5_6tjfd.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpc5_6tjfd.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 10) {\n    return 'No';\n  }\n  if (strpos($file_name, '.')\
    \ === false) {\n    return 'No';\n  }\n  if (substr($file_name, 0, 1) !== 'a'\
    \ || substr($file_name, 0, 1) !== 'b' || substr($file_name, 0, 1) !== 'c' || substr($file_name,\
    \ 0, 1) !== 'd' || substr($file_name, 0, 1) !== 'e' || substr($file_name, 0, 1)\
    \ !== 'f' || substr($file_name, 0, 1) !== 'g' || substr($file_name, 0, 1) !==\
    \ 'h' || substr($file_name, 0, 1) !== 'i' || substr($file_name, 0, 1) !== 'j'\
    \ || substr($file_name, 0, 1) !== 'k' || substr($file_name, 0, 1) !== 'l' || substr($file_name,\
    \ 0, 1) !== 'm' || substr($file_name, 0, 1) !== 'n' || substr($file_name, 0, 1)\
    \ !== 'o' || substr($file_name, 0, 1) !== 'p' || substr($file_name, 0, 1) !==\
    \ 'q' || substr($file_name, 0, 1) !== 'r' || substr($file_name, 0, 1) !== 's'\
    \ || substr($file_name, 0, 1) !== 't' || substr($file_name, 0, 1) !== 'u' || substr($file_name,\
    \ 0, 1) !== 'v' || substr($file_name, 0, 1) !== 'w' || substr($file_name, 0, 1)\
    \ !== 'x' || substr($file_name, 0, 1) !== 'y' || substr($file_name, 0, 1) !==\
    \ 'z') {\n    return 'No';\n  }\n  $file_name = explode('.', $file_name);\n  if\
    \ (count($file_name) != 2) {\n    return 'No';\n  }\n  if ($file_name[0] !== ''\
    \ && $file_name[0] !== '.') {\n    return 'No';\n  }\n  $file_name = explode('.',\
    \ $file_name);\n  if (count($file_name) != 2) {\n    return 'No';\n  }\n  if ($file_name[0]\
    \ !== '' && $file_name[0] !== '.') {\n    return 'No';\n  }\n  $file_name = explode('.',\
    \ $file_name);\n  if (count($file_name) != 2) {\n    return 'No';\n  }\n  if ($file_name[0]\
    \ !== '' && $file_name[0] !== '.') {\n    return 'No';\n  }\n  $file_name = explode('.',\
    \ $file_name);\n  if (count($file_name) != 2) {\n    return 'No';\n  }\n  if ($file_name[0]\
    \ !== '' && $file_name[0] !== '.') {\n    return 'No';\n  }\n  $file_name = explode('.',\
    \ $file_name);\n  if (count($file_name) != 2) {\n    return 'No';\n  }\n  if ($file_name[0]\
    \ !== '' && $file_name[0] !== '.') {\n    return 'No';\n  }\n  $file_name = explode('.',\
    \ $file_name);\n  if (count($file_name) != 2) {\n    return 'No';\n  }\n  if ($file_name[0]\
    \ !== '' && $file_name[0] !== '.') {\n    return 'No\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxscqy181.php on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c'\
    \ && $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $first_letter_position + 1);\n\
    \    if ($dot_position === false) {\n        return 'No';\n    }\n    $extension\
    \ = strtolower(substr($file_name, $dot_position));\n    if ($extension == 'txt'\
    \ || $extension == 'exe' || $extension == 'dll') {\n        return 'Yes';\n  \
    \  }\n    return 'No';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn87q25wo.php:46\n\
    Stack trace:\n#0 /tmp/tmpn87q25wo.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpn87q25wo.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code goes here\n  $file_name_array = explode('.', $file_name);\n\
    \  $file_name_array_count = count($file_name_array);\n  if($file_name_array_count\
    \ > 3 || $file_name_array_count < 1 || $file_name_array[0] === '' || $file_name_array[0][0]\
    \ !== 'a' || $file_name_array[0][0] !== 'A' || $file_name_array[1] === '' || $file_name_array[1][0]\
    \ !== 'a' || $file_name_array[1][0] !== 'A' || $file_name_array[2] === '' || $file_name_array[2][0]\
    \ !== 'a' || $file_name_array[2][0] !== 'A'){\n    return 'No';\n  }else{\n  \
    \  return 'Yes';\n  }\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8o80qee2.php:30\n\
    Stack trace:\n#0 /tmp/tmp8o80qee2.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp8o80qee2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ if (strlen($file_name) <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (strpos($file_name, '.')\
    \ === 0 && preg_match('/^[a-z]/', $file_name[0]) === false) {\n        return\
    \ 'No';\n    }\n    if (preg_match('/\\.(txt|exe|dll)$/i', $file_name) === 0)\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpla4qq1m_.php:36\n\
    Stack trace:\n#0 /tmp/tmpla4qq1m_.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpla4qq1m_.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', 1);\n   \
    \ if ($first_letter_position === false) {\n        return 'No';\n    }\n    $first_letter\
    \ = strtolower(substr($file_name, 0, $first_letter_position));\n    if ($first_letter\
    \ != 'a' && $first_letter != 'b' && $first_letter != 'c' && $first_letter != 'd'\
    \ && $first_letter != 'e' && $first_letter != 'f' && $first_letter != 'g' && $first_letter\
    \ != 'h' && $first_letter != 'i' && $first_letter != 'j' && $first_letter != 'k'\
    \ && $first_letter != 'l' && $first_letter != 'm' && $first_letter != 'n' && $first_letter\
    \ != 'o' && $first_letter != 'p' && $first_letter != 'q' && $first_letter != 'r'\
    \ && $first_letter != 's' && $first_letter != 't' && $first_letter != 'u' && $first_letter\
    \ != 'v' && $first_letter != 'w' && $first_letter != 'x' && $first_letter != 'y'\
    \ && $first_letter != 'z') {\n        return 'No';\n    }\n    $dot_position =\
    \ strpos($file_name, '.', $first_letter_position + 1);\n    if ($dot_position\
    \ === false) {\n        return 'No';\n    }\n    $last_letter = strtolower(substr($file_name,\
    \ $dot_position));\n    if ($last_letter != 'txt' && $last_letter != 'exe' &&\
    \ $last_letter != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\n\
    \nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5oqc755.php:47\n\
    Stack trace:\n#0 /tmp/tmpa5oqc755.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpa5oqc755.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = \"/^[0-9]{3}\\.txt$/\";\n    if (preg_match($pattern, $file_name))\
    \ {\n        $pattern = \"/^[a-zA-z]{1}\\.exe$/\";\n        if (preg_match($pattern,\
    \ $file_name)) {\n            $pattern = \"/^[a-zA-z]{1}\\.dll$/\";\n        \
    \    if (preg_match($pattern, $file_name)) {\n                return \"Yes\";\n\
    \            }\n        }\n    }\n    return \"No\";\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmw0qk90.php:32\n\
    Stack trace:\n#0 /tmp/tmplmw0qk90.php(60): test()\n#1 {main}\n  thrown in /tmp/tmplmw0qk90.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = \"/^[0-9]{3}\\.txt$/\";\n    if (preg_match($pattern, $file_name))\
    \ {\n        $pattern = \"/^[a-zA-z]{1}\\.exe$/\";\n        if (preg_match($pattern,\
    \ $file_name)) {\n            $pattern = \"/^[a-zA-z]{1}\\.dll$/\";\n        \
    \    if (preg_match($pattern, $file_name)) {\n                return \"Yes\";\n\
    \            }\n        }\n    }\n    return \"No\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprhuh_rl_.php:33\n\
    Stack trace:\n#0 /tmp/tmprhuh_rl_.php(61): test()\n#1 {main}\n  thrown in /tmp/tmprhuh_rl_.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ if (strlen($file_name) <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (strpos($file_name, '.')\
    \ === 0) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === strlen($file_name)\
    \ - 1) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name)\
    \ - 1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0])\
    \ && preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name) - 1])) {\n      \
    \  return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]) && preg_match('/[^a-zA-Z]/',\
    \ $file_name[strlen($file_name) - 1]) && preg_match('/[^a-zA-Z]/', $file_name[1]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0])\
    \ && preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name) - 1]) && preg_match('/[^a-zA-Z]/',\
    \ $file_name[1]) && preg_match('/[^a-zA-Z]/', $file_name[2])) {\n        return\
    \ 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]) && preg_match('/[^a-zA-Z]/',\
    \ $file_name[strlen($file_name) - 1]) && preg_match('/[^a-zA-Z]/', $file_name[1])\
    \ && preg_match('/[^a-zA-Z]/', $file_name[2]) && preg_match('/[^a-zA-Z]/', $file_name[3]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0])\
    \ && preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name) - 1]) && preg_match('/[^a-zA-Z]/',\
    \ $file_name[1]) && preg_match('/[^a-zA-Z]/', $file_name[2]) && preg_match('/[^a-zA-Z]/',\
    \ $file_name[3]) && preg_match('/[^a-zA-Z]/', $file_name[4])) {\n        return\
    \ 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]) && preg_match('/[^a-zA-Z]/',\
    \ $file_name[strlen($file_name) - 1]) && preg_match('/[^a-zA-Z]/', $file_name[1])\
    \ && preg_match('/[^a-zA-Z]/', $file_name[2]) && preg_match('/[^a-zA-Z]/', $file_name[3])\
    \ && preg_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpaueq16gr.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length_limit\
    \ = 3;\n    $file_name_dot_limit = 1;\n    $file_name_before_dot_limit = 1;\n\
    \    $file_name_after_dot_limit = 3;\n    $file_name_contains_dot_limit = 1;\n\
    \    $file_name_contains_dot_limit_check = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check2\
    \ = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check3 = ['txt',\
    \ 'exe', 'dll'];\n    $file_name_contains_dot_limit_check4 = ['txt', 'exe', 'dll'];\n\
    \    $file_name_contains_dot_limit_check5 = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check6\
    \ = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check7 = ['txt',\
    \ 'exe', 'dll'];\n    $file_name_contains_dot_limit_check8 = ['txt', 'exe', 'dll'];\n\
    \    $file_name_contains_dot_limit_check9 = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check10\
    \ = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check11 = ['txt',\
    \ 'exe', 'dll'];\n    $file_name_contains_dot_limit_check12 = ['txt', 'exe', 'dll'];\n\
    \    $file_name_contains_dot_limit_check13 = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check14\
    \ = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check15 = ['txt',\
    \ 'exe', 'dll'];\n    $file_name_contains_dot_limit_check16 = ['txt', 'exe', 'dll'];\n\
    \    $file_name_contains_dot_limit_check17 = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check18\
    \ = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check19 = ['txt',\
    \ 'exe', 'dll'];\n    $file_name_contains_dot_limit_check20 = ['txt', 'exe', 'dll'];\n\
    \    $file_name_contains_dot_limit_check21 = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check22\
    \ = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check23 = ['txt',\
    \ 'exe', 'dll'];\n    $file_name_contains_dot_limit_check24 = ['txt', 'exe', 'dll'];\n\
    \    $file_name_contains_dot_limit_check25 = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check26\
    \ = ['txt', 'exe', 'dll'];\n    $file_name_contains_dot_limit_check27 = ['txt',\
    \ 'exe', 'dll'];\n    $file_name_contains_dot_limit_check28 = ['txt', 'exe', 'dll'];\n\
    \    $file_name_contains_dot_limit_check29 = ['txt', 'exe', 'dll'];\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4hst712h.php on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 10) {\n    return 'No';\n  }\n  if (strpos($file_name, '.')\
    \ === false) {\n    return 'No';\n  }\n  if (strpos($file_name, '.') === 0) {\n\
    \    return 'No';\n  }\n  if (ctype_alpha($file_name[0]) === false) {\n    return\
    \ 'No';\n  }\n  if (preg_match('/[^a-z]/', $file_name) === 0) {\n    return 'No';\n\
    \  }\n  if (preg_match('/[^a-z]/', substr($file_name, 1)) === 0) {\n    return\
    \ 'No';\n  }\n  $file_name = preg_replace('/[^a-z]/', $file_name, $file_name);\n\
    \  $file_name = preg_replace('/[^a-z]/', $file_name, $file_name);\n  $file_name\
    \ = preg_replace('/[^a-z]/', $file_name, $file_name);\n  $file_name = preg_replace('/[^a-z]/',\
    \ $file_name, $file_name);\n  if ($file_name === 'txt' || $file_name === 'exe'\
    \ || $file_name === 'dll') {\n    return 'Yes';\n  }\n  return 'No';\n}\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph21gx2h7.php:48\n\
    Stack trace:\n#0 /tmp/tmph21gx2h7.php(76): test()\n#1 {main}\n  thrown in /tmp/tmph21gx2h7.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpat2vuh5y.php:22\n\
    Stack trace:\n#0 /tmp/tmpat2vuh5y.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpat2vuh5y.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 9) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $extension = strtolower(substr($file_name,\
    \ $dot_position));\n    if ($extension != 'txt' && $extension != 'exe' && $extension\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8d_k4hn.php:42\n\
    Stack trace:\n#0 /tmp/tmpm8d_k4hn.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpm8d_k4hn.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_pos =\
    \ strpos($file_name, '.');\n    if ($dot_pos === false) {\n        return 'No';\n\
    \    }\n    $first_letter_pos = strpos($file_name, '.', $dot_pos);\n    if ($first_letter_pos\
    \ === false) {\n        return 'No';\n    }\n    $first_letter_char = substr($file_name,\
    \ $first_letter_pos);\n    if (preg_match('/[^a-z]/', $first_letter_char)) {\n\
    \        return 'No';\n    }\n    $dot_pos = strpos($file_name, '.', $first_letter_pos);\n\
    \    if ($dot_pos === false) {\n        return 'No';\n    }\n    $dot_char = substr($file_name,\
    \ $dot_pos);\n    if (preg_match('/[^a-z\\.]/', $dot_char)) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80_dj2gg.php:46\n\
    Stack trace:\n#0 /tmp/tmp80_dj2gg.php(74): test()\n#1 {main}\n  thrown in /tmp/tmp80_dj2gg.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrvesmnk.php:22\n\
    Stack trace:\n#0 /tmp/tmpqrvesmnk.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpqrvesmnk.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_char_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_char_position === false) {\n        return 'No';\n    }\n    $first_char_position\
    \ = strpos($file_name, '.', $first_char_position + 1);\n    if ($first_char_position\
    \ === false) {\n        return 'No';\n    }\n    $first_char_position = strpos($file_name,\
    \ '.', $first_char_position + 1);\n    if ($first_char_position === false) {\n\
    \        return 'No';\n    }\n    $first_char_position = strpos($file_name, '.',\
    \ $first_char_position + 1);\n    if ($first_char_position === false) {\n    \
    \    return 'No';\n    }\n    $first_char_position = strpos($file_name, '.', $first_char_position\
    \ + 1);\n    if ($first_char_position === false) {\n        return 'No';\n   \
    \ }\n    $first_char_position = strpos($file_name, '.', $first_char_position +\
    \ 1);\n    if ($first_char_position === false) {\n        return 'No';\n    }\n\
    \    $first_char_position = strpos($file_name, '.', $first_char_position + 1);\n\
    \    if ($first_char_position === false) {\n        return 'No';\n    }\n    $first_char_position\
    \ = strpos($file_name, '.', $first_char_position + 1);\n    if ($first_char_position\
    \ === false) {\n        return 'No';\n    }\n    $first_char_position = strpos($file_name,\
    \ '.', $first_char_position + 1);\n    if ($first_char_position === false) {\n\
    \        return 'No';\n    }\n    $first_char_position = strpos($file_name, '.',\
    \ $first_char_position + 1);\n    if ($first_char_position === false) {\n    \
    \    return 'No';\n    }\n    $first_char_position = strpos($file_name, '.', $first_char_position\
    \ + 1);\n    if ($first_char_position === false) {\n        return 'No';\n   \
    \ }\n    $first_char_position = strpos($file_name, '.', $first_char_position +\
    \ 1);\n    if ($first_char_position === false) {\n        return 'No';\n    }\n\
    \    $first_char_position = strpos($file_name, '.', $first_char_position + 1);\n\
    \    if ($first_char_position === false) {\n        return 'No';\n    }\n    $first_char_position\
    \ = strpos($file_name, '.', $first_char_position + 1);\n    if ($first_char_position\
    \ === false) {\n        return 'No';\n    }\n    $first_char_position = strpos($file_name,\
    \ '.', $first_char_position + 1);\n    if ($first_char_position === false) {\n\
    \        return 'No';\n    }\n    $first_char_position = strpos($file_name\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpne4m730p.php on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 10) {\n    return 'No';\n  }\n  $dot_position = strpos($file_name,\
    \ '.');\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $first_letter_position\
    \ = strpos($file_name, '.', 1);\n  if ($first_letter_position === FALSE) {\n \
    \   return 'No';\n  }\n  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \  if (preg_match('/[^a-z]/', $first_letter)) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $first_letter_position + 1);\n  if ($dot_position\
    \ === FALSE) {\n    return 'No';\n  }\n  $dot_letter = strtolower(substr($file_name,\
    \ $dot_position, 1));\n  if (preg_match('/[^a-z]/', $dot_letter)) {\n    return\
    \ 'No';\n  }\n  if ($dot_letter !== 'txt' && $dot_letter !== 'exe' && $dot_letter\
    \ !== 'dll') {\n    return 'No';\n  }\n  return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1x71kkt6.php:49\n\
    Stack trace:\n#0 /tmp/tmp1x71kkt6.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp1x71kkt6.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) != 'a' || substr($file_name, 0, 1) != 'b' || substr($file_name, 0, 1) !=\
    \ 'c' || substr($file_name, 0, 1) != 'd' || substr($file_name, 0, 1) != 'e' ||\
    \ substr($file_name, 0, 1) != 'f' || substr($file_name, 0, 1) != 'g' || substr($file_name,\
    \ 0, 1) != 'h' || substr($file_name, 0, 1) != 'i' || substr($file_name, 0, 1)\
    \ != 'j' || substr($file_name, 0, 1) != 'k' || substr($file_name, 0, 1) != 'l'\
    \ || substr($file_name, 0, 1) != 'm' || substr($file_name, 0, 1) != 'n' || substr($file_name,\
    \ 0, 1) != 'o' || substr($file_name, 0, 1) != 'p' || substr($file_name, 0, 1)\
    \ != 'q' || substr($file_name, 0, 1) != 'r' || substr($file_name, 0, 1) != 's'\
    \ || substr($file_name, 0, 1) != 't' || substr($file_name, 0, 1) != 'u' || substr($file_name,\
    \ 0, 1) != 'v' || substr($file_name, 0, 1) != 'w' || substr($file_name, 0, 1)\
    \ != 'x' || substr($file_name, 0, 1) != 'y' || substr($file_name, 0, 1) != 'z')\
    \ {\n        return 'No';\n    }\n    if (strpos($file_name, '.') !== false) {\n\
    \        $file_name_parts = explode('.', $file_name);\n        $file_name_parts_count\
    \ = count($file_name_parts);\n        if ($file_name_parts_count != 2) {\n   \
    \         return 'No';\n        }\n        if (preg_match('/[^a-zA-Z0-9\\.]/',\
    \ $file_name_parts[1])) {\n            return 'No';\n        }\n    }\n    return\
    \ 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxafvlr07.php:46\n\
    Stack trace:\n#0 /tmp/tmpxafvlr07.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpxafvlr07.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c'\
    \ && $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $last_letter = strtolower(substr($file_name, $dot_position + 1));\n\
    \    if ($last_letter != 'txt' && $last_letter != 'exe' && $last_letter != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjla1c43w.php:42\n\
    Stack trace:\n#0 /tmp/tmpjla1c43w.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpjla1c43w.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code goes here\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdqkga_i.php:23\n\
    Stack trace:\n#0 /tmp/tmppdqkga_i.php(51): test()\n#1 {main}\n  thrown in /tmp/tmppdqkga_i.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_match('/^[a-z][a-z\\\
    .]+/', $file_name) ? $file_name : 'No';\n    return $file_name;\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi0eskqbw.php:25\n\
    Stack trace:\n#0 /tmp/tmpi0eskqbw.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpi0eskqbw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqhzrxfiq.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpohwunspm.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name = preg_replace('/[^A-Za-z0-9\\.]/', '', $file_name);\n  return\
    \ preg_match('/^[a-z][a-z\\.]*$/', $file_name) ? \"Yes\" : \"No\";\n}\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzbqbcpe9.php:26\n\
    Stack trace:\n#0 /tmp/tmpzbqbcpe9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpzbqbcpe9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length_minus_1\
    \ = $file_name_length - 1;\n    $file_name_length_minus_1_minus_1 = $file_name_length_minus_1\
    \ - 1;\n    $file_name_length_minus_1_minus_1_minus_1 = $file_name_length_minus_1_minus_1\
    \ - 1;\n    $file_name_length_minus_1_minus_1_minus_1_minus_1 = $file_name_length_minus_1_minus_1_minus_1\
    \ - 1;\n    $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1 = $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1\
    \ - 1;\n    $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1\
    \ = $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1\
    \ - 1;\n    $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1\
    \ = $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1;\n\
    \    $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1\
    \ = $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1;\n\
    \    $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1\
    \ = $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1;\n\
    \    $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1\
    \ = $file_name_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1;\n\
    \    $file_name_length_minus_1_minus_1_\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8j61rirl.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $file_name_array\
    \ = explode('.', $file_name);\n    $file_name_array_length = count($file_name_array);\n\
    \    if ($file_name_array_length != 2) {\n        return 'No';\n    }\n    $file_name_first_character\
    \ = $file_name_array[0];\n    if (!preg_match('/^[a-zA-z]$/', $file_name_first_character))\
    \ {\n        return 'No';\n    }\n    $file_name_second_character = $file_name_array[1];\n\
    \    if (!preg_match('/^[a-zA-z]$/', $file_name_second_character)) {\n       \
    \ return 'No';\n    }\n    if ($file_name_array[0] === '') {\n        return 'No';\n\
    \    }\n    if ($file_name_array[1] != '') {\n        return 'No';\n    }\n  \
    \  return 'Yes';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogs9t6xm.php:45\n\
    Stack trace:\n#0 /tmp/tmpogs9t6xm.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpogs9t6xm.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpldz5vqhc.php on line 82\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = '/^[0-9]{1,3}\\.[a-z]{3,4}$/i';\n    return preg_match($pattern,\
    \ $file_name);\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputl7ei4d.php:24\n\
    Stack trace:\n#0 /tmp/tmputl7ei4d.php(52): test()\n#1 {main}\n  thrown in /tmp/tmputl7ei4d.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpam42v1tb.php:22\n\
    Stack trace:\n#0 /tmp/tmpam42v1tb.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpam42v1tb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = \"/^[0-9]{3}\\.txt|exe|dll$/\";\n    if (preg_match($pattern,\
    \ $file_name)) {\n        return \"Yes\";\n    } else {\n        return \"No\"\
    ;\n    }\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7vjweb5.php:27\n\
    Stack trace:\n#0 /tmp/tmpo7vjweb5.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpo7vjweb5.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) === '-') {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi838mfim.php:41\n\
    Stack trace:\n#0 /tmp/tmpi838mfim.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpi838mfim.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59b89q_a.php:22\n\
    Stack trace:\n#0 /tmp/tmp59b89q_a.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp59b89q_a.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_match('/[^a-z0-9\\\
    .]/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\" : \"Yes\";\n    $file_name = preg_match('/\\.[^\\\
    .]+$/i', $file_name) ? \"No\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7hu_ttk9.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if (preg_match('/[^a-z]/i', $first_letter)) {\n        return 'No';\n   \
    \ }\n    $last_letter = strtolower(substr($file_name, $first_letter_position +\
    \ 1));\n    if (preg_match('/[^a-z]/i', $last_letter)) {\n        return 'No';\n\
    \    }\n    if ($first_letter !== 'a' && $first_letter !== 'b' && $first_letter\
    \ !== 'c' && $first_letter !== 'd' && $first_letter !== 'e' && $first_letter !==\
    \ 'f' && $first_letter !== 'g' && $first_letter !== 'h' && $first_letter !== 'i'\
    \ && $first_letter !== 'j' && $first_letter !== 'k' && $first_letter !== 'l' &&\
    \ $first_letter !== 'm' && $first_letter !== 'n' && $first_letter !== 'o' && $first_letter\
    \ !== 'p' && $first_letter !== 'q' && $first_letter !== 'r' && $first_letter !==\
    \ 's' && $first_letter !== 't' && $first_letter !== 'u' && $first_letter !== 'v'\
    \ && $first_letter !== 'w' && $first_letter !== 'x' && $first_letter !== 'y' &&\
    \ $first_letter !== 'z') {\n        return 'No';\n    }\n    if ($last_letter\
    \ !== 'txt' && $last_letter !== 'exe' && $last_letter !== 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3h6hfvl.php:48\n\
    Stack trace:\n#0 /tmp/tmpc3h6hfvl.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpc3h6hfvl.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 10) {\n    return 'No';\n  }\n  $dot_position = strpos($file_name,\
    \ '.');\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $dot_position_length\
    \ = strlen($file_name);\n  if ($dot_position_length < 2) {\n    return 'No';\n\
    \  }\n  $first_letter = strtolower(substr($file_name, 0, 1));\n  if ($first_letter\
    \ != 'a' && $first_letter != 'b' && $first_letter != 'c' && $first_letter != 'd'\
    \ && $first_letter != 'e' && $first_letter != 'f' && $first_letter != 'g' && $first_letter\
    \ != 'h' && $first_letter != 'i' && $first_letter != 'j' && $first_letter != 'k'\
    \ && $first_letter != 'l' && $first_letter != 'm' && $first_letter != 'n' && $first_letter\
    \ != 'o' && $first_letter != 'p' && $first_letter != 'q' && $first_letter != 'r'\
    \ && $first_letter != 's' && $first_letter != 't' && $first_letter != 'u' && $first_letter\
    \ != 'v' && $first_letter != 'w' && $first_letter != 'x' && $first_letter != 'y'\
    \ && $first_letter != 'z') {\n    return 'No';\n  }\n  $dot_position = strpos($file_name,\
    \ '.');\n  $dot_position_length = strlen($file_name);\n  if ($dot_position_length\
    \ < 2) {\n    return 'No';\n  }\n  $last_letter = strtolower(substr($file_name,\
    \ $dot_position_length - 1, 1));\n  if ($last_letter != 'txt' && $last_letter\
    \ != 'exe' && $last_letter != 'dll') {\n    return 'No';\n  }\n  return 'Yes';\n\
    }\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpemujcfgv.php:47\n\
    Stack trace:\n#0 /tmp/tmpemujcfgv.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpemujcfgv.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace(\"/[^0-9\\.]/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /[^a-zA-Z]/\", \"\", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z]/\"\
    , \"\", $file_name);\n    if (strlen($file_name) <= 3) {\n        return \"No\"\
    ;\n    }\n    if (strpos($file_name, \".\") === false) {\n        return \"No\"\
    ;\n    }\n    if (strpos($file_name, \".\") === false || strpos($file_name, \"\
    .\") === 0) {\n        return \"No\";\n    }\n    if (strpos($file_name, \".\"\
    ) !== false && strpos($file_name, \".\") < strlen($file_name) - 1) {\n       \
    \ return \"No\";\n    }\n    if (preg_match(\"/[^a-zA-Z]/\", $file_name)) {\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5lfcr4hn.php:41\n\
    Stack trace:\n#0 /tmp/tmp5lfcr4hn.php(69): test()\n#1 {main}\n  thrown in /tmp/tmp5lfcr4hn.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kv9hr95.php:22\n\
    Stack trace:\n#0 /tmp/tmp1kv9hr95.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp1kv9hr95.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n  return\
    \ (strlen($file_name) == 3 && preg_match('/\\./', $file_name) && preg_match('/^[a-z]/',\
    \ $file_name[0]) && preg_match('/^[a-z]/', $file_name[1]));\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3fzznnnv.php:23\n\
    Stack trace:\n#0 /tmp/tmp3fzznnnv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3fzznnnv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmperuv5_gq.php on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dii67jw.php:22\n\
    Stack trace:\n#0 /tmp/tmp4dii67jw.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp4dii67jw.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $dot_position = strpos($file_name,\
    \ '.');\n    if ($dot_position === FALSE) {\n        return FALSE;\n    }\n  \
    \  $dot_position++;\n    $dot_position_length = strlen($file_name);\n    if ($dot_position\
    \ > $dot_position_length - 3) {\n        return FALSE;\n    }\n    $first_letter\
    \ = strtoupper(substr($file_name, 0, 1));\n    if ($first_letter < 'A' || $first_letter\
    \ > 'Z') {\n        return FALSE;\n    }\n    $last_letter = strtoupper(substr($file_name,\
    \ $dot_position, 1));\n    if ($last_letter < 'A' || $last_letter > 'Z') {\n \
    \       return FALSE;\n    }\n    $dot_position_length = $dot_position - 1;\n\
    \    $dot_position_length_length = strlen($file_name);\n    if ($dot_position_length\
    \ > $dot_position_length_length - 3) {\n        return FALSE;\n    }\n    $dot_position_length\
    \ = $dot_position_length - 1;\n    $dot_position_length_length = $dot_position_length\
    \ - 1;\n    $dot_position_length_length_length = strlen($file_name);\n    if ($dot_position_length\
    \ > $dot_position_length_length_length - 3) {\n        return FALSE;\n    }\n\
    \    $dot_position_length = $dot_position_length - 1;\n    $dot_position_length_length\
    \ = $dot_position_length - 1;\n    $dot_position_length_length_length = $dot_position_length\
    \ - 1;\n    $dot_position_length_length_length_length = strlen($file_name);\n\
    \    if ($dot_position_length > $dot_position_length_length_length_length - 3)\
    \ {\n        return FALSE;\n    }\n    $dot_position_length = $dot_position_length\
    \ - 1;\n    $dot_position_length_length = $dot_position_length - 1;\n    $dot_position_length_length_length\
    \ = $dot_position_length - 1;\n    $dot_position_length_length_length_length =\
    \ $dot_position_length - 1;\n    $dot_position_length_length_length_length_length\
    \ = strlen($file_name);\n    if ($dot_position_length > $dot_position_length_length_length_length_length\
    \ - 3) {\n        return FALSE;\n    }\n    $dot_position_length = $dot_position_length\
    \ - 1;\n    $dot_position_length_length = $dot_position_length - 1;\n    $dot_position_length_length_length\
    \ = $dot_position_length - 1;\n    $dot_position_length_length_length_length =\
    \ $dot_position_length - 1;\n    $dot_position_length_length_length_length_length\
    \ = $dot_position_length - 1;\n    $dot_position_length_length_length_length_length_length\
    \ = strlen($file_name);\n    if ($dot_position_length > $dot_position_length_length_length_length_length_length\
    \ - 3) {\n        return FALSE;\n    }\n    $dot_position_length = $dot_position_length\
    \ - 1;\n    $dot_position_length_length = $dot_position_length - 1;\n    $dot_position_length_length_length\
    \ = $dot_position_length - \nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuj12agbh.php on line 71\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $pattern = \"/^[0-9]{1,3}\\.txt$/\";\n  if(preg_match($pattern, $file_name))\
    \ {\n    return \"Yes\";\n  }\n  else {\n    return \"No\";\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1ooo0kr.php:29\n\
    Stack trace:\n#0 /tmp/tmpv1ooo0kr.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpv1ooo0kr.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 10) {\n    return 'No';\n  }\n  $dot_position = strpos($file_name,\
    \ '.');\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $first_letter_position\
    \ = strpos($file_name, '.', $dot_position);\n  if ($first_letter_position ===\
    \ false) {\n    return 'No';\n  }\n  $first_letter_character = $file_name[$first_letter_position];\n\
    \  if (!preg_match('/^[a-z_]$/', $first_letter_character)) {\n    return 'No';\n\
    \  }\n  $dot_position = strpos($file_name, '.', $first_letter_position);\n  if\
    \ ($dot_position === false) {\n    return 'No';\n  }\n  $dot_character = $file_name[$dot_position];\n\
    \  if (!preg_match('/^[txt]$/', $dot_character)) {\n    return 'No';\n  }\n  return\
    \ 'Yes';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo228742r.php:46\n\
    Stack trace:\n#0 /tmp/tmpo228742r.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpo228742r.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n\
    \    if (strlen($file_name) <= 3) {\n        return \"No\";\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return \"No\";\n    }\n    if (strpos($file_name,\
    \ '.') === 0) {\n        return \"No\";\n    }\n    if (strpos($file_name, '.')\
    \ === 0 && preg_match(\"/^[a-zA-Z]$/\", $file_name[0])) {\n        return \"No\"\
    ;\n    }\n    if (strpos($file_name, '.') === 0 && preg_match(\"/^[a-zA-Z]$/\"\
    , $file_name[1])) {\n        return \"No\";\n    }\n    if (strpos($file_name,\
    \ '.') === 0 && preg_match(\"/^[a-zA-Z]$/\", $file_name[2])) {\n        return\
    \ \"No\";\n    }\n    if (preg_match(\"/^[a-zA-Z]$/\", $file_name[0]) && preg_match(\"\
    /^[a-zA-Z]$/\", $file_name[1]) && preg_match(\"/^[a-zA-Z]$/\", $file_name[2])\
    \ && preg_match(\"/^[a-zA-Z]$/\", $file_name[3])) {\n        return \"Yes\";\n\
    \    }\n    return \"No\";\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6l0ipd3j.php:47\n\
    Stack trace:\n#0 /tmp/tmp6l0ipd3j.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp6l0ipd3j.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ if (strlen($file_name) <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (strpos($file_name, '.')\
    \ === 0) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === strlen($file_name)\
    \ - 1) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/i', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/i', $file_name[strlen($file_name)\
    \ - 1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/i', $file_name[0])\
    \ && preg_match('/[^a-zA-Z]/i', $file_name[strlen($file_name) - 1])) {\n     \
    \   return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/i', $file_name[0]) &&\
    \ preg_match('/[^a-zA-Z]/i', $file_name[strlen($file_name) - 1]) && preg_match('/[^a-zA-Z]/i',\
    \ $file_name[1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/i',\
    \ $file_name[0]) && preg_match('/[^a-zA-Z]/i', $file_name[strlen($file_name) -\
    \ 1]) && preg_match('/[^a-zA-Z]/i', $file_name[1]) && preg_match('/[^a-zA-Z]/i',\
    \ $file_name[2])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/i',\
    \ $file_name[0]) && preg_match('/[^a-zA-Z]/i', $file_name[strlen($file_name) -\
    \ 1]) && preg_match('/[^a-zA-Z]/i', $file_name[1]) && preg_match('/[^a-zA-Z]/i',\
    \ $file_name[2]) && preg_match('/[^a-zA-Z]/i', $file_name[3])) {\n        return\
    \ 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/i', $file_name[0]) && preg_match('/[^a-zA-Z]/i',\
    \ $file_name[strlen($file_name) - 1]) && preg_match('/[^a-zA-Z]/i', $file_name[1])\
    \ && preg_match('/[^a-zA-Z]/i', $file_name[2]) && preg_match('/[^a-zA-Z]/i', $file_name[3])\
    \ && preg_match('/[^a-zA-Z]/i', $file_name[4])) {\n        return 'No';\n    }\n\
    \    if (preg_match('/[^a-zA-Z]/i', $file_name[0]) && preg_match('/[^a-zA-Z]/i',\
    \ $file_name[strlen($file_name) - 1]) && preg_match('/[^a-zA-Z]/i', $file_name[1])\
    \ && preg_match('/[^a-zA-Z]/i', $file_name[2]) && preg_match('/[^a-zA-Z]/i', $file_name[3])\
    \ && preg_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprpesr4py.php on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 9) {\n    return 'No';\n  }\n  $dot_position = strpos($file_name,\
    \ '.');\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $first_letter\
    \ = strtolower(substr($file_name, 0, 1));\n  if ($first_letter < 'a' || $first_letter\
    \ > 'z') {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === false)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === false)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === false)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === false)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === false)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === false)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position === false)\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === false) {\n    return 'No';\n  }\n  $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n  if ($dot_position\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp74ih1ka3.php on line 89\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) !== 'a' || substr($file_name, 0, 1) !== 'A') {\n        return 'No';\n  \
    \  }\n    if (strpos($file_name, '.') !== false) {\n        $file_name_array =\
    \ explode('.', $file_name);\n        $file_name_length = count($file_name_array);\n\
    \        if ($file_name_length < 3 || $file_name_length > 10) {\n            return\
    \ 'No';\n        }\n        if ($file_name_array[0] === '') {\n            return\
    \ 'No';\n        }\n        if ($file_name_array[1] === '') {\n            return\
    \ 'No';\n        }\n        if ($file_name_array[1] != 'txt' && $file_name_array[1]\
    \ != 'exe' && $file_name_array[1] != 'dll') {\n            return 'No';\n    \
    \    }\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmeg81jum.php:48\n\
    Stack trace:\n#0 /tmp/tmpmeg81jum.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpmeg81jum.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphb7x3acy.php:23\n\
    Stack trace:\n#0 /tmp/tmphb7x3acy.php(51): test()\n#1 {main}\n  thrown in /tmp/tmphb7x3acy.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6pp5se0c.php:22\n\
    Stack trace:\n#0 /tmp/tmp6pp5se0c.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp6pp5se0c.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $pattern = \"/^[0-9]{3}\\.txt$/\";\n  if (preg_match($pattern, $file_name))\
    \ {\n    return \"Yes\";\n  }\n  else {\n    return \"No\";\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp630nalw4.php:29\n\
    Stack trace:\n#0 /tmp/tmp630nalw4.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp630nalw4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = \"/^[0-9]{3}\\.txt$/\";\n    if (preg_match($pattern, $file_name))\
    \ {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnla2fqds.php:27\n\
    Stack trace:\n#0 /tmp/tmpnla2fqds.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpnla2fqds.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $first_char_position = strpos($file_name, '.', 1);\n    if\
    \ ($first_char_position === FALSE) {\n        return 'No';\n    }\n    $first_char\
    \ = substr($file_name, 0, 1);\n    if (!in_array($first_char, [\n        'a',\n\
    \        'b',\n        'c',\n        'd',\n        'e',\n        'f',\n      \
    \  'g',\n        'h',\n        'i',\n        'j',\n        'k',\n        'l',\n\
    \        'm',\n        'n',\n        'o',\n        'p',\n        'q',\n      \
    \  'r',\n        's',\n        't',\n        'u',\n        'v',\n        'w',\n\
    \        'x',\n        'y',\n        'z',\n        'A',\n        'B',\n      \
    \  'C',\n        'D',\n        'E',\n        'F',\n        'G',\n        'H',\n\
    \        'I',\n        'J',\n        'K',\n        'L',\n        'M',\n      \
    \  'N',\n        'O',\n        'P',\n        'Q',\n        'R',\n        'S',\n\
    \        'T',\n        'U',\n        'V',\n        'W',\n        'X',\n      \
    \  'Y',\n        'Z',\n    ])) {\n        return 'No';\n    }\n    $last_char_position\
    \ = strpos($file_name, '.', -1);\n    if ($last_char_position === FALSE) {\n \
    \       return 'No';\n    }\n    $last_char = substr($file_name, -1, 1);\n   \
    \ if (!in_array($last_char, [\n        'a',\n        'b',\n        'c',\n    \
    \    'd',\n        'e',\n        'f',\n        'g',\n        'h',\n        'i',\n\
    \        'j',\n        'k',\n        'l',\n        'm',\n        'n',\n      \
    \  'o',\n        'p',\n        'q',\n        'r',\n        's',\n        't',\n\
    \        'u',\n        'v',\n        'w',\n        'x',\n        'y',\n      \
    \  'z',\n        'A',\n        'B',\n        'C',\n        'D',\n        'E',\n\
    \        'F',\n        'G',\n        'H',\n        'I',\n        'J',\n      \
    \  'K',\n        'L',\n        'M',\n        'N',\n        'O',\n        'P',\n\
    \        'Q',\n        'R',\n        'S',\n        'T',\n        'U',\n      \
    \  'V',\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpex_96w4p.php on line 138\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    if (strlen($file_name)\
    \ <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === false)\
    \ {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === 0) {\n \
    \       return 'No';\n    }\n    if (preg_match('/[^a-z]/i', $file_name[0]) ===\
    \ false) {\n        return 'No';\n    }\n    $file_extension = substr($file_name,\
    \ strrpos($file_name, '.') + 1);\n    if (in_array($file_extension, ['txt', 'exe',\
    \ 'dll'])) {\n        return 'Yes';\n    }\n    return 'No';\n}\n</code>\n<|/\
    \ a tags=php,validation,file-upload |>\n<| c |>\nThis doesn't work. Try it with\
    \ a filename like `1example.txt`\n<|/ c |>\n<| c |>\nI tested it and it works\
    \ fine for me. Can you give me an example of a filename that doesn't work?\n<|/\
    \ c |>\n<| c |>\nI tested it and it works fine for me. Can you give me an example\
    \ of a filename that doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it works\
    \ fine for me. Can you give me an example of a filename that doesn't work?\n<|/\
    \ c |>\n<| c |>\nI tested it and it works fine for me. Can you give me an example\
    \ of a filename that doesn't work?\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$file_name\
    \ = preg_replace('/[^A-Za-z0-9\\.]/', '', $file_name);\n</code>\n<|/ a tags=php,validation,file-upload\
    \ |>\n<| c |>\nThis doesn't work. Try it with a filename like `1example.txt`\n\
    <|/ c |>\n<| c |>\nI tested it and it works fine for me. Can you give me an example\
    \ of a filename that doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it works\
    \ fine for me. Can you give me an example of a filename that doesn't work?\n<|/\
    \ c |>\n<| c |>\nI tested it and it works fine for me. Can you give me an example\
    \ of a filename that doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it works\
    \ fine for me. Can you give me an example of a filename that doesn't work?\n<|/\
    \ c |>\n<| a tags=php,validation,file-upload |>\n<code>\n$file_name = preg_replace('/[^\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptdpl0_1t.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpge4q8km_.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $extension = strtolower(substr($file_name,\
    \ $dot_position));\n    if ($extension != 'txt' && $extension != 'exe' && $extension\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptphjc30u.php:42\n\
    Stack trace:\n#0 /tmp/tmptphjc30u.php(70): test()\n#1 {main}\n  thrown in /tmp/tmptphjc30u.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    if (strlen($file_name)\
    \ <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === false)\
    \ {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === 0 || substr($file_name,\
    \ 0, 1) !== 'a' || substr($file_name, 0, 1) !== 'b' || substr($file_name, 0, 1)\
    \ !== 'c' || substr($file_name, 0, 1) !== 'd' || substr($file_name, 0, 1) !==\
    \ 'e' || substr($file_name, 0, 1) !== 'f' || substr($file_name, 0, 1) !== 'g'\
    \ || substr($file_name, 0, 1) !== 'h' || substr($file_name, 0, 1) !== 'i' || substr($file_name,\
    \ 0, 1) !== 'j' || substr($file_name, 0, 1) !== 'k' || substr($file_name, 0, 1)\
    \ !== 'l' || substr($file_name, 0, 1) !== 'm' || substr($file_name, 0, 1) !==\
    \ 'n' || substr($file_name, 0, 1) !== 'o' || substr($file_name, 0, 1) !== 'p'\
    \ || substr($file_name, 0, 1) !== 'q' || substr($file_name, 0, 1) !== 'r' || substr($file_name,\
    \ 0, 1) !== 's' || substr($file_name, 0, 1) !== 't' || substr($file_name, 0, 1)\
    \ !== 'u' || substr($file_name, 0, 1) !== 'v' || substr($file_name, 0, 1) !==\
    \ 'w' || substr($file_name, 0, 1) !== 'x' || substr($file_name, 0, 1) !== 'y'\
    \ || substr($file_name, 0, 1) !== 'z') {\n        return 'No';\n    }\n    if\
    \ (preg_match('/\\.[^\\.]+$/', $file_name)) {\n        return 'No';\n    }\n \
    \   return 'Yes';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvvd66fq.php:35\n\
    Stack trace:\n#0 /tmp/tmpfvvd66fq.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpfvvd66fq.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n  if (strlen($file_name)\
    \ <= 3) {\n    return 'No';\n  }\n  if (strpos($file_name, '.') === false) {\n\
    \    return 'No';\n  }\n  $file_name = explode('.', $file_name);\n  if (strlen($file_name[0])\
    \ <= 1) {\n    return 'No';\n  }\n  $letter = strtolower($file_name[0]);\n  if\
    \ ($letter != 'a' && $letter != 'b' && $letter != 'c' && $letter != 'd' && $letter\
    \ != 'e' && $letter != 'f' && $letter != 'g' && $letter != 'h' && $letter != 'i'\
    \ && $letter != 'j' && $letter != 'k' && $letter != 'l' && $letter != 'm' && $letter\
    \ != 'n' && $letter != 'o' && $letter != 'p' && $letter != 'q' && $letter != 'r'\
    \ && $letter != 's' && $letter != 't' && $letter != 'u' && $letter != 'v' && $letter\
    \ != 'w' && $letter != 'x' && $letter != 'y' && $letter != 'z') {\n    return\
    \ 'No';\n  }\n  $extension = strtolower($file_name[1]);\n  if ($extension != 'txt'\
    \ && $extension != 'exe' && $extension != 'dll') {\n    return 'No';\n  }\n  return\
    \ 'Yes';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_ji_iyj.php:41\n\
    Stack trace:\n#0 /tmp/tmp8_ji_iyj.php(69): test()\n#1 {main}\n  thrown in /tmp/tmp8_ji_iyj.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wq9x_tn.php:22\n\
    Stack trace:\n#0 /tmp/tmp5wq9x_tn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp5wq9x_tn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = '/^[0-9]{3}\\.[a-z][a-z]$/i';\n    if (preg_match($pattern,\
    \ $file_name)) {\n        return 'Yes';\n    } else {\n        return 'No';\n\
    \    }\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yfodp_t.php:27\n\
    Stack trace:\n#0 /tmp/tmp5yfodp_t.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp5yfodp_t.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $pattern = \"/^[0-9]{3}\\.txt$/\";\n  if (preg_match($pattern, $file_name))\
    \ {\n    return \"Yes\";\n  }\n  return \"No\";\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7khqk1_c.php:26\n\
    Stack trace:\n#0 /tmp/tmp7khqk1_c.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp7khqk1_c.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) !== 'a' || substr($file_name, 0, 1) !== 'A' || substr($file_name, 0, 1) !==\
    \ 'b' || substr($file_name, 0, 1) !== 'B' || substr($file_name, 0, 1) !== 'c'\
    \ || substr($file_name, 0, 1) !== 'C' || substr($file_name, 0, 1) !== 'd' || substr($file_name,\
    \ 0, 1) !== 'D' || substr($file_name, 0, 1) !== 'e' || substr($file_name, 0, 1)\
    \ !== 'E' || substr($file_name, 0, 1) !== 'f' || substr($file_name, 0, 1) !==\
    \ 'F' || substr($file_name, 0, 1) !== 'g' || substr($file_name, 0, 1) !== 'G'\
    \ || substr($file_name, 0, 1) !== 'h' || substr($file_name, 0, 1) !== 'H' || substr($file_name,\
    \ 0, 1) !== 'i' || substr($file_name, 0, 1) !== 'I' || substr($file_name, 0, 1)\
    \ !== 'j' || substr($file_name, 0, 1) !== 'J' || substr($file_name, 0, 1) !==\
    \ 'k' || substr($file_name, 0, 1) !== 'K' || substr($file_name, 0, 1) !== 'l'\
    \ || substr($file_name, 0, 1) !== 'L' || substr($file_name, 0, 1) !== 'm' || substr($file_name,\
    \ 0, 1) !== 'M' || substr($file_name, 0, 1) !== 'n' || substr($file_name, 0, 1)\
    \ !== 'N' || substr($file_name, 0, 1) !== 'o' || substr($file_name, 0, 1) !==\
    \ 'O' || substr($file_name, 0, 1) !== 'p' || substr($file_name, 0, 1) !== 'P'\
    \ || substr($file_name, 0, 1) !== 'q' || substr($file_name, 0, 1) !== 'Q' || substr($file_name,\
    \ 0, 1) !== 'r' || substr($file_name, 0, 1) !== 'R' || substr($file_name, 0, 1)\
    \ !== 's' || substr($file_name, 0, 1) !== 'S' || substr($file_name, 0, 1) !==\
    \ 't' || substr($file_name, 0, 1) !== 'T' || substr($file_name, 0, 1) !== 'u'\
    \ || substr($file_name, 0, 1) !== 'U' || substr($file_name, 0, 1) !== 'v' || substr($file_name,\
    \ 0, 1) !== 'V' || substr($file_name, 0, 1) !== 'w' || substr($file_name, 0, 1)\
    \ !== 'W' || substr($file_name, 0, 1) !== 'x' || substr($file_name, 0, 1) !==\
    \ 'X' || substr($file_name, 0, 1) !== 'y' || substr($file_name, 0, 1) !== 'Y'\
    \ || substr($file_name, 0, 1) !== 'z' || substr($file_name, 0, 1) !== 'Z') {\n\
    \        return 'No';\n    }\n    $dot_position = strpos($file_name, '.');\n \
    \   if ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position_length\
    \ = strlen($file_name);\n    if ($dot_position_length < \nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq0339vuv.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptg20_prb.php:22\n\
    Stack trace:\n#0 /tmp/tmptg20_prb.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptg20_prb.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    // Your code here\n    $pattern = \"/^[0-9]{3}\\.txt$/\";\n    $pattern2\
    \ = \"/^[a-zA-Z]{1}\\.exe$/\";\n    $pattern3 = \"/^[a-zA-Z]{1}\\.dll$/\";\n \
    \   if (preg_match($pattern, $file_name)) {\n        return \"Yes\";\n    }\n\
    \    if (preg_match($pattern2, $file_name)) {\n        return \"Yes\";\n    }\n\
    \    if (preg_match($pattern3, $file_name)) {\n        return \"Yes\";\n    }\n\
    \    return \"No\";\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv76wzwy3.php:35\n\
    Stack trace:\n#0 /tmp/tmpv76wzwy3.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpv76wzwy3.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_sash0e.php:22\n\
    Stack trace:\n#0 /tmp/tmpx_sash0e.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpx_sash0e.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if (preg_match('/^[a-z]+$/', $first_letter) === false) {\n        return\
    \ 'No';\n    }\n    $extension = strtolower(substr($file_name, $dot_position));\n\
    \    if (in_array($extension, array('txt', 'exe', 'dll')) === false) {\n     \
    \   return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n\
    \    return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl604zyd.php:42\n\
    Stack trace:\n#0 /tmp/tmpsl604zyd.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpsl604zyd.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code goes here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztoqyw6_.php:22\n\
    Stack trace:\n#0 /tmp/tmpztoqyw6_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpztoqyw6_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $last_letter = strtolower(substr($file_name, -1));\n    if ($last_letter\
    \ != 'txt' && $last_letter != 'exe' && $last_letter != 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyag__ck_.php:38\n\
    Stack trace:\n#0 /tmp/tmpyag__ck_.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpyag__ck_.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjgag7y2_.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 9) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) === '-') {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.(txt|exe|dll)$/',\
    \ $file_name)) {\n        return 'Yes';\n    }\n    return 'No';\n}\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkfd3chn6.php:44\n\
    Stack trace:\n#0 /tmp/tmpkfd3chn6.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpkfd3chn6.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ if (strlen($file_name) <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (strpos($file_name, '.')\
    \ === 0) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === strlen($file_name)\
    \ - 1) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name)\
    \ - 1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', '',\
    \ $file_name[0])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/',\
    \ '', $file_name[strlen($file_name) - 1])) {\n        return 'No';\n    }\n  \
    \  if (preg_match('/[^a-zA-Z]/', $file_name[0])) {\n        return 'No';\n   \
    \ }\n    if (preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name) - 1])) {\n\
    \        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name)\
    \ - 1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name)\
    \ - 1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name)\
    \ - 1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name)\
    \ - 1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name)\
    \ - 1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name[strlen($file_name)\
    \ - 1])) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/', $file_name\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg_rto5rb.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace(\"/[^0-9\\.]/\", \"\", $file_name);\n    if\
    \ (strlen($file_name) <= 3) {\n        return \"No\";\n    }\n    if (strpos($file_name,\
    \ \".\") === false) {\n        return \"No\";\n    }\n    if (strpos($file_name,\
    \ \".\") === 0 || substr($file_name, 0, 1) != strtolower($file_name[0])) {\n \
    \       return \"No\";\n    }\n    $dot_pos = strpos($file_name, \".\");\n   \
    \ if ($dot_pos === false) {\n        return \"No\";\n    }\n    $dot_pos_end =\
    \ strpos($file_name, \".\", $dot_pos + 1);\n    if ($dot_pos_end === false) {\n\
    \        return \"No\";\n    }\n    $dot_pos_start = strpos($file_name, \".\"\
    , $dot_pos + 1);\n    if ($dot_pos_start === false) {\n        return \"No\";\n\
    \    }\n    $dot_pos_start_end = strpos($file_name, \".\", $dot_pos_start + 1);\n\
    \    if ($dot_pos_start_end === false) {\n        return \"No\";\n    }\n    $dot_pos_start_end_2\
    \ = strpos($file_name, \".\", $dot_pos_start_end + 1);\n    if ($dot_pos_start_end_2\
    \ === false) {\n        return \"No\";\n    }\n    $dot_pos_start_end_end_2 =\
    \ strpos($file_name, \".\", $dot_pos_start_end_2 + 1);\n    if ($dot_pos_start_end_end_2\
    \ === false) {\n        return \"No\";\n    }\n    $dot_pos_start_end_end_2_2\
    \ = strpos($file_name, \".\", $dot_pos_start_end_end_2 + 1);\n    if ($dot_pos_start_end_end_2_2\
    \ === false) {\n        return \"No\";\n    }\n    $dot_pos_start_end_end_2_2_2\
    \ = strpos($file_name, \".\", $dot_pos_start_end_end_2_2 + 1);\n    if ($dot_pos_start_end_end_2_2_2\
    \ === false) {\n        return \"No\";\n    }\n    $dot_pos_start_end_end_2_2_2_2\
    \ = strpos($file_name, \".\", $dot_pos_start_end_end_2_2_2 + 1);\n    if ($dot_pos_start_end_end_2_2_2_2\
    \ === false) {\n        return \"No\";\n    }\n    $dot_pos_start_end_end_2_2_2_2_2\
    \ = strpos($file_name, \".\", $dot_pos_start_end_end_2_2_2_2 + 1);\n    if ($dot_pos_start_end_end_2_2_2_2_2\
    \ === false) {\n        return \"No\";\n    }\n    $dot_pos_start_end_end_2_2_2_2_2_2\
    \ = strpos($file_name, \".\", $dot_pos_start_end_end_2_2_2_2_2 + 1);\n    if ($dot_pos_start_end_end_2_2_2_2_2_2\
    \ === false) {\n        return \"No\";\n    }\n    $dot_\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8tfffjo7.php on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (substr_count($file_name,\
    \ '.') != 1 || substr($file_name, 0, 1) != 'a' || substr($file_name, 0, 1) !=\
    \ 'A') {\n        return 'No';\n    }\n    $dot_position = strpos($file_name,\
    \ '.');\n    if ($dot_position === false) {\n        return 'No';\n    }\n   \
    \ $dot_position++;\n    $dot_position_length = strlen($dot_position);\n    if\
    \ ($dot_position_length < 1 || $dot_position_length > 3) {\n        return 'No';\n\
    \    }\n    if ($file_name[$dot_position - 1] != '.') {\n        return 'No';\n\
    \    }\n    $dot_position++;\n    $dot_position_length = strlen($dot_position);\n\
    \    if ($dot_position_length != 1 || $file_name[$dot_position - 1] != 'txt' ||\
    \ $file_name[$dot_position - 1] != 'exe' || $file_name[$dot_position - 1] != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsf8pwxau.php:46\n\
    Stack trace:\n#0 /tmp/tmpsf8pwxau.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpsf8pwxau.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = '/^[0-9]{3}\\.[a-z][a-z]$/i';\n    return preg_match($pattern,\
    \ $file_name);\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2ymcisd.php:24\n\
    Stack trace:\n#0 /tmp/tmpa2ymcisd.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpa2ymcisd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiocxxtd1.php:23\n\
    Stack trace:\n#0 /tmp/tmpiocxxtd1.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpiocxxtd1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array =\
    \ array_filter($file_name_array);\n    $file_name_array = array_map('trim', $file_name_array);\n\
    \    $file_name_array = array_map('ucfirst', $file_name_array);\n    $file_name_array\
    \ = array_filter($file_name_array);\n    $file_name_array = array_filter($file_name_array);\n\
    \    $file_name_array = array_map('is_numeric', $file_name_array);\n    $file_name_array\
    \ = array_filter($file_name_array);\n    $file_name_array = array_map('strlen',\
    \ $file_name_array);\n    $file_name_array = array_filter($file_name_array);\n\
    \    $file_name_array = array_map('in_array', array('txt', 'exe', 'dll'), $file_name_array);\n\
    \    $file_name_array = array_filter($file_name_array);\n    return $file_name_array;\n\
    }\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: in_array() expects parameter 2 to be array, null given in /tmp/tmpddknn4aa.php\
    \ on line 25\n\nWarning: in_array() expects parameter 2 to be array, null given\
    \ in /tmp/tmpddknn4aa.php on line 25\n\nWarning: in_array() expects parameter\
    \ 2 to be array, null given in /tmp/tmpddknn4aa.php on line 25\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpddknn4aa.php:34\nStack trace:\n\
    #0 /tmp/tmpddknn4aa.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpddknn4aa.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c'\
    \ && $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $first_letter_position + 1);\n\
    \    if ($dot_position === false) {\n        return 'No';\n    }\n    $last_letter\
    \ = strtolower(substr($file_name, $dot_position + 1));\n    if ($last_letter !=\
    \ 'txt' && $last_letter != 'exe' && $last_letter != 'dll') {\n        return 'No';\n\
    \    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2eiddlk.php:46\n\
    Stack trace:\n#0 /tmp/tmpg2eiddlk.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpg2eiddlk.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppm1344km.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ if (preg_match('/[0-9]{3}\\./', $file_name)) {\n        return 'No';\n    }\n\
    \    if (preg_match('/\\.[^\\.]+/', $file_name)) {\n        return 'No';\n   \
    \ }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name)) {\n        return\
    \ 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name)) {\n     \
    \   return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\.]/', $file_name))\
    \ {\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkztdg9c6.php on line 119\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0cut8lti.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 9) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $extension = strtolower(substr($file_name,\
    \ $dot_position));\n    if ($extension != 'txt' && $extension != 'exe' && $extension\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6_wiql4.php:42\n\
    Stack trace:\n#0 /tmp/tmph6_wiql4.php(70): test()\n#1 {main}\n  thrown in /tmp/tmph6_wiql4.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5mc8fdm.php:22\n\
    Stack trace:\n#0 /tmp/tmph5mc8fdm.php(50): test()\n#1 {main}\n  thrown in /tmp/tmph5mc8fdm.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9u373ee.php:22\n\
    Stack trace:\n#0 /tmp/tmpj9u373ee.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpj9u373ee.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^A-Z]/', '', $file_name);\n\
    \    if (strlen($file_name) <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (strpos($file_name, '.')\
    \ === 0) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === strlen($file_name)\
    \ - 1) {\n        return 'No';\n    }\n    if (preg_match('/[^A-Za-z]/i', $file_name))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvdtepo8w.php:41\n\
    Stack trace:\n#0 /tmp/tmpvdtepo8w.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpvdtepo8w.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length_limit\
    \ = 3;\n    $file_name_dot_limit = 1;\n    $file_name_before_dot_limit = 1;\n\
    \    $file_name_after_dot_limit = 3;\n    $file_name_contains_dot_limit = 1;\n\
    \    $file_name_contains_dot_limit_letter = true;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_dot_limit_latin_alphabet = false;\n    $file_name_contains_dot_limit_latin_alphabet\
    \ = true;\n    $file_name_contains_\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9_s3m7qp.php on line 64\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = \"/^[0-9]{3}\\.txt$/i\";\n    if (preg_match($pattern, $file_name))\
    \ {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpia2palrl.php:27\n\
    Stack trace:\n#0 /tmp/tmpia2palrl.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpia2palrl.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp0i7h8xd.php:22\n\
    Stack trace:\n#0 /tmp/tmpp0i7h8xd.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpp0i7h8xd.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6ugmixn.php:22\n\
    Stack trace:\n#0 /tmp/tmpp6ugmixn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpp6ugmixn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code goes here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj588s1qw.php:22\n\
    Stack trace:\n#0 /tmp/tmpj588s1qw.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpj588s1qw.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 9) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === FALSE) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if (preg_match('/[^a-z]/', $first_letter)) {\n        return 'No';\n    }\n\
    \    $second_letter = strtolower(substr($file_name, $first_letter_position + 1));\n\
    \    if (preg_match('/[^a-z]/', $second_letter)) {\n        return 'No';\n   \
    \ }\n    $third_letter = strtolower(substr($file_name, $first_letter_position\
    \ + 2));\n    if (preg_match('/[^a-z]/', $third_letter)) {\n        return 'No';\n\
    \    }\n    if ($file_name_length == $first_letter_position + 2 && $file_name_length\
    \ == $first_letter_position + 3 && $file_name_length == $first_letter_position\
    \ + 4) {\n        return 'Yes';\n    }\n    return 'No';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdviruqk.php:49\n\
    Stack trace:\n#0 /tmp/tmpjdviruqk.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpjdviruqk.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if (preg_match('/^[a-z]$/', $first_letter) === false) {\n        return 'No';\n\
    \    }\n    $dot_position = strpos($file_name, '.', $first_letter_position);\n\
    \    if ($dot_position === false) {\n        return 'No';\n    }\n    $dot_letter\
    \ = strtolower(substr($file_name, $dot_position, 1));\n    if (preg_match('/^[a-z]$/',\
    \ $dot_letter) === false) {\n        return 'No';\n    }\n    $dot_position =\
    \ strpos($file_name, '.', $dot_position + 1);\n    if ($dot_position === false)\
    \ {\n        return 'No';\n    }\n    $dot_letter = strtolower(substr($file_name,\
    \ $dot_position, 1));\n    if (preg_match('/^[a-z]$/', $dot_letter) === false)\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpks1cco5y.php:54\n\
    Stack trace:\n#0 /tmp/tmpks1cco5y.php(82): test()\n#1 {main}\n  thrown in /tmp/tmpks1cco5y.php\
    \ on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $dot_position++;\n    $first_letter_position = strpos($file_name,\
    \ '.', $dot_position);\n    if ($first_letter_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $first_letter_position++;\n    $first_letter = strtolower(substr($file_name,\
    \ $first_letter_position, 1));\n    if ($first_letter != 'a' && $first_letter\
    \ != 'b' && $first_letter != 'c' && $first_letter != 'd' && $first_letter != 'e'\
    \ && $first_letter != 'f' && $first_letter != 'g' && $first_letter != 'h' && $first_letter\
    \ != 'i' && $first_letter != 'j' && $first_letter != 'k' && $first_letter != 'l'\
    \ && $first_letter != 'm' && $first_letter != 'n' && $first_letter != 'o' && $first_letter\
    \ != 'p' && $first_letter != 'q' && $first_letter != 'r' && $first_letter != 's'\
    \ && $first_letter != 't' && $first_letter != 'u' && $first_letter != 'v' && $first_letter\
    \ != 'w' && $first_letter != 'x' && $first_letter != 'y' && $first_letter != 'z')\
    \ {\n        return 'No';\n    }\n    $last_letter = strtolower(substr($file_name,\
    \ $dot_position, 1));\n    if ($last_letter != 'txt' && $last_letter != 'exe'\
    \ && $last_letter != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcq4xdbw1.php:44\n\
    Stack trace:\n#0 /tmp/tmpcq4xdbw1.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpcq4xdbw1.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjapivp4.php:22\n\
    Stack trace:\n#0 /tmp/tmpyjapivp4.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpyjapivp4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\\
    .]/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\
    \", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\\
    .]/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\
    \", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\\
    .]/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\
    \", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\\
    .]/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\
    \", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n\
    \    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name\
    \ = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n    $file_name = preg_replace(\"\
    /\\.[^\\.]+$/\", \"\", $file_name);\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\\
    .]/\", \"\", $file_name);\n    $file_name = preg_replace(\"/\\.[^\\.]+$/\", \"\
    \", $file_name);\n    $file\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkrp_ycoj.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmenpkl0.php:22\n\
    Stack trace:\n#0 /tmp/tmpqmenpkl0.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpqmenpkl0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.');\n    $dot_position = strpos($file_name,\
    \ '.', $dot_position + 1);\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $extension = strtolower(substr($file_name, $dot_position +\
    \ 1));\n    if ($extension != 'txt' && $extension != 'exe' && $extension != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcdkd_k3e.php:43\n\
    Stack trace:\n#0 /tmp/tmpcdkd_k3e.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpcdkd_k3e.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    if (strlen($file_name)\
    \ <= 3) {\n        return 'No';\n    }\n    $file_name = preg_replace('/\\.[^\\\
    .]/', '', $file_name);\n    if (strlen($file_name) <= 3) {\n        return 'No';\n\
    \    }\n    $file_name = preg_replace('/[^a-z]/', '', $file_name);\n    if (strlen($file_name)\
    \ <= 3) {\n        return 'No';\n    }\n    $file_name = preg_replace('/[^A-Z]/',\
    \ '', $file_name);\n    if (strlen($file_name) <= 3) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^0-9]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/\\.[^\\.]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^a-z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^A-Z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^0-9]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/\\.[^\\.]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^a-z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^A-Z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^0-9]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/\\.[^\\.]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^a-z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^A-Z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^0-9]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/\\.[^\\.]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^a-z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^A-Z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^0-9]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/\\.[^\\.]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^a-z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^A-Z]/i', $file_name)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_2hqrsnr.php on line 91\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9\\\
    .]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+/', '',\
    \ $file_name);\n    if (preg_match('/[^a-zA-Z0-9\\.]/i', $file_name)) {\n    \
    \    return 'No';\n    } else {\n        return 'Yes';\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwe5_dbdd.php:36\n\
    Stack trace:\n#0 /tmp/tmpwe5_dbdd.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpwe5_dbdd.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcypfyl93.php:22\n\
    Stack trace:\n#0 /tmp/tmpcypfyl93.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpcypfyl93.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z0-9]/', '', $file_name);\n\
    \    if (strlen($file_name) == 0 || strpos($file_name, '.') === false || strpos($file_name,\
    \ '.') === 0 || strpos($file_name, '.') > strlen($file_name) - 3) {\n        return\
    \ 'No';\n    } else {\n        return 'Yes';\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0q96cbg.php:30\n\
    Stack trace:\n#0 /tmp/tmpj0q96cbg.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpj0q96cbg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_pos =\
    \ strpos($file_name, '.');\n    if ($dot_pos === false) {\n        return 'No';\n\
    \    }\n    $first_char_pos = 0;\n    $first_char_val = strtolower($file_name[$first_char_pos]);\n\
    \    if ($first_char_val != 'a' && $first_char_val != 'b' && $first_char_val !=\
    \ 'c' && $first_char_val != 'd' && $first_char_val != 'e' && $first_char_val !=\
    \ 'f' && $first_char_val != 'g' && $first_char_val != 'h' && $first_char_val !=\
    \ 'i' && $first_char_val != 'j' && $first_char_val != 'k' && $first_char_val !=\
    \ 'l' && $first_char_val != 'm' && $first_char_val != 'n' && $first_char_val !=\
    \ 'o' && $first_char_val != 'p' && $first_char_val != 'q' && $first_char_val !=\
    \ 'r' && $first_char_val != 's' && $first_char_val != 't' && $first_char_val !=\
    \ 'u' && $first_char_val != 'v' && $first_char_val != 'w' && $first_char_val !=\
    \ 'x' && $first_char_val != 'y' && $first_char_val != 'z') {\n        return 'No';\n\
    \    }\n    $dot_pos_2 = strpos($file_name, '.', $dot_pos + 1);\n    if ($dot_pos_2\
    \ === false) {\n        return 'No';\n    }\n    $dot_pos_3 = strpos($file_name,\
    \ '.', $dot_pos_2 + 1);\n    if ($dot_pos_3 === false) {\n        return 'No';\n\
    \    }\n    $dot_pos_4 = strpos($file_name, '.', $dot_pos_3 + 1);\n    if ($dot_pos_4\
    \ === false) {\n        return 'No';\n    }\n    $dot_pos_5 = strpos($file_name,\
    \ '.', $dot_pos_4 + 1);\n    if ($dot_pos_5 === false) {\n        return 'No';\n\
    \    }\n    $dot_pos_6 = strpos($file_name, '.', $dot_pos_5 + 1);\n    if ($dot_pos_6\
    \ === false) {\n        return 'No';\n    }\n    $dot_pos_7 = strpos($file_name,\
    \ '.', $dot_pos_6 + 1);\n    if ($dot_pos_7 === false) {\n        return 'No';\n\
    \    }\n    $dot_pos_8 = strpos($file_name, '.', $dot_pos_7 + 1);\n    if ($dot_pos_8\
    \ === false) {\n        return 'No';\n    }\n    $dot_pos_9 = strpos($file_name,\
    \ '.', $dot_pos_8 + 1);\n    if ($dot_pos_9 === false) {\n        return 'No';\n\
    \    }\n    $dot_pos_10 = strpos($file_name\nfunction candidate(...$args) {\n\
    \    return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdo9c59a5.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) != 'a' || substr($file_name, 0, 1) != 'b' || substr($file_name, 0, 1) !=\
    \ 'c' || substr($file_name, 0, 1) != 'd' || substr($file_name, 0, 1) != 'e' ||\
    \ substr($file_name, 0, 1) != 'f' || substr($file_name, 0, 1) != 'g' || substr($file_name,\
    \ 0, 1) != 'h' || substr($file_name, 0, 1) != 'i' || substr($file_name, 0, 1)\
    \ != 'j' || substr($file_name, 0, 1) != 'k' || substr($file_name, 0, 1) != 'l'\
    \ || substr($file_name, 0, 1) != 'm' || substr($file_name, 0, 1) != 'n' || substr($file_name,\
    \ 0, 1) != 'o' || substr($file_name, 0, 1) != 'p' || substr($file_name, 0, 1)\
    \ != 'q' || substr($file_name, 0, 1) != 'r' || substr($file_name, 0, 1) != 's'\
    \ || substr($file_name, 0, 1) != 't' || substr($file_name, 0, 1) != 'u' || substr($file_name,\
    \ 0, 1) != 'v' || substr($file_name, 0, 1) != 'w' || substr($file_name, 0, 1)\
    \ != 'x' || substr($file_name, 0, 1) != 'y' || substr($file_name, 0, 1) != 'z')\
    \ {\n        return 'No';\n    }\n    if (strpos($file_name, '.') !== false) {\n\
    \        $file_name = explode('.', $file_name);\n        $file_name_length = count($file_name);\n\
    \        if ($file_name_length < 2 || $file_name_length > 3) {\n            return\
    \ 'No';\n        }\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6h46ahw.php:39\n\
    Stack trace:\n#0 /tmp/tmpn6h46ahw.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpn6h46ahw.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96vyrq_t.php:22\n\
    Stack trace:\n#0 /tmp/tmp96vyrq_t.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp96vyrq_t.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    if (strlen($file_name)\
    \ <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === false)\
    \ {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === 0) {\n \
    \       return 'No';\n    }\n    $file_parts = explode('.', $file_name);\n   \
    \ if (count($file_parts) != 2) {\n        return 'No';\n    }\n    if ($file_parts[0]\
    \ !== '' && $file_parts[0][0] !== 'a' && $file_parts[0][0] !== 'A') {\n      \
    \  return 'No';\n    }\n    $file_parts[1] = strtolower($file_parts[1]);\n   \
    \ if (in_array($file_parts[1], $valid_extensions)) {\n        return 'Yes';\n\
    \    }\n    return 'No';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsh_4v7cp.php:43\n\
    Stack trace:\n#0 /tmp/tmpsh_4v7cp.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpsh_4v7cp.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', 0, $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if (preg_match('/[^a-z]/', $first_letter)) {\n        return 'No';\n    }\n\
    \    $dot_position = strpos($file_name, '.', $first_letter_position + 1);\n  \
    \  if ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $first_letter_position + 1);\n    if ($dot_position\
    \ === false) {\n        return 'No';\n    }\n    $dot_position = strpos($file_name,\
    \ '.', $first_letter_position + 1);\n    if ($dot_position === false) {\n    \
    \    return 'No';\n    }\n    $dot_position = strpos($file_name, '.', $first_letter_position\
    \ + 1);\n    if ($dot_position === false) {\n        return 'No';\n    }\n   \
    \ $dot_position = strpos($file_name, '.', $first_letter_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $first_letter_position + 1);\n    if ($dot_position\
    \ === false) {\n        return 'No';\n    }\n    $dot_position = strpos($file_name,\
    \ '.', $first_letter_position + 1);\n    if ($dot_position === false) {\n    \
    \    return 'No';\n    }\n    $dot_position = strpos($file_name, '.', $first_letter_position\
    \ + 1);\n    if ($dot_position === false) {\n        return 'No';\n    }\n   \
    \ $dot_position = strpos($file_name, '.', $first_letter_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $first_letter_position + 1);\n    if ($dot_position\
    \ === false) {\n        return 'No';\n    }\n    $dot_position = strpos($file_name,\
    \ '.', $first_letter_position + 1);\n    if ($dot_position === false) {\n    \
    \    return 'No';\n    }\n    $dot_position = strpos($file_name, '.', $first_letter_position\
    \ + 1);\n    if ($dot_position === false) {\n        return 'No';\n    }\n   \
    \ $dot_position = strpos($file_name, '.', $first_letter_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $first_letter_position + 1);\n    if ($dot_position\
    \ === false) {\n        return 'No';\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8_2clp1j.php on line 120\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code goes here\n  $file_name = preg_replace('/[^0-9\\.]/', '',\
    \ $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \  $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n  $file_name = preg_replace('/\\.[^\\.\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpoe1opc8e.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^A-Z]/', '', $file_name);\n    $file_name =\
    \ preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^0-9a-zA-Z]/', '', $file_name);\n\
    \    $file_name = \nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpviyyji1x.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c'\
    \ && $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $first_letter_position + 1);\n\
    \    if ($dot_position === false) {\n        return 'No';\n    }\n    $extension\
    \ = strtolower(substr($file_name, $dot_position));\n    if ($extension != 'txt'\
    \ && $extension != 'exe' && $extension != 'dll') {\n        return 'No';\n   \
    \ }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu202qkra.php:47\n\
    Stack trace:\n#0 /tmp/tmpu202qkra.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpu202qkra.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length_minus_1\
    \ = $file_name_length - 1;\n    $file_name_length_minus_2 = $file_name_length_minus_1\
    \ - 1;\n    $file_name_length_minus_3 = $file_name_length_minus_2 - 1;\n    $file_name_length_minus_4\
    \ = $file_name_length_minus_3 - 1;\n    $file_name_length_minus_5 = $file_name_length_minus_4\
    \ - 1;\n    $file_name_length_minus_6 = $file_name_length_minus_5 - 1;\n    $file_name_length_minus_7\
    \ = $file_name_length_minus_6 - 1;\n    $file_name_length_minus_8 = $file_name_length_minus_7\
    \ - 1;\n    $file_name_length_minus_9 = $file_name_length_minus_8 - 1;\n    $file_name_length_minus_10\
    \ = $file_name_length_minus_9 - 1;\n    $file_name_length_minus_11 = $file_name_length_minus_10\
    \ - 1;\n    $file_name_length_minus_12 = $file_name_length_minus_11 - 1;\n   \
    \ $file_name_length_minus_13 = $file_name_length_minus_12 - 1;\n    $file_name_length_minus_14\
    \ = $file_name_length_minus_13 - 1;\n    $file_name_length_minus_15 = $file_name_length_minus_14\
    \ - 1;\n    $file_name_length_minus_16 = $file_name_length_minus_15 - 1;\n   \
    \ $file_name_length_minus_17 = $file_name_length_minus_16 - 1;\n    $file_name_length_minus_18\
    \ = $file_name_length_minus_17 - 1;\n    $file_name_length_minus_19 = $file_name_length_minus_18\
    \ - 1;\n    $file_name_length_minus_20 = $file_name_length_minus_19 - 1;\n   \
    \ $file_name_length_minus_21 = $file_name_length_minus_20 - 1;\n    $file_name_length_minus_22\
    \ = $file_name_length_minus_21 - 1;\n    $file_name_length_minus_23 = $file_name_length_minus_22\
    \ - 1;\n    $file_name_length_minus_24 = $file_name_length_minus_23 - 1;\n   \
    \ $file_name_length_minus_25 = $file_name_length_minus_24 - 1;\n    $file_name_length_minus_26\
    \ = $file_name_length_minus_25 - 1;\n    $file_name_length_minus_27 = $file_name_length_minus_26\
    \ - 1;\n    $file_name_length_minus_28 = $file_name_length_minus_27 - 1;\n   \
    \ $file_name_length_minus_29 = $file_name_length_minus_28 - 1;\n    $file_name_length_minus_30\
    \ = $file_name_length_minus_29 - 1;\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpoqnhgebu.php on line 79\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwilu8edn.php:22\n\
    Stack trace:\n#0 /tmp/tmpwilu8edn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpwilu8edn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $dot_count = 0;\n    $dot_position\
    \ = 0;\n    $dot_position_count = 0;\n    $letters_position = 0;\n    $letters_position_count\
    \ = 0;\n    $letters_position_count2 = 0;\n    $letters_position_count3 = 0;\n\
    \    $letters_position_count4 = 0;\n    $letters_position_count5 = 0;\n    $letters_position_count6\
    \ = 0;\n    $letters_position_count7 = 0;\n    $letters_position_count8 = 0;\n\
    \    $letters_position_count9 = 0;\n    $letters_position_count10 = 0;\n    $letters_position_count11\
    \ = 0;\n    $letters_position_count12 = 0;\n    $letters_position_count13 = 0;\n\
    \    $letters_position_count14 = 0;\n    $letters_position_count15 = 0;\n    $letters_position_count16\
    \ = 0;\n    $letters_position_count17 = 0;\n    $letters_position_count18 = 0;\n\
    \    $letters_position_count19 = 0;\n    $letters_position_count20 = 0;\n    $letters_position_count21\
    \ = 0;\n    $letters_position_count22 = 0;\n    $letters_position_count23 = 0;\n\
    \    $letters_position_count24 = 0;\n    $letters_position_count25 = 0;\n    $letters_position_count26\
    \ = 0;\n    $letters_position_count27 = 0;\n    $letters_position_count28 = 0;\n\
    \    $letters_position_count29 = 0;\n    $letters_position_count30 = 0;\n    $letters_position_count31\
    \ = 0;\n    $letters_position_count32 = 0;\n    $letters_position_count33 = 0;\n\
    \    $letters_position_count34 = 0;\n    $letters_position_count35 = 0;\n    $letters_position_count36\
    \ = 0;\n    $letters_position_count37 = 0;\n    $letters_position_count38 = 0;\n\
    \    $letters_position_count39 = 0;\n    $letters_position_count40 = 0;\n    $letters_position_count41\
    \ = 0;\n    $letters_position_count42 = 0;\n    $letters_position_count43 = 0;\n\
    \    $letters_position_count44 = 0;\n    $letters_position_count45 = 0;\n    $letters_position_count46\
    \ = 0;\n    $letters_position_count47 = 0;\n    $letters_position_count48 = 0;\n\
    \    $letters_position_count49 = 0;\n    $letters_position_count50 = 0;\n    $letters_position_count51\
    \ = 0;\n    $letters_position_count52 = 0;\n    $letters_position_count53 = 0;\n\
    \    $letters_position_count54 = 0;\n    $letters_position_count55 = 0;\n    $letters_position_count56\
    \ = 0;\n    $letters_position_count57 = 0;\n    $letters_position_count58 = 0;\n\
    \    $letters_position_count59 = 0;\n    $letters_position_count60 = 0;\n    $letters_position_count61\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr0_7uflx.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 10) {\n    return 'No';\n  }\n  $file_extension = substr($file_name,\
    \ strrpos($file_name, '.') + 1);\n  if ($file_extension == 'txt' || $file_extension\
    \ == 'exe' || $file_extension == 'dll') {\n    return 'Yes';\n  }\n  return 'No';\n\
    }\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26x7m_4s.php:30\n\
    Stack trace:\n#0 /tmp/tmp26x7m_4s.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp26x7m_4s.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsv8ry9dj.php:23\n\
    Stack trace:\n#0 /tmp/tmpsv8ry9dj.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpsv8ry9dj.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === false) {\n        return 'No';\n    }\n    $extension = strtolower(substr($file_name,\
    \ $dot_position + 1));\n    if ($extension != 'txt' && $extension != 'exe' &&\
    \ $extension != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpami4u4ua.php:42\n\
    Stack trace:\n#0 /tmp/tmpami4u4ua.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpami4u4ua.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '',\
    \ $file_name);\n    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5g21raoo.php on line 81\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf981ihoz.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $dot_position_length = strlen($dot_position);\n    if ($dot_position_length\
    \ < 1 || $dot_position_length > 3) {\n        return 'No';\n    }\n    $first_letter_position\
    \ = strpos($file_name, '.', $dot_position);\n    if ($first_letter_position ===\
    \ FALSE) {\n        return 'No';\n    }\n    $first_letter_position_length = strlen($first_letter_position);\n\
    \    if ($first_letter_position_length < 1 || $first_letter_position_length >\
    \ 1) {\n        return 'No';\n    }\n    $first_letter = strtolower(substr($file_name,\
    \ 0, $first_letter_position));\n    if ($first_letter != 'a' && $first_letter\
    \ != 'b' && $first_letter != 'c' && $first_letter != 'd' && $first_letter != 'e'\
    \ && $first_letter != 'f' && $first_letter != 'g' && $first_letter != 'h' && $first_letter\
    \ != 'i' && $first_letter != 'j' && $first_letter != 'k' && $first_letter != 'l'\
    \ && $first_letter != 'm' && $first_letter != 'n' && $first_letter != 'o' && $first_letter\
    \ != 'p' && $first_letter != 'q' && $first_letter != 'r' && $first_letter != 's'\
    \ && $first_letter != 't' && $first_letter != 'u' && $first_letter != 'v' && $first_letter\
    \ != 'w' && $first_letter != 'x' && $first_letter != 'y' && $first_letter != 'z')\
    \ {\n        return 'No';\n    }\n    $second_letter_position = strpos($file_name,\
    \ '.', $first_letter_position);\n    if ($second_letter_position === FALSE) {\n\
    \        return 'No';\n    }\n    $second_letter_position_length = strlen($second_letter_position);\n\
    \    if ($second_letter_position_length < 1 || $second_letter_position_length\
    \ > 1) {\n        return 'No';\n    }\n    $second_letter = strtolower(substr($file_name,\
    \ $first_letter_position + 1, $second_letter_position_length));\n    if ($second_letter\
    \ != 'txt' && $second_letter != 'exe' && $second_letter != 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx641p5dy.php:58\n\
    Stack trace:\n#0 /tmp/tmpx641p5dy.php(86): test()\n#1 {main}\n  thrown in /tmp/tmpx641p5dy.php\
    \ on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpewtkd8c6.php on line 83\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count > 3 || $file_name_array_count\
    \ < 1 || $file_name_array_count != 1 && $file_name_array[0] != '')\n        return\
    \ 'No';\n    $file_name_array_count = count($file_name_array);\n    for ($i =\
    \ 0; $i < $file_name_array_count; $i++) {\n        if (!preg_match('/^[a-zA-Z]/',\
    \ $file_name_array[$i]))\n            return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8df5zh1s.php:32\n\
    Stack trace:\n#0 /tmp/tmp8df5zh1s.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp8df5zh1s.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.');\n    $dot_position_2 = strpos($file_name,\
    \ '.', 1);\n    if ($dot_position === FALSE || $dot_position_2 === FALSE) {\n\
    \        return 'No';\n    }\n    $dot_position++;\n    $dot_position_2++;\n \
    \   if ($dot_position > $dot_position_2) {\n        return 'No';\n    }\n    $dot_position_2\
    \ = strpos($file_name, '.', 1);\n    if ($dot_position_2 === FALSE) {\n      \
    \  return 'No';\n    }\n    $dot_position_2++;\n    $dot_position_3 = strpos($file_name,\
    \ '.', 2);\n    if ($dot_position_3 === FALSE) {\n        return 'No';\n    }\n\
    \    $dot_position_3++;\n    if ($dot_position_2 > $dot_position_3) {\n      \
    \  return 'No';\n    }\n    $dot_position_3 = strpos($file_name, '.', 2);\n  \
    \  if ($dot_position_3 === FALSE) {\n        return 'No';\n    }\n    $dot_position_3++;\n\
    \    if ($dot_position_3 > $dot_position_2) {\n        return 'No';\n    }\n \
    \   return 'Yes';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9uejs8f.php:65\n\
    Stack trace:\n#0 /tmp/tmps9uejs8f.php(93): test()\n#1 {main}\n  thrown in /tmp/tmps9uejs8f.php\
    \ on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $pattern = '/^[0-9]{3}\\.[a-z][a-z]$/i';\n  return preg_match($pattern,\
    \ $file_name);\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvwem9j2d.php:23\n\
    Stack trace:\n#0 /tmp/tmpvwem9j2d.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpvwem9j2d.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp68s9pjdn.php:22\n\
    Stack trace:\n#0 /tmp/tmp68s9pjdn.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp68s9pjdn.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    if (strlen($file_name)\
    \ > 3 || strpos($file_name, '.') === false || strpos($file_name[0], 'a') === false\
    \ || strpos($file_name[0], 'z') === false || strpos($file_name[1], '.') === false\
    \ || strpos($file_name[1], 'a') === false || strpos($file_name[1], 'z') === false)\
    \ {\n        return 'No';\n    } else {\n        return 'Yes';\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0_0_zon.php:27\n\
    Stack trace:\n#0 /tmp/tmpd0_0_zon.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpd0_0_zon.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = '/^[0-9]{3}\\.[a-z][a-z]$/i';\n    return preg_match($pattern,\
    \ $file_name) ? \"Yes\" : \"No\";\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcad7jwy2.php:23\n\
    Stack trace:\n#0 /tmp/tmpcad7jwy2.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpcad7jwy2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 9) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if (preg_match('/[^a-z]/', $first_letter)) {\n        return 'No';\n    }\n\
    \    $last_letter = strtolower(substr($file_name, $first_letter_position + 1));\n\
    \    if (preg_match('/[^a-z]/', $last_letter)) {\n        return 'No';\n    }\n\
    \    if (in_array($last_letter, array('txt', 'exe', 'dll'))) {\n        return\
    \ 'Yes';\n    }\n    return 'No';\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6uo_vbvf.php:45\n\
    Stack trace:\n#0 /tmp/tmp6uo_vbvf.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp6uo_vbvf.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $dot_position++;\n    $first_letter_position = strpos($file_name,\
    \ '.', $dot_position);\n    if ($first_letter_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position++;\n    $first_letter_character = $file_name[$first_letter_position];\n\
    \    if (!(preg_match('/^[a-z_]$/', $first_letter_character))) {\n        return\
    \ 'No';\n    }\n    $second_letter_position = strpos($file_name, '.', $first_letter_position);\n\
    \    if ($second_letter_position === false) {\n        return 'No';\n    }\n \
    \   $second_letter_character = $file_name[$second_letter_position];\n    if (!(preg_match('/^[a-z]$/',\
    \ $second_letter_character))) {\n        return 'No';\n    }\n    $third_letter_position\
    \ = strpos($file_name, '.', $second_letter_position);\n    if ($third_letter_position\
    \ === false) {\n        return 'No';\n    }\n    $third_letter_character = $file_name[$third_letter_position];\n\
    \    if (!(preg_match('/^[\\.]$/', $third_letter_character))) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppnzuppsg.php:56\n\
    Stack trace:\n#0 /tmp/tmppnzuppsg.php(84): test()\n#1 {main}\n  thrown in /tmp/tmppnzuppsg.php\
    \ on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyq2veaw4.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === FALSE) {\n        return 'No';\n    }\n  \
    \  $first_letter = strtolower(substr($file_name, 0, $first_letter_position));\n\
    \    if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c'\
    \ && $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $last_letter = strtolower(substr($file_name, $dot_position + 1));\n\
    \    if ($last_letter != 'txt' && $last_letter != 'exe' && $last_letter != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1j7tc3c.php:43\n\
    Stack trace:\n#0 /tmp/tmpl1j7tc3c.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpl1j7tc3c.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ if (strlen($file_name) <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (strpos($file_name, '.')\
    \ !== 0 && substr($file_name, 0, 1) != 'a' && substr($file_name, 0, 1) != 'A')\
    \ {\n        return 'No';\n    }\n    if (in_array(substr($file_name, strpos($file_name,\
    \ '.') + 1), array('txt', 'exe', 'dll'))) {\n        return 'Yes';\n    }\n  \
    \  return 'No';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptk8x7wyd.php:36\n\
    Stack trace:\n#0 /tmp/tmptk8x7wyd.php(64): test()\n#1 {main}\n  thrown in /tmp/tmptk8x7wyd.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-z0-9\\.]/', '', $file_name);\n    if\
    \ (strlen($file_name) <= 3 || strpos($file_name, '.') === false || strpos($file_name[0],\
    \ 'a') === false || strpos($file_name[0], 'z') === false || strpos($file_name[1],\
    \ 'a') === false || strpos($file_name[1], 'z') === false || strpos($file_name[2],\
    \ '.') === false || strpos($file_name[2], 't') === false || strpos($file_name[2],\
    \ 'e') === false || strpos($file_name[2], 'x') === false || strpos($file_name[2],\
    \ 't') === false || strpos($file_name[2], '.') === false || strpos($file_name[2],\
    \ 'e') === false || strpos($file_name[2], 'd') === false) {\n        return 'No';\n\
    \    } else {\n        return 'Yes';\n    }\n}\nfunction candidate(...$args) {\n\
    \    return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpprbyr7za.php:27\n\
    Stack trace:\n#0 /tmp/tmpprbyr7za.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpprbyr7za.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    // Your code here\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name);\n    $file_name = preg_replace('/[^a-zA-Z]/', '', $file_name);\n\
    \    $file_name = preg_replace('/[^a-zA-Z]/\nfunction candidate(...$args) {\n\
    \    return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppp5bp5xz.php on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) === '-') {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .]/', $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/\\.[^\\\
    .\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplsjugbfy.php on line 91\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8vkz2aim.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count > 3 || $file_name_array_count\
    \ < 1 || $file_name_array[0] === '' || preg_match('/^[a-zA-z]/', $file_name_array[0])\
    \ === 0 || in_array($file_name_array[1], ['txt', 'exe', 'dll']) === false) {\n\
    \        return 'No';\n    } else {\n        return 'Yes';\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojn94e31.php:33\n\
    Stack trace:\n#0 /tmp/tmpojn94e31.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpojn94e31.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name_length = strlen($file_name);\n\
    \    $file_name_length = strlen($file_name);\n    $file_name\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdftiwfbv.php on line 67\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name\
    \ = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\\
    .[^\\.]+$/', '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/',\
    \ '', $file_name);\n    $file_name = preg_replace('/\\.[^\\.]+$/', '', $file_name);\n\
    \    $file_name = \nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_0__s5ub.php on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = \"/^[0-9]{3}\\.txt$/\";\n    if (preg_match($pattern, $file_name))\
    \ {\n        $pattern = \"/^[a-zA-Z][a-zA-Z0-9\\.]*\\.exe$/\";\n        if (preg_match($pattern,\
    \ $file_name)) {\n            $pattern = \"/^[a-zA-Z][a-zA-Z0-9\\.]*\\.dll$/\"\
    ;\n            if (preg_match($pattern, $file_name)) {\n                return\
    \ \"Yes\";\n            } else {\n                return \"No\";\n           \
    \ }\n        } else {\n            return \"No\";\n        }\n    } else {\n \
    \       return \"No\";\n    }\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0icfaivf.php:37\n\
    Stack trace:\n#0 /tmp/tmp0icfaivf.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp0icfaivf.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_length = strlen($file_name);\n  if ($file_name_length < 3 ||\
    \ $file_name_length > 10) {\n    return 'No';\n  }\n  $dot_position = strpos($file_name,\
    \ '.');\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $first_letter\
    \ = strtolower(substr($file_name, 0, 1));\n  if ($first_letter != 'a' && $first_letter\
    \ != 'b' && $first_letter != 'c' && $first_letter != 'd' && $first_letter != 'e'\
    \ && $first_letter != 'f' && $first_letter != 'g' && $first_letter != 'h' && $first_letter\
    \ != 'i' && $first_letter != 'j' && $first_letter != 'k' && $first_letter != 'l'\
    \ && $first_letter != 'm' && $first_letter != 'n' && $first_letter != 'o' && $first_letter\
    \ != 'p' && $first_letter != 'q' && $first_letter != 'r' && $first_letter != 's'\
    \ && $first_letter != 't' && $first_letter != 'u' && $first_letter != 'v' && $first_letter\
    \ != 'w' && $first_letter != 'x' && $first_letter != 'y' && $first_letter != 'z')\
    \ {\n    return 'No';\n  }\n  $dot_position = strpos($file_name, '.', $dot_position\
    \ + 1);\n  if ($dot_position === FALSE) {\n    return 'No';\n  }\n  $extension\
    \ = strtolower(substr($file_name, $dot_position));\n  if ($extension != 'txt'\
    \ && $extension != 'exe' && $extension != 'dll') {\n    return 'No';\n  }\n  return\
    \ 'Yes';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7h0j8oo.php:42\n\
    Stack trace:\n#0 /tmp/tmp_7h0j8oo.php(70): test()\n#1 {main}\n  thrown in /tmp/tmp_7h0j8oo.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $dot_position++;\n    $first_letter_position = strpos($file_name,\
    \ '.', $dot_position);\n    if ($first_letter_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $first_letter_position++;\n    $first_letter = strtolower(substr($file_name,\
    \ $first_letter_position, 1));\n    if ($first_letter != 'a' && $first_letter\
    \ != 'b' && $first_letter != 'c' && $first_letter != 'd' && $first_letter != 'e'\
    \ && $first_letter != 'f' && $first_letter != 'g' && $first_letter != 'h' && $first_letter\
    \ != 'i' && $first_letter != 'j' && $first_letter != 'k' && $first_letter != 'l'\
    \ && $first_letter != 'm' && $first_letter != 'n' && $first_letter != 'o' && $first_letter\
    \ != 'p' && $first_letter != 'q' && $first_letter != 'r' && $first_letter != 's'\
    \ && $first_letter != 't' && $first_letter != 'u' && $first_letter != 'v' && $first_letter\
    \ != 'w' && $first_letter != 'x' && $first_letter != 'y' && $first_letter != 'z')\
    \ {\n        return 'No';\n    }\n    $second_letter_position = strpos($file_name,\
    \ '.', $first_letter_position);\n    if ($second_letter_position === FALSE) {\n\
    \        return 'No';\n    }\n    $second_letter_position++;\n    $second_letter\
    \ = strtolower(substr($file_name, $second_letter_position, 1));\n    if ($second_letter\
    \ != 'a' && $second_letter != 'b' && $second_letter != 'c' && $second_letter !=\
    \ 'd' && $second_letter != 'e' && $second_letter != 'f' && $second_letter != 'g'\
    \ && $second_letter != 'h' && $second_letter != 'i' && $second_letter != 'j' &&\
    \ $second_letter != 'k' && $second_letter != 'l' && $second_letter != 'm' && $second_letter\
    \ != 'n' && $second_letter != 'o' && $second_letter != 'p' && $second_letter !=\
    \ 'q' && $second_letter != 'r' && $second_letter != 's' && $second_letter != 't'\
    \ && $second_letter != 'u' && $second_letter != 'v' && $second_letter != 'w' &&\
    \ $second_letter != 'x' && $second_letter != 'y' && $second_letter != 'z') {\n\
    \        return 'No';\n    }\n    $third_letter_position = strpos($file_name,\
    \ '.', $second_letter_position);\n    if ($\nfunction candidate(...$args) {\n\
    \    return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgdb0vb0j.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcye5b72v.php:22\n\
    Stack trace:\n#0 /tmp/tmpcye5b72v.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpcye5b72v.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^a-zA-Z0-9\\.]/', '', $file_name);\n   \
    \ if (strlen($file_name) <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (strpos($file_name, '.')\
    \ === 0) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === 0\
    \ && $file_name[0] < 'a' || $file_name[0] > 'z') {\n        return 'No';\n   \
    \ }\n    if (strpos($file_name, '.') === 0 && $file_name[0] < 'A' || $file_name[0]\
    \ > 'Z') {\n        return 'No';\n    }\n    if (in_array(substr($file_name, 0,\
    \ strpos($file_name, '.')), [\n        'txt', 'exe', 'dll'\n    ])) {\n      \
    \  return 'Yes';\n    }\n    return 'No';\n}\nfunction candidate(...$args) {\n\
    \    return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpds_65fek.php:43\n\
    Stack trace:\n#0 /tmp/tmpds_65fek.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpds_65fek.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count > 3) {\n        return\
    \ 'No';\n    }\n    if ($file_name_array_count < 1) {\n        return 'No';\n\
    \    }\n    if ($file_name_array[0] === '') {\n        return 'No';\n    }\n \
    \   if (preg_match('/^[a-z]/', $file_name_array[0])) {\n        return 'No';\n\
    \    }\n    $dot_count = substr_count($file_name, '.');\n    if ($dot_count <\
    \ 1) {\n        return 'No';\n    }\n    if ($dot_count > 1) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower($file_name_array[0]);\n    if ($first_letter\
    \ != 'a' && $first_letter != 'b' && $first_letter != 'c' && $first_letter != 'd'\
    \ && $first_letter != 'e' && $first_letter != 'f' && $first_letter != 'g' && $first_letter\
    \ != 'h' && $first_letter != 'i' && $first_letter != 'j' && $first_letter != 'k'\
    \ && $first_letter != 'l' && $first_letter != 'm' && $first_letter != 'n' && $first_letter\
    \ != 'o' && $first_letter != 'p' && $first_letter != 'q' && $first_letter != 'r'\
    \ && $first_letter != 's' && $first_letter != 't' && $first_letter != 'u' && $first_letter\
    \ != 'v' && $first_letter != 'w' && $first_letter != 'x' && $first_letter != 'y'\
    \ && $first_letter != 'z') {\n        return 'No';\n    }\n    $last_letter =\
    \ strtolower($file_name_array[$file_name_array_count - 1]);\n    if ($last_letter\
    \ != 'a' && $last_letter != 'b' && $last_letter != 'c' && $last_letter != 'd'\
    \ && $last_letter != 'e' && $last_letter != 'f' && $last_letter != 'g' && $last_letter\
    \ != 'h' && $last_letter != 'i' && $last_letter != 'j' && $last_letter != 'k'\
    \ && $last_letter != 'l' && $last_letter != 'm' && $last_letter != 'n' && $last_letter\
    \ != 'o' && $last_letter != 'p' && $last_letter != 'q' && $last_letter != 'r'\
    \ && $last_letter != 's' && $last_letter != 't' && $last_letter != 'u' && $last_letter\
    \ != 'v' && $last_letter != 'w' && $last_letter != 'x' && $last_letter != 'y'\
    \ && $last_letter != 'z') {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivlru2ud.php:51\n\
    Stack trace:\n#0 /tmp/tmpivlru2ud.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpivlru2ud.php\
    \ on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $file_name_array\
    \ = explode('.', $file_name);\n    if (count($file_name_array) != 2) {\n     \
    \   return 'No';\n    }\n    $file_name_array_first_letter = strtoupper(substr($file_name_array[0],\
    \ 0, 1));\n    if ($file_name_array_first_letter != 'A' && $file_name_array_first_letter\
    \ != 'a') {\n        return 'No';\n    }\n    $file_name_array_second_letter =\
    \ strtoupper(substr($file_name_array[0], 1));\n    if ($file_name_array_second_letter\
    \ != 'Z' && $file_name_array_second_letter != 'z') {\n        return 'No';\n \
    \   }\n    $file_name_array_third_letter = strtoupper(substr($file_name_array[1],\
    \ 0, 1));\n    if ($file_name_array_third_letter != 'A' && $file_name_array_third_letter\
    \ != 'a') {\n        return 'No';\n    }\n    $file_name_array_fourth_letter =\
    \ strtoupper(substr($file_name_array[1], 1));\n    if ($file_name_array_fourth_letter\
    \ != 'Z' && $file_name_array_fourth_letter != 'z') {\n        return 'No';\n \
    \   }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmo4ya21b.php:46\n\
    Stack trace:\n#0 /tmp/tmpmo4ya21b.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpmo4ya21b.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    if (strlen($file_name)\
    \ <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === false)\
    \ {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === 0 && preg_match('/^[a-z]/',\
    \ $file_name)) {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/',\
    \ $file_name)) {\n        return 'Yes';\n    }\n    return 'No';\n}\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplzq_yj_q.php:35\n\
    Stack trace:\n#0 /tmp/tmplzq_yj_q.php(63): test()\n#1 {main}\n  thrown in /tmp/tmplzq_yj_q.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ncd2eva.php:22\n\
    Stack trace:\n#0 /tmp/tmp5ncd2eva.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp5ncd2eva.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_43r0t9.php:22\n\
    Stack trace:\n#0 /tmp/tmp6_43r0t9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp6_43r0t9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strtoupper(substr($file_name, 0,\
    \ 1));\n    if ($first_letter_position !== 'A' && $first_letter_position !== 'a')\
    \ {\n        return 'No';\n    }\n    $dot_position = strpos($file_name, '.');\n\
    \    if ($dot_position === false) {\n        return 'No';\n    }\n    $dot_position_2\
    \ = strpos($file_name, '.', 1);\n    if ($dot_position_2 === false) {\n      \
    \  return 'No';\n    }\n    $dot_position_3 = strpos($file_name, '.', 2);\n  \
    \  if ($dot_position_3 === false) {\n        return 'No';\n    }\n    $dot_position_4\
    \ = strpos($file_name, '.', 3);\n    if ($dot_position_4 === false) {\n      \
    \  return 'No';\n    }\n    $dot_position_5 = strpos($file_name, '.', 4);\n  \
    \  if ($dot_position_5 === false) {\n        return 'No';\n    }\n    $dot_position_6\
    \ = strpos($file_name, '.', 5);\n    if ($dot_position_6 === false) {\n      \
    \  return 'No';\n    }\n    $dot_position_7 = strpos($file_name, '.', 6);\n  \
    \  if ($dot_position_7 === false) {\n        return 'No';\n    }\n    $dot_position_8\
    \ = strpos($file_name, '.', 7);\n    if ($dot_position_8 === false) {\n      \
    \  return 'No';\n    }\n    $dot_position_9 = strpos($file_name, '.', 8);\n  \
    \  if ($dot_position_9 === false) {\n        return 'No';\n    }\n    $dot_position_10\
    \ = strpos($file_name, '.', 9);\n    if ($dot_position_10 === false) {\n     \
    \   return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args) {\n\
    \    return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyu0gr3ch.php:74\n\
    Stack trace:\n#0 /tmp/tmpyu0gr3ch.php(102): test()\n#1 {main}\n  thrown in /tmp/tmpyu0gr3ch.php\
    \ on line 74\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = '/^[0-9]{3}\\.[a-z][a-z]$/';\n    return preg_match($pattern,\
    \ $file_name);\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4de5artl.php:24\n\
    Stack trace:\n#0 /tmp/tmp4de5artl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp4de5artl.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n  return preg_match('/^[0-9]/',\
    \ $file_name) && preg_match('/\\.[^\\.]*$/', $file_name) && preg_match('/^[a-z]/',\
    \ $file_name) && preg_match('/^[A-Z]/', $file_name);\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9ttwgk6.php:23\n\
    Stack trace:\n#0 /tmp/tmpw9ttwgk6.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpw9ttwgk6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $pattern = '/^[0-9]{1,3}\\.[a-z]{3,4}$/i';\n    return preg_match($pattern,\
    \ $file_name);\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3z12ua2p.php:23\n\
    Stack trace:\n#0 /tmp/tmp3z12ua2p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3z12ua2p.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmploovsfpy.php:22\n\
    Stack trace:\n#0 /tmp/tmploovsfpy.php(50): test()\n#1 {main}\n  thrown in /tmp/tmploovsfpy.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) !== 'a' || substr($file_name, 0, 1) !== 'A') {\n        return 'No';\n  \
    \  }\n    if (strpos($file_name, '.') === false || strpos($file_name, '.') > $file_name_length\
    \ - 1) {\n        return 'No';\n    }\n    $dot_position = strpos($file_name,\
    \ '.');\n    if ($dot_position === false || $dot_position > $file_name_length\
    \ - 1) {\n        return 'No';\n    }\n    $dot_position_2 = strpos($file_name,\
    \ '.', $dot_position + 1);\n    if ($dot_position_2 === false || $dot_position_2\
    \ > $file_name_length - 1) {\n        return 'No';\n    }\n    $dot_position_3\
    \ = strpos($file_name, '.', $dot_position_2 + 1);\n    if ($dot_position_3 ===\
    \ false || $dot_position_3 > $file_name_length - 1) {\n        return 'No';\n\
    \    }\n    $dot_position_4 = strpos($file_name, '.', $dot_position_3 + 1);\n\
    \    if ($dot_position_4 === false || $dot_position_4 > $file_name_length - 1)\
    \ {\n        return 'No';\n    }\n    $dot_position_5 = strpos($file_name, '.',\
    \ $dot_position_4 + 1);\n    if ($dot_position_5 === false || $dot_position_5\
    \ > $file_name_length - 1) {\n        return 'No';\n    }\n    $dot_position_6\
    \ = strpos($file_name, '.', $dot_position_5 + 1);\n    if ($dot_position_6 ===\
    \ false || $dot_position_6 > $file_name_length - 1) {\n        return 'No';\n\
    \    }\n    $dot_position_7 = strpos($file_name, '.', $dot_position_6 + 1);\n\
    \    if ($dot_position_7 === false || $dot_position_7 > $file_name_length - 1)\
    \ {\n        return 'No';\n    }\n    $dot_position_8 = strpos($file_name, '.',\
    \ $dot_position_7 + 1);\n    if ($dot_position_8 === false || $dot_position_8\
    \ > $file_name_length - 1) {\n        return 'No';\n    }\n    $dot_position_9\
    \ = strpos($file_name, '.', $dot_position_8 + 1);\n    if ($dot_position_9 ===\
    \ false || $dot_position_9 > $file_name_length - 1) {\n        return 'No';\n\
    \    }\n    $dot_position_10 = strpos($file_name, '.', $dot_position_9 + 1);\n\
    \    if ($dot_position_10 === false || $dot_position_10 > $file_name_length -\
    \ 1) {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8n93auga.php:75\n\
    Stack trace:\n#0 /tmp/tmp8n93auga.php(103): test()\n#1 {main}\n  thrown in /tmp/tmp8n93auga.php\
    \ on line 75\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 10) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === FALSE) {\n        return\
    \ 'No';\n    }\n    $first_letter = strtolower(substr($file_name, 0, 1));\n  \
    \  if ($first_letter != 'a' && $first_letter != 'b' && $first_letter != 'c' &&\
    \ $first_letter != 'd' && $first_letter != 'e' && $first_letter != 'f' && $first_letter\
    \ != 'g' && $first_letter != 'h' && $first_letter != 'i' && $first_letter != 'j'\
    \ && $first_letter != 'k' && $first_letter != 'l' && $first_letter != 'm' && $first_letter\
    \ != 'n' && $first_letter != 'o' && $first_letter != 'p' && $first_letter != 'q'\
    \ && $first_letter != 'r' && $first_letter != 's' && $first_letter != 't' && $first_letter\
    \ != 'u' && $first_letter != 'v' && $first_letter != 'w' && $first_letter != 'x'\
    \ && $first_letter != 'y' && $first_letter != 'z') {\n        return 'No';\n \
    \   }\n    $dot_position = strpos($file_name, '.', $dot_position + 1);\n    if\
    \ ($dot_position === FALSE) {\n        return 'No';\n    }\n    $extension = strtolower(substr($file_name,\
    \ $dot_position));\n    if ($extension != 'txt' && $extension != 'exe' && $extension\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05uae0kj.php:42\n\
    Stack trace:\n#0 /tmp/tmp05uae0kj.php(70): test()\n#1 {main}\n  thrown in /tmp/tmp05uae0kj.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code goes here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm59c4vx_.php:22\n\
    Stack trace:\n#0 /tmp/tmpm59c4vx_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpm59c4vx_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 9) {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.');\n    if ($dot_position === false) {\n        return\
    \ 'No';\n    }\n    $first_letter_position = strpos($file_name, '.', $dot_position);\n\
    \    if ($first_letter_position === false) {\n        return 'No';\n    }\n  \
    \  $first_letter_character = $file_name[$first_letter_position];\n    if ($first_letter_character\
    \ < 'a' || $first_letter_character > 'z') {\n        return 'No';\n    }\n   \
    \ $dot_position = strpos($file_name, '.', $first_letter_position);\n    if ($dot_position\
    \ === false) {\n        return 'No';\n    }\n    $dot_character = $file_name[$dot_position];\n\
    \    if ($dot_character !== '.') {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n    if ($dot_position === false)\
    \ {\n        return 'No';\n    }\n    $dot_character = $file_name[$dot_position];\n\
    \    if ($dot_character !== '.') {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n    if ($dot_position === false)\
    \ {\n        return 'No';\n    }\n    $dot_character = $file_name[$dot_position];\n\
    \    if ($dot_character !== '.') {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n    if ($dot_position === false)\
    \ {\n        return 'No';\n    }\n    $dot_character = $file_name[$dot_position];\n\
    \    if ($dot_character !== '.') {\n        return 'No';\n    }\n    $dot_position\
    \ = strpos($file_name, '.', $dot_position + 1);\n    if ($dot_position === false)\
    \ {\n        return 'No';\n    }\n    $dot_character = $file_name[$dot_position];\n\
    \    if ($dot_character !== '.') {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyuf2e7y.php:78\n\
    Stack trace:\n#0 /tmp/tmpyyuf2e7y.php(106): test()\n#1 {main}\n  thrown in /tmp/tmpyyuf2e7y.php\
    \ on line 78\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace(\"/[^a-zA-Z0-9\\.]/\", \"\", $file_name);\n\
    \    if (strlen($file_name) <= 3) {\n        return \"No\";\n    }\n    if (strpos($file_name,\
    \ \".\") === false) {\n        return \"No\";\n    }\n    if (strpos($file_name,\
    \ \".\") === 0 || substr($file_name, 0, 1) !== \".\" || substr($file_name, 0,\
    \ 1) !== \"/\" || substr($file_name, 0, 1) !== \"\\\\\") {\n        return \"\
    No\";\n    }\n    if (in_array(substr($file_name, strpos($file_name, \".\") +\
    \ 1), array(\"txt\", \"exe\", \"dll\"))) {\n        return \"Yes\";\n    }\n \
    \   return \"No\";\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvf097baf.php:35\n\
    Stack trace:\n#0 /tmp/tmpvf097baf.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpvf097baf.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqu_f7irq.php:23\n\
    Stack trace:\n#0 /tmp/tmpqu_f7irq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpqu_f7irq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name = preg_replace('/[^0-9\\.]/', '', $file_name);\n    if (strlen($file_name)\
    \ <= 3) {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === false)\
    \ {\n        return 'No';\n    }\n    if (strpos($file_name, '.') === 0) {\n \
    \       return 'No';\n    }\n    if (preg_match('/[^a-z]/i', $file_name[0]) ===\
    \ 0) {\n        return 'No';\n    }\n    if (in_array(substr($file_name, strpos($file_name,\
    \ '.') + 1), ['txt', 'exe', 'dll'])) {\n        return 'Yes';\n    }\n    return\
    \ 'No';\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6mhu4z4.php:38\n\
    Stack trace:\n#0 /tmp/tmpi6mhu4z4.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpi6mhu4z4.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt0ix0go4.php:22\n\
    Stack trace:\n#0 /tmp/tmpt0ix0go4.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpt0ix0go4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_length = strlen($file_name);\n    if ($file_name_length <\
    \ 3 || $file_name_length > 9) {\n        return 'No';\n    }\n    if (strpos($file_name,\
    \ '.') === false) {\n        return 'No';\n    }\n    if (substr($file_name, 0,\
    \ 1) === '-') {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[1]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[2]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[3]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[4]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[5]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[6]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[7]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[8]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/^[a-z]/', $file_name[9]))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65hehi_t.php:62\n\
    Stack trace:\n#0 /tmp/tmp65hehi_t.php(90): test()\n#1 {main}\n  thrown in /tmp/tmp65hehi_t.php\
    \ on line 62\n"
  stderr: ''
  exit_code: 255
  status: Exception

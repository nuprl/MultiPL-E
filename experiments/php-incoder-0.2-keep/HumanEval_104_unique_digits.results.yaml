name: HumanEval_104_unique_digits
language: php
results:
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[] = array_sum(str_split($val));\n    }\n    array_multisort($result,\
    \ SORT_DESC, $x);\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprcqypkz8.php:24\n\
    Stack trace:\n#0 /tmp/tmprcqypkz8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprcqypkz8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8npu1zi3.php:30\n\
    Stack trace:\n#0 /tmp/tmp8npu1zi3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8npu1zi3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array_count_values($x);\n    $result\
    \ = [];\n    foreach ($x as $key => $value) {\n        if ($digits[$value] ==\
    \ 1) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnlx73kx2.php:26\n\
    Stack trace:\n#0 /tmp/tmpnlx73kx2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnlx73kx2.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuc8pk31m.php:30\n\
    Stack trace:\n#0 /tmp/tmpuc8pk31m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuc8pk31m.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    $digits = array_unique($digits);\n \
    \   sort($digits);\n    return $digits;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6w3_p76_.php:25\n\
    Stack trace:\n#0 /tmp/tmp6w3_p76_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6w3_p76_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $y) {\n\
    \        $result[] = $y;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ function($x) {\n        return !is_numeric($x);\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprsl1nup_.php:27\n\
    Stack trace:\n#0 /tmp/tmprsl1nup_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprsl1nup_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyu3q_7qh.php:25\n\
    Stack trace:\n#0 /tmp/tmpyu3q_7qh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpyu3q_7qh.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y % 10;\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7l1q27v.php:29\n\
    Stack trace:\n#0 /tmp/tmpm7l1q27v.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm7l1q27v.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0bzy57l7.php:29\n\
    Stack trace:\n#0 /tmp/tmp0bzy57l7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0bzy57l7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y % 10;\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vnndrdj.php:29\n\
    Stack trace:\n#0 /tmp/tmp0vnndrdj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0vnndrdj.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $e) {\n\
    \        $result[] = intval($e % 10);\n    }\n    sort($result);\n    return array_filter($result,\
    \ 'is_numeric');\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqacaa5jt.php:24\n\
    Stack trace:\n#0 /tmp/tmpqacaa5jt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqacaa5jt.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4kz00z4.php:29\n\
    Stack trace:\n#0 /tmp/tmpn4kz00z4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn4kz00z4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $y) {\n   \
    \     $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach($result\
    \ as $y) {\n        if($y % 2 == 0) {\n            $result[] = $y;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnuj5lnnb.php:30\n\
    Stack trace:\n#0 /tmp/tmpnuj5lnnb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnuj5lnnb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 === 0) {\n        \
    \    $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0y3r_7qp.php:30\n\
    Stack trace:\n#0 /tmp/tmp0y3r_7qp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0y3r_7qp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[$n % 10] = $n % 10;\n    }\n    ksort($digits);\n    $result\
    \ = array();\n    foreach ($digits as $d) {\n        if ($d % 2 === 0) {\n   \
    \         $result[] = $d;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxg850vyq.php:30\n\
    Stack trace:\n#0 /tmp/tmpxg850vyq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxg850vyq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = array_sum(str_split($num));\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy50mpa2r.php:23\n\
    Stack trace:\n#0 /tmp/tmpy50mpa2r.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpy50mpa2r.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $n) {\n  \
    \      $result[] = $n;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $n) {\n        $result[] = strlen($n);\n    }\n    sort($result);\n\
    \    $result = [];\n    foreach ($result as $n) {\n        if ($n % 2 != 0) {\n\
    \            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73logkec.php:35\n\
    Stack trace:\n#0 /tmp/tmp73logkec.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp73logkec.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't work. Try `unique_digits([152, 323, 1422,\
    \ 10])` - it returns `[10, 1422, 152]` instead of `[10, 152]`.\n<|/ c |>\n<| c\
    \ |>\nIt returns `[10, 152]` as expected for me. Maybe you didn't test it properly?\n\
    <|/ c |>\n<| c |>\nYes, I tested it and it returns `[10, 152]` as expected. Maybe\
    \ you didn't test it properly?\n<|/ c |>\n<| c |>\nYes, I tested it and it returns\
    \ `[10, 152]` as expected. Maybe you didn't test it properly?\n<|/ c |>\n<| c\
    \ |>\nYes, I tested it and it returns `[10, 152]` as expected. Maybe you didn't\
    \ test it properly?\n<|/ c |>\n<| a tags=php,algorithm |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmncaxfqv.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $n) {\n\
    \        $result[] = array_sum(str_split($n));\n    }\n    sort($result);\n  \
    \  return array_filter($result, function($n) {\n        return $n % 2 == 0;\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_zcfxtm.php:26\n\
    Stack trace:\n#0 /tmp/tmpm_zcfxtm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpm_zcfxtm.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach($x as $i) {\n\
    \        $result[] = $i;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ 'is_numeric');\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis doesn't work. `unique_digits([15, 33, 1422, 1])` returns `[1, 15,\
    \ 33]` instead of `[1, 15, 33]`.\n<|/ c |>\n<| c |>\n, thanks for pointing out.\
    \ I've fixed the code. Now it works as expected.\n<|/ c |>\n<| c |>\n, thanks\
    \ for pointing out. I've fixed the code. Now it works as expected.\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr,\
    \ function($v){\n    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't work. `unique_digits([15, 33, 1422, 1])` returns `[1,\
    \ 15, 33]` instead of `[1, 15, 33]`.\n<|/ c |>\n<| c |>\n, thanks for pointing\
    \ out. I've fixed the code. Now it works as expected.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr, function($v){\n\
    \    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=1 |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result = array_filter($arr,\
    \ function($v){\n    return !preg_match('/\\d/', $v);\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$arr = array(15, 33, 1422, 1);\n$result\
    \ = array_filter($arr, function($v){\n    return !preg_match('/\\d/', $v);\n});\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$arr = array(15, 33, 1422,\
    \ 1);\n$result = array_filter($arr, function($v){\n    return !preg_match('/\\\
    d/', $v);\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $arr = array(15, 33, 1422, 1);\n$result = \nfunction candidate(...$args) {\n \
    \   return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5j10fwh2.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach($x as $num)\
    \ {\n        $result[] = $num;\n    }\n    sort($result);\n    foreach($result\
    \ as $num) {\n        if($num % 2 == 0) {\n            continue 2;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Cannot 'continue' 2 levels in /tmp/tmp0shfprwu.php on line\
    \ 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $num) {\n \
    \       $result[] = $num;\n    }\n    sort($result);\n    $result = [];\n    foreach($result\
    \ as $num) {\n        if($num % 2 != 0) {\n            $result[] = $num;\n   \
    \     }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3n9n4mgt.php:30\n\
    Stack trace:\n#0 /tmp/tmp3n9n4mgt.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3n9n4mgt.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $key\
    \ => $value) {\n        if ($value % 2 != 0) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29anyl_d.php:25\n\
    Stack trace:\n#0 /tmp/tmp29anyl_d.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp29anyl_d.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $result[] = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $e) {\n        if ($e % 2 == 0) {\n            $result[] = $e;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycct25m9.php:31\n\
    Stack trace:\n#0 /tmp/tmpycct25m9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpycct25m9.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach($x as $y) {\n\
    \        $result[] = $y;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ 'is_int');\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeojnzuvk.php:25\n\
    Stack trace:\n#0 /tmp/tmpeojnzuvk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpeojnzuvk.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $key\
    \ => $value) {\n        $digits[$key] = $value;\n    }\n    sort($digits);\n \
    \   $result = array();\n    foreach ($digits as $key => $value) {\n        if\
    \ ($value % 2 == 0) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfd6vuiw.php:30\n\
    Stack trace:\n#0 /tmp/tmpyfd6vuiw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyfd6vuiw.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    foreach ($result as $key => $value)\
    \ {\n        if ($value % 2 != 0) {\n            unset($result[$key]);\n     \
    \   }\n    }\n    return array_values($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qs8tu7l.php:28\n\
    Stack trace:\n#0 /tmp/tmp3qs8tu7l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3qs8tu7l.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    array_multisort($result, SORT_ASC,\
    \ $x);\n    return array_keys($x);\n}\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx61uxdt7.php:23\n\
    Stack trace:\n#0 /tmp/tmpx61uxdt7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx61uxdt7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if(!in_array($digit, $result)) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv92nxm77.php:30\n\
    Stack trace:\n#0 /tmp/tmpv92nxm77.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv92nxm77.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3yon2bu_.php:30\n\
    Stack trace:\n#0 /tmp/tmp3yon2bu_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3yon2bu_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphs51jr5y.php:25\n\
    Stack trace:\n#0 /tmp/tmphs51jr5y.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphs51jr5y.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y % 10;\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmped4fzfsz.php:28\n\
    Stack trace:\n#0 /tmp/tmped4fzfsz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmped4fzfsz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    array_multisort($result, SORT_ASC,\
    \ $x);\n    return array_filter($x, function($value) {\n        return !is_numeric($value);\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0ea4iqc.php:26\n\
    Stack trace:\n#0 /tmp/tmpm0ea4iqc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpm0ea4iqc.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    return array_unique($digits);\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuewpren2.php:23\n\
    Stack trace:\n#0 /tmp/tmpuewpren2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuewpren2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y % 10;\n    }\n    return array_filter($result);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl7_q0lx6.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = array_sum(str_split($num));\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsiwhluy2.php:23\n\
    Stack trace:\n#0 /tmp/tmpsiwhluy2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsiwhluy2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y % 10;\n    }\n    return array_unique($result);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2u20at45.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($x as $n) {\n        if (!in_array($n % 10, $digits)) {\n      \
    \      $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1iiiwau.php:30\n\
    Stack trace:\n#0 /tmp/tmpu1iiiwau.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu1iiiwau.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = $num;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $num) {\n        if ($num % 2 == 0) {\n            $result[]\
    \ = $num;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0v88cxqe.php:30\n\
    Stack trace:\n#0 /tmp/tmp0v88cxqe.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0v88cxqe.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach($x as $n) {\n\
    \        $result[] = $n;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ function($n) {\n        return !is_numeric($n);\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2fbtwqe.php:27\n\
    Stack trace:\n#0 /tmp/tmpg2fbtwqe.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg2fbtwqe.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $num) {\n \
    \       $digits = str_split($num);\n        foreach($digits as $digit) {\n   \
    \         if($digit % 2 != 0) {\n                $result[] = $num;\n         \
    \       break;\n            }\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work. Try it with `unique_digits([152,\
    \ 323, 1422, 10])`\n<|/ c |>\n<| c |>\nIt works. I tested it before posting it.\
    \ I just tested it again and it works. I must have missed something when I first\
    \ tested it.\n<|/ c |>\n<| c |>\nI tested it again and it works. I must have missed\
    \ something when I first tested it.\n<|/ c |>\n<| c |>\nI tested it again and\
    \ it works. I must have missed something when I first tested it.\n<|/ c |>\n<|\
    \ c |>\nI tested it again and it works. I must have missed something when I first\
    \ tested it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422,\
    \ 1];\n$newArr = array_filter($arr, function($v){\n    return !preg_match('/\\\
    D/', $v);\n});\nprint_r($newArr);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This doesn't work. Try it with `unique_digits([152, 323, 1422, 10])`\n<|/ c |>\n\
    <| c |>\nIt works. I tested it before posting it. I just tested it again and it\
    \ works. I must have missed something when I first tested it.\n<|/ c |>\n<| c\
    \ |>\nI tested it again and it works. I must have missed something when I first\
    \ tested it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422,\
    \ 1];\n$newArr = array_filter($arr, function($v){\n    return !preg_match('/\\\
    D/', $v);\n});\nprint_r($newArr);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This doesn't work. Try it with `unique_digits([152, 323, 1422, 10])`\n<|/ c |>\n\
    <| c |>\nIt works. I tested it before posting it. I just tested it again and it\
    \ works. I must have missed something when I first tested it.\n<|/ c |>\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmi16_wcp.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 != 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39pu2fmu.php:30\n\
    Stack trace:\n#0 /tmp/tmp39pu2fmu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp39pu2fmu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 != 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvltcxkks.php:25\n\
    Stack trace:\n#0 /tmp/tmpvltcxkks.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvltcxkks.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = $num;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $num) {\n        if ($num % 2 == 0) {\n            $result[]\
    \ = $num;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasu7w543.php:30\n\
    Stack trace:\n#0 /tmp/tmpasu7w543.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpasu7w543.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $num)\
    \ {\n        $result[$num] = 1;\n    }\n    ksort($result);\n    return array_keys($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbia3yscm.php:24\n\
    Stack trace:\n#0 /tmp/tmpbia3yscm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbia3yscm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $e) {\n   \
    \     $result[] = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach($result\
    \ as $e) {\n        if($e % 2 == 0) {\n            $result[] = $e;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qcuyhey.php:30\n\
    Stack trace:\n#0 /tmp/tmp3qcuyhey.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3qcuyhey.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $y) {\n\
    \        $digits[] = $y;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u0mx56x.php:30\n\
    Stack trace:\n#0 /tmp/tmp3u0mx56x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3u0mx56x.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk86i1u7c.php:25\n\
    Stack trace:\n#0 /tmp/tmpk86i1u7c.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk86i1u7c.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[$n % 10] = $n % 10;\n    }\n    asort($digits);\n    $result\
    \ = array();\n    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51cdyx0o.php:30\n\
    Stack trace:\n#0 /tmp/tmp51cdyx0o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp51cdyx0o.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 != 0) {\n         \
    \   $result[] = $digit;\n        }\n    }\n    return $result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp4d2ngxl.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5wdnyte.php:30\n\
    Stack trace:\n#0 /tmp/tmpa5wdnyte.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpa5wdnyte.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $key\
    \ => $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n \
    \   $result = array_filter($result, 'is_numeric');\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqu8lws8.php:25\n\
    Stack trace:\n#0 /tmp/tmpiqu8lws8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpiqu8lws8.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $num)\
    \ {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n    $result =\
    \ array();\n    foreach ($digits as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvjftjrva.php:30\n\
    Stack trace:\n#0 /tmp/tmpvjftjrva.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvjftjrva.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[$n % 10] = $n;\n    }\n    ksort($digits);\n    $result = array();\n\
    \    foreach ($digits as $n) {\n        if ($n % 2 == 0) {\n            $result[]\
    \ = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5ixryg0.php:30\n\
    Stack trace:\n#0 /tmp/tmpu5ixryg0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu5ixryg0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $result[] = strval($e);\n    }\n    sort($result);\n    $result = [];\n\
    \    foreach ($result as $e) {\n        if (strpos($e, '0') === false) {\n   \
    \         $result[] = $e;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ttnegex.php:30\n\
    Stack trace:\n#0 /tmp/tmp3ttnegex.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3ttnegex.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 != 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpngrkhej1.php:25\n\
    Stack trace:\n#0 /tmp/tmpngrkhej1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpngrkhej1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 == 0) {\n         \
    \   $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn1t1ml1r.php:30\n\
    Stack trace:\n#0 /tmp/tmpn1t1ml1r.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpn1t1ml1r.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($x as $n) {\n        if (!in_array($n % 10, $digits)) {\n      \
    \      $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsunaccpi.php:30\n\
    Stack trace:\n#0 /tmp/tmpsunaccpi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsunaccpi.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach($x as $val)\
    \ {\n        $result[] = intval($val);\n    }\n    sort($result);\n    $result2\
    \ = array();\n    foreach($result as $val) {\n        $result2[] = intval($val);\n\
    \    }\n    return array_diff($result2, $result);\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try it with `unique_digits([-1,\
    \ -10, -100, -200])`.\n<|/ c |>\n<| c |>\n: I didn't see that requirement in the\
    \ question. I've updated the answer to handle negative numbers.\n<|/ c |>\n<|\
    \ a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2xvoicmx.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $key\
    \ => $value) {\n        $digits[$key] = $value;\n    }\n    sort($digits);\n \
    \   $result = array();\n    foreach ($digits as $key => $value) {\n        if\
    \ ($value % 2 != 0) {\n            $result[] = $value;\n        }\n    }\n   \
    \ return $result;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpforvrbpk.php:30\n\
    Stack trace:\n#0 /tmp/tmpforvrbpk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpforvrbpk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 != 0) {\n         \
    \   $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pz0nie1.php:30\n\
    Stack trace:\n#0 /tmp/tmp0pz0nie1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0pz0nie1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[] = array_sum(str_split($val));\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjagbgatl.php:23\n\
    Stack trace:\n#0 /tmp/tmpjagbgatl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjagbgatl.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[] = $val;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $val) {\n        $result[] = strval($val);\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post. - [From Review](/review/low-quality-posts/14670774)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He asked how to\
    \ sort an array in PHP and I provided a solution that does exactly that. He also\
    \ asked how to remove duplicates. I provided a solution that does exactly that.\
    \ He also asked how to remove duplicates. I provided a solution that does exactly\
    \ that. He also asked how to remove duplicates. I provided a solution that does\
    \ exactly that. He also asked how to remove duplicates. I provided a solution\
    \ that does exactly that. He also asked how to remove duplicates. I provided a\
    \ solution that does exactly that. He also asked how to remove duplicates. I provided\
    \ a solution that does exactly that. He also asked how to remove duplicates. I\
    \ provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does exactly that. He also asked how to remove duplicates.\
    \ I provided a solution that does \nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcxpcnv23.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[$val] = 1;\n    }\n    foreach ($result as $key => $val) {\n\
    \        if ($val % 2 != 0) {\n            unset($result[$key]);\n        }\n\
    \    }\n    return array_keys($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ivb1s7o.php:28\n\
    Stack trace:\n#0 /tmp/tmp1ivb1s7o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1ivb1s7o.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $v) {\n  \
    \      $result[] = $v;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $v) {\n        if ($v % 2 == 0) {\n            $result[] = $v;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9ty9l_w.php:30\n\
    Stack trace:\n#0 /tmp/tmpm9ty9l_w.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm9ty9l_w.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y % 10;\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjudn4_6r.php:28\n\
    Stack trace:\n#0 /tmp/tmpjudn4_6r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjudn4_6r.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array_count_values($x);\n    $result\
    \ = array();\n    foreach ($x as $key => $value) {\n        if ($digits[$value]\
    \ == 1) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if there are\
    \ duplicate digits in an array. For example, `unique_digits([15, 33, 1422, 1])`\
    \ returns `[1, 15, 33, 1422]`.\n<|/ c |>\n<| c |>\n: Yes, it does. I tested it\
    \ before posting it. I just added a comment to the OP's question to clarify that\
    \ this is an important requirement.\n<|/ c |>\n<| c |>\nI tested it again and\
    \ it works. I must have had a typo when I first tested it.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 = array_count_values($arr);\n$arr3\
    \ = array_filter($arr2, function($v){\n    return $v == 1;\n});\n$arr4 = array_keys($arr3);\n\
    $arr5 = array_values($arr3);\nprint_r($arr5);\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThis doesn't work if there are duplicate digits in an array. For\
    \ example, `unique_digits([15, 33, 1422, 1])` returns `[1, 15, 33, 1422]`.\n<|/\
    \ c |>\n<| c |>\nI tested it again and it works. I must have had a typo when I\
    \ first tested it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg2p68ffp.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$numbers = [\n    152,\n    323,\n    1422,\n\
    \    10\n];\n\n$result = array_filter($numbers, function($number) {\n    return\
    \ $number % 2 == 0;\n});\n\nvar_dump($result);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$numbers = [\n    152,\n    323,\n\
    \    1422,\n    10\n];\n\n$result = array_filter($numbers, function($number) {\n\
    \    return $number % 2 == 0;\n});\n\nvar_dump($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$numbers = [\n    152,\n    323,\n    1422,\n\
    \    10\n];\n\n$result = array_filter($numbers, function($number) {\n    return\
    \ $number % 2 == 0;\n});\n\nvar_dump($result);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$numbers = [\n    152,\n\
    \    323,\n    1422,\n    10\n];\n\n$result = array_filter($numbers, function($number)\
    \ {\n    return $number % 2 == 0;\n});\n\nvar_dump($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$numbers = [\n    152,\n    323,\n    1422,\n\
    \    10\n];\n\n$result = array_filter($numbers, function($number) {\n    return\
    \ $number % 2 == 0;\n});\n\nvar_dump($result);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a |>\n<code>\n<?php\n$numbers = [\n    152,\n  \
    \  323,\n    1422,\n    10\n];\n\n$result = array_filter($numbers, function($number)\
    \ {\n    return $number % 2 == 0;\n});\n\nvar_dump($result);\n</code>\n<|/ a dscore=0\
    \ tag\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4fqc8m9k.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $y) {\n\
    \        $result[] = $y;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ function($x) {\n        return !is_numeric($x);\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1qk9ftj7.php:27\n\
    Stack trace:\n#0 /tmp/tmp1qk9ftj7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1qk9ftj7.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $num)\
    \ {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n    $result =\
    \ array();\n    foreach($digits as $digit) {\n        if(!in_array($digit, $result))\
    \ {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$result = array_filter($array,\
    \ function($v){\n    return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=4 |>\n<|\
    \ c |>\nThis should be the accepted answer. Much more concise and readable than\
    \ the other answers.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much\
    \ more concise and readable than the other answers.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$result = array_filter($array,\
    \ function($v){\n    return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=4 |>\n<|\
    \ c |>\nThis should be the accepted answer. Much more concise and readable than\
    \ the other answers.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10);\n$result = array_filter($array, function($v){\n\
    \    return $v % 2 == 0;\n});\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n\
    <code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n$result = array_filter($array,\
    \ function($v){\n    return $v % 2 == 0;\n});\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $result = array_filter($array, function($v){\n    return $v % 2 == 0;\n});\n</code>\n\
    <|/ a dscore=3 |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $result = array_filter($array, function($v){\n    return $v % 2 == 0;\n});\n</code>\n\
    <|/ a dscore=3 |>\n<| a tags=php,array\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp53vp44ju.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = array_sum(str_split($num));\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8f404m9.php:23\n\
    Stack trace:\n#0 /tmp/tmpo8f404m9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpo8f404m9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array_count_values($x);\n    $result\
    \ = array();\n    foreach ($x as $key => $val) {\n        if ($digits[$key] %\
    \ 2 != 0) {\n            $result[] = $val;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzuc1g0t0.php:26\n\
    Stack trace:\n#0 /tmp/tmpzuc1g0t0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzuc1g0t0.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2m25kkwr.php:30\n\
    Stack trace:\n#0 /tmp/tmp2m25kkwr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2m25kkwr.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[] = $val;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $val) {\n        if ($val % 2 != 0) {\n            $result[]\
    \ = $val;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb08cd65.php:30\n\
    Stack trace:\n#0 /tmp/tmptb08cd65.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptb08cd65.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $v) {\n  \
    \      $result[] = array_sum(str_split($v));\n    }\n    sort($result);\n    return\
    \ array_filter($result, function($v){\n        return $v % 2 === 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9a2goud.php:26\n\
    Stack trace:\n#0 /tmp/tmpk9a2goud.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk9a2goud.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $result[] = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $e) {\n        $result[] = $e % 10;\n    }\n    sort($result);\n\
    \    return array_filter($result);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpre5kre2d.php:29\n\
    Stack trace:\n#0 /tmp/tmpre5kre2d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpre5kre2d.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't work. Try it on `[15, 33, 1422, 1]`\n<|/ c |>\n<| c |>\nIt works.\
    \ I tested it on [15, 33, 1422, 1] and it returns [1, 15, 33]\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work. Try it on `[152, 323, 1422, 10]`\n<|/ c |>\n<| c |>\nIt\
    \ returns `[1, 15, 33, 1422, 10]`\n<|/ c |>\n<| c |>\nIt returns `[1, 15, 33,\
    \ 1422, 10]` on `[152, 323, 1422, 10]`\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    <?php\n$arr = [15, 33, 1422, 1];\n$arr2 = [];\nforeach ($arr as $key => $value)\
    \ {\n    if ($value % 2 == 0) {\n        $arr2[] = $value;\n    }\n}\nsort($arr2);\n\
    print_r($arr2);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it\
    \ on `[15, 33, 1422, 1]`\n<|/ c |>\n<| c |>\nIt works. I tested it on [15, 33,\
    \ 1422, 1] and it returns [1, 15, 33]\n<|/ c |>\n<| c |>\nIt doesn't work. Try\
    \ it on `[152, 323, 1422, 10]`\n<|/ c |>\n<| c |>\nIt returns `[1, 15, 33, 1422,\
    \ 10]`\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [15, 33, 1422,\
    \ 1];\n$arr2 = [];\nforeach ($arr as $key => $value) {\n    if ($value % 2 ==\
    \ 0) {\n        $arr2[] = $value;\n    }\n}\nsort($arr2);\nprint_r($arr2);\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it on `[15, 33, 1422, 1]`\n\
    <|/ c |>\n<| c |>\nIt works. I tested it on [15, 33, 1422, 1] and it returns \n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy7ij_j0w.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = str_split($num)[1];\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr1jj_5gl.php:23\n\
    Stack trace:\n#0 /tmp/tmpr1jj_5gl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr1jj_5gl.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    return array_unique($digits);\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0d0lv6k7.php:23\n\
    Stack trace:\n#0 /tmp/tmp0d0lv6k7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0d0lv6k7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array_count_values($x);\n    $result\
    \ = array();\n    foreach ($x as $key => $val) {\n        if ($digits[$val] %\
    \ 2 != 0) {\n            $result[] = $val;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your code works\
    \ fine for small arrays. But for large arrays it takes too much time. Can you\
    \ please suggest any faster solution?\n<|/ c |>\n<| c |>\nI updated my answer\
    \ with a faster solution. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works fine for small arrays. But for large arrays it takes too much\
    \ time. Can you please suggest any faster solution?\n<|/ c |>\n<| c |>\nI updated\
    \ my answer with a faster solution. Hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxaoavr2r.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[$n % 10] = $n % 10;\n    }\n    asort($digits);\n    $result\
    \ = array();\n    foreach ($digits as $digit) {\n        if ($digit % 2 == 0)\
    \ {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7ffymuu.php:30\n\
    Stack trace:\n#0 /tmp/tmpc7ffymuu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc7ffymuu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1upslzm.php:30\n\
    Stack trace:\n#0 /tmp/tmpt1upslzm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpt1upslzm.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1, 2, 3, 10, 20, 30, 40, 50, 60,\
    \ 70, 80, 90, 100];\n$arr1 = [];\n$arr2 = [];\n$arr3 = [];\n$arr4 = array_filter($arr,\
    \ function($v){\n    return $v % 2 == 0;\n});\n$arr5 = array_filter($arr, function($v){\n\
    \    return $v % 2 != 0;\n});\n$arr6 = array_filter($arr, function($v){\n    return\
    \ $v % 2 == 0;\n});\n$arr7 = array_filter($arr, function($v){\n    return $v %\
    \ 2 != 0;\n});\n$arr8 = array_filter($arr, function($v){\n    return $v % 2 ==\
    \ 0;\n});\n$arr9 = array_filter($arr, function($v){\n    return $v % 2 != 0;\n\
    });\n$arr10 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n\
    $arr11 = array_filter($arr, function($v){\n    return $v % 2 != 0;\n});\n$arr12\
    \ = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n$arr13 = array_filter($arr,\
    \ function($v){\n    return $v % 2 != 0;\n});\n$arr14 = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n$arr15 = array_filter($arr, function($v){\n   \
    \ return $v % 2 != 0;\n});\n$arr16 = array_filter($arr, function($v){\n    return\
    \ $v % 2 == 0;\n});\n$arr17 = array_filter($arr, function($v){\n    return $v\
    \ % 2 != 0;\n});\n$arr18 = array_filter($arr, function($v){\n    return $v % 2\
    \ == 0;\n});\n$arr19 = array_filter($arr, function($v){\n    return $v % 2 !=\
    \ 0;\n});\n$arr20 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n\
    });\n$arr21 = array_filter($arr, function($v){\n    return $v % 2 != 0;\n});\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmps92yao4u.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y % 10;\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahqws1it.php:29\n\
    Stack trace:\n#0 /tmp/tmpahqws1it.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpahqws1it.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if(!in_array($digit, $result)) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwn4ltmqn.php:30\n\
    Stack trace:\n#0 /tmp/tmpwn4ltmqn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwn4ltmqn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array_count_values($x);\n    $result\
    \ = array();\n    foreach ($x as $key => $value) {\n        if ($digits[$value]\
    \ == 1) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq82lw_as.php:26\n\
    Stack trace:\n#0 /tmp/tmpq82lw_as.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpq82lw_as.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 != 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nkpcfz5.php:29\n\
    Stack trace:\n#0 /tmp/tmp5nkpcfz5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5nkpcfz5.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $value % 10;\n    }\n    foreach ($result as $key\
    \ => $value) {\n        if ($value == 0) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu5vj9gpu.php:31\n\
    Stack trace:\n#0 /tmp/tmpu5vj9gpu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu5vj9gpu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $y) {\n   \
    \     $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach($result\
    \ as $y) {\n        if($y % 2 == 0) {\n            $result[] = $y;\n        }\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/15445141)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He asked how to\
    \ remove all elements from an array that contain an even digit. He also asked\
    \ how to sort the array in increasing order. He also asked how to remove all elements\
    \ from an array that contain an even digit. He also asked how to sort the array\
    \ in increasing order. He also asked how to remove all elements from an array\
    \ that contain an even digit. He also asked how to sort the array in increasing\
    \ order. He also asked how to remove all elements from an array that contain an\
    \ even digit. He also asked how to sort the array in increasing order. He also\
    \ asked how to remove all elements from an array that contain an even digit. He\
    \ also asked how to sort the array in increasing order.\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/15445141)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/15445141)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/15445141)\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 =\
    \ array_filter($arr, function($v){\n    return !preg_match('/\\D/', $\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfwvkn8po.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $y) {\n\
    \        $result[] = $y;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ function($x) {\n        return !is_int($x) && $x % 2 === 0;\n    });\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa37itln.php:26\n\
    Stack trace:\n#0 /tmp/tmpaa37itln.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpaa37itln.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprau26ocz.php:25\n\
    Stack trace:\n#0 /tmp/tmprau26ocz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprau26ocz.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $val) {\n \
    \       $result[] = strval($val);\n    }\n    sort($result);\n    $result = [];\n\
    \    foreach($result as $val) {\n        $result[] = intval($val);\n    }\n  \
    \  sort($result);\n    return array_unique($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bb5g4zd.php:29\n\
    Stack trace:\n#0 /tmp/tmp_bb5g4zd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_bb5g4zd.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y % 10;\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_r3jes3.php:28\n\
    Stack trace:\n#0 /tmp/tmp2_r3jes3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2_r3jes3.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 != 0) {\n         \
    \   $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpacm04p33.php:30\n\
    Stack trace:\n#0 /tmp/tmpacm04p33.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpacm04p33.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $num)\
    \ {\n        $result[] = $num;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ 'is_int');\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ dscore=0 |>\n<code>\n$array = array(\n    array(\n        'id' => 1,\n     \
    \   'name' => 'John',\n        'age' => 30,\n    ),\n    array(\n        'id'\
    \ => 2,\n        'name' => 'Jane',\n        'age' => 25,\n    ),\n    array(\n\
    \        'id' => 3,\n        'name' => 'Jack',\n        'age' => 22,\n    ),\n\
    \    array(\n        'id' => 4,\n        'name' => 'Jill',\n        'age' => 20,\n\
    \    ),\n    array(\n        'id' => 5,\n        'name' => 'Jack',\n        'age'\
    \ => 20,\n    ),\n    array(\n        'id' => 6,\n        'name' => 'Jill',\n\
    \        'age' => 20,\n    ),\n    array(\n        'id' => 7,\n        'name'\
    \ => 'Jack',\n        'age' => 20,\n    ),\n    array(\n        'id' => 8,\n \
    \       'name' => 'Jill',\n        'age' => 20,\n    ),\n    array(\n        'id'\
    \ => 9,\n        'name' => 'Jack',\n        'age' => 20,\n    ),\n    array(\n\
    \        'id' => 10,\n        'name' => 'Jill',\n        'age' => 20,\n    ),\n\
    \    array(\n        'id' => 11,\n        'name' => 'Jack',\n        'age' =>\
    \ 20,\n    ),\n    array(\n        'id' => 12,\n        'name' => 'Jill',\n  \
    \      'age' => 20,\n    ),\n    array(\n        'id' => 13,\n        'name' =>\
    \ 'Jack',\n        'age' => 20,\n    ),\n    array(\n        'id' => 14,\n   \
    \     'name' => 'Jill',\n        'age' => 20,\n    ),\n    array(\n        'id'\
    \ => 15,\n        'name' => 'Jack',\n        'age' => 20,\n    ),\n    array(\n\
    \        'id' => 16,\n        'name' => 'Jill',\n        'age' => 20,\n    ),\n\
    \    array(\n        'id' => 17,\n        'name' => 'Jack',\n        'age' =>\
    \ 20,\n    ),\n    array(\n        'id' => 18,\n        'name' => 'Jill',\n  \
    \      'age' => 20,\n    ),\n    array(\n        'id' => 19,\n        'name' =>\
    \ 'Jack',\n        'age' => 20,\n    ),\n    array(\n        'id' => 20,\n   \
    \     'name' => 'Jill',\n        'age' => 20,\n    ),\n    array(\n        '\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw1jyckdx.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18fjagu5.php:30\n\
    Stack trace:\n#0 /tmp/tmp18fjagu5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp18fjagu5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $num)\
    \ {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n    $result =\
    \ array();\n    foreach ($digits as $digit) {\n        if ($digit % 2 === 0) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegne8xt6.php:30\n\
    Stack trace:\n#0 /tmp/tmpegne8xt6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpegne8xt6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y % 10;\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_vwqw3c.php:29\n\
    Stack trace:\n#0 /tmp/tmpy_vwqw3c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy_vwqw3c.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $result[] = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $e) {\n        if ($e % 2 == 0) {\n            $result[] = $e;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm5qdabl8.php:30\n\
    Stack trace:\n#0 /tmp/tmpm5qdabl8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm5qdabl8.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $y) {\n   \
    \     $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach($result\
    \ as $y) {\n        if($y % 2 != 0) {\n            $result[] = $y;\n        }\n\
    \    }\n    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    <code>\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzdqsjvlh.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $num) {\n \
    \       $digits = str_split($num);\n        foreach($digits as $digit) {\n   \
    \         if($digit % 2 != 0) {\n                $result[] = $num;\n         \
    \       break;\n            }\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work. `unique_digits([15,\
    \ 33, 1422, 1])` returns `[1, 15, 33]` instead of `[1, 15, 33]`\n<|/ c |>\n<|\
    \ c |>\nI updated my answer, please check it out.\n<|/ c |>\n<| c |>\nThanks,\
    \ this works. I added a sort to the end and now it works.\n<|/ c |>\n<| c |>\n\
    I updated my answer, please check it out.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n\
    \    return !is_numeric($v);\n});\n$arr3 = array_unique($arr2);\nsort($arr3);\n\
    print_r($arr3);\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `unique_digits([15,\
    \ 33, 1422, 1])` returns `[1, 15, 33]` instead of `[1, 15, 33]`\n<|/ c |>\n<|\
    \ c |>\nI updated my answer, please check it out.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n\
    \    return !is_numeric($v);\n});\n$arr3 = array_unique($arr2);\nsort($arr3);\n\
    print_r($arr3);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return\
    \ !is_numeric($v);\n});\n$arr3 = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work. `unique_digits([15,\
    \ 33, 1422, 1])` returns `[1, 15, 33]` instead of `[1, 15, 33]`\n<|/ c |>\n<|\
    \ a tags=php,arrays,\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppkihkue6.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $key\
    \ => $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n \
    \   $result = array_filter($result, function($value) {\n        return !is_numeric($value);\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplkchomzl.php:27\n\
    Stack trace:\n#0 /tmp/tmplkchomzl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplkchomzl.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5bc5lyv.php:30\n\
    Stack trace:\n#0 /tmp/tmpv5bc5lyv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv5bc5lyv.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwo87c_7k.php:28\n\
    Stack trace:\n#0 /tmp/tmpwo87c_7k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwo87c_7k.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu739boa5.php:31\n\
    Stack trace:\n#0 /tmp/tmpu739boa5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu739boa5.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    foreach ($result as $key => $value)\
    \ {\n        if ($value % 2 != 0) {\n            unset($result[$key]);\n     \
    \   }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fk94krm.php:27\n\
    Stack trace:\n#0 /tmp/tmp8fk94krm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8fk94krm.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $n) {\n  \
    \      $result[] = $n;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $n) {\n        if ($n % 2 == 0) {\n            $result[] = $n;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7nu_cjq2.php:30\n\
    Stack trace:\n#0 /tmp/tmp7nu_cjq2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7nu_cjq2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $e) {\n\
    \        $result[] = $e;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ function($e) {\n        return !is_int($e) % 2;\n    });\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$array\
    \ = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7o92r3vn.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b8y7cka.php:29\n\
    Stack trace:\n#0 /tmp/tmp5b8y7cka.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5b8y7cka.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 == 0) {\n         \
    \   $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_ts_m0_.php:30\n\
    Stack trace:\n#0 /tmp/tmpm_ts_m0_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm_ts_m0_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $y) {\n\
    \        $digits[] = $y;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 == 0) {\n         \
    \   $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3bittfax.php:30\n\
    Stack trace:\n#0 /tmp/tmp3bittfax.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3bittfax.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $result[] = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $e) {\n        if ($e % 2 == 0) {\n            $result[] = $e;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5bg8vcnr.php:30\n\
    Stack trace:\n#0 /tmp/tmp5bg8vcnr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5bg8vcnr.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array_count_values($x);\n    $result\
    \ = [];\n    foreach ($x as $key => $value) {\n        if ($digits[$value] ==\
    \ 1) {\n            $result[] = $key;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2rzmm04l.php:26\n\
    Stack trace:\n#0 /tmp/tmp2rzmm04l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2rzmm04l.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 === 0) {\n        \
    \    $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwub1tln9.php:30\n\
    Stack trace:\n#0 /tmp/tmpwub1tln9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwub1tln9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[$y]++;\n    }\n    arsort($result);\n    return array_keys($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9xeue8n.php:24\n\
    Stack trace:\n#0 /tmp/tmpr9xeue8n.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpr9xeue8n.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[$n % 10] = 1;\n    }\n    asort($digits);\n    $result = array();\n\
    \    foreach ($x as $n) {\n        if (!isset($digits[$n % 10])) {\n         \
    \   $result[] = $n;\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a\
    \ tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work. Try it with `unique_digits([15,\
    \ 33, 1422, 1])`\n<|/ c |>\n<| c |>\n: It works. Try it with `unique_digits([152,\
    \ 323, 1422, 10])`. You will see that it returns `[1, 15, 33]`.\n<|/ c |>\n<|\
    \ c |>\n: I see what you mean. My mistake. I was thinking of `unique_digits([15,\
    \ 33, 1422, 1])` as `[15, 33, 1422]` instead of `[15, 33, 1422, 1]`. I've updated\
    \ my answer.\n<|/ c |>\n<| c |>\n: I've updated my answer with a new function\
    \ that should work correctly now.\n<|/ c |>\n<| c |>\n: I've updated my answer\
    \ with a new function that should work correctly now.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp93fi58g7.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $digits = str_split($e);\n        foreach ($digits as $digit) {\n     \
    \       if ($digit % 2 === 0) {\n                $result[] = $e;\n           \
    \     break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u_k71gz.php:29\n\
    Stack trace:\n#0 /tmp/tmp3u_k71gz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3u_k71gz.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[$n % 10] = $n % 10;\n    }\n    asort($digits);\n    $result\
    \ = array();\n    foreach($digits as $d) {\n        if(!isset($result[$d])) {\n\
    \            $result[$d] = $d;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=arrays,php,sorting |>\n<| c |>\nThis does not provide an answer to\
    \ the question. To critique or request clarification from an author, leave a comment\
    \ below their post.\n<|/ c |>\n<| c |>\nI believe this does answer the question.\
    \ He wants to get all numbers that do not have any even digit.\n<|/ c |>\n<| c\
    \ |>\nI believe this does answer the question. He wants to get all numbers that\
    \ do not have any even digit.\n<|/ c |>\n<| c |>\nThis doesn't answer the question.\
    \ He wants to get all numbers that do not have any even digit.\n<|/ c |>\n<| c\
    \ |>\nThis doesn't answer the question. He wants to get all numbers that do not\
    \ have any even digit.\n<|/ c |>\n<| a dscore=3 |>\n<code>\n$array = array(15,\
    \ 33, 1422, 1);\n$result = array_filter($array, function($n){\n    return $n %\
    \ 10 == 0;\n});\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post.\n<|/ c |>\n<| a tags=arrays,php,sorting\
    \ |>\n<code>\n$array = array(15, 33, 1422, 1);\n$result = array_filter($\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsfhfllsq.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = $num;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $num) {\n        $result[] = strval($num);\n    }\n    return\
    \ $result;\n}\n</code>\n<|/ a tags=arrays,php,sorting |>\n<| a |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxy7lmed4.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $e) {\n\
    \        $result[] = $e;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ 'is_int');\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$result = array_filter($arr, function($v){\n\
    \    return !preg_match('/\\d/', $v);\n});\nprint_r($result);\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$result = array_filter($arr,\
    \ function($v){\n    return !preg_match('/\\d/', $v);\n});\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n\
    <?php\n$arr = [15, 33, 1422, 1];\n$result = array_filter($arr, function($v){\n\
    \    return !preg_match('/\\d/', $v);\n});\nprint_r($result);\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nPlease add some explanation to your answer such that others\
    \ can learn from it\n<|/ c |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding why and/or how this code answers the\
    \ question improves its long-term value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$arr = [15, 33, 1422, 1];\n$result = array_filter($arr, function($v){\n\
    \    return !preg_match('/\\d/', $v);\n});\nprint_r($result);\n</code>\n<|/ a\
    \ tags=php,arrays |>\n<| c |>\nPlease add some explanation to your answer such\
    \ that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr\
    \ = [15, 33, 1422, 1];\n$result = array_filter($arr, function($v){\n    return\
    \ !preg_match('/\\d/', $v);\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$result = array_filter($arr,\
    \ function($v){\n    return !preg_match('/\\d/', $v);\n});\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c \nfunction candidate(...$args) {\n   \
    \ return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpn1srzg9x.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $num)\
    \ {\n        $digits[$num] = 1;\n    }\n    $result = array();\n    foreach ($x\
    \ as $num) {\n        if (!isset($digits[$num])) {\n            $result[] = $num;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2a8vy95.php:29\n\
    Stack trace:\n#0 /tmp/tmpb2a8vy95.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpb2a8vy95.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $digits = str_split($y);\n        foreach ($digits as $digit) {\n     \
    \       if ($digit % 2 != 0) {\n                $result[] = $y;\n            \
    \    break;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxa7yqaep.php:29\n\
    Stack trace:\n#0 /tmp/tmpxa7yqaep.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxa7yqaep.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $num)\
    \ {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n    $result =\
    \ array();\n    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0judsf2.php:29\n\
    Stack trace:\n#0 /tmp/tmp_0judsf2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_0judsf2.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $y) {\n\
    \        $digits[] = $y;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 != 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97g5h747.php:30\n\
    Stack trace:\n#0 /tmp/tmp97g5h747.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp97g5h747.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    sort($result);\n    $result =\
    \ [];\n    foreach ($result as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgd5s4tn6.php:30\n\
    Stack trace:\n#0 /tmp/tmpgd5s4tn6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgd5s4tn6.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach($x as $num)\
    \ {\n        $result[] = $num;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ 'is_int');\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqc6d3_o3.php:25\n\
    Stack trace:\n#0 /tmp/tmpqc6d3_o3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqc6d3_o3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $n) {\n  \
    \      $result[] = strval($n);\n    }\n    sort($result);\n    $result = [];\n\
    \    foreach ($result as $n) {\n        if (strpos($n, $n[0]) % 2 == 0) {\n  \
    \          $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_ttb79v.php:30\n\
    Stack trace:\n#0 /tmp/tmp6_ttb79v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6_ttb79v.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    asort($result);\n    $result\
    \ = [];\n    foreach ($result as $key => $value) {\n        if ($value % 2 !=\
    \ 0) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnlzhqw8x.php:30\n\
    Stack trace:\n#0 /tmp/tmpnlzhqw8x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnlzhqw8x.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $key\
    \ => $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n \
    \   $result = array_filter($result, function($value) {\n        return !is_numeric($value);\n\
    \    });\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0e6ndmxj.php:27\n\
    Stack trace:\n#0 /tmp/tmp0e6ndmxj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0e6ndmxj.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| c |>\nThis doesn't work. Try it with `unique_digits([15, 33, 1422, 1])`.\n\
    <|/ c |>\n<| c |>\nYes, it does. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it\
    \ does. Try it yourself. It returns `[1, 15, 33]`.\n<|/ c |>\n<| c |>\nYes, it\
    \ does. Try it yourself. It returns `[1, 15, 33]`.\n<|/ c |>\n<| c |>\nYes, it\
    \ does. Try it yourself. It returns `[1, 15, 33]`.\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\nsort($arr);\n$arr = array_filter($arr, function($v){\n\
    \    return $v % 2 != 0;\n});\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work. Try it with `unique_digits([15, 33, 1422, 1])`.\n<|/ c |>\n<| c |>\nYes,\
    \ it does. Try it yourself.\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\
    \ It returns `[1, 15, 33]`.\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\
    \ It returns `[1, 15, 33]`.\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\
    \ It returns `[1, 15, 33]`.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    $arr = [15, 33, 1422, 1];\n$arr = array_filter($arr, function($v){\n    return\
    \ $v % 2 == 0;\n});\nsort($arr);\n$arr = array_filter($arr, function($v){\n  \
    \  return $v % 2 != 0;\n});\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl695q3ss.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $key\
    \ => $value) {\n        $digits[$key] = str_pad($value, 2, '0', STR_PAD_LEFT);\n\
    \    }\n    $digits = array_count_values($digits);\n    arsort($digits);\n   \
    \ $result = array();\n    foreach ($digits as $key => $value) {\n        if ($value\
    \ == 1) {\n            $result[] = $key;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n\
    $array = array(\n    array(\n        'name' => 'John',\n        'age' => 30,\n\
    \        'city' => 'New York'\n    ),\n    array(\n        'name' => 'Jane',\n\
    \        'age' => 20,\n        'city' => 'New York'\n    ),\n    array(\n    \
    \    'name' => 'Jane',\n        'age' => 20,\n        'city' => 'New York'\n \
    \   ),\n    array(\n        'name' => 'Jane',\n        'age' => 20,\n        'city'\
    \ => 'New York'\n    ),\n    array(\n        'name' => 'Jane',\n        'age'\
    \ => 20,\n        'city' => 'New York'\n    ),\n    array(\n        'name' =>\
    \ 'Jane',\n        'age' => 20,\n        'city' => 'New York'\n    ),\n    array(\n\
    \        'name' => 'Jane',\n        'age' => 20,\n        'city' => 'New York'\n\
    \    ),\n    array(\n        'name' => 'Jane',\n        'age' => 20,\n       \
    \ 'city' => 'New York'\n    ),\n    array(\n        'name' => 'Jane',\n      \
    \  'age' => 20,\n        'city' => 'New York'\n    ),\n    array(\n        'name'\
    \ => 'Jane',\n        'age' => 20,\n        'city' => 'New York'\n    ),\n   \
    \ array(\n        'name' => 'Jane',\n        'age' => 20,\n        'city' => 'New\
    \ York'\n    ),\n    array(\n        'name' => 'Jane',\n        'age' => 20,\n\
    \        'city' => 'New York'\n    ),\n    array(\n        'name' => 'Jane',\n\
    \        'age' => 20,\n        'city' => 'New York'\n    ),\n    array(\n    \
    \    'name' => 'Jane',\n        'age' => 20,\n        'city' => 'New York'\n \
    \   ),\n    array(\n        'name' => 'Jane',\n        'age' => 20,\n        'city'\
    \ => 'New York'\n    ),\n    array(\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpejhlk9bo.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvn82pos.php:30\n\
    Stack trace:\n#0 /tmp/tmpzvn82pos.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzvn82pos.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[$n % 10] = $n % 10;\n    }\n    $digits = array_keys($digits);\n\
    \    sort($digits);\n    return $digits;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3j4cil7.php:25\n\
    Stack trace:\n#0 /tmp/tmpq3j4cil7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq3j4cil7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = str_pad($num, 2, '0', STR_PAD_LEFT);\n    }\n    $result\
    \ = array_unique($result);\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjbnqwtks.php:25\n\
    Stack trace:\n#0 /tmp/tmpjbnqwtks.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjbnqwtks.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      if ($e % 2 == 0) {\n            $result[] = $e;\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsd1iyl3u.php:25\n\
    Stack trace:\n#0 /tmp/tmpsd1iyl3u.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsd1iyl3u.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 != 0) {\n         \
    \   $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtds5jq3.php:30\n\
    Stack trace:\n#0 /tmp/tmphtds5jq3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphtds5jq3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $number) {\n\
    \        $result[] = array_sum(str_split($number));\n    }\n    sort($result);\n\
    \    return array_filter($result, function($number) {\n        return $number\
    \ % 2 === 0;\n    });\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq2ckw4ri.php:26\n\
    Stack trace:\n#0 /tmp/tmpq2ckw4ri.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpq2ckw4ri.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($x as $n) {\n        if (!in_array($n % 10, $digits)) {\n      \
    \      $result[] = $n;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tb4dt4p.php:30\n\
    Stack trace:\n#0 /tmp/tmp_tb4dt4p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_tb4dt4p.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[] = $val;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $val) {\n        if ($val % 2 == 0) {\n            $result[]\
    \ = $val;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cd4zehs.php:30\n\
    Stack trace:\n#0 /tmp/tmp2cd4zehs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2cd4zehs.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $y) {\n   \
    \     $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach($result\
    \ as $y) {\n        if($y % 2 == 0) {\n            $result[] = $y;\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi05oshkw.php:29\n\
    Stack trace:\n#0 /tmp/tmpi05oshkw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpi05oshkw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y;\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqolf4z1y.php:29\n\
    Stack trace:\n#0 /tmp/tmpqolf4z1y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqolf4z1y.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[$n % 10] = $n % 10;\n    }\n    ksort($digits);\n    return array_keys($digits);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8hzr24k.php:24\n\
    Stack trace:\n#0 /tmp/tmpn8hzr24k.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpn8hzr24k.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $number) {\n\
    \        $result[] = array_sum(str_split($number));\n    }\n    sort($result);\n\
    \    return array_filter($result, function($number) {\n        return $number\
    \ % 2 === 0;\n    });\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1w3w0cr2.php:26\n\
    Stack trace:\n#0 /tmp/tmp1w3w0cr2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1w3w0cr2.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $result[] = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $e) {\n        if ($e % 2 != 0) {\n            $result[] = $e;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$arr2 = [];\n\
    foreach($arr as $val){\n    if($val % 2 == 0){\n        $arr2[] = $val;\n    }\n\
    }\nsort($arr2);\nprint_r($arr2);\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$arr2\
    \ = [];\nforeach($arr as $val){\n    if($val % 2 == 0){\n        $arr2[] = $val;\n\
    \    }\n}\nsort($arr2);\nprint_r($arr2);\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = [15, 33, 1422, 1];\n$arr2 = [];\nforeach($arr as $val){\n\
    \    if($val % 2 == 0){\n        $arr2[] = $val;\n    }\n}\nsort($arr2);\nprint_r($arr2);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr\
    \ = [15, 33, 1422, 1];\n$arr2 = [];\nforeach($arr as $val){\n    if($val % 2 ==\
    \ 0){\n        $arr2[] = $val;\n    }\n}\nsort($arr2);\nprint_r($arr2);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [15,\
    \ 33, 1422, 1];\n$arr2 = [];\nforeach($arr as $val){\n    if($val % 2 == 0){\n\
    \        $arr2[] = $val;\n    }\n}\nsort($arr2);\nprint_r($arr2);\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n\
    $arr2 = [];\nforeach($arr as $val){\n    if($val % 2 == 0){\n        $arr2[] =\
    \ $val;\n    }\n}\nsort($arr\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpabz9nhf2.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 != 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$arr = [\n    152,\n    323,\n    1422,\n    10\n];\n\n$arr2\
    \ = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n\n$arr3 =\
    \ array_diff($arr, $arr2);\n\nprint_r($arr3);\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 |>\n<code>\n$arr = [\n    152,\n    323,\n    1422,\n    10\n];\n\
    \n$arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n\n$arr3\
    \ = array_diff($arr, $arr2);\n\nprint_r($arr3);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$arr = [\n    152,\n    323,\n    1422,\n\
    \    10\n];\n\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 ==\
    \ 0;\n});\n\n$arr3 = array_diff($arr, $arr2);\n\nprint_r($arr3);\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [\n    152,\n\
    \    323,\n    1422,\n    10\n];\n\n$arr2 = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n\n$arr3 = array_diff($arr, $arr2);\n\nprint_r($arr3);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [\n\
    \    152,\n    323,\n    1422,\n    10\n];\n\n$arr2 = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n\n$arr3 = array_diff($arr, $arr2);\n\nprint_r($arr3);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [\n\
    \    152,\n    323,\n    1422,\n    10\n];\n\n$arr\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu4rlgcnj.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $e) {\n\
    \        $result[] = $e;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ function($e){\n        return !is_numeric($e);\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv09d6grr.php:27\n\
    Stack trace:\n#0 /tmp/tmpv09d6grr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv09d6grr.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33zjz5y2.php:30\n\
    Stack trace:\n#0 /tmp/tmp33zjz5y2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp33zjz5y2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $num)\
    \ {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n    $result =\
    \ array();\n    foreach($digits as $digit) {\n        if(!in_array($digit, $result))\
    \ {\n            $result[] = $digit;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr =\
    \ [\n    152,\n    323,\n    1422,\n    10,\n];\n\n$result = array_filter($arr,\
    \ function($value) {\n    return !preg_match('/\\D/', $value);\n});\n\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [\n    152,\n\
    \    323,\n    1422,\n    10,\n];\n\n$result = array_filter($arr, function($value)\
    \ {\n    return !preg_match('/\\D/', $value);\n});\n\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| c |>\nThis code does not work.\
    \ `array_filter` expects a callback function, but you are passing an array.\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$arr = [\n    152,\n    323,\n    1422,\n\
    \    10,\n];\n\n$result = array_filter($arr, function($value) {\n    return !preg_match('/\\\
    D/', $value);\n});\n\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$arr = [\n    152,\n    323,\n    1422,\n    10,\n];\n\n$result\
    \ = array_filter($arr, function($value) {\n    return !preg_match('/\\D/', $value);\n\
    });\n\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$arr = [\n    152,\n    323,\n    1422,\n    10,\n];\n\n$result\
    \ = array_filter($arr, function($value) {\n    return !preg_match('/\\D/', $value);\n\
    });\n\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n\
    <code>\n$arr = [\n    15\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvgfz2bq_.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    sort($result);\n    $result =\
    \ [];\n    foreach ($result as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnggbfla5.php:30\n\
    Stack trace:\n#0 /tmp/tmpnggbfla5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnggbfla5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $n) {\n  \
    \      $digits = str_split($n);\n        $result[] = $n;\n        foreach ($digits\
    \ as $digit) {\n            if ($digit % 2 != 0) {\n                $result[]\
    \ = $digit;\n            }\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nI like this solution, but I believe it can be optimized a bit.\
    \ For example, instead of iterating over each digit and checking if it's even,\
    \ we can just check if it's even in each digit and add it to the result if that\
    \ condition is true.\n<|/ c |>\n<| c |>\nYes, you are right. Thanks for your suggestion.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1m8v9ae8.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    \n    foreach($result as $key\
    \ => $value) {\n        $result[$key] = intval($value);\n    }\n    \n    foreach($result\
    \ as $key => $value) {\n        if($value % 2 == 0) {\n            unset($result[$key]);\n\
    \        }\n    }\n    \n    return array_values($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3si8fxz.php:34\n\
    Stack trace:\n#0 /tmp/tmpz3si8fxz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz3si8fxz.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpey9ini8o.php:30\n\
    Stack trace:\n#0 /tmp/tmpey9ini8o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpey9ini8o.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[] = array_sum(str_split($val));\n    }\n    sort($result);\n\
    \    return array_filter($result, function($val) {\n        return $val % 2 ===\
    \ 0;\n    });\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hkzfbsa.php:26\n\
    Stack trace:\n#0 /tmp/tmp9hkzfbsa.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9hkzfbsa.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    sort($result);\n    $result =\
    \ [];\n    foreach ($result as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work. Try it with\
    \ `unique_digits([15, 33, 1422, 1])`.\n<|/ c |>\n<| c |>\nI edited my answer,\
    \ I missed the part about sorting. Thanks for pointing that out.\n<|/ c |>\n<|\
    \ c |>\nI edited my answer, I missed the part about sorting. Thanks for pointing\
    \ that out.\n<|/ c |>\n<| c |>\nI edited my answer, I missed the part about sorting.\
    \ Thanks for pointing that out.\n<|/ c |>\n<| c |>\nI edited my answer, I missed\
    \ the part about sorting. Thanks for pointing that out.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$numbers = array(15, 33, 1422, 1);\n$unique = array_unique($numbers);\n\
    $unique = array_filter($unique, 'is_int');\nsort($unique);\nprint_r($unique);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work. Try it with `unique_digits([15,\
    \ 33, 1422, 1])`.\n<|/ c |>\n<| c |>\nI edited my answer, I missed the part about\
    \ sorting. Thanks for pointing that out.\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>\n<?php\n$numbers = array(15, 33, 1422, 1);\n$unique = array_unique($numbers);\n\
    $unique = array_filter($unique, 'is_int');\nsort($unique);\nprint_r($unique);\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `unique_digits([15,\
    \ 33, 1422, 1])`.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$numbers\
    \ = array(15, 33, 1422, 1);\n$unique = array_unique($numbers);\n$unique = array_filter($unique,\
    \ 'is_int');\nsort($unique);\nprint_r($unique);\n</code>\n<|/ a dscore=0 |>\n\
    <|\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqrzty628.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[] = $val;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $val) {\n        if ($val % 2 == 0) {\n            $result[]\
    \ = $val;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwggwetot.php:30\n\
    Stack trace:\n#0 /tmp/tmpwggwetot.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwggwetot.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $v) {\n   \
    \     $result[] = $v;\n    }\n    sort($result);\n    $result = [];\n    foreach($result\
    \ as $v) {\n        if($v % 2 == 0) {\n            $result[] = $v;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpckdvryy2.php:30\n\
    Stack trace:\n#0 /tmp/tmpckdvryy2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpckdvryy2.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    sort($result);\n    $result =\
    \ [];\n    foreach ($result as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_mn3jtz.php:30\n\
    Stack trace:\n#0 /tmp/tmpq_mn3jtz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq_mn3jtz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    sort($result);\n    $result =\
    \ [];\n    foreach ($result as $key => $value) {\n        if ($value % 2 == 0)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4ze2676.php:30\n\
    Stack trace:\n#0 /tmp/tmpr4ze2676.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr4ze2676.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 != 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1z79_r3.php:30\n\
    Stack trace:\n#0 /tmp/tmpq1z79_r3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq1z79_r3.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $result[] = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $e) {\n        $result[] = $e % 10;\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec0oqzi3.php:29\n\
    Stack trace:\n#0 /tmp/tmpec0oqzi3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpec0oqzi3.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $y) {\n   \
    \     $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach($result\
    \ as $y) {\n        if($y % 2 == 0) {\n            $result[] = $y;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uwlo8tx.php:30\n\
    Stack trace:\n#0 /tmp/tmp0uwlo8tx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0uwlo8tx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_feljlj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1_feljlj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1_feljlj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[] = $val;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $val) {\n        if ($val % 2 != 0) {\n            $result[]\
    \ = $val;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrago2p8.php:30\n\
    Stack trace:\n#0 /tmp/tmpkrago2p8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkrago2p8.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = array_sum(str_split($num));\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxfasysy.php:23\n\
    Stack trace:\n#0 /tmp/tmpaxfasysy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaxfasysy.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $e) {\n\
    \        $result[] = $e;\n    }\n    sort($result);\n    $result = array_filter($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqixi9q21.php:25\n\
    Stack trace:\n#0 /tmp/tmpqixi9q21.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqixi9q21.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array_count_values($x);\n    $result\
    \ = [];\n    foreach ($x as $key => $value) {\n        if ($digits[$value] ==\
    \ 1) {\n            $result[] = $key;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfypa81_p.php:26\n\
    Stack trace:\n#0 /tmp/tmpfypa81_p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpfypa81_p.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array_count_values($x);\n    $result\
    \ = array();\n    foreach ($x as $key => $val) {\n        if ($digits[$key] %\
    \ 2 == 0) {\n            $result[] = $val;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfrm4in4.php:26\n\
    Stack trace:\n#0 /tmp/tmpmfrm4in4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmfrm4in4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $y) {\n\
    \        $result[] = $y;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ function($x) {\n        return !is_numeric($x);\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihq2z39f.php:27\n\
    Stack trace:\n#0 /tmp/tmpihq2z39f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpihq2z39f.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach($x as $y) {\n\
    \        $result[] = $y;\n    }\n    sort($result);\n    $result = array_filter($result,\
    \ function($x) {\n        return !is_numeric($x);\n    });\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprm_nfy1d.php:27\n\
    Stack trace:\n#0 /tmp/tmprm_nfy1d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprm_nfy1d.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = $num;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $num) {\n        if ($num % 2 == 0) {\n            $result[]\
    \ = $num;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiyzze4yn.php:30\n\
    Stack trace:\n#0 /tmp/tmpiyzze4yn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpiyzze4yn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($digits as $digit) {\n        if ($digit % 2 == 0) {\n         \
    \   $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi42l4vhq.php:30\n\
    Stack trace:\n#0 /tmp/tmpi42l4vhq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpi42l4vhq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $number) {\n\
    \        $result[] = array_sum(str_split($number));\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifkyij3s.php:23\n\
    Stack trace:\n#0 /tmp/tmpifkyij3s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpifkyij3s.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach ($x as $n) {\n        if (in_array($n % 10, $digits)) {\n       \
    \     continue;\n        }\n        $result[] = $n;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72j_bxx2.php:31\n\
    Stack trace:\n#0 /tmp/tmp72j_bxx2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp72j_bxx2.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    sort($digits);\n    $result = array();\n\
    \    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n           \
    \ $result[] = $digit;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0it7846l.php:30\n\
    Stack trace:\n#0 /tmp/tmp0it7846l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0it7846l.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $result[] = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $e) {\n        $result[] = $e % 10;\n    }\n    return array_unique($result);\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work if there\
    \ are duplicate digits, e.g. `[152, 323, 1422, 10]` returns `[10, 152, 323]`.\n\
    <|/ c |>\n<| c |>\nYes, you're right. I didn't notice that case. I'll update my\
    \ answer.\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpaeo260iu.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $result[] = $e;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $e) {\n        if ($e % 2 == 0) {\n            $result[] = $e;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2w0o8cm.php:31\n\
    Stack trace:\n#0 /tmp/tmpv2w0o8cm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv2w0o8cm.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $val) {\n\
    \        $result[] = $val;\n    }\n    sort($result);\n    $result = [];\n   \
    \ foreach ($result as $val) {\n        if ($val % 2 != 0) {\n            $result[]\
    \ = $val;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzw9vbc52.php:30\n\
    Stack trace:\n#0 /tmp/tmpzw9vbc52.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzw9vbc52.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = array_sum(str_split($num));\n    }\n    sort($result);\n\
    \    return array_filter($result, function($num) {\n        return $num % 2 ===\
    \ 0;\n    });\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $numbers = array(\n    152,\n    323,\n    1422,\n    10\n);\n\n$result = array_filter($numbers,\
    \ function($number) {\n    return array_sum(str_split($number)) % 2 === 0;\n});\n\
    \nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$numbers = array(\n    152,\n    323,\n    1422,\n    10\n);\n\n$result\
    \ = array_filter($numbers, function($number) {\n    return array_sum(str_split($number))\
    \ % 2 === 0;\n});\n\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a tags=php,arrays |>\n<code>\n<?php\n$numbers = array(\n    152,\n    323,\n\
    \    1422,\n    10\n);\n\n$result = array_filter($numbers, function($number) {\n\
    \    return array_sum(str_split($number)) % 2 === 0;\n});\n\nprint_r($result);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$numbers =\
    \ array(\n    152,\n    323,\n    1422,\n    10\n);\n\n$result = array_filter($numbers,\
    \ function($number) {\n    return array_sum(str_split($number)) % 2 === 0;\n});\n\
    \nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $numbers = array(\n    152,\n    323,\n    1422,\n    10\n);\n\n$result = array_filter($numbers,\
    \ function($number) {\n    return array_sum(str_split($number)) % 2 === 0;\n});\n\
    \nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nPlease add some\
    \ explanation to your answer such that others can learn from it\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$numbers = array(\n    152,\n    323,\n    1422,\n\
    \    10\n);\n\n$result = array_filter($numbers, function($number) {\n    return\
    \ array_sum(str_split(\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuzv_a1pv.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $num)\
    \ {\n        $digits[] = $num % 10;\n    }\n    sort($digits);\n    $result =\
    \ array();\n    foreach($digits as $digit) {\n        if($digit % 2 == 0) {\n\
    \            $result[] = $digit;\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9wtfy_av.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $num) {\n\
    \        $result[] = array_sum(str_split($num));\n    }\n    return array_unique($result);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdsjx9un.php:23\n\
    Stack trace:\n#0 /tmp/tmphdsjx9un.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphdsjx9un.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $num)\
    \ {\n        $digits[$num % 10] = 1;\n    }\n    $result = array();\n    foreach\
    \ ($x as $num) {\n        if ($num % 10 == 0) continue;\n        $result[] = $num;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0764eo6.php:28\n\
    Stack trace:\n#0 /tmp/tmpo0764eo6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpo0764eo6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $y) {\n   \
    \     $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach($result\
    \ as $y) {\n        if($y % 2 == 0) {\n            $result[] = $y;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwh34w_p.php:30\n\
    Stack trace:\n#0 /tmp/tmpmwh34w_p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmwh34w_p.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $n) {\n  \
    \      $result[] = $n;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $n) {\n        if ($n % 2 == 0) {\n            $result[] = $n;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknvjjt4a.php:30\n\
    Stack trace:\n#0 /tmp/tmpknvjjt4a.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpknvjjt4a.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[] = $n % 10;\n    }\n    return array_filter($digits, function($n)\
    \ { return $n % 2 === 0; });\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_mhkwre.php:23\n\
    Stack trace:\n#0 /tmp/tmp3_mhkwre.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3_mhkwre.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = $y;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppcbfssl5.php:28\n\
    Stack trace:\n#0 /tmp/tmppcbfssl5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppcbfssl5.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n\
    \    return $v % 2 == 0;\n});\n$arr3 = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr\
    \ = [15, 33, 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return $v\
    \ % 2 == 0;\n});\n$arr3 = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n\
    </code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n\
    $arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n$arr3\
    \ = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [15, 33,\
    \ 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n\
    });\n$arr3 = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n<code>\n<?php\n$arr = [15, 33,\
    \ 1422, 1];\n$arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n\
    });\n$arr3 = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n\
    $arr2 = array_filter($arr, function($v){\n    return $v % 2 == 0;\n});\n$arr3\
    \ = array_unique($arr2);\nsort($arr3);\nprint_r($arr3);\n</code>\n<|/ a tags=\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxgne1iqh.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2itd4515.php:31\n\
    Stack trace:\n#0 /tmp/tmp2itd4515.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2itd4515.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = array();\n    foreach ($x as $key\
    \ => $value) {\n        $result[$key] = $value;\n    }\n    sort($result);\n \
    \   foreach ($result as $key => $value) {\n        if ($value % 2 == 0) {\n  \
    \          unset($result[$key]);\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$array = array(\n    array(\"\
    15\", \"33\", \"1422\", \"1\"),\n    array(\"152\", \"323\", \"1422\", \"10\"\
    ),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\"\
    , \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"\
    152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"\
    ),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\"\
    , \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"\
    152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"\
    ),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\"\
    , \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"\
    152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"\
    ),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\"\
    , \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"\
    152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"\
    ),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\"\
    , \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"\
    152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"\
    ),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\"\
    , \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"),\n    array(\"\
    152\", \"323\", \"1422\", \"10\"),\n    array(\"152\", \"323\", \"1422\", \"10\"\
    ),\n    array(\"15\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8amtyo9k.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach($x as $val) {\n \
    \       $digits = str_split($val);\n        foreach($digits as $digit) {\n   \
    \         if($digit % 2 === 0) {\n                $result[] = $val;\n        \
    \        break;\n            }\n        }\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,algorithm |>\n<| c |>\nThanks for your answer. Can you please explain\
    \ me how you did this ?\n<|/ c |>\n<| c |>\nI added some comments to my answer.\
    \ Hope it helps.\n<|/ c |>\n<| a tags=php,algorithm |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc2borth2.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $n) {\n\
    \        $digits[$n % 10] = $n % 10;\n    }\n    asort($digits);\n    $result\
    \ = array();\n    foreach ($x as $n) {\n        if (!isset($digits[$n % 10]))\
    \ {\n            $result[] = $n;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzw9xv3p5.php:30\n\
    Stack trace:\n#0 /tmp/tmpzw9xv3p5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzw9xv3p5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $digit)\
    \ {\n        $digits[$digit] = 1;\n    }\n    foreach($x as $digit) {\n      \
    \  if(!isset($digits[$digit])) {\n            $digits[$digit] = 0;\n        }\n\
    \    }\n    return array_keys($digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdg1wcbf6.php:28\n\
    Stack trace:\n#0 /tmp/tmpdg1wcbf6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdg1wcbf6.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        $result[$key] = $value;\n    }\n    asort($result);\n    $result\
    \ = [];\n    foreach ($result as $key => $value) {\n        if ($value % 2 ==\
    \ 0) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6dj_hxn.php:30\n\
    Stack trace:\n#0 /tmp/tmpc6dj_hxn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc6dj_hxn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 != 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpamtjgrhp.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach ($x as $num)\
    \ {\n        $digits[] = $num % 10;\n    }\n    return array_filter($digits, function($num)\
    \ {\n        return $num % 2 === 0;\n    });\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbv8ukktr.php:25\n\
    Stack trace:\n#0 /tmp/tmpbv8ukktr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbv8ukktr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        $result[] = strval($y);\n    }\n    return $result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. Your solution\
    \ is very close to my solution, but I still have a problem with my solution. My\
    \ solution returns `[152, 323, 1422, 10]` instead of `[1, 15, 33]`\n<|/ c |>\n\
    <| c |>\nI updated my answer, please check it again.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. Your solution is very close to my solution, but I still have\
    \ a problem with my solution. My solution returns `[152, 323, 1422, 10]` instead\
    \ of `[1, 15, 33]`\n<|/ c |>\n<| c |>\nI updated my answer, please check it again.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Your solution is very close to my solution,\
    \ but I still have a problem with my solution. My solution returns `[152, 323,\
    \ 1422, 10]` instead of `[1, 15, 33]`\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n\
    $arr = [15, 33, 1422, 1];\n$result = array_filter($arr, function($v){\n    return\
    \ !preg_match('/\\d/', $v);\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThanks for your answer. Your solution is very close to my solution,\
    \ but I still have a problem with my solution. My solution returns `[152, 323,\
    \ 1422, 10]` instead of `[1, 15, 33]`\n<|/ c |>\n<| c |>\nI updated my answer,\
    \ please check it again.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n$arr = [15, 33,\
    \ 1422, 1];\n$result = array_filter($arr, function($v){\n    return !preg_match('/\\\
    d/', $v);\n});\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$arr = [15, 33, 1422, 1];\n$result = array_filter($arr, function($v){\n\
    \    return !preg_match('/\\d/', $v);\n});\nprint_r($result);\n</code>\n<|/\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzddm6j01.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $digits = array();\n    foreach($x as $digit)\
    \ {\n        $digits[$digit] = 1;\n    }\n    foreach($x as $digit) {\n      \
    \  if(!isset($digits[$digit])) {\n            $digits[$digit] = 0;\n        }\n\
    \    }\n    $result = array();\n    foreach($digits as $digit => $count) {\n \
    \       if($count == 0) {\n            $result[] = $digit;\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThis doesn't work. Try it with `unique_digits([15, 33, 1422, 1])`.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I added a test case to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added a test case to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added a test case to the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added a test case to the answer.\n\
    <|/ c |>\n<| a tags=php,algorithm |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpid60cfe5.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $key => $value)\
    \ {\n        if ($value % 2 == 0) {\n            $result[] = $value;\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtiguf0g.php:25\n\
    Stack trace:\n#0 /tmp/tmpmtiguf0g.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmtiguf0g.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa9x8jdti.php:30\n\
    Stack trace:\n#0 /tmp/tmpa9x8jdti.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpa9x8jdti.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $e) {\n  \
    \      $digits = str_split($e);\n        $digits = array_filter($digits, 'is_numeric');\n\
    \        $digits = array_map('intval', $digits);\n        $digits = array_filter($digits,\
    \ 'is_int');\n        $digits = array_unique($digits);\n        $digits = array_values($digits);\n\
    \        $result = array_merge($result, $digits);\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsz5c9w8d.php:29\n\
    Stack trace:\n#0 /tmp/tmpsz5c9w8d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsz5c9w8d.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits($x) {\n    $result = [];\n    foreach ($x as $y) {\n  \
    \      $result[] = $y;\n    }\n    sort($result);\n    $result = [];\n    foreach\
    \ ($result as $y) {\n        if ($y % 2 == 0) {\n            $result[] = $y;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpay1f66cl.php:30\n\
    Stack trace:\n#0 /tmp/tmpay1f66cl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpay1f66cl.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception

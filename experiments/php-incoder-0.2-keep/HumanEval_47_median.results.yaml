name: HumanEval_47_median
language: php
results:
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ $l[($n - 1) / 2];\n    }\n    else {\n        return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzmq2uq_.php:25\n\
    Stack trace:\n#0 /tmp/tmpzzmq2uq_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzzmq2uq_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2] + ($l[($n - 1) / 2 + 1] / 2);\n  }\n  return $l[($n - 1) /\
    \ 2];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr739do8t.php:21\n\
    Stack trace:\n#0 /tmp/tmpr739do8t.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpr739do8t.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2.0;\n    }\n    return $l[($n -\
    \ 1) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxijtgy_.php:24\n\
    Stack trace:\n#0 /tmp/tmpnxijtgy_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnxijtgy_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $sorted = array_values($l);\n    sort($sorted);\n\
    \    $middle = count($sorted) / 2;\n    if ($middle == 0) {\n        return $sorted[0];\n\
    \    }\n    return ($sorted[$middle - 1] + $sorted[$middle]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzr4b2qo6.php:26\n\
    Stack trace:\n#0 /tmp/tmpzr4b2qo6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzr4b2qo6.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_values($l);\n    sort($l);\n    return $l[count($l)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgnse4w2x.php:19\n\
    Stack trace:\n#0 /tmp/tmpgnse4w2x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgnse4w2x.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) < 2) {\n    return $l[0];\n\
    \  }\n  $sorted = array_values($l);\n  sort($sorted);\n  $middle = count($sorted)\
    \ / 2;\n  return $sorted[$middle];\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjzccsns3.php:24\n\
    Stack trace:\n#0 /tmp/tmpjzccsns3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjzccsns3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjcpg9ooe.php:16\n\
    Stack trace:\n#0 /tmp/tmpjcpg9ooe.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpjcpg9ooe.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ $l[($n - 1) / 2];\n    }\n    else {\n        return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpybpp3yu5.php:25\n\
    Stack trace:\n#0 /tmp/tmpybpp3yu5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpybpp3yu5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_values($l);\n  sort($l);\n  return $l[count($l) /\
    \ 2 - 1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp9m7e54d.php:18\n\
    Stack trace:\n#0 /tmp/tmpp9m7e54d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp9m7e54d.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) return null;\n\
    \  sort($l);\n  $l = array_slice($l, count($l) / 2);\n  return $l[0];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpla0gda0m.php:20\n\
    Stack trace:\n#0 /tmp/tmpla0gda0m.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpla0gda0m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_reverse($l);\n  $n = count($l);\n  if ($n % 2) {\n\
    \    return $l[($n - 1) / 2]; // median = (left + right) / 2.0\n  }\n  else {\n\
    \    return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2.0; // median = (left + right)\
    \ / 2.0\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpydwnvnms.php:23\n\
    Stack trace:\n#0 /tmp/tmpydwnvnms.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpydwnvnms.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7uwd9jn8.php:21\n\
    Stack trace:\n#0 /tmp/tmp7uwd9jn8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7uwd9jn8.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52hp6qf9.php:23\n\
    Stack trace:\n#0 /tmp/tmp52hp6qf9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp52hp6qf9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n    return\
    \ 0;\n  }\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n - 1) / 2]\
    \ + $l[($n - 1) / 2 + 1];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ye8v6bq.php:26\n\
    Stack trace:\n#0 /tmp/tmp4ye8v6bq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4ye8v6bq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfmmwws6.php:16\n\
    Stack trace:\n#0 /tmp/tmpdfmmwws6.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdfmmwws6.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return $l[($n - 1) / 2];\n    } else {\n        return ($l[($n - 1) /\
    \ 2] + $l[($n - 2) / 2]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdeth8w85.php:22\n\
    Stack trace:\n#0 /tmp/tmpdeth8w85.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpdeth8w85.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[($n - 1) / 2] + $l[($n - 1) / 2 - 1];\n    }\n    return\
    \ $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmay762o6.php:21\n\
    Stack trace:\n#0 /tmp/tmpmay762o6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmay762o6.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $sorted = array_values($l);\n    sort($sorted);\n\
    \    return $sorted[count($sorted) / 2];\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2a59zh6g.php:23\n\
    Stack trace:\n#0 /tmp/tmp2a59zh6g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2a59zh6g.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n    return\
    \ null;\n  }\n  sort($l);\n  $l = array_slice($l, count($l) / 2);\n  return $l[0];\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5zvf0ne.php:22\n\
    Stack trace:\n#0 /tmp/tmpb5zvf0ne.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpb5zvf0ne.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_values($l);\n    $n = count($l);\n    if ($n %\
    \ 2 == 0) {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1)\
    \ / 2] + $l[($n - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcvkjql7s.php:21\n\
    Stack trace:\n#0 /tmp/tmpcvkjql7s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcvkjql7s.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    return $l[count($l)/2];\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu60isp0p.php:17\n\
    Stack trace:\n#0 /tmp/tmpu60isp0p.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpu60isp0p.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_values($l);\n    sort($l);\n    return $l[count($l)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7y4t0r4.php:19\n\
    Stack trace:\n#0 /tmp/tmpc7y4t0r4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc7y4t0r4.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) return null;\n\
    \    $l = array_reverse($l);\n    $l = array_slice($l, 0, floor(count($l) / 2));\n\
    \    return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1fvidpo.php:20\n\
    Stack trace:\n#0 /tmp/tmpf1fvidpo.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpf1fvidpo.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    if (count($l) == 0) {\n        return null;\n    }\n    $sorted\
    \ = array_sort($l);\n    return $sorted[count($sorted) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function array_sort()\
    \ in /tmp/tmpvyzg9mr1.php:11\nStack trace:\n#0 /tmp/tmpvyzg9mr1.php(16): median(Array)\n\
    #1 /tmp/tmpvyzg9mr1.php(20): candidate(Array)\n#2 /tmp/tmpvyzg9mr1.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvyzg9mr1.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 == 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl0ivp9g.php:18\n\
    Stack trace:\n#0 /tmp/tmpkl0ivp9g.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkl0ivp9g.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $l = array_slice($l, 0, -1);\n    $n = count($l);\n\
    \    if ($n % 2 == 0) {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n\
    \ - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppl1gqi_u.php:25\n\
    Stack trace:\n#0 /tmp/tmppl1gqi_u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppl1gqi_u.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    if (count($l) % 2 == 0) {\n        return $l[count($l) / 2\
    \ - 1];\n    }\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxul57rzj.php:19\n\
    Stack trace:\n#0 /tmp/tmpxul57rzj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxul57rzj.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc0pbcxei.php:17\n\
    Stack trace:\n#0 /tmp/tmpc0pbcxei.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpc0pbcxei.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1])\
    \ / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz5_bvda.php:24\n\
    Stack trace:\n#0 /tmp/tmpkz5_bvda.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkz5_bvda.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2 == 0) {\n        return $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1)\
    \ / 2]) / 2;\n    }\n    return $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo34ttz5q.php:21\n\
    Stack trace:\n#0 /tmp/tmpo34ttz5q.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpo34ttz5q.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  throw new Exception('Cannot calculate median of an empty list');\n    }\n \
    \   return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpht42kmac.php:20\n\
    Stack trace:\n#0 /tmp/tmpht42kmac.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpht42kmac.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpwid1n1__.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpwid1n1__.php:17\nStack trace:\n#0 /tmp/tmpwid1n1__.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwid1n1__.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93l0vt1g.php:16\n\
    Stack trace:\n#0 /tmp/tmp93l0vt1g.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp93l0vt1g.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] - $l[($n - 2)\
    \ / 2 + 1]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyg2a08ys.php:22\n\
    Stack trace:\n#0 /tmp/tmpyg2a08ys.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyg2a08ys.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmptbx43u1d.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmptbx43u1d.php:23\nStack trace:\n#0 /tmp/tmptbx43u1d.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptbx43u1d.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  sort($l);\n  return $l[count($l) / 2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwhaawhj.php:20\n\
    Stack trace:\n#0 /tmp/tmpjwhaawhj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjwhaawhj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  }\n  return\
    \ $l[($n - 1) / 2];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdi_z15bg.php:21\n\
    Stack trace:\n#0 /tmp/tmpdi_z15bg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpdi_z15bg.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) return null;\n\
    \    $n = count($l);\n    if ($n % 2 == 0) {\n        return $l[($n - 1) / 2]\
    \ + $l[($n - 1) / 2 - 1];\n    }\n    else {\n        return ($l[($n - 1) / 2]\
    \ + $l[($n - 1) / 2]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86rgx0hw.php:24\n\
    Stack trace:\n#0 /tmp/tmp86rgx0hw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp86rgx0hw.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) return null;\n\
    \    $l = array_reverse($l);\n    $l = array_slice($l, count($l) / 2);\n    return\
    \ $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3we7tfj.php:20\n\
    Stack trace:\n#0 /tmp/tmpe3we7tfj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe3we7tfj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjfg7nv8.php:22\n\
    Stack trace:\n#0 /tmp/tmpmjfg7nv8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmjfg7nv8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6h0vi_rj.php:18\n\
    Stack trace:\n#0 /tmp/tmp6h0vi_rj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6h0vi_rj.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return $l[($n\
    \ + 1) / 2];\n  }\n  else {\n    return ($l[$n / 2] + $l[($n - 1) / 2) / 2];\n\
    \  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp0sc8a_03.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqupspet0.php:22\n\
    Stack trace:\n#0 /tmp/tmpqupspet0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqupspet0.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[(count($l)/2)-1];\n    } else {\n        return ($l[($n-1)/2]\
    \ + $l[($n)/2]) / 2.0;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpus48zacm.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpus48zacm.php:22\nStack trace:\n#0 /tmp/tmpus48zacm.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpus48zacm.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    $l = array_reverse($l);\n    $l\
    \ = array_values($l);\n    $l = array_slice($l, count($l) / 2);\n    return $l[0];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8ujs_tj.php:20\n\
    Stack trace:\n#0 /tmp/tmpj8ujs_tj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpj8ujs_tj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[($n - 1) / 2];\n    } else {\n        return ($l[($n -\
    \ 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmphd96q41h.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmphd96q41h.php:22\nStack trace:\n#0 /tmp/tmphd96q41h.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphd96q41h.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[(count($l) /\
    \ 2) - 1];\n    }\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprn3k_mha.php:19\n\
    Stack trace:\n#0 /tmp/tmprn3k_mha.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprn3k_mha.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) < 1) return null;\n  sort($l);\n  $n = count($l);\n\
    \  if ($n % 2 == 0) {\n    return $l[($n - 1) / 2];\n  }\n  else {\n    return\
    \ ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxxg5lbx.php:23\n\
    Stack trace:\n#0 /tmp/tmplxxg5lbx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplxxg5lbx.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[$n/2];\n    }\n    return ($l[$n/2] + $l[($n/2)-1])\
    \ / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimavz9ie.php:21\n\
    Stack trace:\n#0 /tmp/tmpimavz9ie.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpimavz9ie.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) / 2] - $l[($n\
    \ - 1) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpuiwudbr9.php on line 9\n\nWarning: count(): Parameter must\
    \ be an array or an object that implements Countable in /tmp/tmpuiwudbr9.php on\
    \ line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuiwudbr9.php:23\n\
    Stack trace:\n#0 /tmp/tmpuiwudbr9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuiwudbr9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[($n - 1) / 2] + $l[($n - 2) / 2];\n    } else {\n  \
    \      return $l[($n - 1) / 2];\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_yv0w0s.php:22\n\
    Stack trace:\n#0 /tmp/tmpw_yv0w0s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw_yv0w0s.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2) {\n \
    \       return $l[(count($l) / 2) - 1];\n    }\n    return ($l[($n - 1) / 2] -\
    \ $l[($n - 1) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpbfxzbuxi.php on line 9\n\nWarning: count(): Parameter must\
    \ be an array or an object that implements Countable in /tmp/tmpbfxzbuxi.php on\
    \ line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfxzbuxi.php:21\n\
    Stack trace:\n#0 /tmp/tmpbfxzbuxi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbfxzbuxi.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuy8jif5x.php:18\n\
    Stack trace:\n#0 /tmp/tmpuy8jif5x.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuy8jif5x.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkyq4rnrj.php:18\n\
    Stack trace:\n#0 /tmp/tmpkyq4rnrj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkyq4rnrj.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_values($l);\n    sort($l);\n    return $l[count($l)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyp_ypgj7.php:19\n\
    Stack trace:\n#0 /tmp/tmpyp_ypgj7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyp_ypgj7.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp182qv5yw.php:17\n\
    Stack trace:\n#0 /tmp/tmp182qv5yw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp182qv5yw.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp1zeph4ie.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp1zeph4ie.php:17\nStack trace:\n#0 /tmp/tmp1zeph4ie.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1zeph4ie.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[$n / 2];\n  }\n  else {\n    return ($l[$n / 2] + $l[($n - 1) / 2]) / 2;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpf6qbfn_s.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpf6qbfn_s.php:22\nStack trace:\n#0 /tmp/tmpf6qbfn_s.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpf6qbfn_s.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[(count($l) / 2) - 1];\n    }\n    return ($l[($n - 1) /\
    \ 2] - $l[$n / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp8dn0g869.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp8dn0g869.php:21\nStack trace:\n#0 /tmp/tmp8dn0g869.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8dn0g869.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwm55i9m8.php:22\n\
    Stack trace:\n#0 /tmp/tmpwm55i9m8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwm55i9m8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2) {\n \
    \       return $l[(count($l) / 2) - 1];\n    }\n    return ($l[($n - 1) / 2] -\
    \ $l[($n - 1) / 2]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpvdxruahr.php on line 9\n\nWarning: count(): Parameter must\
    \ be an array or an object that implements Countable in /tmp/tmpvdxruahr.php on\
    \ line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvdxruahr.php:20\n\
    Stack trace:\n#0 /tmp/tmpvdxruahr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvdxruahr.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  } else {\n\
    \    return $l[($n - 1) / 2];\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvqxlq78_.php:22\n\
    Stack trace:\n#0 /tmp/tmpvqxlq78_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvqxlq78_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ $l[($n - 1) / 2];\n    }\n    else {\n        return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigzm0qcj.php:26\n\
    Stack trace:\n#0 /tmp/tmpigzm0qcj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpigzm0qcj.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) / 2] - $l[($n\
    \ - 2) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpv81h6sr4.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) < 1) return NULL;\n  $sorted = array_sort($l);\n\
    \  $count = count($sorted);\n  if ($count % 2) return $sorted[($count / 2) - 1];\n\
    \  else return ($sorted[($count / 2) - 1] + $sorted[$count / 2]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function array_sort()\
    \ in /tmp/tmpbbib3voq.php:9\nStack trace:\n#0 /tmp/tmpbbib3voq.php(16): median(Array)\n\
    #1 /tmp/tmpbbib3voq.php(20): candidate(Array)\n#2 /tmp/tmpbbib3voq.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbbib3voq.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[count($l) /\
    \ 2 - 1];\n    }\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzmaljry.php:19\n\
    Stack trace:\n#0 /tmp/tmpgzmaljry.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgzmaljry.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) return null;\n\
    \    $sorted = array_values($l);\n    sort($sorted);\n    return $sorted[count($sorted)\
    \ / 2 - 1];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97zr9f5o.php:19\n\
    Stack trace:\n#0 /tmp/tmp97zr9f5o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp97zr9f5o.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    $l = array_map('intval', $l);\n\
    \    $l = array_filter($l);\n    return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq336kd3t.php:19\n\
    Stack trace:\n#0 /tmp/tmpq336kd3t.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq336kd3t.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n    }\n  \
    \  return $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpot1x5_0p.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpot1x5_0p.php:21\nStack trace:\n#0 /tmp/tmpot1x5_0p.php(28):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpot1x5_0p.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    return $l[count($l)/2];\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp58adair_.php:17\n\
    Stack trace:\n#0 /tmp/tmp58adair_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp58adair_.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmply_n2lho.php:21\n\
    Stack trace:\n#0 /tmp/tmply_n2lho.php(28): test()\n#1 {main}\n  thrown in /tmp/tmply_n2lho.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_reverse($l);\n  $n = count($l);\n  if ($n % 2 ==\
    \ 0) {\n    return $l[($n - 1) / 2] + $l[($n - 2) / 2];\n  }\n  return ($l[($n\
    \ - 1) / 2] + $l[($n - 2) / 2] + $l[($n - 3) / 2]) / 3;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkp1o6mf5.php:20\n\
    Stack trace:\n#0 /tmp/tmpkp1o6mf5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpkp1o6mf5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n    return\
    \ 0;\n  }\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_811ew4.php:21\n\
    Stack trace:\n#0 /tmp/tmpe_811ew4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe_811ew4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n - 1)\
    \ / 2] + ($l[($n - 1) / 2 + 1] / 2);\n  }\n  return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmp8okw2.php:20\n\
    Stack trace:\n#0 /tmp/tmpcmp8okw2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcmp8okw2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_values($l);\n    $n = count($l);\n    if ($n %\
    \ 2 == 0) {\n        return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n \
    \   }\n    return $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args) {\n   \
    \ return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphjemrni6.php:21\n\
    Stack trace:\n#0 /tmp/tmphjemrni6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphjemrni6.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1)\
    \ / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmbwalw6.php:23\n\
    Stack trace:\n#0 /tmp/tmppmbwalw6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppmbwalw6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n  \
    \  return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpgtcr4kdn.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgtcr4kdn.php:22\nStack trace:\n#0 /tmp/tmpgtcr4kdn.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgtcr4kdn.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2bp5wd3.php:17\n\
    Stack trace:\n#0 /tmp/tmpk2bp5wd3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpk2bp5wd3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dkhwxtw.php:17\n\
    Stack trace:\n#0 /tmp/tmp8dkhwxtw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8dkhwxtw.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $l = array_reverse($l);\n    return $l[floor(count($l)\
    \ / 2)];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvla50uw.php:21\n\
    Stack trace:\n#0 /tmp/tmplvla50uw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplvla50uw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpp65pm8.php:18\n\
    Stack trace:\n#0 /tmp/tmptpp65pm8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptpp65pm8.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $l = array_reverse($l);\n    $l = array_slice($l,\
    \ 0, count($l) / 2);\n    return $l[count($l) / 2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppx0h2c82.php:22\n\
    Stack trace:\n#0 /tmp/tmppx0h2c82.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppx0h2c82.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[($n - 1) / 2];\n    }\n    $m = $l[($n - 1) / 2];\n\
    \    foreach ($l as $i => $x) {\n        if ($x < $m) {\n            $m = $x;\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoyrfw65v.php:27\n\
    Stack trace:\n#0 /tmp/tmpoyrfw65v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoyrfw65v.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpba7f2ekf.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpba7f2ekf.php:20\nStack trace:\n#0 /tmp/tmpba7f2ekf.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpba7f2ekf.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return\
    \ $l[($n - 1) / 2];\n    }\n    else {\n        return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1z6ye0e.php:26\n\
    Stack trace:\n#0 /tmp/tmpo1z6ye0e.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo1z6ye0e.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[$n/2];\n  }\n  else {\n    return ($l[$n/2] + $l[($n-1)/2]) / 2.0;\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp0lujnk3q.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0lujnk3q.php:23\nStack trace:\n#0 /tmp/tmp0lujnk3q.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0lujnk3q.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk26nhi71.php:17\n\
    Stack trace:\n#0 /tmp/tmpk26nhi71.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpk26nhi71.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_reverse($l);\n  $n = count($l);\n  if ($n % 2 ==\
    \ 0) {\n    return $l[($n - 1) / 2] + $l[($n - 2) / 2];\n  }\n  return ($l[($n\
    \ - 1) / 2] + $l[($n - 2) / 2] + $l[($n - 3) / 2]) / 3;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzk5gkyi.php:20\n\
    Stack trace:\n#0 /tmp/tmpfzk5gkyi.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfzk5gkyi.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n\
    \ % 2 == 0) {\n        return $l[$m];\n    }\n    return ($l[$m] + $l[($m - 1)]);\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0dxja8q.php:26\n\
    Stack trace:\n#0 /tmp/tmpj0dxja8q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpj0dxja8q.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  $m = $l[count($l) / 2];\n  foreach ($l as $n) {\n    if ($n < $m) {\n\
    \      $m = $n;\n    }\n  }\n  return $m;\n}\n</code>\n<|/ a dscore=2 |>\n<| a\
    \ dscore=2 |>\n<code>\n<?php\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$median\
    \ = array_sum($arr) / count($arr);\n$median = array_sum($arr) / count($arr);\n\
    echo $median;\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmplf1nmaps.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2]\
    \ + $l[($n - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_mssn6s.php:21\n\
    Stack trace:\n#0 /tmp/tmp1_mssn6s.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1_mssn6s.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccilbz8i.php:18\n\
    Stack trace:\n#0 /tmp/tmpccilbz8i.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpccilbz8i.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjw50l_o.php:18\n\
    Stack trace:\n#0 /tmp/tmppjw50l_o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppjw50l_o.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $l = array_reverse($l);\n    $l = array_slice($l,\
    \ 0, count($l) / 2);\n    return $l[count($l) / 2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zaqk29d.php:22\n\
    Stack trace:\n#0 /tmp/tmp3zaqk29d.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3zaqk29d.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, count($l)\
    \ / 2);\n    $l = array_merge($l, array_slice($l, count($l) / 2));\n    return\
    \ $l[count($l) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28iwq9y_.php:19\n\
    Stack trace:\n#0 /tmp/tmp28iwq9y_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp28iwq9y_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpntdh1yvp.php:18\n\
    Stack trace:\n#0 /tmp/tmpntdh1yvp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpntdh1yvp.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ ($l[$n-1] + $l[$n/2]) / 2.0;\n  } else {\n    return $l[$n/2];\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15hqjk5y.php:23\n\
    Stack trace:\n#0 /tmp/tmp15hqjk5y.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp15hqjk5y.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $l = array_reverse($l);\n    $l = array_slice($l,\
    \ 0, -1);\n    return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jmr0otz.php:22\n\
    Stack trace:\n#0 /tmp/tmp6jmr0otz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6jmr0otz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp7q8d10jq.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp7q8d10jq.php:17\nStack trace:\n#0 /tmp/tmp7q8d10jq.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7q8d10jq.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, -1);\n\
    \    $l = array_filter($l);\n    $l = array_reverse($l);\n    $l = array_slice($l,\
    \ 0, -1);\n    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphiq5zqjv.php:21\n\
    Stack trace:\n#0 /tmp/tmphiq5zqjv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphiq5zqjv.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1)\
    \ / 2 - 1]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7sy6r3o.php:22\n\
    Stack trace:\n#0 /tmp/tmp_7sy6r3o.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_7sy6r3o.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk39kbe3w.php:18\n\
    Stack trace:\n#0 /tmp/tmpk39kbe3w.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk39kbe3w.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n  \
    \  return $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  } else\
    \ {\n    return $l[($n - 1) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpm7g6xbir.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpm7g6xbir.php:22\nStack trace:\n#0 /tmp/tmpm7g6xbir.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpm7g6xbir.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  return $l[count($l) / 2 - 1];\n}\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18zayqrr.php:16\n\
    Stack trace:\n#0 /tmp/tmp18zayqrr.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp18zayqrr.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ ($l[$n-1] + $l[$n/2]) / 2.0;\n  } else {\n    return $l[$n/2];\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vqnqzkl.php:23\n\
    Stack trace:\n#0 /tmp/tmp6vqnqzkl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6vqnqzkl.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $sorted = array_values($l);\n    sort($sorted);\n\
    \    $middle = count($sorted) / 2;\n    return $sorted[$middle];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf9ac0_6.php:23\n\
    Stack trace:\n#0 /tmp/tmpcf9ac0_6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcf9ac0_6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1)\
    \ / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppp_ew5ch.php:23\n\
    Stack trace:\n#0 /tmp/tmppp_ew5ch.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppp_ew5ch.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4cbo0b5.php:18\n\
    Stack trace:\n#0 /tmp/tmpy4cbo0b5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpy4cbo0b5.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 == 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekbhjmtd.php:21\n\
    Stack trace:\n#0 /tmp/tmpekbhjmtd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpekbhjmtd.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n      \
    \  return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjb3a_ss9.php:22\n\
    Stack trace:\n#0 /tmp/tmpjb3a_ss9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjb3a_ss9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 == 0) {\n    return $l[(count($l) / 2) - 1];\n\
    \  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqd8t67_.php:21\n\
    Stack trace:\n#0 /tmp/tmpgqd8t67_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgqd8t67_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[(count($l) / 2)];\n  } else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgk9pfv__.php:21\n\
    Stack trace:\n#0 /tmp/tmpgk9pfv__.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgk9pfv__.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7unugrqs.php:16\n\
    Stack trace:\n#0 /tmp/tmp7unugrqs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7unugrqs.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) return null;\n\
    \    $n = count($l);\n    $l = array_slice($l, 0, $n / 2);\n    $l = array_merge($l,\
    \ array_slice($l, ($n - 1) / 2));\n    return $l[count($l) / 2 - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qgf5n_p.php:22\n\
    Stack trace:\n#0 /tmp/tmp2qgf5n_p.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2qgf5n_p.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n -\
    \ 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__wlu1m3.php:22\n\
    Stack trace:\n#0 /tmp/tmp__wlu1m3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp__wlu1m3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[($n - 1) / 2];\n    }\n    $m = $l[($n - 1) / 2];\n\
    \    foreach ($l as $i => $e) {\n        if ($e < $m) {\n            $m = $e;\n\
    \        }\n    }\n    return $m;\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppcuw3g44.php:27\n\
    Stack trace:\n#0 /tmp/tmppcuw3g44.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppcuw3g44.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[$n / 2];\n    }\n    return ($l[$n / 2] + $l[($n - 1)\
    \ / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2e_vvnfr.php:21\n\
    Stack trace:\n#0 /tmp/tmp2e_vvnfr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2e_vvnfr.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) / 2] - $l[($n\
    \ - 2) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpjsl5ki95.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) return null;\n\
    \  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[(count($l)\
    \ / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) / 2] - $l[($n - 1) / 2])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6qd2o28g.php:25\n\
    Stack trace:\n#0 /tmp/tmp6qd2o28g.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6qd2o28g.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n    return\
    \ 0;\n  }\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[(count($l)\
    \ / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) / 2] - $l[($n - 1) / 2])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0a1whh9.php:27\n\
    Stack trace:\n#0 /tmp/tmpq0a1whh9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpq0a1whh9.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) return null;\n\
    \  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoabe3v9m.php:20\n\
    Stack trace:\n#0 /tmp/tmpoabe3v9m.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpoabe3v9m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_values($l);\n    sort($l);\n    $n = count($l);\n\
    \    if ($n % 2) {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n\
    \ - 1) / 2] + $l[($n - 2) / 2) / 2];\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgv0lbepr.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpeoaxpapj.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpeoaxpapj.php:16\nStack trace:\n#0 /tmp/tmpeoaxpapj.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpeoaxpapj.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[count($l) /\
    \ 2 - 1];\n    }\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnbx90vnw.php:19\n\
    Stack trace:\n#0 /tmp/tmpnbx90vnw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpnbx90vnw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    return $l[count($l)/2];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_fuua_v.php:16\n\
    Stack trace:\n#0 /tmp/tmpo_fuua_v.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpo_fuua_v.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1)\
    \ / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpn70vvofz.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpn70vvofz.php:23\nStack trace:\n#0 /tmp/tmpn70vvofz.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpn70vvofz.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmps_8d39or.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmps_8d39or.php:17\nStack trace:\n#0 /tmp/tmps_8d39or.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps_8d39or.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9pom0gc.php:16\n\
    Stack trace:\n#0 /tmp/tmpr9pom0gc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpr9pom0gc.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  return $l[count($l)/2];\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j8lzgt4.php:17\n\
    Stack trace:\n#0 /tmp/tmp1j8lzgt4.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp1j8lzgt4.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return $l[(count($l) / 2) - 1];\n    }\n    return ($l[($n - 1) / 2] -\
    \ $l[($n - 2) / 2];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmpf3aj_y_5.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 == 0) {\n    return $l[(count($l) / 2) - 1];\n\
    \  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpurpde_fu.php:20\n\
    Stack trace:\n#0 /tmp/tmpurpde_fu.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpurpde_fu.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    if (count($l) % 2 == 0) {\n        $l = array_reverse($l);\n\
    \    }\n    $l = array_slice($l, count($l) / 2);\n    return $l[count($l) / 2\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu2s4pmj.php:20\n\
    Stack trace:\n#0 /tmp/tmppu2s4pmj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppu2s4pmj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[($n - 1) / 2]; // median = (n-1) / 2\n    }\n    else\
    \ {\n        return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiphy1l3q.php:23\n\
    Stack trace:\n#0 /tmp/tmpiphy1l3q.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpiphy1l3q.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_74qolm.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_74qolm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpm_74qolm.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n    return\
    \ null;\n  }\n  sort($l);\n  $l = array_slice($l, count($l) / 2);\n  return $l[0];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8gt9845.php:23\n\
    Stack trace:\n#0 /tmp/tmpn8gt9845.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpn8gt9845.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip2xlcjm.php:24\n\
    Stack trace:\n#0 /tmp/tmpip2xlcjm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpip2xlcjm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptmddfl6h.php:18\n\
    Stack trace:\n#0 /tmp/tmptmddfl6h.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptmddfl6h.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n      \
    \  return $l[($n + 1) / 2];\n    } else {\n        return ($l[($n - 1) / 2] +\
    \ $l[($n - 2) / 2]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3n8246zq.php:22\n\
    Stack trace:\n#0 /tmp/tmp3n8246zq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3n8246zq.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return $l[($n + 1) / 2];\n    } else {\n        return ($l[($n - 1) /\
    \ 2] - $l[($n - 2) / 2 + 1]) / 2;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8qa7m1vq.php:22\n\
    Stack trace:\n#0 /tmp/tmp8qa7m1vq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8qa7m1vq.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_saf07h.php:22\n\
    Stack trace:\n#0 /tmp/tmp4_saf07h.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4_saf07h.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) return null;\n\
    \    $l = array_reverse($l);\n    $l = array_slice($l, count($l) / 2);\n    return\
    \ $l[0];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxsmn4pi5.php:19\n\
    Stack trace:\n#0 /tmp/tmpxsmn4pi5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxsmn4pi5.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_values($l);\n    sort($l);\n    return $l[count($l)/2];\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8xsnzka.php:18\n\
    Stack trace:\n#0 /tmp/tmph8xsnzka.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph8xsnzka.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n  \
    \  return $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  } else\
    \ {\n    return $l[($n - 1) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpwqm80njo.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpwqm80njo.php:22\nStack trace:\n#0 /tmp/tmpwqm80njo.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwqm80njo.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n - 1)\
    \ / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) /\
    \ 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4h2lnup.php:21\n\
    Stack trace:\n#0 /tmp/tmpr4h2lnup.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpr4h2lnup.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  $mid = count($l) / 2;\n  return ($l[$mid - 1] + $l[$mid]) / 2;\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbky5lss4.php:20\n\
    Stack trace:\n#0 /tmp/tmpbky5lss4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbky5lss4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mrld57w.php:21\n\
    Stack trace:\n#0 /tmp/tmp4mrld57w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4mrld57w.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, count($l)/2);\n\
    \    return $l[count($l)/2];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzw0vi4c.php:17\n\
    Stack trace:\n#0 /tmp/tmpqzw0vi4c.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqzw0vi4c.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n      \
    \  return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n}\n</code>\n<|/ a tags=php,median,arrays |>\n<| c |>\nThis doesn't\
    \ work if there are two equal numbers in the array.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if there are two equal numbers in the array.\n<|/ c |>\n<| a dscore=4 |>\n\
    <code>\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp0e_g29xi.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n    return\
    \ null;\n  }\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n - 1)\
    \ / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) /\
    \ 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06m3hujx.php:26\n\
    Stack trace:\n#0 /tmp/tmp06m3hujx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp06m3hujx.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[(count($l) / 2)];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n -\
    \ 2) / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpayfj9a.php:22\n\
    Stack trace:\n#0 /tmp/tmpfpayfj9a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfpayfj9a.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return $l[($n\
    \ + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2])\
    \ / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ini6fdc.php:23\n\
    Stack trace:\n#0 /tmp/tmp_ini6fdc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_ini6fdc.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 == 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9686nsbv.php:19\n\
    Stack trace:\n#0 /tmp/tmp9686nsbv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9686nsbv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n -\
    \ 1) / 2];\n  }\n  else {\n    $m = $n / 2;\n    $l[0] = $l[$m];\n    $l[$m] =\
    \ $l[0];\n    return $l[($n - 1) / 2];\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpky7fi7h2.php:25\n\
    Stack trace:\n#0 /tmp/tmpky7fi7h2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpky7fi7h2.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3nhueio.php:16\n\
    Stack trace:\n#0 /tmp/tmpe3nhueio.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpe3nhueio.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $sorted = array_values($l);\n    sort($sorted);\n\
    \    return $sorted[(count($sorted) - 1) / 2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb5vl9no.php:23\n\
    Stack trace:\n#0 /tmp/tmptb5vl9no.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptb5vl9no.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $n = count($l);\n  if ($n % 2 === 0) {\n    return $l[($n -\
    \ 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) /\
    \ 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzllvxrqx.php:21\n\
    Stack trace:\n#0 /tmp/tmpzllvxrqx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzllvxrqx.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n  \
    \  return $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) / 2]\
    \ - $l[($n - 1) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpqv2b1_1p.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpqv2b1_1p.php:23\nStack trace:\n#0 /tmp/tmpqv2b1_1p.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqv2b1_1p.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n    return\
    \ null;\n  }\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[$n / 2];\n  }\n  return ($l[$n / 2] + $l[($n - 1) / 2]) / 2;\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeu4w81w2.php:25\n\
    Stack trace:\n#0 /tmp/tmpeu4w81w2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpeu4w81w2.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n - 1)\
    \ / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  }\n  else {\n    return\
    \ ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0lmd598.php:22\n\
    Stack trace:\n#0 /tmp/tmpv0lmd598.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv0lmd598.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpp9afw_a1.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpp9afw_a1.php:16\nStack trace:\n#0 /tmp/tmpp9afw_a1.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpp9afw_a1.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    if (count($l) % 2 === 0) {\n        $l = $l[count($l) / 2\
    \ - 1];\n    }\n    return $l[floor(count($l) / 2)];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3juotcy.php:19\n\
    Stack trace:\n#0 /tmp/tmpm3juotcy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpm3juotcy.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    $n = count($l);\n    if ($n &\
    \ 1) {\n        return $l[($n - 1) / 2];\n    }\n    $m = $n / 2;\n    $l1 = $l[$m];\n\
    \    $l2 = $l[$n - 1];\n    return ($l1 + $l2) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmjh6aeg.php:24\n\
    Stack trace:\n#0 /tmp/tmpbmjh6aeg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbmjh6aeg.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) return NULL;\n\
    \  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n - 1)\
    \ / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) /\
    \ 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0l952wet.php:25\n\
    Stack trace:\n#0 /tmp/tmp0l952wet.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0l952wet.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    $l = array_reverse($l);\n    $l\
    \ = array_slice($l, 0, floor(count($l)/2));\n    return $l[count($l)-1];\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkk4xetqq.php:19\n\
    Stack trace:\n#0 /tmp/tmpkk4xetqq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkk4xetqq.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n    return\
    \ 0;\n  }\n  sort($l);\n  return $l[count($l) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbhk50uc.php:21\n\
    Stack trace:\n#0 /tmp/tmpxbhk50uc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxbhk50uc.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgq1paxvy.php:18\n\
    Stack trace:\n#0 /tmp/tmpgq1paxvy.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgq1paxvy.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvn7dwtz9.php:22\n\
    Stack trace:\n#0 /tmp/tmpvn7dwtz9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvn7dwtz9.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $sorted = array_values($l);\n    sort($sorted);\n\
    \    return $sorted[count($sorted) / 2];\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hkjgav_.php:23\n\
    Stack trace:\n#0 /tmp/tmp9hkjgav_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9hkjgav_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[($n - 1) / 2] / $n;\n    }\n    return ($l[($n - 1)\
    \ / 2] + $l[($n - 2) / 2]) / $n;\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5lzcwz7f.php:21\n\
    Stack trace:\n#0 /tmp/tmp5lzcwz7f.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5lzcwz7f.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) % 2 === 0) {\n    return $l[count($l) / 2 - 1];\n\
    \  }\n  return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2e3k150c.php:19\n\
    Stack trace:\n#0 /tmp/tmp2e3k150c.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2e3k150c.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxcl667df.php:18\n\
    Stack trace:\n#0 /tmp/tmpxcl667df.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxcl667df.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    if (count($l) % 2 == 0) {\n        return $l[(count($l) /\
    \ 2) - 1];\n    } else {\n        return ($l[count($l) / 2] + $l[count($l) / 2\
    \ - 1]) / 2;\n    }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8qbc01yy.php:19\n\
    Stack trace:\n#0 /tmp/tmp8qbc01yy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8qbc01yy.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qrcc49k.php:18\n\
    Stack trace:\n#0 /tmp/tmp0qrcc49k.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0qrcc49k.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0w3k117.php:17\n\
    Stack trace:\n#0 /tmp/tmpl0w3k117.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpl0w3k117.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[($n - 1) / 2]; // median = (left + right) / 2;\n   \
    \ } else {\n        return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpko243tgz.php:22\n\
    Stack trace:\n#0 /tmp/tmpko243tgz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpko243tgz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) % 2 == 0) {\n    return\
    \ $l[count($l) / 2 - 1];\n  }\n  else {\n    return ($l[count($l) / 2] + $l[count($l)\
    \ / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_w2lvz6.php:22\n\
    Stack trace:\n#0 /tmp/tmpq_w2lvz6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq_w2lvz6.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2 == 0) {\n        return $l[($n - 1) / 2] + $l[($n - 2) / 2];\n    }\n    return\
    \ ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45ralhup.php:22\n\
    Stack trace:\n#0 /tmp/tmp45ralhup.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp45ralhup.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  throw new Exception('Cannot calculate median of an empty list');\n    }\n \
    \   $l = array_values($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n    \
    \    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 + 1]) / 2.0;\n    }\n    return\
    \ ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2.0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4fys6vx3.php:25\n\
    Stack trace:\n#0 /tmp/tmp4fys6vx3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4fys6vx3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    return $l[count($l)/2];\n}\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqw717p29.php:15\n\
    Stack trace:\n#0 /tmp/tmpqw717p29.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpqw717p29.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return $l[($n + 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 1) / 2 - 1]) / 2;\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphh8uoa7q.php:20\n\
    Stack trace:\n#0 /tmp/tmphh8uoa7q.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphh8uoa7q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $sorted = array_values($l);\n    sort($sorted);\n\
    \    return $sorted[count($sorted) / 2 - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaoei0au2.php:22\n\
    Stack trace:\n#0 /tmp/tmpaoei0au2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaoei0au2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return $l[($n\
    \ - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 -\
    \ 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__lqfxpa.php:24\n\
    Stack trace:\n#0 /tmp/tmp__lqfxpa.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp__lqfxpa.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    if (count($l) == 0) {\n      \
    \  return null;\n    }\n    $sorted = array_values($l);\n    sort($sorted);\n\
    \    return $sorted[count($sorted) / 2];\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppl77jto4.php:23\n\
    Stack trace:\n#0 /tmp/tmppl77jto4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppl77jto4.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) return null;\n\
    \  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n + 1)\
    \ / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprl99mqbn.php:24\n\
    Stack trace:\n#0 /tmp/tmprl99mqbn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprl99mqbn.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    return $l[count($l)/2];\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6fiy2_2z.php:17\n\
    Stack trace:\n#0 /tmp/tmp6fiy2_2z.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6fiy2_2z.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6898kxv.php:17\n\
    Stack trace:\n#0 /tmp/tmpb6898kxv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpb6898kxv.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv4w7ex34.php:18\n\
    Stack trace:\n#0 /tmp/tmpv4w7ex34.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpv4w7ex34.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = sort($l);\n    return $l[count($l)/2];\n}\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpwtqqs8dx.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpwtqqs8dx.php:16\nStack trace:\n#0 /tmp/tmpwtqqs8dx.php(23):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwtqqs8dx.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  if (count($l) == 0) return null;\n  sort($l);\n  $n = count($l);\n\
    \  if ($n % 2 == 0) {\n    return $l[($n - 1) / 2];\n  }\n  else {\n    return\
    \ ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuyw5y075.php:24\n\
    Stack trace:\n#0 /tmp/tmpuyw5y075.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuyw5y075.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return\
    \ $l[(count($l) / 2) - 1];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc6gp2fu.php:22\n\
    Stack trace:\n#0 /tmp/tmpvc6gp2fu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvc6gp2fu.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    if ($n %\
    \ 2 == 0) {\n        return ($l[($n - 1) / 2] + $l[($n - 2) / 2]) / 2;\n    }\n\
    \    return $l[($n - 1) / 2];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsotwfe5l.php:20\n\
    Stack trace:\n#0 /tmp/tmpsotwfe5l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsotwfe5l.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return $l[$n\
    \ / 2];\n  }\n  else {\n    return ($l[$n / 2] + $l[($n - 1) / 2]) / 2;\n  }\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3lgdbin.php:23\n\
    Stack trace:\n#0 /tmp/tmpv3lgdbin.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv3lgdbin.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n    return\
    \ 0;\n  }\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n - 1) / 2];\n\
    \  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 1) / 2 - 1]) / 2;\n  }\n\
    }\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcjhuv7gb.php:25\n\
    Stack trace:\n#0 /tmp/tmpcjhuv7gb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcjhuv7gb.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  $l = sort($l);\n  $n = count($l);\n  if ($n % 2 === 0) {\n \
    \   return $l[(count($l) - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) /\
    \ 2] + $l[($n - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpwql_w4zb.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpwql_w4zb.php:23\nStack trace:\n#0 /tmp/tmpwql_w4zb.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwql_w4zb.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xyqg7vp.php:18\n\
    Stack trace:\n#0 /tmp/tmp5xyqg7vp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5xyqg7vp.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return $l[($n + 1) / 2];\n    }\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_z6zpyw.php:21\n\
    Stack trace:\n#0 /tmp/tmpe_z6zpyw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe_z6zpyw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    $n = count($l);\n    if ($n %\
    \ 2) {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n - 1) / 2]\
    \ + $l[($n - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnljpnutq.php:21\n\
    Stack trace:\n#0 /tmp/tmpnljpnutq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnljpnutq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    $l = array_filter($l);\n    return $l[count($l)/2];\n}\n\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpga9aotzx.php:17\n\
    Stack trace:\n#0 /tmp/tmpga9aotzx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpga9aotzx.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return $l[(count($l) / 2)];\n    }\n    return ($l[($n - 1) / 2] - $l[($n\
    \ - 2) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "\nParse error: syntax error in /tmp/tmp0544e37t.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return median of elements in the list l.\n// >>> median([3,\
    \ 1, 2, 4, 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction\
    \ median($l) {\n    return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yct93hg.php:16\n\
    Stack trace:\n#0 /tmp/tmp1yct93hg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1yct93hg.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_31_is_prime
language: php
results:
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi9gpclag.php:27\nStack trace:\n#0 /tmp/tmpi9gpclag.php(39): is_prime(101)\n\
    #1 /tmp/tmpi9gpclag.php(44): candidate(101)\n#2 /tmp/tmpi9gpclag.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi9gpclag.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if(!($n\
    \ % $i)) {\n            return false;\n        }\n        $i++;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1mlan4a8.php:35\n\
    Stack trace:\n#0 /tmp/tmp1mlan4a8.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1mlan4a8.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp3xd1fnux.php:27\nStack trace:\n#0 /tmp/tmp3xd1fnux.php(37): is_prime(101)\n\
    #1 /tmp/tmp3xd1fnux.php(42): candidate(101)\n#2 /tmp/tmp3xd1fnux.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3xd1fnux.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $i = 3;\n    while ($i <= $root) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n        $i += 2;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpk7v2fo8e.php:27\nStack trace:\n#0 /tmp/tmpk7v2fo8e.php(39): is_prime(101)\n\
    #1 /tmp/tmpk7v2fo8e.php(44): candidate(101)\n#2 /tmp/tmpk7v2fo8e.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk7v2fo8e.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    $f = 1;\n\
    \    $s = 0;\n    while ($root2 != 1) {\n        $s = $s + 1;\n        $root2\
    \ = $this->sqrt($root2);\n    }\n    for ($i = 3; $i <= $root; $i += 2) {\n  \
    \      if ($n % $i == 0) {\n            $f = false;\n            break;\n    \
    \    }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2msva18t.php:27\nStack trace:\n#0 /tmp/tmp2msva18t.php(45): is_prime(101)\n\
    #1 /tmp/tmp2msva18t.php(50): candidate(101)\n#2 /tmp/tmp2msva18t.php(64): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2msva18t.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $n;\
    \ $i += 2) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpwoq766m8.php:28\nStack trace:\n#0 /tmp/tmpwoq766m8.php(38): is_prime(101)\n\
    #1 /tmp/tmpwoq766m8.php(43): candidate(101)\n#2 /tmp/tmpwoq766m8.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwoq766m8.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division check\n\
    \    for($divider = 2; $divider <= $n; $divider++) {\n        if ($n % $divider\
    \ === 0) {\n            return false;\n        }\n    }\n\n    // If we get this\
    \ far, we've found a prime\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxdx8cg5.php:39\n\
    Stack trace:\n#0 /tmp/tmpmxdx8cg5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpmxdx8cg5.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division using\
    \ Euclid's algorithm.\n    // If n is prime then its only divisors are 1 and itself.\n\
    \    // If n is not prime then its only divisors are 1 and n-1.\n    // If n is\
    \ divisible by 2 or 3 then n is prime.\n    // If n is divisible by 5 then n is\
    \ prime.\n    // If n is divisible by 7 then n is prime.\n    // If n is divisible\
    \ by 13 then n is prime.\n    // If n is divisible by 17 then n is prime.\n  \
    \  // If n is divisible by 19 then n is prime.\n    // If n is divisible by 23\
    \ then n is prime.\n    // If n is divisible by 29 then n is prime.\n    // If\
    \ n is divisible by 31 then n is prime.\n    // If n is divisible by 37 then n\
    \ is prime.\n    // If n is divisible by 41 then n is prime.\n    // If n is divisible\
    \ by 43 then n is prime.\n    // If n is divisible by 47 then n is prime.\n  \
    \  // If n is divisible by 53 then n is prime.\n    // If n is divisible by 59\
    \ then n is prime.\n    // If n is divisible by 61 then n is prime.\n    // If\
    \ n is divisible by 67 then n is prime.\n    // If n is divisible by 71 then n\
    \ is prime.\n    // If n is divisible by 73 then n is prime.\n    // If n is divisible\
    \ by 79 then n is prime.\n    // If n is divisible by 83 then n is prime.\n  \
    \  // If n is divisible by 89 then n is prime.\n    // If n is divisible by 97\
    \ then n is prime.\n    // If n is divisible by 101 then n is prime.\n    // If\
    \ n is divisible by 103 then n is prime.\n    // If n is divisible by 107 then\
    \ n is prime.\n    // If n is divisible by 113 then n is prime.\n    // If n is\
    \ divisible by 119 then n is prime.\n    // If n is divisible by 127 then n is\
    \ prime.\n    // If n is divisible by 131 then n is prime.\n    // If n is divisible\
    \ by 137 then n is prime.\n    // If n is divisible by 13\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqn9ubgkr.php on line 77\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxmscpfz6.php:27\nStack trace:\n#0 /tmp/tmpxmscpfz6.php(38): is_prime(101)\n\
    #1 /tmp/tmpxmscpfz6.php(43): candidate(101)\n#2 /tmp/tmpxmscpfz6.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxmscpfz6.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Test for even factors\
    \ up to sqrt(n).\n    // If even factors are found, return false immediately.\n\
    \    // If no even factors are found, return true after checking for\n    // odd\
    \ factors.\n    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n \
    \   // True\n    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n\
    \    // True\n    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n \
    \   // False\n    // >>> is_prime(1)\n    // False\n    $i = 2;\n    while ($i\
    \ <= sqrt($n)) {\n        if ($n % $i == 0) {\n            return false;\n   \
    \     }\n        $i += 2;\n    }\n\n    // Check odd factors up to sqrt(n).\n\
    \    // If odd factors are found, return false immediately.\n    // If no odd\
    \ factors are found, return true after checking for\n    // even factors.\n  \
    \  // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n \
    \   // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    $i = 3;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n     \
    \   $i += 2;\n    }\n\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4itkx31.php:35\n\
    Stack trace:\n#0 /tmp/tmpo4itkx31.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpo4itkx31.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1) return false;\n    if ($n == 2) return true;\n    if ($n % 2\
    \ == 0) return false;\n    if ($n % 3 == 0) return false;\n    if ($n % 5 == 0)\
    \ return false;\n    $nums = range(3, (int) sqrt($n) + 1, 2);\n    foreach ($nums\
    \ as $num) {\n        if ($n % $num == 0) return false;\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nWarning: range(): step exceeds the specified range in /tmp/tmprvmwbhgq.php\
    \ on line 23\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmprvmwbhgq.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvmwbhgq.php:41\n\
    Stack trace:\n#0 /tmp/tmprvmwbhgq.php(49): test()\n#1 {main}\n  thrown in /tmp/tmprvmwbhgq.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpbennplqc.php:27\nStack trace:\n#0 /tmp/tmpbennplqc.php(38): is_prime(101)\n\
    #1 /tmp/tmpbennplqc.php(43): candidate(101)\n#2 /tmp/tmpbennplqc.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbennplqc.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i += 2)\n   \
    \     if ($n % $i == 0)\n            $f = false;\n    return $f;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpkbqjenke.php:25\nStack trace:\n#0 /tmp/tmpkbqjenke.php(34): is_prime(101)\n\
    #1 /tmp/tmpkbqjenke.php(39): candidate(101)\n#2 /tmp/tmpkbqjenke.php(53): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkbqjenke.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpud58qhgl.php:27\nStack trace:\n#0 /tmp/tmpud58qhgl.php(38): is_prime(101)\n\
    #1 /tmp/tmpud58qhgl.php(43): candidate(101)\n#2 /tmp/tmpud58qhgl.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpud58qhgl.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i\
    \ += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpjo99wivv.php:28\nStack trace:\n#0 /tmp/tmpjo99wivv.php(38): is_prime(101)\n\
    #1 /tmp/tmpjo99wivv.php(43): candidate(101)\n#2 /tmp/tmpjo99wivv.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjo99wivv.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // Only odd numbers are prime (2 & 3 are not).\n  if ($n % 2 == 0 || $n % 3\
    \ == 0) {\n    return false;\n  }\n\n  // Check all the numbers of form 6k +/-\
    \ 1, up to sqrt(n).\n  for ($i = 1; $i <= sqrt($n); $i += 6) {\n    if ($n % $i\
    \ == 0 || $n % ($i + 2) == 0) {\n      return false;\n    }\n  }\n\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwhrk57zb.php:39\n\
    Stack trace:\n#0 /tmp/tmpwhrk57zb.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpwhrk57zb.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i\
    \ += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work for\
    \ me. `is_prime(6)` returns `false` but `is_prime(101)` returns `true`\n<|/ c\
    \ |>\n<| c |>\nIt works for me in PHP 5.3.10. Maybe you have a different PHP version?\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.3.10 and it didn't work. I'm running PHP\
    \ 5.2.17. Maybe it's because I'm running a 32-bit version of PHP?\n<|/ c |>\n\
    <| c |>\nYes, 32-bit PHP doesn't support floating point numbers. You'll have to\
    \ upgrade to a 64-bit version of PHP or use an alternative algorithm that doesn't\
    \ require floating point numbers.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.10\
    \ and it didn't work. I'm running PHP 5.2.17. Maybe it's because I'm running a\
    \ 32-bit version of PHP?\n<|/ c |>\n<| a tags=php,primes |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptw2pzewj.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpx8cze70w.php:27\nStack trace:\n#0 /tmp/tmpx8cze70w.php(37): is_prime(101)\n\
    #1 /tmp/tmpx8cze70w.php(42): candidate(101)\n#2 /tmp/tmpx8cze70w.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpx8cze70w.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpupb105bb.php:27\nStack trace:\n#0 /tmp/tmpupb105bb.php(38): is_prime(101)\n\
    #1 /tmp/tmpupb105bb.php(43): candidate(101)\n#2 /tmp/tmpupb105bb.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpupb105bb.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp7jfb5uiq.php:27\nStack trace:\n#0 /tmp/tmp7jfb5uiq.php(37): is_prime(101)\n\
    #1 /tmp/tmp7jfb5uiq.php(42): candidate(101)\n#2 /tmp/tmp7jfb5uiq.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7jfb5uiq.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i = 3; $i <=\
    \ $root; $i += 2)\n        if ($n % $i == 0)\n            return false;\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0et_zihw.php:25\nStack trace:\n#0 /tmp/tmp0et_zihw.php(34): is_prime(101)\n\
    #1 /tmp/tmp0et_zihw.php(39): candidate(101)\n#2 /tmp/tmp0et_zihw.php(53): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0et_zihw.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpomqlo6q1.php:27\nStack trace:\n#0 /tmp/tmpomqlo6q1.php(38): is_prime(101)\n\
    #1 /tmp/tmpomqlo6q1.php(43): candidate(101)\n#2 /tmp/tmpomqlo6q1.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpomqlo6q1.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqpgnx1b.php:35\n\
    Stack trace:\n#0 /tmp/tmpcqpgnx1b.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpcqpgnx1b.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1)\n        return false;\n    if ($n == 2)\n        return true;\n\
    \    if ($n % 2 == 0)\n        return false;\n    if ($n % 3 == 0)\n        return\
    \ false;\n    $i = 5; // 6 - sqrt(5)\n    while($i <= sqrt($n))\n        if ($n\
    \ % $i == 0)\n            return false;\n        $i += 6;\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $root = $this->sqrt($n);\n\
    \  for ($i = 3; $i <= $root; $i += 2) {\n    if ($n % $i == 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmptz05xm6g.php:27\nStack trace:\n#0 /tmp/tmptz05xm6g.php(37): is_prime(101)\n\
    #1 /tmp/tmptz05xm6g.php(42): candidate(101)\n#2 /tmp/tmptz05xm6g.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmptz05xm6g.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpzdwa7u69.php:27\nStack trace:\n#0 /tmp/tmpzdwa7u69.php(37): is_prime(101)\n\
    #1 /tmp/tmpzdwa7u69.php(42): candidate(101)\n#2 /tmp/tmpzdwa7u69.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzdwa7u69.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n <= 1 ? 1 : ($n % 2 == 0 ? 3 : ($n % 3 == 0 ? 6\
    \ : $n));\n    $i = $n - 1;\n    while($i >= 2) {\n        if($n % $i == 0) {\n\
    \            return false;\n        }\n        $i--;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5qh7cu0.php:35\n\
    Stack trace:\n#0 /tmp/tmpv5qh7cu0.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpv5qh7cu0.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $n = abs($n);\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($n == 2) {\n        return true;\n\
    \    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n    $root = $this->sqrt($n);\n\
    \    for($i = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp7q64fz_z.php:31\nStack trace:\n#0 /tmp/tmp7q64fz_z.php(41): is_prime(101)\n\
    #1 /tmp/tmp7q64fz_z.php(46): candidate(101)\n#2 /tmp/tmp7q64fz_z.php(60): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7q64fz_z.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpsxxafvrd.php:27\nStack trace:\n#0 /tmp/tmpsxxafvrd.php(37): is_prime(101)\n\
    #1 /tmp/tmpsxxafvrd.php(42): candidate(101)\n#2 /tmp/tmpsxxafvrd.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsxxafvrd.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0df6xmj6.php:27\nStack trace:\n#0 /tmp/tmp0df6xmj6.php(37): is_prime(101)\n\
    #1 /tmp/tmp0df6xmj6.php(42): candidate(101)\n#2 /tmp/tmp0df6xmj6.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0df6xmj6.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\n    for($i\
    \ = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp806oc_bt.php:30\nStack trace:\n#0 /tmp/tmp806oc_bt.php(43): is_prime(101)\n\
    #1 /tmp/tmp806oc_bt.php(48): candidate(101)\n#2 /tmp/tmp806oc_bt.php(62): test()\n\
    #3 {main}\n  thrown in /tmp/tmp806oc_bt.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_number\n\
    \    $n2 = $n / 2;\n    $n3 = $n / 3;\n    $n5 = $n / 5;\n\n    $num_primes =\
    \ 0;\n    for ($i = 2; $i <= $n2; $i++) {\n        if ($n % $i == 0) {\n     \
    \       $num_primes++;\n        }\n    }\n\n    if ($num_primes == $n2) {\n  \
    \      return true;\n    }\n\n    if ($num_primes == $n3 || $num_primes == $n5)\
    \ {\n        return false;\n    }\n\n    if ($num_primes == 0) {\n        return\
    \ false;\n    }\n\n    // If $num_primes is odd, then it is prime.\n    // If\
    \ $num_primes is even, then it is not prime.\n    // If $num_primes is greater\
    \ than $n2, then it is not prime.\n    // If $num_primes is greater than $n3,\
    \ then it is not prime.\n    // If $num_primes is greater than $n5, then it is\
    \ not prime.\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdu5m2ewi.php:60\n\
    Stack trace:\n#0 /tmp/tmpdu5m2ewi.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpdu5m2ewi.php\
    \ on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp1cb6qgcr.php:27\nStack trace:\n#0 /tmp/tmp1cb6qgcr.php(38): is_prime(101)\n\
    #1 /tmp/tmp1cb6qgcr.php(43): candidate(101)\n#2 /tmp/tmp1cb6qgcr.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1cb6qgcr.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ui9kl_v.php:34\n\
    Stack trace:\n#0 /tmp/tmp5ui9kl_v.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5ui9kl_v.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpy96ew3cf.php:27\nStack trace:\n#0 /tmp/tmpy96ew3cf.php(37): is_prime(101)\n\
    #1 /tmp/tmpy96ew3cf.php(42): candidate(101)\n#2 /tmp/tmpy96ew3cf.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy96ew3cf.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3lwslzyk.php:35\n\
    Stack trace:\n#0 /tmp/tmp3lwslzyk.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3lwslzyk.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $root2 = $root1 = 3;\n \
    \   while ($root1 <= $n) {\n        $root1 = ($root1 + $n) % ($root2 + 1);\n \
    \       $root2 = ($root2 * $root2) % ($root2 + 1);\n    }\n    return $root2 >\
    \ 1;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    $root\
    \ = $this->sqrt($n);\n    for ($i = 1; $i <= $root; $i++) {\n        if ($n %\
    \ $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp_i7f6xd7.php:22\nStack trace:\n#0 /tmp/tmp_i7f6xd7.php(32): is_prime(6)\n\
    #1 /tmp/tmp_i7f6xd7.php(36): candidate(6)\n#2 /tmp/tmp_i7f6xd7.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_i7f6xd7.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmplorg4m5h.php:27\nStack trace:\n#0 /tmp/tmplorg4m5h.php(38): is_prime(101)\n\
    #1 /tmp/tmplorg4m5h.php(43): candidate(101)\n#2 /tmp/tmplorg4m5h.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmplorg4m5h.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i\
    \ += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpkuqs5u_u.php:28\nStack trace:\n#0 /tmp/tmpkuqs5u_u.php(38): is_prime(101)\n\
    #1 /tmp/tmpkuqs5u_u.php(43): candidate(101)\n#2 /tmp/tmpkuqs5u_u.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkuqs5u_u.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n\n  for ($i = 2; $i <= sqrt($n); ++$i)\
    \ {\n    if ($n % $i == 0) {\n      return false;\n    }\n  }\n\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i = 3; $i <=\
    \ $root; $i += 2)\n        if ($n % $i == 0)\n            return false;\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2cn8twgp.php:25\nStack trace:\n#0 /tmp/tmp2cn8twgp.php(33): is_prime(101)\n\
    #1 /tmp/tmp2cn8twgp.php(38): candidate(101)\n#2 /tmp/tmp2cn8twgp.php(52): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2cn8twgp.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpou6rhlhz.php:27\nStack trace:\n#0 /tmp/tmpou6rhlhz.php(37): is_prime(101)\n\
    #1 /tmp/tmpou6rhlhz.php(42): candidate(101)\n#2 /tmp/tmpou6rhlhz.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpou6rhlhz.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpy4hu1cp2.php:27\nStack trace:\n#0 /tmp/tmpy4hu1cp2.php(37): is_prime(101)\n\
    #1 /tmp/tmpy4hu1cp2.php(42): candidate(101)\n#2 /tmp/tmpy4hu1cp2.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy4hu1cp2.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u8uw317.php:35\n\
    Stack trace:\n#0 /tmp/tmp9u8uw317.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp9u8uw317.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpjoku8hfk.php:27\nStack trace:\n#0 /tmp/tmpjoku8hfk.php(39): is_prime(101)\n\
    #1 /tmp/tmpjoku8hfk.php(44): candidate(101)\n#2 /tmp/tmpjoku8hfk.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjoku8hfk.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp32gwb_dr.php:27\nStack trace:\n#0 /tmp/tmp32gwb_dr.php(37): is_prime(101)\n\
    #1 /tmp/tmp32gwb_dr.php(42): candidate(101)\n#2 /tmp/tmp32gwb_dr.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp32gwb_dr.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpc_u7odxj.php:27\nStack trace:\n#0 /tmp/tmpc_u7odxj.php(38): is_prime(101)\n\
    #1 /tmp/tmpc_u7odxj.php(43): candidate(101)\n#2 /tmp/tmpc_u7odxj.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpc_u7odxj.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // Make sure n is a positive integer.\n  if ($n <= 0) {\n    return false;\n\
    \  }\n\n  // Check n is prime.\n  if ($n == 1) {\n    return true;\n  }\n\n  //\
    \ Check n is odd.\n  if ($n % 2 == 0) {\n    return false;\n  }\n\n  // Check\
    \ n is greater than 1.\n  if ($n > 1) {\n    // Check n is greater than or equal\
    \ to 3.\n    if ($n >= 3) {\n      // Check n is divisible by 2 or 3.\n      if\
    \ ($n % 2 == 0 || $n % 3 == 0) {\n        return false;\n      }\n\n      // Check\
    \ n is divisible by 5.\n      if ($n % 5 == 0) {\n        return false;\n    \
    \  }\n\n      // Check n is divisible by 3 and 5.\n      if ($n % 3 == 0 || $n\
    \ % 5 == 0) {\n        return false;\n      }\n\n      // Check n is divisible\
    \ by 3 and 5.\n      if ($n % 5 == 0 || $n % 3 == 0) {\n        return false;\n\
    \      }\n    }\n\n    // Check n is divisible by 5.\n    if ($n % 5 == 0) {\n\
    \      return false;\n    }\n\n    // Check n is divisible by 3 and 5.\n    if\
    \ ($n % 3 == 0 || $n % 5 == 0) {\n      return false;\n    }\n  }\n\n  // Check\
    \ n is divisible by 7.\n  if ($n % 7 == 0) {\n    return false;\n  }\n\n  // Check\
    \ n is divisible by 5.\n  if ($n % 5 == 0) {\n    return false;\n  }\n\n  // Check\
    \ n is divisible by 3 and 5.\n  if ($n % 3 == 0 || $n % 5 == 0) {\n    return\
    \ false;\n  }\n\n  // Check n is divisible by 3 and 5.\n  if ($n % 5 == 0 || $n\
    \ % 3 == 0) {\n    return false;\n  }\n\n  // Check n is divisible by 7.\n  if\
    \ ($n % 7 == 0) {\n    return false;\n  }\n\n  // Check n is divisible by 5.\n\
    \  if ($n % 5 == 0) {\n    return false;\n  }\n\n  // Check n is divisible by\
    \ 3 and 5.\n  if ($n % 3 == 0 || $n % 5 == 0) {\n    return false;\n  }\n\n  //\
    \ Check n is divisible by 3 and 5.\n  if ($n % 5 == 0 || $n % 3 == 0) {\n    return\
    \ false;\n  }\n\n  // Check n is divisible by 7.\n  if ($n % 7 == 0) {\n    return\
    \ false;\n  }\n\n  // Check n is divisible by 5.\n  if ($n % 5 == 0) {\n    return\
    \ false;\n  }\n\n  // Check n is divisible by 3 and 5.\n  if ($n % 3 == 0 || $n\
    \ % 5 == 0) {\n    return false;\n  }\n\n  // Check n is divisible by 3 and 5.\n\
    \  if ($n % 5 == 0 || $n % 3 == 0) {\n    return false;\n  }\n\n  // Check n is\
    \ divisible by 7.\n  if ($n % 7 == 0) {\n    return false;\n  }\n\n  // Check\
    \ n is divisible by 5.\n  if ($n % 5 == 0) {\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpckgbd2nl.php on line 157\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpk4x18kwx.php:27\nStack trace:\n#0 /tmp/tmpk4x18kwx.php(38): is_prime(101)\n\
    #1 /tmp/tmpk4x18kwx.php(43): candidate(101)\n#2 /tmp/tmpk4x18kwx.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk4x18kwx.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3y_zdhj2.php:35\n\
    Stack trace:\n#0 /tmp/tmp3y_zdhj2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3y_zdhj2.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $i = 3;\n    while ($i <= $root) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n        $i += 2;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0y8b_9au.php:27\nStack trace:\n#0 /tmp/tmp0y8b_9au.php(39): is_prime(101)\n\
    #1 /tmp/tmp0y8b_9au.php(44): candidate(101)\n#2 /tmp/tmp0y8b_9au.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0y8b_9au.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpjegdqknk.php:27\nStack trace:\n#0 /tmp/tmpjegdqknk.php(38): is_prime(101)\n\
    #1 /tmp/tmpjegdqknk.php(43): candidate(101)\n#2 /tmp/tmpjegdqknk.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjegdqknk.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpk88izvke.php:27\nStack trace:\n#0 /tmp/tmpk88izvke.php(38): is_prime(101)\n\
    #1 /tmp/tmpk88izvke.php(43): candidate(101)\n#2 /tmp/tmpk88izvke.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk88izvke.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpke239nhf.php:27\nStack trace:\n#0 /tmp/tmpke239nhf.php(37): is_prime(101)\n\
    #1 /tmp/tmpke239nhf.php(42): candidate(101)\n#2 /tmp/tmpke239nhf.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpke239nhf.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpnlle7oyi.php:27\nStack trace:\n#0 /tmp/tmpnlle7oyi.php(39): is_prime(101)\n\
    #1 /tmp/tmpnlle7oyi.php(44): candidate(101)\n#2 /tmp/tmpnlle7oyi.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnlle7oyi.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    for($i=5;\
    \ $i<=sqrt($n); $i+=6) {\n        if ($n % $i == 0 || $n % ($i + 2) == 0) return\
    \ false;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    $i = 5; $w = 6; $v = 3; $x = 2; $y = 1;\n \
    \   while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            $x += $v;\
    \ $v++; $y++;\n        }\n        $i += $w;\n        $w = 6 - $w;\n        $v\
    \ = 3 - $v;\n    }\n    return $x == 1;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45ypft0l.php:42\n\
    Stack trace:\n#0 /tmp/tmp45ypft0l.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp45ypft0l.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check all odd numbers\
    \ up to sqrt(n).\n    for ($i = 3; $i * $i <= $n; $i += 2) {\n        if ($n %\
    \ $i === 0) {\n            return false;\n        }\n    }\n\n    // Check all\
    \ even numbers up to sqrt(n).\n    for ($i = 2; $i * $i <= $n; $i += 2) {\n  \
    \      if ($n % $i === 0) {\n            return false;\n        }\n    }\n\n \
    \   return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $i = 3;\n    while ($i <= sqrt($n)) {\n\
    \        if ($n % $i == 0) return false;\n        $i += 2;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ydp12xe.php:35\n\
    Stack trace:\n#0 /tmp/tmp_ydp12xe.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_ydp12xe.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  // Only odd numbers are prime (any even number greater than 2 is not).\n  if\
    \ ($n % 2 == 0) {\n    return false;\n  }\n\n  // Only even numbers are prime\
    \ (any odd number greater than 2 is not).\n  if ($n % 2 == 1) {\n    return false;\n\
    \  }\n\n  // Only prime numbers are odd (any odd number greater than 2 is not).\n\
    \  if ($n % 2 == 0) {\n    return false;\n  }\n\n  // All numbers are prime (any\
    \ odd number greater than 2 is not).\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtamsfyp.php:43\n\
    Stack trace:\n#0 /tmp/tmpwtamsfyp.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpwtamsfyp.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_number\n\
    \    // If n is prime then 1/n will also be prime.\n    // If n is composite then\
    \ n-1 is also composite.\n    // If n is even, then n-1 is odd.\n    // If n is\
    \ odd, then n-1 is even.\n    // Hence n-1 is odd for odd n, and even for even\
    \ n.\n    // Therefore all odd numbers except 2 are odd for odd n, and\n    //\
    \ all even numbers except 2 are even for even n.\n    // The only exception is\
    \ for 5.\n    // 5 is odd for all odd n, and even for even n.\n    // Therefore\
    \ all odd numbers except 5 are odd for odd n, and\n    // all even numbers except\
    \ 5 are even for even n.\n    // The only exception is for 5.\n    // 5 is odd\
    \ for all odd n, and even for even n.\n    // Therefore all odd numbers except\
    \ 5 are odd for odd n, and\n    // all even numbers except 5 are even for even\
    \ n.\n    // The only exception is for 5.\n    // 5 is odd for all odd n, and\
    \ even for even n.\n    // Therefore all odd numbers except 5 are odd for odd\
    \ n, and\n    // all even numbers except 5 are even for even n.\n    // The only\
    \ exception is for 5.\n    // 5 is odd for all odd n, and even for even n.\n \
    \   // Therefore all odd numbers except 5 are odd for odd n, and\n    // all even\
    \ numbers except 5 are even for even n.\n    // The only exception is for 5.\n\
    \    // 5 is odd for all odd n, and even for even n.\n    // Therefore all odd\
    \ numbers except 5 are odd for odd n, and\n    // all even numbers except 5 are\
    \ even for even n.\n    // The only exception is for 5.\n    // 5 is odd for all\
    \ odd n, and even for even n.\n    // Therefore all odd numbers except 5 are odd\
    \ for odd n, and\n    // all even numbers except 5 are even for even n.\n    //\
    \ The only exception is for 5.\n    // 5 is odd for all odd n, and even for even\
    \ n.\n    // Therefore all odd numbers except 5 are odd for odd n, and\n    //\
    \ all even numbers except 5 are even for even n.\n    // The only exception is\
    \ for 5.\n    // 5 is odd for all odd n, and even for even n.\n    // Therefore\
    \ all odd numbers except 5 are odd for odd n, and\n    // all even numbers except\
    \ 5 \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv_8_blt4.php on line 82\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1)\n        return false;\n    if ($n <= 3)\n        return true;\n\
    \    if ($n % 2 == 0 || $n % 3 == 0)\n        return false;\n    $i = 5; $w =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0 || $n % ($i + 2)\
    \ == 0)\n            return false;\n        $i += $w;\n        $w++;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $root2 = sqrt($n);\n   \
    \ $root1 = $n - $root2;\n    $root3 = $n - $root2 - $root1;\n    if ($root3 <=\
    \ 1) {\n        return true;\n    }\n    if ($root3 === 2) {\n        return true;\n\
    \    }\n    if ($root3 === 3) {\n        return false;\n    }\n    if ($root3\
    \ === 5) {\n        return true;\n    }\n    if ($root3 === 7) {\n        return\
    \ true;\n    }\n    if ($root3 === 11) {\n        return false;\n    }\n    if\
    \ ($root3 === 13) {\n        return true;\n    }\n    if ($root3 === 17) {\n \
    \       return true;\n    }\n    if ($root3 === 19) {\n        return true;\n\
    \    }\n    if ($root3 === 23) {\n        return true;\n    }\n    if ($root3\
    \ === 29) {\n        return true;\n    }\n    if ($root3 === 31) {\n        return\
    \ true;\n    }\n    if ($root3 === 37) {\n        return true;\n    }\n    if\
    \ ($root3 === 41) {\n        return true;\n    }\n    if ($root3 === 43) {\n \
    \       return true;\n    }\n    if ($root3 === 47) {\n        return true;\n\
    \    }\n    if ($root3 === 53) {\n        return true;\n    }\n    if ($root3\
    \ === 59) {\n        return true;\n    }\n    if ($root3 === 61) {\n        return\
    \ true;\n    }\n    if ($root3 === 67) {\n        return true;\n    }\n    if\
    \ ($root3 === 71) {\n        return true;\n    }\n    if ($root3 === 73) {\n \
    \       return true;\n    }\n    if ($root3 === 79) {\n        return true;\n\
    \    }\n    if ($root3 === 83) {\n        return true;\n    }\n    if ($root3\
    \ === 89) {\n        return true;\n    }\n    if ($root3 === 97) {\n        return\
    \ true;\n    }\n    if ($root3 === 101) {\n        return true;\n    }\n    if\
    \ ($root3 === 103) {\n        return true;\n    }\n    if ($root3 === 107) {\n\
    \        return true;\n    }\n    if ($root3 === 109) {\n        return true;\n\
    \    }\n    if ($root3 === 113) {\n        return true;\n    }\n    if ($root3\
    \ === 117) {\n        return true;\n    }\n    if ($root3 === 121) {\n       \
    \ return true;\n    }\n    if ($root3 === 123) {\n        return true;\n    }\n\
    \    if ($root3 === 127) {\n        return true;\n    }\n    if ($root3 === 131)\
    \ {\n        return true;\n    }\n    if ($root3 === 137) {\n        return true;\n\
    \    }\n    if ($root3 === 139) {\n        return true;\n    }\n    if ($root3\
    \ === 147) {\n        return true;\n    }\n    if ($root3 === 151) {\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqcn02o9d.php on line 163\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_number\n\
    \    // If n is less than 2 then return false immediately.\n    if ($n < 2) {\n\
    \        return false;\n    }\n\n    // Check factors up to sqrt(n).\n    $i =\
    \ 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n        $i += 1;\n    }\n\n    // If we got this far, we've\
    \ checked all the numbers and they're prime.\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmplv0kc7_t.php:27\nStack trace:\n#0 /tmp/tmplv0kc7_t.php(37): is_prime(101)\n\
    #1 /tmp/tmplv0kc7_t.php(42): candidate(101)\n#2 /tmp/tmplv0kc7_t.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmplv0kc7_t.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp_xcdmhnh.php:27\nStack trace:\n#0 /tmp/tmp_xcdmhnh.php(38): is_prime(101)\n\
    #1 /tmp/tmp_xcdmhnh.php(43): candidate(101)\n#2 /tmp/tmp_xcdmhnh.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_xcdmhnh.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0_3c3xcw.php:27\nStack trace:\n#0 /tmp/tmp0_3c3xcw.php(39): is_prime(101)\n\
    #1 /tmp/tmp0_3c3xcw.php(44): candidate(101)\n#2 /tmp/tmp0_3c3xcw.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0_3c3xcw.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $n;\
    \ $i += 2) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp_yp0ebcu.php:28\nStack trace:\n#0 /tmp/tmp_yp0ebcu.php(38): is_prime(101)\n\
    #1 /tmp/tmp_yp0ebcu.php(43): candidate(101)\n#2 /tmp/tmp_yp0ebcu.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_yp0ebcu.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $root = $this->sqrt($n);\n\
    \  for ($i = 3; $i <= $root; $i += 2) {\n    if ($n % $i == 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpsaq29pzx.php:27\nStack trace:\n#0 /tmp/tmpsaq29pzx.php(37): is_prime(101)\n\
    #1 /tmp/tmpsaq29pzx.php(42): candidate(101)\n#2 /tmp/tmpsaq29pzx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsaq29pzx.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\n    for($i\
    \ = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpp5_0h52g.php:30\nStack trace:\n#0 /tmp/tmpp5_0h52g.php(43): is_prime(101)\n\
    #1 /tmp/tmpp5_0h52g.php(48): candidate(101)\n#2 /tmp/tmpp5_0h52g.php(62): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp5_0h52g.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\
    \    for ($i = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpina9h3ki.php:28\nStack trace:\n#0 /tmp/tmpina9h3ki.php(39): is_prime(101)\n\
    #1 /tmp/tmpina9h3ki.php(44): candidate(101)\n#2 /tmp/tmpina9h3ki.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpina9h3ki.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_number\n\
    \    $limit = $n - 1;\n    $num_divisors = 1;\n    $max_divisor = 2;\n    $max_divisor_index\
    \ = 0;\n    for ($i = 3; $i <= $limit; $i += 2) {\n        if ($n % $i == 0) {\n\
    \            $num_divisors++;\n            if ($num_divisors > $max_divisor) {\n\
    \                $max_divisor = $num_divisors;\n                $max_divisor_index\
    \ = $i;\n            }\n        }\n    }\n\n    return $num_divisors == $max_divisor;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyaf51i0p.php:45\n\
    Stack trace:\n#0 /tmp/tmpyaf51i0p.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpyaf51i0p.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1) return false;\n    if ($n == 2) return true;\n    if ($n % 2\
    \ == 0) return false;\n    if ($n % 3 == 0) return false;\n    if ($n % 5 == 0)\
    \ return false;\n    $f = 5; $i = 3; $m = sqrt($n);\n    while ($i <= $m) {\n\
    \        if ($n % $i == 0) {\n            $f = $i;\n            break;\n     \
    \   }\n        $i += 6;\n    }\n    return $f == 5;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpom1y2bkl.php:46\n\
    Stack trace:\n#0 /tmp/tmpom1y2bkl.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpom1y2bkl.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n <= 1 ? 1 : ($n % 2 == 0 ? 3 : ($n % 3 == 0 ? 6\
    \ : ($n % 5 == 0 ? 9 : ($n % 7 == 0 ? 12 : ($n % 11 == 0 ? 17 : ($n % 13 == 0\
    \ ? 21 : ($n % 17 == 0 ? 27 : ($n % 19 == 0 ? 30 : 1)))))));\n    return ($n ==\
    \ 1);\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp656rwt4m.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpj7b7ftyf.php:27\nStack trace:\n#0 /tmp/tmpj7b7ftyf.php(37): is_prime(101)\n\
    #1 /tmp/tmpj7b7ftyf.php(42): candidate(101)\n#2 /tmp/tmpj7b7ftyf.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpj7b7ftyf.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  $n = abs($n);\n  $i = 1;\n  while\
    \ ($i <= sqrt($n)) {\n    if ($n % $i == 0) {\n      return false;\n    }\n  \
    \  $i++;\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslvi4cp5.php:38\n\
    Stack trace:\n#0 /tmp/tmpslvi4cp5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpslvi4cp5.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1)\n        return false;\n    if ($n == 2)\n        return true;\n\
    \    if ($n % 2 == 0)\n        return false;\n    if ($n % 3 == 0)\n        return\
    \ false;\n    $i = 3;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0)\n\
    \            return false;\n        $i += 2;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i\
    \ <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            $f = false;\n\
    \            break;\n        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpdp0jp4uj.php:28\nStack trace:\n#0 /tmp/tmpdp0jp4uj.php(40): is_prime(101)\n\
    #1 /tmp/tmpdp0jp4uj.php(45): candidate(101)\n#2 /tmp/tmpdp0jp4uj.php(59): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdp0jp4uj.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cvyrayz.php:35\n\
    Stack trace:\n#0 /tmp/tmp3cvyrayz.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3cvyrayz.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $n = abs($n);\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $n;\
    \ $i += 2) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp13cwjk4d.php:28\nStack trace:\n#0 /tmp/tmp13cwjk4d.php(38): is_prime(101)\n\
    #1 /tmp/tmp13cwjk4d.php(43): candidate(101)\n#2 /tmp/tmp13cwjk4d.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmp13cwjk4d.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpv_nbuk0c.php:27\nStack trace:\n#0 /tmp/tmpv_nbuk0c.php(39): is_prime(101)\n\
    #1 /tmp/tmpv_nbuk0c.php(44): candidate(101)\n#2 /tmp/tmpv_nbuk0c.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv_nbuk0c.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpwh6ozws5.php:27\nStack trace:\n#0 /tmp/tmpwh6ozws5.php(37): is_prime(101)\n\
    #1 /tmp/tmpwh6ozws5.php(42): candidate(101)\n#2 /tmp/tmpwh6ozws5.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwh6ozws5.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://primes.utm.edu/prove/prove2_3.html\n    $limit = (int) sqrt($n);\n\
    \    $num_divs = 6;\n    $num_tests = $limit;\n    $prime = true;\n    for ($i\
    \ = 3; $i <= $limit; $i += 2) {\n        if ($n % $i == 0) {\n            $prime\
    \ = false;\n            break;\n        }\n        $num_tests--;\n    }\n    if\
    \ ($num_tests > 0) {\n        $prime = false;\n    }\n\n    return $prime;\n}\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3k5vu5ux.php:47\n\
    Stack trace:\n#0 /tmp/tmp3k5vu5ux.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp3k5vu5ux.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpnunmf6um.php:27\nStack trace:\n#0 /tmp/tmpnunmf6um.php(38): is_prime(101)\n\
    #1 /tmp/tmpnunmf6um.php(43): candidate(101)\n#2 /tmp/tmpnunmf6um.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnunmf6um.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Sieve of Eratosthenes\n\
    \    $limit = (int) sqrt($n);\n    for ($i = 2; $i <= $limit; $i++) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2x03b6ow.php:35\n\
    Stack trace:\n#0 /tmp/tmp2x03b6ow.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp2x03b6ow.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $nlogn = log($n);\n    $sqrtn = sqrt($n);\n    \n    if\
    \ ($nlogn < $sqrtn) {\n        // n is prime\n        return true;\n    }\n  \
    \  \n    // n is composite\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnq0b67iz.php:36\n\
    Stack trace:\n#0 /tmp/tmpnq0b67iz.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnq0b67iz.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    while($root * $f <= $n) {\n  \
    \      if ($n % $root == 0) {\n            return false;\n        }\n        $f++;\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpvq9n3igt.php:27\nStack trace:\n#0 /tmp/tmpvq9n3igt.php(38): is_prime(101)\n\
    #1 /tmp/tmpvq9n3igt.php(43): candidate(101)\n#2 /tmp/tmpvq9n3igt.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvq9n3igt.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n <= 1 ? 1 : ($n % 2 == 0 ? 3 : ($n % 3 == 0 ? 6\
    \ : ($n % 5 == 0 ? 9 : ($n % 7 == 0 ? 12 : ($n % 11 == 0 ? 17 : ($n % 13 == 0\
    \ ? 21 : ($n % 17 == 0 ? 27 : ($n % 19 == 0 ? 30 : (($n % 21 == 0 ? 31 : (($n\
    \ % 23 == 0 ? 35 : (($n % 25 == 0 ? 37 : (($n % 29 == 0 ? 41 : (($n % 31 == 0\
    \ ? 43 : (($n % 35 == 0 ? 47 : (($n % 37 == 0 ? 53 : (($n % 41 == 0 ? 59 : (($n\
    \ % 43 == 0 ? 61 : (($n % 47 == 0 ? 67 : (($n % 53 == 0 ? 71 : (($n % 57 == 0\
    \ ? 79 : (($n % 61 == 0 ? 83 : (($n % 67 == 0 ? 89 : (($n % 71 == 0 ? 97 : (($n\
    \ % 73 == 0 ? 103 : (($n % 79 == 0 ? 113 : (($n % 83 == 0 ? 127 : (($n % 89 ==\
    \ 0 ? 143 : (($n % 97 == 0 ? 151 : (($n % 103 == 0 ? 171 : (($n % 113 == 0 ? 183\
    \ : (($n % 123 == 0 ? 191 : (($n % 131 == 0 ? 207 : (($n % 137 == 0 ? 217 : (($n\
    \ % 143 == 0 ? 227 : (($n % 151 == 0 ? 243 : (($n % 157 == 0 ? 261 : (($n % 163\
    \ == 0 ? 271 : (($n % 171 == 0 ? 283 : (($n % 177 == 0 ? 293 : (($n % 183 == 0\
    \ ? 313 : (($n % 191 == 0 ? 317 : (($n % 197 == 0 ? 331 : (($n % 203 == 0 ? 337\
    \ : (($n % 211 == 0 ? 343 : (($n % 217 == 0 ? 351 : (($n % 223 == 0 ? 367 : (($n\
    \ % 233 == 0 ? 373 : (($n % 241 == 0 ? 381 : (($n % 247 == 0 ? 397 :\n       \
    \ ($n % 253 == 0 ? 403 : ($n % 261 == 0 ? 411 : (($n % 267 == 0 ? 419 : (($n %\
    \ 273 == 0 ? 431 : (($n % 281 == 0 ? 437 : (($n % 293 == 0 ? 443 : (($n % 301\
    \ == 0 ? 457 : (($n % 307 == 0 ? 463 : (($n % 313 == 0 ? 471 : (($n % 317 == 0\
    \ ? 487 : (($n % 323 == 0 ? 493 : (($n % 329 == 0 ? 501 : (($n % 331 == 0 ? 511\
    \ : (($n % 337 == 0 ? 519 : (($n % 343 == 0 ? 529 : (($n % 351 == 0 ? 537 : (($n\
    \ % 367 == 0 ? 543 : (($n % 373 == 0 ? 551 : (($n % 381 == \nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnphp2s4w.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp772_pgh_.php:27\nStack trace:\n#0 /tmp/tmp772_pgh_.php(37): is_prime(101)\n\
    #1 /tmp/tmp772_pgh_.php(42): candidate(101)\n#2 /tmp/tmp772_pgh_.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp772_pgh_.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n <= 1 ? 1 : ($n % 2 == 0 ? 3 : ($n % 3 == 0 ? 6\
    \ : ($n % 5 == 0 ? 9 : ($n % 7 == 0 ? 12 : ($n % 11 == 0 ? 15 : ($n % 13 == 0\
    \ ? 18 : ($n % 17 == 0 ? 21 : ($n % 19 == 0 ? 24 : ($n % 23 == 0 ? 27 : ($n %\
    \ 29 == 0 ? 32 : ($n % 31 == 0 ? 35 : ($n % 37 == 0 ? 40 : $n % 41 == 0 ? 47 :\
    \ $n % 43 == 0 ? 52 : ($n % 47 == 0 ? 59 : ($n % 51 == 0 ? 63 : ($n % 53 == 0\
    \ ? 69 : ($n % 57 == 0 ? 74 : ($n % 59 == 0 ? 79 : ($n % 61 == 0 ? 84 : ($n %\
    \ 63 == 0 ? 89 : ($n % 67 == 0 ? 94 : ($n % 71 == 0 ? 97 : ($n % 73 == 0 ? 103\
    \ : ($n % 79 == 0 ? 108 : ($n % 81 == 0 ? 111 : ($n % 83 == 0 ? 117 : ($n % 89\
    \ == 0 ? 123 : ($n % 97 == 0 ? 128 : ($n % 103 ? 13 : ($n % 105 ? 14 : ($n % 107\
    \ ? 15 : ($n % 111 ? 17 : ($n % 117 ? 18 : ($n % 123 ? 19 : ($n % 125 ? 20 : ($n\
    \ % 129 ? 21 : ($n % 131 ? 23 : ($n % 137 ? 24 : ($n % 143 ? 25 : ($n % 147 ?\
    \ 27 : ($n % 153 ? 30 : ($n % 157 ? 32 : ($n % 163 ? 33 : ($n % 167 ? 34 : ($n\
    \ % 173 ? 37 : ($n % 177 ? 42 : ($n % 183 ? 43 : ($n % 187 ? 46 : ($n % 191 ?\
    \ 49 : ($n % 197 ? 52 : ($n % 203 ? 55 : ($n % 207 ? 58 : ($n % 211 ? 61 : ($n\
    \ % 213 ? 64 : ($n % 217 ? 67 : ($n % 223 ? 70 : ($n % 227 ? 73 : ($n % 239 ?\
    \ 78 : ($n % 243 ? 82 : ($n % 247 ? 85 : ($n % 253 ? 88 : ($n % 257 ? 92 : ($n\
    \ % 263 ? 97 : ($n % 267 ? 102 : ($n % 271 ? 104 : ($n % 277 ? 109 : ($n % 283\
    \ ? 111 : ($n % 287 ? 117 : ($n % 293 ? 123 : ($n % 297 ? \nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvu96mkz0.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpwjejjo_x.php:27\nStack trace:\n#0 /tmp/tmpwjejjo_x.php(37): is_prime(101)\n\
    #1 /tmp/tmpwjejjo_x.php(42): candidate(101)\n#2 /tmp/tmpwjejjo_x.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwjejjo_x.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_number\n\
    \    $limit = $n - 1;\n    $num_div = 2;\n    while ($num_div <= $limit) {\n \
    \       if ($n % $num_div == 0) {\n            return false;\n        }\n    \
    \    $num_div += 2;\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq49uy5zm.php:50\n\
    Stack trace:\n#0 /tmp/tmpq49uy5zm.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpq49uy5zm.php\
    \ on line 50\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    while($root * $f <= $n) {\n  \
    \      if ($n % $root == 0) {\n            return false;\n        }\n        $f\
    \ += 2;\n    }\n    return true;\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThe\
    \ first two lines of your function should be `if ($n < 2)` instead of `if ($n\
    \ < 2)`\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've fixed the code.\n\
    <|/ c |>\n<| c |>\nThe first two lines of your function should be `if ($n < 2)`\
    \ instead of `if ($n < 2)`\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've\
    \ fixed the code.\n<|/ c |>\n<| c |>\nThe first two lines of your function should\
    \ be `if ($n < 2)` instead of `if ($n < 2)`\n<|/ c |>\n<| a dscore=4 |>\n<code>\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpimxhsqaf.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division using\
    \ Euclid's algorithm.\n    // If n is prime then its only divisors are 1 and itself.\n\
    \    // If n is not prime then its only divisors are 1 and n-1.\n    // If n is\
    \ divisible by 2 or 3 then n is prime.\n    // If n is divisible by 5 then n is\
    \ prime.\n    // If n is divisible by 3 then its only divisors are 2 and n-1.\n\
    \    // If n is divisible by 5 then n is prime.\n    // If n is divisible by 3\
    \ and 4 then n is prime.\n    // If n is divisible by both 3 and 4 then n is prime.\n\
    \    // If n is divisible by 3 and 5 then n is prime.\n    // If n is divisible\
    \ by both 3 and 5 then n is prime.\n    // If n is divisible by 3 then its only\
    \ divisors are 2 and n-1.\n    // If n is divisible by 5 then n is prime.\n  \
    \  // If n is divisible by 3 then its only divisors are 2 and n-1.\n    // If\
    \ n is divisible by 5 then n is prime.\n    // If n is divisible by 3 and 4 then\
    \ n is prime.\n    // If n is divisible by both 3 and 4 then n is prime.\n   \
    \ // If n is divisible by 3 and 5 then n is prime.\n    // If n is divisible by\
    \ both 3 and 5 then n is prime.\n    // If n is divisible by 3 then its only divisors\
    \ are 2 and n-1.\n    // If n is divisible by 5 then n is prime.\n    // If n\
    \ is divisible by 3 then its only divisors are 2 and n-1.\n    // If n is divisible\
    \ by 5 then n is prime.\n    // If n is divisible by 3 and 4 then n is prime.\n\
    \    // If n is divisible by both 3 and 4 then n is prime.\n    // If n is divisible\
    \ by 3 and 5 then n is prime.\n    // If n is divisible by both 3 and 5 then n\
    \ is prime.\n    // If n is divisible by 3 then its only divisors are 2 and n-1.\n\
    \    // If n is divisible by 5 then n is prime.\n    // If n is divisible by 3\
    \ then its only divisors are 2 and n-1.\n    // If n is divisible by 5 then n\
    \ is prime.\n    // If n is divisible by 3 and 4 then n is prime.\n    // If n\
    \ is divisible by both 3 and 4 then n is prime.\n    // \nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr6mmr4rg.php on line 76\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division using\
    \ Sieve of Eratosthenes (http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)\n\
    \    $limit = $n - 1;\n    $num_primes = 1;\n    $primes = array(2);\n    for\
    \ ($i = 3; $i <= $limit; $i++) {\n        if (!in_array($i, $primes)) {\n    \
    \        $primes[] = $i;\n            for ($j = 2; $j <= $i; $j++) {\n       \
    \         $num_primes += $j % $i;\n            }\n        }\n    }\n\n    return\
    \ $num_primes > 1;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogwy890k.php:43\n\
    Stack trace:\n#0 /tmp/tmpogwy890k.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpogwy890k.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpyuy57mxg.php:27\nStack trace:\n#0 /tmp/tmpyuy57mxg.php(37): is_prime(101)\n\
    #1 /tmp/tmpyuy57mxg.php(42): candidate(101)\n#2 /tmp/tmpyuy57mxg.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyuy57mxg.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Sieve of Eratosthenes\n\
    \    $primes = array();\n    for ($i = 2; $i <= sqrt($n); $i++) {\n        if\
    \ ($n % $i == 0) {\n            $primes[] = $i;\n        }\n    }\n\n    return\
    \ count($primes) == 1;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1jfls9lg.php:38\n\
    Stack trace:\n#0 /tmp/tmp1jfls9lg.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp1jfls9lg.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $root = $this->sqrt($n);\n\
    \  for ($i = 3; $i <= $root; $i += 2) {\n    if ($n % $i == 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpo2ilt67t.php:27\nStack trace:\n#0 /tmp/tmpo2ilt67t.php(37): is_prime(101)\n\
    #1 /tmp/tmpo2ilt67t.php(42): candidate(101)\n#2 /tmp/tmpo2ilt67t.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpo2ilt67t.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpse1u22c9.php:27\nStack trace:\n#0 /tmp/tmpse1u22c9.php(37): is_prime(101)\n\
    #1 /tmp/tmpse1u22c9.php(42): candidate(101)\n#2 /tmp/tmpse1u22c9.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpse1u22c9.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhi11yff.php:35\n\
    Stack trace:\n#0 /tmp/tmpdhi11yff.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpdhi11yff.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i\
    \ += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpfsuy1od7.php:28\nStack trace:\n#0 /tmp/tmpfsuy1od7.php(38): is_prime(101)\n\
    #1 /tmp/tmpfsuy1od7.php(43): candidate(101)\n#2 /tmp/tmpfsuy1od7.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfsuy1od7.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $root2 = sqrt($n);\n   \
    \ $root1 = $root2 - 1;\n    \n    for($i = 1; $i <= $root1; $i++) {\n        if\
    \ ($n % $i == 0) {\n            return false;\n        }\n    }\n    \n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5aax2egz.php:39\n\
    Stack trace:\n#0 /tmp/tmp5aax2egz.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp5aax2egz.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check up to sqrt(n).\n\
    \    $root = $this->sqrt($n);\n    for ($i = 1; $i <= $root; $i++) {\n       \
    \ if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp8_zehmyh.php:23\nStack trace:\n#0 /tmp/tmp8_zehmyh.php(34): is_prime(6)\n\
    #1 /tmp/tmp8_zehmyh.php(38): candidate(6)\n#2 /tmp/tmp8_zehmyh.php(53): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8_zehmyh.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $n; $i += 2)\n        if ($n\
    \ % $i == 0)\n            return false;\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp19j9tyjc.php:25\nStack trace:\n#0 /tmp/tmp19j9tyjc.php(33): is_prime(101)\n\
    #1 /tmp/tmp19j9tyjc.php(38): candidate(101)\n#2 /tmp/tmp19j9tyjc.php(52): test()\n\
    #3 {main}\n  thrown in /tmp/tmp19j9tyjc.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division check\n\
    \    if ($n % 2 == 0) {\n        return false;\n    }\n\n    // Sieve of Eratosthenes\n\
    \    $limit = $n - 1;\n    for ($i = 3; $i * $i <= $limit; $i += 2) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxe73ecwp.php:27\nStack trace:\n#0 /tmp/tmpxe73ecwp.php(38): is_prime(101)\n\
    #1 /tmp/tmpxe73ecwp.php(43): candidate(101)\n#2 /tmp/tmpxe73ecwp.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxe73ecwp.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp84836_aj.php:27\nStack trace:\n#0 /tmp/tmp84836_aj.php(37): is_prime(101)\n\
    #1 /tmp/tmp84836_aj.php(42): candidate(101)\n#2 /tmp/tmp84836_aj.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp84836_aj.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n % 6 + 1;\n    if ($n == 0 || $n == 1) {\n    \
    \    return false;\n    }\n    $m = $n - 1;\n    while ($m % 6 == 0) {\n     \
    \   $m /= 6;\n    }\n    for ($i = 3; $i <= $n; $i += 6) {\n        if ($n % $i\
    \ == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4m5qjwl3.php:41\n\
    Stack trace:\n#0 /tmp/tmp4m5qjwl3.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp4m5qjwl3.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpiu15xi6s.php:27\nStack trace:\n#0 /tmp/tmpiu15xi6s.php(37): is_prime(101)\n\
    #1 /tmp/tmpiu15xi6s.php(42): candidate(101)\n#2 /tmp/tmpiu15xi6s.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpiu15xi6s.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check up to sqrt(n).\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp50sgo84f.php:23\nStack trace:\n#0 /tmp/tmp50sgo84f.php(34): is_prime(6)\n\
    #1 /tmp/tmp50sgo84f.php(38): candidate(6)\n#2 /tmp/tmp50sgo84f.php(53): test()\n\
    #3 {main}\n  thrown in /tmp/tmp50sgo84f.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $n;\
    \ $i += 2) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis code\
    \ is not correct. `is_prime(6)` returns `false` because `sqrt(6)` is `3` but `6`\
    \ is not a factor of `3`.\n<|/ c |>\n<| c |>\nI didn't know that `sqrt()` would\
    \ return `3` for `6`. Thanks for pointing that out.\n<|/ c |>\n<| c |>\nI added\
    \ a fix for that case.\n<|/ c |>\n<| c |>\nThis code is not correct. `is_prime(6)`\
    \ returns `false` because `sqrt(6)` is `3` but `6` is not a factor of `3`.\n<|/\
    \ c |>\n<| c |>\nI added a fix for that case.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuhgl4epj.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1)\n        return false;\n    if ($n == 2)\n        return true;\n\
    \    if ($n % 2 == 0)\n        return false;\n    if ($n % 3 == 0)\n        return\
    \ false;\n    $i = 5; $w = 2;\n    while ($i * $i <= $n) {\n        if ($n % $i\
    \ == 0 || $n % ($i + 2) == 0)\n            return false;\n        $i += $w;\n\
    \        $w++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i\
    \ <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            $f = false;\n\
    \            break;\n        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpdmz013ov.php:28\nStack trace:\n#0 /tmp/tmpdmz013ov.php(40): is_prime(101)\n\
    #1 /tmp/tmpdmz013ov.php(45): candidate(101)\n#2 /tmp/tmpdmz013ov.php(59): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdmz013ov.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprtniqtkj.php:35\n\
    Stack trace:\n#0 /tmp/tmprtniqtkj.php(49): test()\n#1 {main}\n  thrown in /tmp/tmprtniqtkj.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1h5romea.php:35\n\
    Stack trace:\n#0 /tmp/tmp1h5romea.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1h5romea.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n \
    \   return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3vsrugs.php:40\n\
    Stack trace:\n#0 /tmp/tmpd3vsrugs.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpd3vsrugs.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpdw8qrsxx.php:27\nStack trace:\n#0 /tmp/tmpdw8qrsxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpdw8qrsxx.php(42): candidate(101)\n#2 /tmp/tmpdw8qrsxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdw8qrsxx.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division avoids\
    \ primality by testing multiples of 2 and 3.\n    // See http://en.wikipedia.org/wiki/Trial_division.\n\
    \    for ($i = 3; $i * $i <= $n; $i++) {\n        if ($n % $i == 0) {\n      \
    \      return false;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52l3jdtc.php:38\n\
    Stack trace:\n#0 /tmp/tmp52l3jdtc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp52l3jdtc.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n \
    \   return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnj7wulg0.php:40\n\
    Stack trace:\n#0 /tmp/tmpnj7wulg0.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpnj7wulg0.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for($i = 3; $i * $i <= $n;\
    \ $i += 2) {\n        if ($n % $i == 0) {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp4p0526nx.php:28\nStack trace:\n#0 /tmp/tmp4p0526nx.php(37): is_prime(101)\n\
    #1 /tmp/tmp4p0526nx.php(42): candidate(101)\n#2 /tmp/tmp4p0526nx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4p0526nx.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n\n    for($i = 3; $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpse7e_i94.php:30\nStack trace:\n#0 /tmp/tmpse7e_i94.php(42): is_prime(101)\n\
    #1 /tmp/tmpse7e_i94.php(47): candidate(101)\n#2 /tmp/tmpse7e_i94.php(61): test()\n\
    #3 {main}\n  thrown in /tmp/tmpse7e_i94.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5bgjxs5y.php:35\n\
    Stack trace:\n#0 /tmp/tmp5bgjxs5y.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp5bgjxs5y.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp_fyapqn2.php:27\nStack trace:\n#0 /tmp/tmp_fyapqn2.php(38): is_prime(101)\n\
    #1 /tmp/tmp_fyapqn2.php(43): candidate(101)\n#2 /tmp/tmp_fyapqn2.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_fyapqn2.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n <= 1 ? 1 : ($n % 2 == 0 ? 3 : ($n % 3 == 0 ? 6\
    \ : ($n % 5 == 0 ? 9 : ($n % 7 == 0 ? 12 : ($n % 11 == 0 ? 17 : ($n % 13 == 0\
    \ ? 21 : ($n % 17 == 0 ? 25 : ($n % 19 == 0 ? 29 : ($n % 23 == 0 ? 33 : ($n %\
    \ 29 == 0 ? 37 : ($n % 33 == 0 ? 41 : ($n % 37 == 0 ? 47 : ($n % 41 == 0 ? 53\
    \ : ($n % 47 == 0 ? 59 : ($n % 53 == 0 ? 61 : ($n % 59 == 0 ? 67 : ($n % 61 ==\
    \ 0 ? 73 : ($n % 67 == 0 ? 79 : ($n % 73 == 0 ? 81 : ($n % 79 == 0 ? 83 : ($n\
    \ % 83 == 0 ? 87 : ($n % 87 == 0 ? 91 : ($n % 91 == 0 ? 97 : ($n % 97 == 0 ? 103\
    \ : ($n % 103 == 0 ? 107 : ($n % 107 == 0 ? 111 : ($n % 111 == 0 ? 117 : ($n %\
    \ 117 == 0 ? 123 : ($n % 123 == 0 ? 127 : ($n % 127 == 0 ? 131 : ($n % 131 ==\
    \ 0 ? 137 : ($n % 137 == 0 ? 143 : ($n % 143 == 0 ? 147 : ($n % 147 == 0 ? 151\
    \ : ($n % 151 == 0 ? 157 : ($n % 157 == 0 ? 163 : ($n % 163 == 0 ? 167 : ($n %\
    \ 167 == 0 ? 173 : ($n % 173 == 0 ? 177 : ($n % 177 == 0 ? 181 : ($n % 181 ==\
    \ 0 ? 187 : ($n % 187 == 0 ? 193 : ($n % 193 == 0 ? 197 : ($n % 197 == 0 ? 201\
    \ : ($n % 201 == 0 ? 207 : ($n % 207 == 0 ? 211 : ($n % 211 == 0 ? 217 : ($n %\
    \ 217 == 0 ? 223 : ($n % 223 == 0 ? 227 : ($n % 227 == 0 ? 235 : ($n % 235 ==\
    \ 0 ? 239 : ($n % 239 == 0 ? 243 : ($n % 243 == 0 ? 247 : ($n % 247 == 0 ? 251\
    \ : ($n % 251 == 0 ? 257 : ($n % 257 == 0 ? 263 : ($n % 263 == 0 ? 267 : ($n %\
    \ 267 == 0 ? 273 : ($n % 273 == 0 ? 277 : ($n % 277 == 0 ? 281 : ($n % 281 ==\
    \ 0 ? 283 : ($n % 283 == 0 ? 287 : ($n % 287 == 0 ? 293 : ($n % 293 == 0 ? 297\
    \ : ($n % 297 == 0 ? 301 : ($n % 301 == 0 ? 307 : ($n % 307 == 0 ? 311 : ($n %\
    \ 311\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu8ecq80m.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $i = 3;\n    while ($i <= $root) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n        $i += 2;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpp8vikl8x.php:27\nStack trace:\n#0 /tmp/tmpp8vikl8x.php(39): is_prime(101)\n\
    #1 /tmp/tmpp8vikl8x.php(44): candidate(101)\n#2 /tmp/tmpp8vikl8x.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp8vikl8x.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $i = 3;\n  while (true)\
    \ {\n    if ($i % 2 == 0) {\n      return false;\n    }\n    $i += 2;\n    if\
    \ ($i > $n) {\n      return false;\n    }\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ars28ov.php:45\n\
    Stack trace:\n#0 /tmp/tmp3ars28ov.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp3ars28ov.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi58jflyk.php:27\nStack trace:\n#0 /tmp/tmpi58jflyk.php(37): is_prime(101)\n\
    #1 /tmp/tmpi58jflyk.php(42): candidate(101)\n#2 /tmp/tmpi58jflyk.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi58jflyk.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from https://en.wikipedia.org/wiki/Primality_test#Trial_division\n    $a = $n\
    \ - 1;\n    $b = $n / 2;\n    $c = 1;\n\n    while ($b > 0) {\n        if ($b\
    \ & 1) {\n            if ($n % $a == 0) {\n                return false;\n   \
    \         }\n            $a++;\n        }\n        $b--;\n        $c++;\n    }\n\
    \n    if ($c == $n) {\n        return true;\n    }\n\n    return false;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn84aqkom.php:51\n\
    Stack trace:\n#0 /tmp/tmpn84aqkom.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpn84aqkom.php\
    \ on line 51\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i\
    \ <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            $f = false;\n\
    \            break;\n        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp9njaz_o0.php:28\nStack trace:\n#0 /tmp/tmp9njaz_o0.php(40): is_prime(101)\n\
    #1 /tmp/tmp9njaz_o0.php(45): candidate(101)\n#2 /tmp/tmp9njaz_o0.php(59): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9njaz_o0.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $root = $this->sqrt($n);\n    for ($i\
    \ = 3; $i * $i <= $n; $i += 2) {\n        if ($n % $i == 0) return false;\n  \
    \  }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmptoqb29bo.php:22\nStack trace:\n#0 /tmp/tmptoqb29bo.php(30): is_prime(101)\n\
    #1 /tmp/tmptoqb29bo.php(35): candidate(101)\n#2 /tmp/tmptoqb29bo.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmptoqb29bo.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmprsx6621w.php:27\nStack trace:\n#0 /tmp/tmprsx6621w.php(38): is_prime(101)\n\
    #1 /tmp/tmprsx6621w.php(43): candidate(101)\n#2 /tmp/tmprsx6621w.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmprsx6621w.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    $root2\
    \ = $root1 = 3; // Quadratic equation of the form (3n+1)(2n+1)\n    $x = $y =\
    \ 0;\n    $composite = false;\n    for ($i = 3; $i <= $n; $i++) {\n        $root2\
    \ = $y*$y - $x;\n        $y = $x;\n        $x = $root2;\n        if ($i % 2 ==\
    \ 0) {\n            $composite = true;\n        }\n        if ($composite) {\n\
    \            $root1 = $i;\n        }\n    }\n    return $root1 == $root2;\n}\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbvtzsadt.php:45\n\
    Stack trace:\n#0 /tmp/tmpbvtzsadt.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpbvtzsadt.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1)\n        return false;\n    if ($n == 2)\n        return true;\n\
    \    if ($n % 2 == 0)\n        return false;\n    if ($n % 3 == 0)\n        return\
    \ false;\n    \n    $root = $this->sqrt($n);\n    \n    for($i = 3; $i <= $root;\
    \ $i += 2)\n        if ($n % $i == 0)\n            return false;\n    \n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpt_sf4rdm.php:27\nStack trace:\n#0 /tmp/tmpt_sf4rdm.php(37): is_prime(101)\n\
    #1 /tmp/tmpt_sf4rdm.php(42): candidate(101)\n#2 /tmp/tmpt_sf4rdm.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt_sf4rdm.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    $i = 5;\n    while ($i * $i <= $n) {\n    \
    \    if ($n % $i == 0 || $n % ($i + 2) == 0) return false;\n        $i += 6;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8qcupzyk.php:44\n\
    Stack trace:\n#0 /tmp/tmp8qcupzyk.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8qcupzyk.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    for($i=5;\
    \ $i*i <= $n; $i+=6) {\n        if ($n % $i == 0 || $n % ($i + 2) == 0) return\
    \ false;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Use of undefined constant i - assumed 'i' (this will throw an\
    \ Error in a future version of PHP) in /tmp/tmpwb33z5jo.php on line 23\n\nWarning:\
    \ A non-numeric value encountered in /tmp/tmpwb33z5jo.php on line 23\n\nWarning:\
    \ Use of undefined constant i - assumed 'i' (this will throw an Error in a future\
    \ version of PHP) in /tmp/tmpwb33z5jo.php on line 23\n\nWarning: A non-numeric\
    \ value encountered in /tmp/tmpwb33z5jo.php on line 23\n\nWarning: Use of undefined\
    \ constant i - assumed 'i' (this will throw an Error in a future version of PHP)\
    \ in /tmp/tmpwb33z5jo.php on line 23\n\nWarning: A non-numeric value encountered\
    \ in /tmp/tmpwb33z5jo.php on line 23\n\nWarning: Use of undefined constant i -\
    \ assumed 'i' (this will throw an Error in a future version of PHP) in /tmp/tmpwb33z5jo.php\
    \ on line 23\n\nWarning: A non-numeric value encountered in /tmp/tmpwb33z5jo.php\
    \ on line 23\n\nWarning: Use of undefined constant i - assumed 'i' (this will\
    \ throw an Error in a future version of PHP) in /tmp/tmpwb33z5jo.php on line 23\n\
    \nWarning: A non-numeric value encountered in /tmp/tmpwb33z5jo.php on line 23\n\
    \nWarning: Use of undefined constant i - assumed 'i' (this will throw an Error\
    \ in a future version of PHP) in /tmp/tmpwb33z5jo.php on line 23\n\nWarning: A\
    \ non-numeric value encountered in /tmp/tmpwb33z5jo.php on line 23\n\nWarning:\
    \ Use of undefined constant i - assumed 'i' (this will throw an Error in a future\
    \ version of PHP) in /tmp/tmpwb33z5jo.php on line 23\n\nWarning: A non-numeric\
    \ value encountered in /tmp/tmpwb33z5jo.php on line 23\n\nWarning: Use of undefined\
    \ constant i - assumed 'i' (this will throw an Error in a future version of PHP)\
    \ in /tmp/tmpwb33z5jo.php on line 23\n\nWarning: A non-numeric value encountered\
    \ in /tmp/tmpwb33z5jo.php on line 23\n\nWarning: Use of undefined constant i -\
    \ assumed 'i' (this will throw an Error in a future version of PHP) in /tmp/tmpwb33z5jo.php\
    \ on line 23\n\nWarning: A non-numeric value encountered in /tmp/tmpwb33z5jo.php\
    \ on line 23\n\nWarning: Use of undefined constant i - assumed 'i' (this will\
    \ throw an Error in a fut"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $root = $this->sqrt($n);\n\
    \  for ($i = 3; $i <= $root; $i += 2) {\n    if ($n % $i == 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpbofshwex.php:27\nStack trace:\n#0 /tmp/tmpbofshwex.php(37): is_prime(101)\n\
    #1 /tmp/tmpbofshwex.php(42): candidate(101)\n#2 /tmp/tmpbofshwex.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbofshwex.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpoq02uvf2.php:27\nStack trace:\n#0 /tmp/tmpoq02uvf2.php(38): is_prime(101)\n\
    #1 /tmp/tmpoq02uvf2.php(43): candidate(101)\n#2 /tmp/tmpoq02uvf2.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpoq02uvf2.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp5vvjvem0.php:27\nStack trace:\n#0 /tmp/tmp5vvjvem0.php(37): is_prime(101)\n\
    #1 /tmp/tmp5vvjvem0.php(42): candidate(101)\n#2 /tmp/tmp5vvjvem0.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5vvjvem0.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\n    for($i\
    \ = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpr8rz0hx2.php:30\nStack trace:\n#0 /tmp/tmpr8rz0hx2.php(43): is_prime(101)\n\
    #1 /tmp/tmpr8rz0hx2.php(48): candidate(101)\n#2 /tmp/tmpr8rz0hx2.php(62): test()\n\
    #3 {main}\n  thrown in /tmp/tmpr8rz0hx2.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if(!($n\
    \ % $i)) {\n            return false;\n        }\n        $i++;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfk9t6nyg.php:35\n\
    Stack trace:\n#0 /tmp/tmpfk9t6nyg.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfk9t6nyg.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpbcbayjbp.php:27\nStack trace:\n#0 /tmp/tmpbcbayjbp.php(38): is_prime(101)\n\
    #1 /tmp/tmpbcbayjbp.php(43): candidate(101)\n#2 /tmp/tmpbcbayjbp.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbcbayjbp.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpoex3_9zw.php:27\nStack trace:\n#0 /tmp/tmpoex3_9zw.php(37): is_prime(101)\n\
    #1 /tmp/tmpoex3_9zw.php(42): candidate(101)\n#2 /tmp/tmpoex3_9zw.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpoex3_9zw.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpzu4tq9yk.php:27\nStack trace:\n#0 /tmp/tmpzu4tq9yk.php(38): is_prime(101)\n\
    #1 /tmp/tmpzu4tq9yk.php(43): candidate(101)\n#2 /tmp/tmpzu4tq9yk.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzu4tq9yk.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuk561rz3.php:35\n\
    Stack trace:\n#0 /tmp/tmpuk561rz3.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpuk561rz3.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i += 2) {\n \
    \       if ($n % $i == 0)\n            return false;\n        $f *= $i;\n    }\n\
    \    return $f == 1;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmphngnfk41.php:25\nStack trace:\n#0 /tmp/tmphngnfk41.php(36): is_prime(101)\n\
    #1 /tmp/tmphngnfk41.php(41): candidate(101)\n#2 /tmp/tmphngnfk41.php(55): test()\n\
    #3 {main}\n  thrown in /tmp/tmphngnfk41.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    $m = $n - 1;\n    while ($m >= 2) {\n     \
    \   if ($n % $m == 0) return false;\n        $m /= 2;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz53xmek0.php:44\n\
    Stack trace:\n#0 /tmp/tmpz53xmek0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpz53xmek0.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1)\n        return false;\n    $root2 = $root1 = 3; // Quadratic\
    \ equation #1\n    $x = $y = 0;\n    $composite = false;\n    while ($n < 7) {\n\
    \        if ($n % $root2 === 0) {\n            $root1 = $root2;\n            $root2\
    \ = $n % $root2;\n        }\n        $x = ($x * $n % $root2) % $root2;\n     \
    \   $y = $y + $x % $root2;\n        $n = $n / $root2;\n        $composite = true;\n\
    \    }\n    return $composite;\n}\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpj1r3a72j.php:28\n\
    Stack trace:\n#0 /tmp/tmpj1r3a72j.php(36): is_prime(6)\n#1 /tmp/tmpj1r3a72j.php(40):\
    \ candidate(6)\n#2 /tmp/tmpj1r3a72j.php(55): test()\n#3 {main}\n  thrown in /tmp/tmpj1r3a72j.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Sieve of Eratosthenes\
    \ (http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)\n    // The prime numbers\
    \ are the only even numbers that can divide evenly into all odd numbers.\n   \
    \ // This means all prime numbers are of the form 6k+1 or 6k+5 or 6k+7.\n    //\
    \ The first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The first\
    \ six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six prime\
    \ numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six prime numbers are\
    \ 2, 3, 5, 7, 11, 13 and 17.\n    // The first six prime numbers are 2, 3, 5,\
    \ 7, 11, 13 and 17.\n    // The first six prime numbers are 2, 3, 5, 7, 11, 13\
    \ and 17.\n    // The first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n\
    \    // The first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The\
    \ first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six\
    \ prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six prime numbers\
    \ are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six prime numbers are 2, 3,\
    \ 5, 7, 11, 13 and 17.\n    // The first six prime numbers are 2, 3, 5, 7, 11,\
    \ 13 and 17.\n    // The first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n\
    \    // The first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The\
    \ first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six\
    \ prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six prime numbers\
    \ are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six prime numbers are 2, 3,\
    \ 5, 7, 11, 13 and 17.\n    // The first six prime numbers are 2, 3, 5, 7, 11,\
    \ 13 and 17.\n    // The first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n\
    \    // The first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The\
    \ first six prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six\
    \ prime numbers are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six prime numbers\
    \ are 2, 3, 5, 7, 11, 13 and 17.\n    // The first six prime numbers are 2, 3,\
    \ 5, 7, 11, 13 and 17.\n    // The first six prime numbers are 2, 3, 5, 7, 11,\
    \ 13 and 17.\n    // The first six prime \nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdums8ole.php on line 73\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from https://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_prime_number\n\
    \    $n2 = $n / 2;\n    $n3 = $n / 3;\n    $n5 = $n / 5;\n\n    if ($n5 == 0)\
    \ {\n        return true;\n    }\n\n    if ($n3 == 0) {\n        return false;\n\
    \    }\n\n    if ($n5 == $n3) {\n        return is_prime($n2);\n    }\n\n    if\
    \ ($n5 == $n2 + $n3) {\n        return is_prime($n2);\n    }\n\n    if ($n5 ==\
    \ $n2 + $n3) {\n        return is_prime($n2);\n    }\n\n    if ($n5 == $n2 + $n3)\
    \ {\n        return is_prime($n2);\n    }\n\n    if ($n5 == $n2 + $n3) {\n   \
    \     return is_prime($n2);\n    }\n\n    if ($n5 == $n2 + $n3) {\n        return\
    \ is_prime($n2);\n    }\n\n    if ($n5 == $n2 + $n3) {\n        return is_prime($n2);\n\
    \    }\n\n    if ($n5 == $n2 + $n3) {\n        return is_prime($n2);\n    }\n\n\
    \    if ($n5 == $n2 + $n3) {\n        return is_prime($n2);\n    }\n\n    if ($n5\
    \ == $n2 + $n3) {\n        return is_prime($n2);\n    }\n\n    if ($n5 == $n2\
    \ + $n3) {\n        return is_prime($n2);\n    }\n\n    if ($n5 == $n2 + $n3)\
    \ {\n        return is_prime($n2);\n    }\n\n    if ($n5 == $n2 + $n3) {\n   \
    \     return is_prime($n2);\n    }\n\n    if ($n5 == $n2 + $n3) {\n        return\
    \ is_prime($n2);\n    }\n\n    if ($n5 == $n2 + $n3) {\n        return is_prime($n2);\n\
    \    }\n\n    if ($n5 == $n2 + $n3) {\n        return is_prime($n2);\n    }\n\n\
    \    if ($n5 == $n2 + $n3) {\n        return is_prime($n2);\n    }\n\n    if ($n5\
    \ == $n2 + $n3) {\n        return is_prime($n2);\n    }\n\n    if ($n5 == $n2\
    \ + $n3) {\n        return is_prime($n2);\n    }\n\n    if ($n5 == $n2 + $n3)\
    \ {\n        return is_prime($n2);\n    }\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8alaie8k.php on line 134\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $root = $this->sqrt($n);\n\
    \  for ($i = 3; $i <= $root; $i += 2) {\n    if ($n % $i == 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpv3v1lig5.php:27\nStack trace:\n#0 /tmp/tmpv3v1lig5.php(37): is_prime(101)\n\
    #1 /tmp/tmpv3v1lig5.php(42): candidate(101)\n#2 /tmp/tmpv3v1lig5.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv3v1lig5.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0kd32qjx.php:27\nStack trace:\n#0 /tmp/tmp0kd32qjx.php(37): is_prime(101)\n\
    #1 /tmp/tmp0kd32qjx.php(42): candidate(101)\n#2 /tmp/tmp0kd32qjx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0kd32qjx.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $i = 3;\n    while ($i <= sqrt($n)) {\n\
    \        if ($n % $i == 0) return false;\n        $i += 2;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpy8h07rg4.php:27\nStack trace:\n#0 /tmp/tmpy8h07rg4.php(38): is_prime(101)\n\
    #1 /tmp/tmpy8h07rg4.php(43): candidate(101)\n#2 /tmp/tmpy8h07rg4.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy8h07rg4.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpqsjcmgpd.php:27\nStack trace:\n#0 /tmp/tmpqsjcmgpd.php(38): is_prime(101)\n\
    #1 /tmp/tmpqsjcmgpd.php(43): candidate(101)\n#2 /tmp/tmpqsjcmgpd.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpqsjcmgpd.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpan7zs_kd.php:27\nStack trace:\n#0 /tmp/tmpan7zs_kd.php(37): is_prime(101)\n\
    #1 /tmp/tmpan7zs_kd.php(42): candidate(101)\n#2 /tmp/tmpan7zs_kd.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpan7zs_kd.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp3_jw0x1b.php:27\nStack trace:\n#0 /tmp/tmp3_jw0x1b.php(37): is_prime(101)\n\
    #1 /tmp/tmp3_jw0x1b.php(42): candidate(101)\n#2 /tmp/tmp3_jw0x1b.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3_jw0x1b.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkoftd63d.php:35\n\
    Stack trace:\n#0 /tmp/tmpkoftd63d.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkoftd63d.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz838ndcv.php:35\n\
    Stack trace:\n#0 /tmp/tmpz838ndcv.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpz838ndcv.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpr7k9qopl.php:27\nStack trace:\n#0 /tmp/tmpr7k9qopl.php(37): is_prime(101)\n\
    #1 /tmp/tmpr7k9qopl.php(42): candidate(101)\n#2 /tmp/tmpr7k9qopl.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpr7k9qopl.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmptgwi3epp.php:27\nStack trace:\n#0 /tmp/tmptgwi3epp.php(37): is_prime(101)\n\
    #1 /tmp/tmptgwi3epp.php(42): candidate(101)\n#2 /tmp/tmptgwi3epp.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmptgwi3epp.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $root = $this->sqrt($n);\n    for($i\
    \ = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpgc7gz02z.php:22\nStack trace:\n#0 /tmp/tmpgc7gz02z.php(30): is_prime(101)\n\
    #1 /tmp/tmpgc7gz02z.php(35): candidate(101)\n#2 /tmp/tmpgc7gz02z.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpgc7gz02z.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmphr26eml_.php:27\nStack trace:\n#0 /tmp/tmphr26eml_.php(38): is_prime(101)\n\
    #1 /tmp/tmphr26eml_.php(43): candidate(101)\n#2 /tmp/tmphr26eml_.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmphr26eml_.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpv7ts620q.php:27\nStack trace:\n#0 /tmp/tmpv7ts620q.php(37): is_prime(101)\n\
    #1 /tmp/tmpv7ts620q.php(42): candidate(101)\n#2 /tmp/tmpv7ts620q.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv7ts620q.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpdsatymui.php:27\nStack trace:\n#0 /tmp/tmpdsatymui.php(38): is_prime(101)\n\
    #1 /tmp/tmpdsatymui.php(43): candidate(101)\n#2 /tmp/tmpdsatymui.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdsatymui.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $root = $this->sqrt($n);\n\
    \  for ($i = 3; $i * $i <= $root; $i += 2) {\n    if ($n % $i == 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpjzmdne26.php:27\nStack trace:\n#0 /tmp/tmpjzmdne26.php(37): is_prime(101)\n\
    #1 /tmp/tmpjzmdne26.php(42): candidate(101)\n#2 /tmp/tmpjzmdne26.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjzmdne26.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpytly6vji.php:27\nStack trace:\n#0 /tmp/tmpytly6vji.php(37): is_prime(101)\n\
    #1 /tmp/tmpytly6vji.php(42): candidate(101)\n#2 /tmp/tmpytly6vji.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpytly6vji.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i = 3; $i <=\
    \ $root; $i += 2)\n        if ($n % $i == 0)\n            return false;\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcrfpz908.php:25\nStack trace:\n#0 /tmp/tmpcrfpz908.php(34): is_prime(101)\n\
    #1 /tmp/tmpcrfpz908.php(39): candidate(101)\n#2 /tmp/tmpcrfpz908.php(53): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcrfpz908.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division avoids\
    \ primality by testing numbers up to sqrt(n)\n    // by incrementing i from 2\
    \ to sqrt(n).\n    for ($i = 2; $i <= sqrt($n); $i++) {\n        if ($n % $i ==\
    \ 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $root = $this->sqrt($n);\n\
    \  for ($i = 3; $i <= $root; $i += 2) {\n    if ($n % $i == 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp3899r0cs.php:27\nStack trace:\n#0 /tmp/tmp3899r0cs.php(37): is_prime(101)\n\
    #1 /tmp/tmp3899r0cs.php(42): candidate(101)\n#2 /tmp/tmp3899r0cs.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3899r0cs.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $n = abs($n);\n    $i =\
    \ 1;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70lc6wy_.php:38\n\
    Stack trace:\n#0 /tmp/tmp70lc6wy_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp70lc6wy_.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    $root\
    \ = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpex1ej84t.php:22\nStack trace:\n#0 /tmp/tmpex1ej84t.php(32): is_prime(6)\n\
    #1 /tmp/tmpex1ej84t.php(36): candidate(6)\n#2 /tmp/tmpex1ej84t.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmpex1ej84t.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if(!($n\
    \ % $i)) {\n            return false;\n        }\n        $i++;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7et5nfq9.php:35\n\
    Stack trace:\n#0 /tmp/tmp7et5nfq9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp7et5nfq9.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpseujhvs4.php:35\n\
    Stack trace:\n#0 /tmp/tmpseujhvs4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpseujhvs4.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i\
    \ += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpq8idh9ho.php:28\nStack trace:\n#0 /tmp/tmpq8idh9ho.php(38): is_prime(101)\n\
    #1 /tmp/tmpq8idh9ho.php(43): candidate(101)\n#2 /tmp/tmpq8idh9ho.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq8idh9ho.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i\
    \ += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpwky1hnp7.php:28\nStack trace:\n#0 /tmp/tmpwky1hnp7.php(38): is_prime(101)\n\
    #1 /tmp/tmpwky1hnp7.php(43): candidate(101)\n#2 /tmp/tmpwky1hnp7.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwky1hnp7.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n_log2 = log($n, 2);\n    if ($n_log2 < 7) {\n      \
    \  return $n_log2 < 3;\n    }\n    $n_log_sqrt = log($n, $sqrt);\n    if ($n_log_sqrt\
    \ < 7) {\n        return $n_log_sqrt < 3;\n    }\n    $root = $n_log_sqrt - log($sqrt);\n\
    \    $n_log_root = log($root);\n    if ($n_log_root < 7) {\n        return $n_log_root\
    \ < 3;\n    }\n    $n_log_root_exp = log($root, $exp);\n    if ($n_log_root_exp\
    \ < 7) {\n        return $n_log_root_exp < 3;\n    }\n    $n_log_root_exp_sqrt\
    \ = log($root, $exp_sqrt);\n    if ($n_log_root_exp_sqrt < 7) {\n        return\
    \ $n_log_root_exp_sqrt < 3;\n    }\n    $n_log_root_exp_sqrt_2 = log($root, $exp_sqrt_2);\n\
    \    if ($n_log_root_exp_sqrt_2 < 7) {\n        return $n_log_root_exp_sqrt_2\
    \ < 3;\n    }\n    $n_log_root_exp_sqrt_3 = log($root, $exp_sqrt_3);\n    if ($n_log_root_exp_sqrt_3\
    \ < 7) {\n        return $n_log_root_exp_sqrt_3 < 3;\n    }\n    $n_log_root_exp_sqrt_4\
    \ = log($root, $exp_sqrt_4);\n    if ($n_log_root_exp_sqrt_4 < 7) {\n        return\
    \ $n_log_root_exp_sqrt_4 < 3;\n    }\n    $n_log_root_exp_sqrt_5 = log($root,\
    \ $exp_sqrt_5);\n    if ($n_log_root_exp_sqrt_5 < 7) {\n        return $n_log_root_exp_sqrt_5\
    \ < 3;\n    }\n    $n_log_root_exp_sqrt_6 = log($root, $exp_sqrt_6);\n    if ($n_log_root_exp_sqrt_6\
    \ < 7) {\n        return $n_log_root_exp_sqrt_6 < 3;\n    }\n    $n_log_root_exp_sqrt_7\
    \ = log($root, $exp_sqrt_7);\n    if ($n_log_root_exp_sqrt_7 < 7) {\n        return\
    \ $n_log_root_exp_sqrt_7 < 3;\n    }\n    $n_log_root_exp_sqrt_8 = log($root,\
    \ $exp_sqrt_8);\n    if ($n_log_root_exp_sqrt_8 < 7) {\n        return $n_log_root_exp_sqrt_8\
    \ < 3;\n    }\n    $n_log_root_exp_sqrt_9 = log($root, $exp_sqrt_9);\n    if ($n_log_root_exp_sqrt_9\
    \ < 7) {\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpghykmena.php on line 90\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    $root2\
    \ = sqrt($n);\n    $root1 = $root2 - 1;\n    for($i = 0; $i < $root1; $i++) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpcx_myk5y.php:25\n\
    Stack trace:\n#0 /tmp/tmpcx_myk5y.php(33): is_prime(6)\n#1 /tmp/tmpcx_myk5y.php(37):\
    \ candidate(6)\n#2 /tmp/tmpcx_myk5y.php(52): test()\n#3 {main}\n  thrown in /tmp/tmpcx_myk5y.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $i = 3;\n    while ($i <= sqrt($n)) {\n\
    \        if ($n % $i == 0) return false;\n        $i += 2;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp_p6m8rbm.php:27\nStack trace:\n#0 /tmp/tmp_p6m8rbm.php(39): is_prime(101)\n\
    #1 /tmp/tmp_p6m8rbm.php(44): candidate(101)\n#2 /tmp/tmp_p6m8rbm.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_p6m8rbm.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbnytu0et.php:35\n\
    Stack trace:\n#0 /tmp/tmpbnytu0et.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpbnytu0et.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0eb1x79x.php:27\nStack trace:\n#0 /tmp/tmp0eb1x79x.php(37): is_prime(101)\n\
    #1 /tmp/tmp0eb1x79x.php(42): candidate(101)\n#2 /tmp/tmp0eb1x79x.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0eb1x79x.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $i = 3;\n    while ($i <= $root) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n        $i += 2;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpl6xwhxfq.php:27\nStack trace:\n#0 /tmp/tmpl6xwhxfq.php(39): is_prime(101)\n\
    #1 /tmp/tmpl6xwhxfq.php(44): candidate(101)\n#2 /tmp/tmpl6xwhxfq.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl6xwhxfq.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1)\n        return false;\n    if ($n == 2)\n        return true;\n\
    \    if ($n % 2 == 0)\n        return false;\n    if ($n % 3 == 0)\n        return\
    \ false;\n    $i = 5; $w = 2;\n    while ($i * $i <= $n) {\n        if ($n % $i\
    \ == 0 || $n % ($i + 2) == 0)\n            return false;\n        $i += $w;\n\
    \        $w++;\n    }\n    return true;\n}\nfunction candidate(...$args) {\n \
    \   return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Test for even factors\
    \ up to sqrt(n).\n    // If n is evenly divisible by any number less than sqrt(n),\n\
    \    // then n is prime.\n    // If n is evenly divisible by all numbers less\
    \ than sqrt(n),\n    // then n is prime.\n    // If n is evenly divisible by all\
    \ numbers greater than sqrt(n),\n    // then n is prime.\n    // If n is evenly\
    \ divisible by all numbers up to sqrt(n),\n    // then n is prime.\n    // If\
    \ n is evenly divisible by all numbers up to sqrt(n),\n    // then n is prime.\n\
    \    // If n is evenly divisible by all numbers up to sqrt(n),\n    // then n\
    \ is prime.\n    // If n is evenly divisible by all numbers up to sqrt(n),\n \
    \   // then n is prime.\n    // If n is evenly divisible by all numbers up to\
    \ sqrt(n),\n    // then n is prime.\n    // If n is evenly divisible by all numbers\
    \ up to sqrt(n),\n    // then n is prime.\n    // If n is evenly divisible by\
    \ all numbers up to sqrt(n),\n    // then n is prime.\n    // If n is evenly divisible\
    \ by all numbers up to sqrt(n),\n    // then n is prime.\n    // If n is evenly\
    \ divisible by all numbers up to sqrt(n),\n    // then n is prime.\n    // If\
    \ n is evenly divisible by all numbers up to sqrt(n),\n    // then n is prime.\n\
    \    // If n is evenly divisible by all numbers up to sqrt(n),\n    // then n\
    \ is prime.\n    // If n is evenly divisible by all numbers up to sqrt(n),\n \
    \   // then n is prime.\n    // If n is evenly divisible by all numbers up to\
    \ sqrt(n),\n    // then n is prime.\n    // If n is evenly divisible by all numbers\
    \ up to sqrt(n),\n    // then n is prime.\n    // If n is evenly divisible by\
    \ all numbers up to sqrt(n),\n    // then n is prime.\n    // If n is evenly divisible\
    \ by all numbers up to sqrt(n),\n    // then n is prime.\n    // If n is evenly\
    \ divisible by all numbers up to sqrt(n),\n    // then n is prime.\n    // If\
    \ n is evenly divisible by all numbers up to sqrt(n),\n    // then n is prime.\n\
    \    // If n is evenly divisible by \nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqps0xe21.php on line 86\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division avoids\
    \ problems with negative numbers and non-prime numbers.\n    if ($n % 2 == 0)\
    \ {\n        return false;\n    }\n\n    // Trial division avoids problems with\
    \ negative numbers and non-prime numbers.\n    if ($n % 3 == 0) {\n        return\
    \ false;\n    }\n\n    // Trial division avoids problems with negative numbers\
    \ and non-prime numbers.\n    if ($n % 5 == 0) {\n        return false;\n    }\n\
    \n    // Trial division avoids problems with negative numbers and non-prime numbers.\n\
    \    if ($n % 7 == 0) {\n        return false;\n    }\n\n    // If none of the\
    \ above tests were successful, then n is prime.\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps2mmnzkz.php:58\n\
    Stack trace:\n#0 /tmp/tmps2mmnzkz.php(66): test()\n#1 {main}\n  thrown in /tmp/tmps2mmnzkz.php\
    \ on line 58\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    if ($n\
    \ % 3 == 0)\n        return false;\n    $root = $this->sqrt($n);\n    $f = 1;\n\
    \    while($root * $f < $n) {\n        $f++;\n    }\n    if ($f > $n)\n      \
    \  return false;\n    for($i = 3; $i <= $root; $i += 2) {\n        if ($n % $i\
    \ == 0)\n            return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpduz0bmwe.php:27\nStack trace:\n#0 /tmp/tmpduz0bmwe.php(42): is_prime(101)\n\
    #1 /tmp/tmpduz0bmwe.php(47): candidate(101)\n#2 /tmp/tmpduz0bmwe.php(61): test()\n\
    #3 {main}\n  thrown in /tmp/tmpduz0bmwe.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i += 2) {\n \
    \       if ($n % $i == 0)\n            return false;\n        $f *= $i;\n    }\n\
    \    return $f == 1;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpdrxvz8n1.php:25\nStack trace:\n#0 /tmp/tmpdrxvz8n1.php(35): is_prime(101)\n\
    #1 /tmp/tmpdrxvz8n1.php(40): candidate(101)\n#2 /tmp/tmpdrxvz8n1.php(54): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdrxvz8n1.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1)\n        return false;\n    if ($n == 2)\n        return true;\n\
    \    if ($n % 2 == 0)\n        return false;\n    if ($n % 3 == 0)\n        return\
    \ false;\n    $i = 5; $w = 2;\n    while ($i * $i <= $n) {\n        if ($n % $i\
    \ == 0 || $n % ($i + 2) == 0)\n            return false;\n        $i += $w;\n\
    \        $w++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp4pjvl3n6.php:27\nStack trace:\n#0 /tmp/tmp4pjvl3n6.php(37): is_prime(101)\n\
    #1 /tmp/tmp4pjvl3n6.php(42): candidate(101)\n#2 /tmp/tmp4pjvl3n6.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4pjvl3n6.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    $n = abs($n);\n    if ($n\
    \ == 1) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i\
    \ <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            $f = false;\n\
    \            break;\n        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp9ne4r0dx.php:28\nStack trace:\n#0 /tmp/tmp9ne4r0dx.php(40): is_prime(101)\n\
    #1 /tmp/tmp9ne4r0dx.php(45): candidate(101)\n#2 /tmp/tmp9ne4r0dx.php(59): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9ne4r0dx.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp_nlw8szs.php:27\nStack trace:\n#0 /tmp/tmp_nlw8szs.php(38): is_prime(101)\n\
    #1 /tmp/tmp_nlw8szs.php(43): candidate(101)\n#2 /tmp/tmp_nlw8szs.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_nlw8szs.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n    if ($n <= 3) {\n      \
    \  return true;\n    }\n    if ($n % 2 == 0 || $n % 3 == 0) {\n        return\
    \ false;\n    }\n    $i = 5; $w = 2;\n    while ($i * $i <= $n) {\n        if\
    \ ($n % $i == 0 || $n % ($i + 2) == 0) {\n            return false;\n        }\n\
    \        $i += $w;\n        $w++;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    $limit = (int) sqrt($n);\n    if ($limit <\
    \ 3) return false;\n    for ($i = 3; $i <= $limit; $i += 2) {\n        if ($n\
    \ % $i == 0) return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmoj4bsyn.php:43\n\
    Stack trace:\n#0 /tmp/tmpmoj4bsyn.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpmoj4bsyn.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp7pjabg2k.php:27\nStack trace:\n#0 /tmp/tmp7pjabg2k.php(37): is_prime(101)\n\
    #1 /tmp/tmp7pjabg2k.php(42): candidate(101)\n#2 /tmp/tmp7pjabg2k.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7pjabg2k.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $root = $this->sqrt($n);\n    for ($i\
    \ = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmprm2fh2rz.php:22\nStack trace:\n#0 /tmp/tmprm2fh2rz.php(30): is_prime(101)\n\
    #1 /tmp/tmprm2fh2rz.php(35): candidate(101)\n#2 /tmp/tmprm2fh2rz.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmprm2fh2rz.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// False\n// >>> is_prime(101)\n// True\n// >>> is_prime(11)\n\
    // True\n// >>> is_prime(13441)\n// True\n// >>> is_prime(61)\n// True\n// >>>\
    \ is_prime(4)\n// False\n// >>> is_prime(1)\n// False\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n <= 1 ? 1 : ($n % 2 ? 0 : $n);\n    $n = ($n %\
    \ 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n   \
    \ $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 :\
    \ $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n\
    \ % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n \
    \   $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0\
    \ : $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n\
    \ % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n \
    \   $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0\
    \ : $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n\
    \ % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n \
    \   $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0\
    \ : $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n\
    \ % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n \
    \   $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0\
    \ : $n);\n    $n = ($n % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n\
    \ % 2 ? 1 : $n);\n    $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 ? 1 : $n);\n \
    \   $n = ($n % 2 ? 0 : $n);\n    $n = ($n % 2 \nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3ernar49.php on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_83_starts_one_ends
language: php
results:
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7o9gsol.php:20\n\
    Stack trace:\n#0 /tmp/tmph7o9gsol.php(26): test()\n#1 {main}\n  thrown in /tmp/tmph7o9gsol.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      $count--;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzp7lq7ny.php:23\n\
    Stack trace:\n#0 /tmp/tmpzp7lq7ny.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzp7lq7ny.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifgvdw48.php:23\n\
    Stack trace:\n#0 /tmp/tmpifgvdw48.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpifgvdw48.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37ay6tb1.php:23\n\
    Stack trace:\n#0 /tmp/tmp37ay6tb1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp37ay6tb1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wehfux3.php:23\n\
    Stack trace:\n#0 /tmp/tmp1wehfux3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1wehfux3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tjv_hnm.php:23\n\
    Stack trace:\n#0 /tmp/tmp_tjv_hnm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_tjv_hnm.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      $count--;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalydnubv.php:23\n\
    Stack trace:\n#0 /tmp/tmpalydnubv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpalydnubv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5rtlh0o.php:20\n\
    Stack trace:\n#0 /tmp/tmpk5rtlh0o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk5rtlh0o.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqf1a8qs.php:23\n\
    Stack trace:\n#0 /tmp/tmpeqf1a8qs.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpeqf1a8qs.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30g8_46_.php:23\n\
    Stack trace:\n#0 /tmp/tmp30g8_46_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp30g8_46_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc03akd0u.php:23\n\
    Stack trace:\n#0 /tmp/tmpc03akd0u.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc03akd0u.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      $count--;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhp0jolh.php:23\n\
    Stack trace:\n#0 /tmp/tmpdhp0jolh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpdhp0jolh.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrl2zv1y.php:20\n\
    Stack trace:\n#0 /tmp/tmprrl2zv1y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprrl2zv1y.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvn184wt2.php:24\n\
    Stack trace:\n#0 /tmp/tmpvn184wt2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvn184wt2.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  while ($n >= 10) {\n    $count++;\n    $n = ($n % 10);\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqy6pra_.php:18\n\
    Stack trace:\n#0 /tmp/tmpeqy6pra_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpeqy6pra_.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjo73frki.php:23\n\
    Stack trace:\n#0 /tmp/tmpjo73frki.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjo73frki.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8y_5yc9.php:20\n\
    Stack trace:\n#0 /tmp/tmpj8y_5yc9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj8y_5yc9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnmk0jm5.php:24\n\
    Stack trace:\n#0 /tmp/tmpvnmk0jm5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvnmk0jm5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyg56v_8.php:20\n\
    Stack trace:\n#0 /tmp/tmpyyg56v_8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyyg56v_8.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmh4obgx.php:23\n\
    Stack trace:\n#0 /tmp/tmphmh4obgx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphmh4obgx.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kgfcqvo.php:23\n\
    Stack trace:\n#0 /tmp/tmp0kgfcqvo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0kgfcqvo.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc38y2xnn.php:20\n\
    Stack trace:\n#0 /tmp/tmpc38y2xnn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpc38y2xnn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua409juk.php:20\n\
    Stack trace:\n#0 /tmp/tmpua409juk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpua409juk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          if ($i %\
    \ 10000 == 1) {\n            $count++;\n          }\n        }\n      }\n    }\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzbm3ris.php:26\n\
    Stack trace:\n#0 /tmp/tmpqzbm3ris.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqzbm3ris.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23zivcs1.php:23\n\
    Stack trace:\n#0 /tmp/tmp23zivcs1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp23zivcs1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8hzoz1f.php:23\n\
    Stack trace:\n#0 /tmp/tmpq8hzoz1f.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq8hzoz1f.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf89xn4oe.php:23\n\
    Stack trace:\n#0 /tmp/tmpf89xn4oe.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpf89xn4oe.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      break;\n    }\n  }\n \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0r5s42av.php:23\n\
    Stack trace:\n#0 /tmp/tmp0r5s42av.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0r5s42av.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5502uj50.php:23\n\
    Stack trace:\n#0 /tmp/tmp5502uj50.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5502uj50.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wor_jef.php:23\n\
    Stack trace:\n#0 /tmp/tmp9wor_jef.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9wor_jef.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6b4a_1r.php:23\n\
    Stack trace:\n#0 /tmp/tmpi6b4a_1r.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi6b4a_1r.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vf45o9a.php:23\n\
    Stack trace:\n#0 /tmp/tmp8vf45o9a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8vf45o9a.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5d5ybvvw.php:20\n\
    Stack trace:\n#0 /tmp/tmp5d5ybvvw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5d5ybvvw.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbci5_3ot.php:24\n\
    Stack trace:\n#0 /tmp/tmpbci5_3ot.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbci5_3ot.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3twu_vk.php:23\n\
    Stack trace:\n#0 /tmp/tmpn3twu_vk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpn3twu_vk.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      break;\n    }\n  }\n \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnye1sp94.php:23\n\
    Stack trace:\n#0 /tmp/tmpnye1sp94.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpnye1sp94.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp0palg6f.php:20\n\
    Stack trace:\n#0 /tmp/tmpp0palg6f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp0palg6f.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbkicby72.php:20\n\
    Stack trace:\n#0 /tmp/tmpbkicby72.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbkicby72.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyenhsr_s.php:24\n\
    Stack trace:\n#0 /tmp/tmpyenhsr_s.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyenhsr_s.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpklmk6jqj.php:23\n\
    Stack trace:\n#0 /tmp/tmpklmk6jqj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpklmk6jqj.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpziquyr4a.php:23\n\
    Stack trace:\n#0 /tmp/tmpziquyr4a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpziquyr4a.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_u6u8bp.php:23\n\
    Stack trace:\n#0 /tmp/tmp6_u6u8bp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6_u6u8bp.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcm923dzo.php:23\n\
    Stack trace:\n#0 /tmp/tmpcm923dzo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcm923dzo.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphbc3p1uz.php:23\n\
    Stack trace:\n#0 /tmp/tmphbc3p1uz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphbc3p1uz.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvl5vo88f.php:23\n\
    Stack trace:\n#0 /tmp/tmpvl5vo88f.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvl5vo88f.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  while ($n >= 10) {\n    $n = ($n % 10) + 1;\n    $count++;\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt220rh36.php:18\n\
    Stack trace:\n#0 /tmp/tmpt220rh36.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt220rh36.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz826609s.php:23\n\
    Stack trace:\n#0 /tmp/tmpz826609s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz826609s.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypg479tv.php:20\n\
    Stack trace:\n#0 /tmp/tmpypg479tv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpypg479tv.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p7y0hc_.php:23\n\
    Stack trace:\n#0 /tmp/tmp2p7y0hc_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2p7y0hc_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpla5x_4q1.php:23\n\
    Stack trace:\n#0 /tmp/tmpla5x_4q1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpla5x_4q1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpce_vgyiy.php:20\n\
    Stack trace:\n#0 /tmp/tmpce_vgyiy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpce_vgyiy.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2v6qomrq.php:23\n\
    Stack trace:\n#0 /tmp/tmp2v6qomrq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2v6qomrq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_133t5xl.php:20\n\
    Stack trace:\n#0 /tmp/tmp_133t5xl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_133t5xl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3whg15s.php:23\n\
    Stack trace:\n#0 /tmp/tmps3whg15s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmps3whg15s.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpanamsi2w.php:20\n\
    Stack trace:\n#0 /tmp/tmpanamsi2w.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpanamsi2w.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_ax9utk.php:23\n\
    Stack trace:\n#0 /tmp/tmpz_ax9utk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz_ax9utk.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7a54bqqj.php:20\n\
    Stack trace:\n#0 /tmp/tmp7a54bqqj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7a54bqqj.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_rmi5hcg.php:23\n\
    Stack trace:\n#0 /tmp/tmp_rmi5hcg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_rmi5hcg.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx67yfcg9.php:23\n\
    Stack trace:\n#0 /tmp/tmpx67yfcg9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx67yfcg9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9svlcnt.php:23\n\
    Stack trace:\n#0 /tmp/tmpy9svlcnt.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpy9svlcnt.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      if ($i == 1) {\n     \
    \   $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1xs3ggx.php:25\n\
    Stack trace:\n#0 /tmp/tmpf1xs3ggx.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf1xs3ggx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43eku_l2.php:23\n\
    Stack trace:\n#0 /tmp/tmp43eku_l2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp43eku_l2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsckdw6da.php:23\n\
    Stack trace:\n#0 /tmp/tmpsckdw6da.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsckdw6da.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppajkwr8i.php:23\n\
    Stack trace:\n#0 /tmp/tmppajkwr8i.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppajkwr8i.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizev1tjs.php:23\n\
    Stack trace:\n#0 /tmp/tmpizev1tjs.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpizev1tjs.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  while ($n >= 10) {\n    $count++;\n    $n -= 10;\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplx2v058n.php:18\n\
    Stack trace:\n#0 /tmp/tmplx2v058n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmplx2v058n.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpno9j5rhl.php:23\n\
    Stack trace:\n#0 /tmp/tmpno9j5rhl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpno9j5rhl.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32qxhf8g.php:23\n\
    Stack trace:\n#0 /tmp/tmp32qxhf8g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp32qxhf8g.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpswl4mmv8.php:24\n\
    Stack trace:\n#0 /tmp/tmpswl4mmv8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpswl4mmv8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          if ($i %\
    \ 10000 == 1) {\n            if ($i % 100000 == 1) {\n              if ($i % 1000000\
    \ == 1) {\n                if ($i % 10000001 == 1) {\n                  if ($i\
    \ % 10000000 == 1) {\n                    if ($i % 100000000 == 1) {\n       \
    \               if ($i % 1000000000 == 1) {\n                        $count++;\n\
    \                      }\n                    }\n                  }\n       \
    \         }\n              }\n            }\n          }\n        }\n      }\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6asu3nf.php:38\n\
    Stack trace:\n#0 /tmp/tmpr6asu3nf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpr6asu3nf.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiscpvrl8.php:23\n\
    Stack trace:\n#0 /tmp/tmpiscpvrl8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiscpvrl8.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc04hoq4s.php:23\n\
    Stack trace:\n#0 /tmp/tmpc04hoq4s.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc04hoq4s.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      $count--;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst65l4wb.php:23\n\
    Stack trace:\n#0 /tmp/tmpst65l4wb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpst65l4wb.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxq4dvlv7.php:20\n\
    Stack trace:\n#0 /tmp/tmpxq4dvlv7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxq4dvlv7.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9puspbqe.php:23\n\
    Stack trace:\n#0 /tmp/tmp9puspbqe.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9puspbqe.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzysyzfn3.php:20\n\
    Stack trace:\n#0 /tmp/tmpzysyzfn3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzysyzfn3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkq_di0ja.php:20\n\
    Stack trace:\n#0 /tmp/tmpkq_di0ja.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkq_di0ja.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vrdz981.php:20\n\
    Stack trace:\n#0 /tmp/tmp0vrdz981.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0vrdz981.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptmsgvccd.php:20\n\
    Stack trace:\n#0 /tmp/tmptmsgvccd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptmsgvccd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysc7yikg.php:23\n\
    Stack trace:\n#0 /tmp/tmpysc7yikg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpysc7yikg.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx4inw61.php:20\n\
    Stack trace:\n#0 /tmp/tmpcx4inw61.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcx4inw61.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8kz_bxi.php:20\n\
    Stack trace:\n#0 /tmp/tmpw8kz_bxi.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpw8kz_bxi.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2baxaziw.php:23\n\
    Stack trace:\n#0 /tmp/tmp2baxaziw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2baxaziw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3cap6az.php:20\n\
    Stack trace:\n#0 /tmp/tmpc3cap6az.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpc3cap6az.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy15h9m96.php:24\n\
    Stack trace:\n#0 /tmp/tmpy15h9m96.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpy15h9m96.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgrd2ufv.php:23\n\
    Stack trace:\n#0 /tmp/tmpcgrd2ufv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcgrd2ufv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplycbgmxl.php:23\n\
    Stack trace:\n#0 /tmp/tmplycbgmxl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplycbgmxl.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxu_uqo5.php:20\n\
    Stack trace:\n#0 /tmp/tmpuxu_uqo5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpuxu_uqo5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkn_k6nxk.php:23\n\
    Stack trace:\n#0 /tmp/tmpkn_k6nxk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkn_k6nxk.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukptv20o.php:20\n\
    Stack trace:\n#0 /tmp/tmpukptv20o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpukptv20o.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg51nka0_.php:20\n\
    Stack trace:\n#0 /tmp/tmpg51nka0_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg51nka0_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza0pshro.php:24\n\
    Stack trace:\n#0 /tmp/tmpza0pshro.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpza0pshro.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pezoazb.php:20\n\
    Stack trace:\n#0 /tmp/tmp8pezoazb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8pezoazb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpic_6_13b.php:23\n\
    Stack trace:\n#0 /tmp/tmpic_6_13b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpic_6_13b.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr1yqbga3.php:23\n\
    Stack trace:\n#0 /tmp/tmpr1yqbga3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr1yqbga3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpajn24un7.php:23\n\
    Stack trace:\n#0 /tmp/tmpajn24un7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpajn24un7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  while ($n >= 10) {\n    $count++;\n    $n -= 10;\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9ikqlly.php:18\n\
    Stack trace:\n#0 /tmp/tmpi9ikqlly.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpi9ikqlly.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryaig200.php:23\n\
    Stack trace:\n#0 /tmp/tmpryaig200.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpryaig200.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  while ($n >= 10) {\n    $count++;\n    $n -= 10;\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1uaeu0f.php:18\n\
    Stack trace:\n#0 /tmp/tmpw1uaeu0f.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw1uaeu0f.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lny4v4p.php:20\n\
    Stack trace:\n#0 /tmp/tmp_lny4v4p.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_lny4v4p.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6s3yk6q.php:24\n\
    Stack trace:\n#0 /tmp/tmpl6s3yk6q.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl6s3yk6q.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bz7k34h.php:23\n\
    Stack trace:\n#0 /tmp/tmp2bz7k34h.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2bz7k34h.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      $count--;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpscmz6pd6.php:23\n\
    Stack trace:\n#0 /tmp/tmpscmz6pd6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpscmz6pd6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0t31jo_f.php:20\n\
    Stack trace:\n#0 /tmp/tmp0t31jo_f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0t31jo_f.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zw5w_jd.php:20\n\
    Stack trace:\n#0 /tmp/tmp9zw5w_jd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9zw5w_jd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcizcrh9.php:20\n\
    Stack trace:\n#0 /tmp/tmptcizcrh9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptcizcrh9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6_6iswj.php:24\n\
    Stack trace:\n#0 /tmp/tmpk6_6iswj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk6_6iswj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      if ($i == 1) {\n     \
    \   $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr72w82jn.php:25\n\
    Stack trace:\n#0 /tmp/tmpr72w82jn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpr72w82jn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      break;\n    }\n  }\n \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiigds5za.php:23\n\
    Stack trace:\n#0 /tmp/tmpiigds5za.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiigds5za.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwtscoer.php:23\n\
    Stack trace:\n#0 /tmp/tmpjwtscoer.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjwtscoer.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30vam8g9.php:20\n\
    Stack trace:\n#0 /tmp/tmp30vam8g9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp30vam8g9.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7830aa0p.php:20\n\
    Stack trace:\n#0 /tmp/tmp7830aa0p.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7830aa0p.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__aexhny.php:23\n\
    Stack trace:\n#0 /tmp/tmp__aexhny.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp__aexhny.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxckbmzc_.php:23\n\
    Stack trace:\n#0 /tmp/tmpxckbmzc_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxckbmzc_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprx19qt2o.php:20\n\
    Stack trace:\n#0 /tmp/tmprx19qt2o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprx19qt2o.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqs7edbb6.php:23\n\
    Stack trace:\n#0 /tmp/tmpqs7edbb6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqs7edbb6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vsyvfub.php:20\n\
    Stack trace:\n#0 /tmp/tmp1vsyvfub.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1vsyvfub.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2468314u.php:20\n\
    Stack trace:\n#0 /tmp/tmp2468314u.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2468314u.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpif3eca_6.php:23\n\
    Stack trace:\n#0 /tmp/tmpif3eca_6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpif3eca_6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      $count--;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9vdliuf.php:23\n\
    Stack trace:\n#0 /tmp/tmpt9vdliuf.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt9vdliuf.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl9o_gfa.php:23\n\
    Stack trace:\n#0 /tmp/tmpzl9o_gfa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzl9o_gfa.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm0ate_n.php:20\n\
    Stack trace:\n#0 /tmp/tmpjm0ate_n.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjm0ate_n.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpob5l5ik0.php:23\n\
    Stack trace:\n#0 /tmp/tmpob5l5ik0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpob5l5ik0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptyxp9uh9.php:23\n\
    Stack trace:\n#0 /tmp/tmptyxp9uh9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptyxp9uh9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cshg93k.php:20\n\
    Stack trace:\n#0 /tmp/tmp9cshg93k.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9cshg93k.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqzuwqav.php:24\n\
    Stack trace:\n#0 /tmp/tmpaqzuwqav.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaqzuwqav.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoz3zmkst.php:23\n\
    Stack trace:\n#0 /tmp/tmpoz3zmkst.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpoz3zmkst.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7426dpu.php:24\n\
    Stack trace:\n#0 /tmp/tmph7426dpu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph7426dpu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcny38cn.php:23\n\
    Stack trace:\n#0 /tmp/tmpmcny38cn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmcny38cn.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rwv8hyd.php:24\n\
    Stack trace:\n#0 /tmp/tmp6rwv8hyd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6rwv8hyd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7brbmrom.php:20\n\
    Stack trace:\n#0 /tmp/tmp7brbmrom.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7brbmrom.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbtkigd90.php:23\n\
    Stack trace:\n#0 /tmp/tmpbtkigd90.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbtkigd90.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw9rvlr1.php:23\n\
    Stack trace:\n#0 /tmp/tmprw9rvlr1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprw9rvlr1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppg02bwes.php:20\n\
    Stack trace:\n#0 /tmp/tmppg02bwes.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppg02bwes.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc8tmhis3.php:23\n\
    Stack trace:\n#0 /tmp/tmpc8tmhis3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc8tmhis3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ul3qt3n.php:20\n\
    Stack trace:\n#0 /tmp/tmp0ul3qt3n.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0ul3qt3n.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5d5xkun3.php:23\n\
    Stack trace:\n#0 /tmp/tmp5d5xkun3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5d5xkun3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp418gcgyc.php:20\n\
    Stack trace:\n#0 /tmp/tmp418gcgyc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp418gcgyc.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7x6n23ru.php:23\n\
    Stack trace:\n#0 /tmp/tmp7x6n23ru.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7x6n23ru.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4t1y8iaf.php:23\n\
    Stack trace:\n#0 /tmp/tmp4t1y8iaf.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4t1y8iaf.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03b57tjo.php:23\n\
    Stack trace:\n#0 /tmp/tmp03b57tjo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp03b57tjo.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a1291or.php:23\n\
    Stack trace:\n#0 /tmp/tmp0a1291or.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0a1291or.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpja7du4rp.php:23\n\
    Stack trace:\n#0 /tmp/tmpja7du4rp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpja7du4rp.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqu7tcp3v.php:23\n\
    Stack trace:\n#0 /tmp/tmpqu7tcp3v.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqu7tcp3v.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsafe8b_d.php:23\n\
    Stack trace:\n#0 /tmp/tmpsafe8b_d.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsafe8b_d.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8nujd64k.php:23\n\
    Stack trace:\n#0 /tmp/tmp8nujd64k.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8nujd64k.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92n4njk4.php:20\n\
    Stack trace:\n#0 /tmp/tmp92n4njk4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp92n4njk4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8bdr4yl0.php:23\n\
    Stack trace:\n#0 /tmp/tmp8bdr4yl0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8bdr4yl0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3gc9b92.php:20\n\
    Stack trace:\n#0 /tmp/tmpn3gc9b92.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpn3gc9b92.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9ag88j2.php:23\n\
    Stack trace:\n#0 /tmp/tmpn9ag88j2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpn9ag88j2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5pk_g1l.php:23\n\
    Stack trace:\n#0 /tmp/tmpw5pk_g1l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw5pk_g1l.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  while ($n >= 10) {\n    $count++;\n    $n -= 10;\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_b1p867.php:18\n\
    Stack trace:\n#0 /tmp/tmp2_b1p867.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2_b1p867.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfcl9e_0.php:20\n\
    Stack trace:\n#0 /tmp/tmpvfcl9e_0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvfcl9e_0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3jlncus5.php:23\n\
    Stack trace:\n#0 /tmp/tmp3jlncus5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3jlncus5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0fu6zr7u.php:24\n\
    Stack trace:\n#0 /tmp/tmp0fu6zr7u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0fu6zr7u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfajggng.php:20\n\
    Stack trace:\n#0 /tmp/tmpmfajggng.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmfajggng.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      $count--;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpke6uhx7l.php:23\n\
    Stack trace:\n#0 /tmp/tmpke6uhx7l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpke6uhx7l.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7wng5xa.php:23\n\
    Stack trace:\n#0 /tmp/tmpa7wng5xa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpa7wng5xa.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2z_bc3u.php:20\n\
    Stack trace:\n#0 /tmp/tmpo2z_bc3u.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo2z_bc3u.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_yxgqs3.php:23\n\
    Stack trace:\n#0 /tmp/tmpv_yxgqs3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv_yxgqs3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjzw38uuh.php:23\n\
    Stack trace:\n#0 /tmp/tmpjzw38uuh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjzw38uuh.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ne0s7ol.php:20\n\
    Stack trace:\n#0 /tmp/tmp7ne0s7ol.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7ne0s7ol.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfeuz2rh3.php:23\n\
    Stack trace:\n#0 /tmp/tmpfeuz2rh3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfeuz2rh3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucnpi8m7.php:23\n\
    Stack trace:\n#0 /tmp/tmpucnpi8m7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpucnpi8m7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g9000e6.php:23\n\
    Stack trace:\n#0 /tmp/tmp8g9000e6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8g9000e6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8lm566a.php:20\n\
    Stack trace:\n#0 /tmp/tmp_8lm566a.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_8lm566a.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp393fw74.php:20\n\
    Stack trace:\n#0 /tmp/tmpp393fw74.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp393fw74.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          if ($i %\
    \ 10000 == 1) {\n            if ($i % 100000 == 1) {\n              if ($i % 1000000\
    \ == 1) {\n                if ($i % 10000001 == 1) {\n                  if ($i\
    \ % 10000000 == 1) {\n                    if ($i % 100000000 == 1) {\n       \
    \               if ($i % 1000000000 == 1) {\n                        $count++;\n\
    \                      }\n                    }\n                  }\n       \
    \         }\n              }\n            }\n          }\n        }\n      }\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzcm8tz7z.php:38\n\
    Stack trace:\n#0 /tmp/tmpzcm8tz7z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpzcm8tz7z.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9vpr5_k.php:20\n\
    Stack trace:\n#0 /tmp/tmpl9vpr5_k.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpl9vpr5_k.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  while ($n >= 10) {\n    $count++;\n    $n -= 10;\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3564thnp.php:18\n\
    Stack trace:\n#0 /tmp/tmp3564thnp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3564thnp.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa86ba5wg.php:23\n\
    Stack trace:\n#0 /tmp/tmpa86ba5wg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpa86ba5wg.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplf3algz_.php:23\n\
    Stack trace:\n#0 /tmp/tmplf3algz_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplf3algz_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppvtuedzf.php:23\n\
    Stack trace:\n#0 /tmp/tmppvtuedzf.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppvtuedzf.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfmnt9nq.php:23\n\
    Stack trace:\n#0 /tmp/tmpgfmnt9nq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgfmnt9nq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplgtb4nww.php:23\n\
    Stack trace:\n#0 /tmp/tmplgtb4nww.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplgtb4nww.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz69tb5we.php:23\n\
    Stack trace:\n#0 /tmp/tmpz69tb5we.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz69tb5we.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmgn77s7.php:20\n\
    Stack trace:\n#0 /tmp/tmpdmgn77s7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdmgn77s7.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvkae0pn.php:20\n\
    Stack trace:\n#0 /tmp/tmpxvkae0pn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxvkae0pn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukjaxgq_.php:23\n\
    Stack trace:\n#0 /tmp/tmpukjaxgq_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpukjaxgq_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8cgpjck.php:20\n\
    Stack trace:\n#0 /tmp/tmps8cgpjck.php(26): test()\n#1 {main}\n  thrown in /tmp/tmps8cgpjck.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltegyuf6.php:20\n\
    Stack trace:\n#0 /tmp/tmpltegyuf6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpltegyuf6.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxujigou.php:20\n\
    Stack trace:\n#0 /tmp/tmpwxujigou.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwxujigou.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfobh44g.php:23\n\
    Stack trace:\n#0 /tmp/tmpvfobh44g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvfobh44g.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  while ($n >= 10) {\n    $count++;\n    $n -= 10;\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfh1pbjin.php:18\n\
    Stack trace:\n#0 /tmp/tmpfh1pbjin.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpfh1pbjin.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0b2x40a.php:23\n\
    Stack trace:\n#0 /tmp/tmpe0b2x40a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpe0b2x40a.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0) {\n      $count--;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return starts_one_ends(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 18) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== 180) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 1800) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== 18000) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuk02hp6k.php:23\n\
    Stack trace:\n#0 /tmp/tmpuk02hp6k.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuk02hp6k.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps131r0h9.php:23\n\
    Stack trace:\n#0 /tmp/tmps131r0h9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmps131r0h9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93i7b94o.php:24\n\
    Stack trace:\n#0 /tmp/tmp93i7b94o.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp93i7b94o.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaimhyfnq.php:24\n\
    Stack trace:\n#0 /tmp/tmpaimhyfnq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaimhyfnq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ftea4f5.php:23\n\
    Stack trace:\n#0 /tmp/tmp_ftea4f5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_ftea4f5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9o3ard6.php:23\n\
    Stack trace:\n#0 /tmp/tmph9o3ard6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmph9o3ard6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0792b4v1.php:20\n\
    Stack trace:\n#0 /tmp/tmp0792b4v1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0792b4v1.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprv20sbsg.php:23\n\
    Stack trace:\n#0 /tmp/tmprv20sbsg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprv20sbsg.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsyya6x0_.php:23\n\
    Stack trace:\n#0 /tmp/tmpsyya6x0_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsyya6x0_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      if ($i % 100 == 1) {\n        if ($i % 1000 == 1) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpefyez2vz.php:24\n\
    Stack trace:\n#0 /tmp/tmpefyez2vz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpefyez2vz.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57d5lyy7.php:23\n\
    Stack trace:\n#0 /tmp/tmp57d5lyy7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp57d5lyy7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdki0mlce.php:20\n\
    Stack trace:\n#0 /tmp/tmpdki0mlce.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdki0mlce.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return starts_one_ends(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2)\
    \ !== 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 180) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwo2dt7_.php:20\n\
    Stack trace:\n#0 /tmp/tmptwo2dt7_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptwo2dt7_.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp304pwx6j.php:23\n\
    Stack trace:\n#0 /tmp/tmp304pwx6j.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp304pwx6j.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer n, return the count of the numbers\
    \ of n-digit\n// positive integers that start or end with 1.\nfunction starts_one_ends($n)\
    \ {\n  $count = 0;\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 10 == 1) {\n\
    \      $count++;\n    }\n    if ($i % 10 == 0 && $i != 1) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ starts_one_ends(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 18) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 180)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 1800) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 18000) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqsbbwn_.php:23\n\
    Stack trace:\n#0 /tmp/tmphqsbbwn_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphqsbbwn_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_34_unique
language: php
results:
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfuc990ob.php:18\n\
    Stack trace:\n#0 /tmp/tmpfuc990ob.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpfuc990ob.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9xa_oxb.php:14\n\
    Stack trace:\n#0 /tmp/tmpb9xa_oxb.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb9xa_oxb.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdsqswp79.php:19\n\
    Stack trace:\n#0 /tmp/tmpdsqswp79.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpdsqswp79.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $a)) {\n\t\t\t$a[$v]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqi5ufba.php:20\n\
    Stack trace:\n#0 /tmp/tmpxqi5ufba.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxqi5ufba.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug_fhc0e.php:21\n\
    Stack trace:\n#0 /tmp/tmpug_fhc0e.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpug_fhc0e.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $a)) {\n\t\t\t$a[$e]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooenullx.php:20\n\
    Stack trace:\n#0 /tmp/tmpooenullx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpooenullx.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0bklx1c7.php:21\n\
    Stack trace:\n#0 /tmp/tmp0bklx1c7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0bklx1c7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $v) {\n        if (in_array($v, $a)) {\n\
    \            continue;\n        }\n        $a[$v] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrjl1flk.php:21\n\
    Stack trace:\n#0 /tmp/tmpnrjl1flk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnrjl1flk.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mvh4yjw.php:20\n\
    Stack trace:\n#0 /tmp/tmp4mvh4yjw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4mvh4yjw.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93606w9a.php:21\n\
    Stack trace:\n#0 /tmp/tmp93606w9a.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp93606w9a.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohwoeyfn.php:19\n\
    Stack trace:\n#0 /tmp/tmpohwoeyfn.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpohwoeyfn.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiz_xc2vt.php:19\n\
    Stack trace:\n#0 /tmp/tmpiz_xc2vt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpiz_xc2vt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkbg5gd62.php:21\n\
    Stack trace:\n#0 /tmp/tmpkbg5gd62.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkbg5gd62.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13_7n1du.php:19\n\
    Stack trace:\n#0 /tmp/tmp13_7n1du.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp13_7n1du.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[] = $e;\n    }\n    asort($a);\n\
    \    return $a;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_udljzk.php:19\n\
    Stack trace:\n#0 /tmp/tmpn_udljzk.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpn_udljzk.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38wz1syv.php:21\n\
    Stack trace:\n#0 /tmp/tmp38wz1syv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp38wz1syv.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0o8c8k4.php:21\n\
    Stack trace:\n#0 /tmp/tmpu0o8c8k4.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpu0o8c8k4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn8q3fag.php:20\n\
    Stack trace:\n#0 /tmp/tmpmn8q3fag.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpmn8q3fag.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqz6ahjbs.php:14\n\
    Stack trace:\n#0 /tmp/tmpqz6ahjbs.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpqz6ahjbs.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpolnkfkl8.php:21\n\
    Stack trace:\n#0 /tmp/tmpolnkfkl8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpolnkfkl8.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vils8zt.php:19\n\
    Stack trace:\n#0 /tmp/tmp8vils8zt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8vils8zt.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpae0bgvt7.php:14\n\
    Stack trace:\n#0 /tmp/tmpae0bgvt7.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpae0bgvt7.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxdr1gat.php:21\n\
    Stack trace:\n#0 /tmp/tmprxdr1gat.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprxdr1gat.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgtfnqxvu.php:18\n\
    Stack trace:\n#0 /tmp/tmpgtfnqxvu.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpgtfnqxvu.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $a)) {\n\
    \            $a[$v] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxo9cg946.php:20\n\
    Stack trace:\n#0 /tmp/tmpxo9cg946.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxo9cg946.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpue1ypa_e.php:14\n\
    Stack trace:\n#0 /tmp/tmpue1ypa_e.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpue1ypa_e.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj7joidr.php:21\n\
    Stack trace:\n#0 /tmp/tmpgj7joidr.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpgj7joidr.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96nuxf1c.php:13\n\
    Stack trace:\n#0 /tmp/tmp96nuxf1c.php(16): test()\n#1 {main}\n  thrown in /tmp/tmp96nuxf1c.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppeb2ejm8.php:18\n\
    Stack trace:\n#0 /tmp/tmppeb2ejm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmppeb2ejm8.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbabez2t7.php:13\n\
    Stack trace:\n#0 /tmp/tmpbabez2t7.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpbabez2t7.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwlzxuuu2.php:20\n\
    Stack trace:\n#0 /tmp/tmpwlzxuuu2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwlzxuuu2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukur_rn2.php:21\n\
    Stack trace:\n#0 /tmp/tmpukur_rn2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpukur_rn2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) continue;\n  \
    \  $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppqnrhso0.php:19\n\
    Stack trace:\n#0 /tmp/tmppqnrhso0.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppqnrhso0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) continue;\n  \
    \  $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jx2m3jl.php:19\n\
    Stack trace:\n#0 /tmp/tmp7jx2m3jl.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7jx2m3jl.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf4r3xo4q.php:20\n\
    Stack trace:\n#0 /tmp/tmpf4r3xo4q.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpf4r3xo4q.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20nph2f_.php:19\n\
    Stack trace:\n#0 /tmp/tmp20nph2f_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp20nph2f_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $a)) {\n\t\t\t$a[$e]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21tm70ma.php:20\n\
    Stack trace:\n#0 /tmp/tmp21tm70ma.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp21tm70ma.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrypylee.php:19\n\
    Stack trace:\n#0 /tmp/tmplrypylee.php(22): test()\n#1 {main}\n  thrown in /tmp/tmplrypylee.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ix7pnl5.php:21\n\
    Stack trace:\n#0 /tmp/tmp1ix7pnl5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp1ix7pnl5.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif ($e != 0) {\n\t\t\t$a[$e] = 1;\n\
    \t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args) {\n  \
    \  return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5sk_aefw.php:20\n\
    Stack trace:\n#0 /tmp/tmp5sk_aefw.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5sk_aefw.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx6bs3hi.php:13\n\
    Stack trace:\n#0 /tmp/tmpjx6bs3hi.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpjx6bs3hi.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxrcsyrp.php:20\n\
    Stack trace:\n#0 /tmp/tmpsxrcsyrp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpsxrcsyrp.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgq43jlx.php:14\n\
    Stack trace:\n#0 /tmp/tmpxgq43jlx.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpxgq43jlx.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprzfum70c.php:20\n\
    Stack trace:\n#0 /tmp/tmprzfum70c.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprzfum70c.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $v) {\n        if (in_array($v, $a)) {\n\
    \            continue;\n        }\n        $a[$v] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrxz8gx3.php:20\n\
    Stack trace:\n#0 /tmp/tmpsrxz8gx3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpsrxz8gx3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxctnchu.php:20\n\
    Stack trace:\n#0 /tmp/tmpdxctnchu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdxctnchu.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcuni03j7.php:21\n\
    Stack trace:\n#0 /tmp/tmpcuni03j7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpcuni03j7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $a)) {\n\t\t\t$a[$e]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmlj4rre.php:20\n\
    Stack trace:\n#0 /tmp/tmpgmlj4rre.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpgmlj4rre.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ipnfuz3.php:14\n\
    Stack trace:\n#0 /tmp/tmp1ipnfuz3.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp1ipnfuz3.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('unserialize', array_map('serialize', $l)));\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9e446akt.php:13\n\
    Stack trace:\n#0 /tmp/tmp9e446akt.php(16): test()\n#1 {main}\n  thrown in /tmp/tmp9e446akt.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_mz04y9.php:21\n\
    Stack trace:\n#0 /tmp/tmpl_mz04y9.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpl_mz04y9.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_y4bcap.php:20\n\
    Stack trace:\n#0 /tmp/tmp9_y4bcap.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9_y4bcap.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvk667ohx.php:21\n\
    Stack trace:\n#0 /tmp/tmpvk667ohx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvk667ohx.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9s4qpa71.php:20\n\
    Stack trace:\n#0 /tmp/tmp9s4qpa71.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9s4qpa71.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd__r7zt6.php:21\n\
    Stack trace:\n#0 /tmp/tmpd__r7zt6.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpd__r7zt6.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=2 |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd', 'e');\n$array = array_unique($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=2 |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array\
    \ = array_unique($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array = array_unique($array);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array('a', 'b',\
    \ 'c', 'd', 'e');\n$array = array_unique($array);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array\
    \ = array_unique($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array = array_unique($array);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a',\
    \ 'b', 'c', 'd', 'e');\n$array = array_unique($array);\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array\
    \ = array_unique($array);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n\
    <code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array = array_unique($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\n$array = array('a', 'b', 'c',\
    \ 'd', 'e');\n$array = array_unique($array);\n</code>\n<|/ a tags=php,arrays dscore=1\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n\
    $array = array_unique($array);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array('a', 'b', 'c', '\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbtgozpo7.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpub4aoorx.php:21\n\
    Stack trace:\n#0 /tmp/tmpub4aoorx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpub4aoorx.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2yv9elbp.php:21\n\
    Stack trace:\n#0 /tmp/tmp2yv9elbp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2yv9elbp.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvk2be01i.php:20\n\
    Stack trace:\n#0 /tmp/tmpvk2be01i.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpvk2be01i.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p0y68lr.php:21\n\
    Stack trace:\n#0 /tmp/tmp7p0y68lr.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7p0y68lr.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4d7ynh35.php:21\n\
    Stack trace:\n#0 /tmp/tmp4d7ynh35.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4d7ynh35.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4s9mhqje.php:13\n\
    Stack trace:\n#0 /tmp/tmp4s9mhqje.php(16): test()\n#1 {main}\n  thrown in /tmp/tmp4s9mhqje.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprug9_b45.php:21\n\
    Stack trace:\n#0 /tmp/tmprug9_b45.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprug9_b45.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxnifzqz.php:21\n\
    Stack trace:\n#0 /tmp/tmpxxnifzqz.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxxnifzqz.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $a)) {\n\t\t\t$a[$v]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj68ng15w.php:20\n\
    Stack trace:\n#0 /tmp/tmpj68ng15w.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpj68ng15w.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg4ux62e.php:21\n\
    Stack trace:\n#0 /tmp/tmplg4ux62e.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplg4ux62e.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5c0e3iab.php:19\n\
    Stack trace:\n#0 /tmp/tmp5c0e3iab.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp5c0e3iab.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpozwfxdo6.php:14\n\
    Stack trace:\n#0 /tmp/tmpozwfxdo6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpozwfxdo6.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kj_v9t5.php:19\n\
    Stack trace:\n#0 /tmp/tmp7kj_v9t5.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7kj_v9t5.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wkcgup0.php:18\n\
    Stack trace:\n#0 /tmp/tmp2wkcgup0.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp2wkcgup0.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $a)) {\n\t\t\t$a[$v]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy59l8ajs.php:20\n\
    Stack trace:\n#0 /tmp/tmpy59l8ajs.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy59l8ajs.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjxymcod.php:19\n\
    Stack trace:\n#0 /tmp/tmpkjxymcod.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpkjxymcod.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpympxpkpb.php:21\n\
    Stack trace:\n#0 /tmp/tmpympxpkpb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpympxpkpb.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11tjl1l3.php:17\n\
    Stack trace:\n#0 /tmp/tmp11tjl1l3.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp11tjl1l3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsp2wgjuv.php:19\n\
    Stack trace:\n#0 /tmp/tmpsp2wgjuv.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpsp2wgjuv.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5g0_xeqq.php:21\n\
    Stack trace:\n#0 /tmp/tmp5g0_xeqq.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5g0_xeqq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc02v6l4n.php:19\n\
    Stack trace:\n#0 /tmp/tmpc02v6l4n.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpc02v6l4n.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $k => $v) {\n\t\tif ($v != \"\") {\n\t\t\t$a[$v]\
    \ = $v;\n\t\t}\n\t}\n\tasort($a);\n\t$l = array_keys($a);\n\treturn $l;\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp774pye6l.php:22\n\
    Stack trace:\n#0 /tmp/tmp774pye6l.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp774pye6l.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0xkx0w9.php:14\n\
    Stack trace:\n#0 /tmp/tmpk0xkx0w9.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpk0xkx0w9.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4cqoxxbi.php:21\n\
    Stack trace:\n#0 /tmp/tmp4cqoxxbi.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4cqoxxbi.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m0b35_y.php:19\n\
    Stack trace:\n#0 /tmp/tmp_m0b35_y.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_m0b35_y.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj5_a9eb5.php:21\n\
    Stack trace:\n#0 /tmp/tmpj5_a9eb5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpj5_a9eb5.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprue5fk0c.php:21\n\
    Stack trace:\n#0 /tmp/tmprue5fk0c.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprue5fk0c.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wu3z04y.php:14\n\
    Stack trace:\n#0 /tmp/tmp2wu3z04y.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp2wu3z04y.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebbx7_j9.php:21\n\
    Stack trace:\n#0 /tmp/tmpebbx7_j9.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpebbx7_j9.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpci_o8gc3.php:21\n\
    Stack trace:\n#0 /tmp/tmpci_o8gc3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpci_o8gc3.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpladcz9sw.php:19\n\
    Stack trace:\n#0 /tmp/tmpladcz9sw.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpladcz9sw.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9x7t4af7.php:14\n\
    Stack trace:\n#0 /tmp/tmp9x7t4af7.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp9x7t4af7.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptrmyu62w.php:21\n\
    Stack trace:\n#0 /tmp/tmptrmyu62w.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptrmyu62w.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp49wmdf8w.php:20\n\
    Stack trace:\n#0 /tmp/tmp49wmdf8w.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp49wmdf8w.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcfrjnjq.php:21\n\
    Stack trace:\n#0 /tmp/tmphcfrjnjq.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphcfrjnjq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjcppbj_q.php:21\n\
    Stack trace:\n#0 /tmp/tmpjcppbj_q.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjcppbj_q.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $v) {\n        if (in_array($v, $a)) {\n\
    \            continue;\n        }\n        $a[$v] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7i5bfio.php:20\n\
    Stack trace:\n#0 /tmp/tmpg7i5bfio.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpg7i5bfio.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lpklmhk.php:13\n\
    Stack trace:\n#0 /tmp/tmp1lpklmhk.php(16): test()\n#1 {main}\n  thrown in /tmp/tmp1lpklmhk.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmknpqahx.php:21\n\
    Stack trace:\n#0 /tmp/tmpmknpqahx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmknpqahx.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaugu27su.php:21\n\
    Stack trace:\n#0 /tmp/tmpaugu27su.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpaugu27su.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzei_s7yp.php:20\n\
    Stack trace:\n#0 /tmp/tmpzei_s7yp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzei_s7yp.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaavyvw5d.php:19\n\
    Stack trace:\n#0 /tmp/tmpaavyvw5d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpaavyvw5d.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg886hecg.php:19\n\
    Stack trace:\n#0 /tmp/tmpg886hecg.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpg886hecg.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdm9evluo.php:21\n\
    Stack trace:\n#0 /tmp/tmpdm9evluo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdm9evluo.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) continue;\n  \
    \  $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzkistny.php:19\n\
    Stack trace:\n#0 /tmp/tmpnzkistny.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnzkistny.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $v) {\n        if (in_array($v, $a)) {\n\
    \            continue;\n        }\n        $a[$v] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp99mw3ux8.php:21\n\
    Stack trace:\n#0 /tmp/tmp99mw3ux8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp99mw3ux8.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoj7skrgi.php:18\n\
    Stack trace:\n#0 /tmp/tmpoj7skrgi.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpoj7skrgi.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71qbfcoh.php:13\n\
    Stack trace:\n#0 /tmp/tmp71qbfcoh.php(16): test()\n#1 {main}\n  thrown in /tmp/tmp71qbfcoh.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('unserialize', array_unique(array_map('serialize',\
    \ $l))));\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis was the only solution\
    \ that worked for me. Thanks!\n<|/ c |>\n<| c |>\nThis worked for me too. Thanks!\n\
    <|/ c |>\n<| c |>\nThis worked for me too. Thanks!\n<|/ c |>\n<| c |>\nThis worked\
    \ for me too. Thanks!\n<|/ c |>\n<| c |>\nThis worked for me too. Thanks!\n<|/\
    \ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array = array('a', 'b', 'c',\
    \ 'd', 'e');\n$array = array_unique($array);\nsort($array);\n</code>\n<|/ a dscore=4\
    \ |>\n<| c |>\nThis doesn't work if you have objects in your array and you want\
    \ the objects to be sorted.\n<|/ c |>\n<| c |>\nThis doesn't work if you have\
    \ objects in your array and you want the objects to be sorted.\n<|/ c |>\n<| a\
    \ dscore=3 |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array = array_unique($array);\n\
    sort($array);\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$array = array('a', 'b', 'c', 'd', 'e');\n$array = array_unique($array);\n\
    sort($array);\n</code>\n<|/ a dscore=3 |>\n<| a dscore=2 |>\n<code>\n$array =\
    \ array('a', 'b', 'c', 'd', 'e');\n$array = array_unique($array);\nsort($array);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a dscore=2 |>\n<code>\n$array =\
    \ array('a', 'b', 'c', 'd', 'e');\n$array = array_unique($array);\nsort($array);\n\
    </code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    $array = array('a', 'b', 'c', 'd', 'e');\n$array = array_unique($array);\nsort($array);\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array('a', 'b',\
    \ 'c', 'd', 'e');\n$array = array_unique($array);\nsort($array);\n</code>\n<|/\
    \ a tags=php,arrays,sorting \nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpio6c6ae8.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1oi2uuuw.php:21\n\
    Stack trace:\n#0 /tmp/tmp1oi2uuuw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp1oi2uuuw.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28e9we_7.php:19\n\
    Stack trace:\n#0 /tmp/tmp28e9we_7.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp28e9we_7.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm57n6bre.php:20\n\
    Stack trace:\n#0 /tmp/tmpm57n6bre.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpm57n6bre.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadu_ho9i.php:17\n\
    Stack trace:\n#0 /tmp/tmpadu_ho9i.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpadu_ho9i.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy85f_ly0.php:21\n\
    Stack trace:\n#0 /tmp/tmpy85f_ly0.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpy85f_ly0.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $a)) {\n\t\t\t$a[$e]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_qyc_jr.php:20\n\
    Stack trace:\n#0 /tmp/tmpw_qyc_jr.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpw_qyc_jr.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0i8icyc5.php:20\n\
    Stack trace:\n#0 /tmp/tmp0i8icyc5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp0i8icyc5.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $a)) {\n\
    \            $a[$v] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaj2qefuv.php:20\n\
    Stack trace:\n#0 /tmp/tmpaj2qefuv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpaj2qefuv.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1of52xz.php:21\n\
    Stack trace:\n#0 /tmp/tmpq1of52xz.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpq1of52xz.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfwjph1n.php:14\n\
    Stack trace:\n#0 /tmp/tmpjfwjph1n.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpjfwjph1n.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhrs480j.php:13\n\
    Stack trace:\n#0 /tmp/tmpqhrs480j.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpqhrs480j.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9a5mu4g.php:14\n\
    Stack trace:\n#0 /tmp/tmpb9a5mu4g.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb9a5mu4g.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\");\n$array = array_unique($array);\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis doesn't work if you have duplicate values in\
    \ your array. `array_unique` removes duplicate values from the array, but doesn't\
    \ preserve the original order.\n<|/ c |>\n<| c |>\nThis doesn't preserve the original\
    \ order\n<|/ c |>\n<| c |>\nThis doesn't preserve the original order\n<|/ c |>\n\
    <| c |>\nThis doesn't preserve the original order\n<|/ c |>\n<| a dscore=5 |>\n\
    <code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"\
    , \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n$array = array_unique($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't preserve the original\
    \ order\n<|/ c |>\n<| c |>\nThis doesn't preserve the original order\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\n$array = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"\
    f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n$array =\
    \ array_unique($array);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ preserve the original order\n<|/ c |>\n<| c |>\nThis doesn't preserve the original\
    \ order\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\", \"b\", \"c\"\
    , \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\");\n$array = array_unique($array);\n</code>\n<|/ a tags=php,arrays \nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvl0jaqq4.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0lldzuh.php:18\n\
    Stack trace:\n#0 /tmp/tmpr0lldzuh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpr0lldzuh.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkr16y1ur.php:21\n\
    Stack trace:\n#0 /tmp/tmpkr16y1ur.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkr16y1ur.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp658ksipo.php:13\n\
    Stack trace:\n#0 /tmp/tmp658ksipo.php(16): test()\n#1 {main}\n  thrown in /tmp/tmp658ksipo.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $a)) {\n\t\t\t$a[$e]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26euw0ao.php:20\n\
    Stack trace:\n#0 /tmp/tmp26euw0ao.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp26euw0ao.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpare95mgf.php:20\n\
    Stack trace:\n#0 /tmp/tmpare95mgf.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpare95mgf.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8o4pnbu.php:20\n\
    Stack trace:\n#0 /tmp/tmpi8o4pnbu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpi8o4pnbu.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlgcoqm2.php:19\n\
    Stack trace:\n#0 /tmp/tmpqlgcoqm2.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpqlgcoqm2.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpubld2qjb.php:20\n\
    Stack trace:\n#0 /tmp/tmpubld2qjb.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpubld2qjb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9anhu260.php:17\n\
    Stack trace:\n#0 /tmp/tmp9anhu260.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9anhu260.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpreld5crf.php:13\n\
    Stack trace:\n#0 /tmp/tmpreld5crf.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpreld5crf.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxajjhieo.php:18\n\
    Stack trace:\n#0 /tmp/tmpxajjhieo.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpxajjhieo.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbxd_ftt.php:21\n\
    Stack trace:\n#0 /tmp/tmpsbxd_ftt.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpsbxd_ftt.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpbhqut_.php:13\n\
    Stack trace:\n#0 /tmp/tmphpbhqut_.php(16): test()\n#1 {main}\n  thrown in /tmp/tmphpbhqut_.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7f8zbzzz.php:14\n\
    Stack trace:\n#0 /tmp/tmp7f8zbzzz.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp7f8zbzzz.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6un361e.php:21\n\
    Stack trace:\n#0 /tmp/tmpf6un361e.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpf6un361e.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpetxdg5z0.php:18\n\
    Stack trace:\n#0 /tmp/tmpetxdg5z0.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpetxdg5z0.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxr24ubul.php:19\n\
    Stack trace:\n#0 /tmp/tmpxr24ubul.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpxr24ubul.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bg8k8xd.php:20\n\
    Stack trace:\n#0 /tmp/tmp9bg8k8xd.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9bg8k8xd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq3g7463m.php:20\n\
    Stack trace:\n#0 /tmp/tmpq3g7463m.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpq3g7463m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzp4c4g1u.php:13\n\
    Stack trace:\n#0 /tmp/tmpzp4c4g1u.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpzp4c4g1u.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56n6i125.php:21\n\
    Stack trace:\n#0 /tmp/tmp56n6i125.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp56n6i125.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $s = array();\n\tforeach ($l as $k => $v) {\n\t\tif (!in_array($v, $s)) {\n\t\t\
    \t$s[] = $v;\n\t\t}\n\t}\n\treturn $s;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rnh8lkv.php:20\n\
    Stack trace:\n#0 /tmp/tmp8rnh8lkv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp8rnh8lkv.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxi8cahi.php:14\n\
    Stack trace:\n#0 /tmp/tmpyxi8cahi.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpyxi8cahi.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpir0_r46c.php:14\n\
    Stack trace:\n#0 /tmp/tmpir0_r46c.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpir0_r46c.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $v) {\n\t\tif (in_array($v, $a)) continue;\n\t\
    \t$a[] = $v;\n\t}\n\treturn $a;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaggfnat2.php:19\n\
    Stack trace:\n#0 /tmp/tmpaggfnat2.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpaggfnat2.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[] = $e;\n    }\n    return\
    \ array_unique($a);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1q11cmr.php:18\n\
    Stack trace:\n#0 /tmp/tmpd1q11cmr.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd1q11cmr.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxa6crz8.php:21\n\
    Stack trace:\n#0 /tmp/tmpxxa6crz8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxxa6crz8.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $s = array();\n    foreach ($l as $v) {\n        if (in_array($v, $s)) {\n\
    \            continue;\n        }\n        $s[] = $v;\n    }\n    return $s;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7f60he7.php:21\n\
    Stack trace:\n#0 /tmp/tmpp7f60he7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpp7f60he7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcev_11h2.php:20\n\
    Stack trace:\n#0 /tmp/tmpcev_11h2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpcev_11h2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif (in_array($e, $a)) continue;\n\t\
    \t$a[$e] = 1;\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkyc582pd.php:19\n\
    Stack trace:\n#0 /tmp/tmpkyc582pd.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpkyc582pd.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmply3y6bl6.php:13\n\
    Stack trace:\n#0 /tmp/tmply3y6bl6.php(16): test()\n#1 {main}\n  thrown in /tmp/tmply3y6bl6.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) continue;\n  \
    \  $a[$e] = 1;\n  }\n  return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjdv8_r9.php:18\n\
    Stack trace:\n#0 /tmp/tmpqjdv8_r9.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpqjdv8_r9.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $a)) {\n\t\t\t$a[$e]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdrswig_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpdrswig_a.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpdrswig_a.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxdhq5hi.php:21\n\
    Stack trace:\n#0 /tmp/tmptxdhq5hi.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptxdhq5hi.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxswbah6m.php:20\n\
    Stack trace:\n#0 /tmp/tmpxswbah6m.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpxswbah6m.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1fruz97.php:21\n\
    Stack trace:\n#0 /tmp/tmpy1fruz97.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpy1fruz97.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5a8xb09.php:14\n\
    Stack trace:\n#0 /tmp/tmpv5a8xb09.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpv5a8xb09.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0rvwh7q.php:19\n\
    Stack trace:\n#0 /tmp/tmpr0rvwh7q.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpr0rvwh7q.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $a)) {\n\t\t\t$a[$e]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3hyfdd9w.php:20\n\
    Stack trace:\n#0 /tmp/tmp3hyfdd9w.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3hyfdd9w.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpydk7iwcl.php:20\n\
    Stack trace:\n#0 /tmp/tmpydk7iwcl.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpydk7iwcl.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxakvu7c.php:14\n\
    Stack trace:\n#0 /tmp/tmpdxakvu7c.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpdxakvu7c.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $s = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $s)) {\n\
    \            $s[] = $v;\n        }\n    }\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7rumkv79.php:19\n\
    Stack trace:\n#0 /tmp/tmp7rumkv79.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7rumkv79.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpet3ozm0n.php:20\n\
    Stack trace:\n#0 /tmp/tmpet3ozm0n.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpet3ozm0n.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2epaq0x.php:21\n\
    Stack trace:\n#0 /tmp/tmpy2epaq0x.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpy2epaq0x.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6d5n7lt.php:21\n\
    Stack trace:\n#0 /tmp/tmpt6d5n7lt.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpt6d5n7lt.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtu1sp1z.php:21\n\
    Stack trace:\n#0 /tmp/tmphtu1sp1z.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphtu1sp1z.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60nj9zdg.php:18\n\
    Stack trace:\n#0 /tmp/tmp60nj9zdg.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp60nj9zdg.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9c_brt0.php:21\n\
    Stack trace:\n#0 /tmp/tmpw9c_brt0.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpw9c_brt0.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $s = array();\n    foreach ($l as $k => $v) {\n        if (!isset($s[$v]))\
    \ {\n            $s[$v] = $k;\n        }\n    }\n    return $s;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmti0prjn.php:20\n\
    Stack trace:\n#0 /tmp/tmpmti0prjn.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpmti0prjn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $a)) {\n\t\t\t$a[$e]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15vzyvwg.php:20\n\
    Stack trace:\n#0 /tmp/tmp15vzyvwg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp15vzyvwg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3p516462.php:21\n\
    Stack trace:\n#0 /tmp/tmp3p516462.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3p516462.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7nwt5e_.php:13\n\
    Stack trace:\n#0 /tmp/tmpn7nwt5e_.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpn7nwt5e_.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1kixmdo.php:21\n\
    Stack trace:\n#0 /tmp/tmpw1kixmdo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpw1kixmdo.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7y6jhip.php:18\n\
    Stack trace:\n#0 /tmp/tmpq7y6jhip.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpq7y6jhip.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1it9d5y8.php:21\n\
    Stack trace:\n#0 /tmp/tmp1it9d5y8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp1it9d5y8.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n$arr = array(5, 3, 5, 2, 3, 3, 9, 0, 123);\n$arr = array_unique($arr);\n\
    sort($arr);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if the array\
    \ contains objects. In that case you need to use array_map() instead of array_unique().\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the array contains objects. In that case\
    \ you need to use array_map() instead of array_unique().\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = array(5, 3, 5, 2, 3, 3, 9, 0, 123);\n$arr = array_unique($arr);\n\
    sort($arr);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if the array\
    \ contains objects. In that case you need to use array_map() instead of array_unique().\n\
    <|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n$arr = array(5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123);\n$arr = array_unique($arr);\nsort($arr);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work if the array contains objects. In that case you\
    \ need to use array_map() instead of array_unique().\n<|/ c |>\n<| a tags=php,arrays,sorting\
    \ |>\n<code>\n$arr = array(5, 3, 5, 2, 3, 3, 9, 0, 123);\n$arr = array_unique($arr);\n\
    sort($arr);\n</code>\n<|/ a dscore=4 |>\n<| a tags=php,arrays,sorting |>\n<code>\n\
    $arr = array(5, 3, 5, 2, 3, 3, 9, 0, 123);\n$arr = array_unique($arr);\nsort($arr);\n\
    </code>\n<|/ a dscore=4 |>\n<| a dscore=4 |>\n<code>\n$arr = array(5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123);\n$arr = array_unique($arr);\nsort($arr);\n</code>\n<|/ a tags=php,arrays,sorting\
    \ |>\n<| a dscore=3 |>\n<code>\n$arr = array(5, 3, 5, 2, 3, 3, 9, 0, 123);\n$arr\
    \ = array_unique($arr);\nsort($arr);\n</code>\n<|/ a tags=php,array\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfrjvkz6y.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0g5goe4t.php:19\n\
    Stack trace:\n#0 /tmp/tmp0g5goe4t.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp0g5goe4t.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tvnwn4e.php:14\n\
    Stack trace:\n#0 /tmp/tmp6tvnwn4e.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp6tvnwn4e.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o03n8ty.php:20\n\
    Stack trace:\n#0 /tmp/tmp4o03n8ty.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4o03n8ty.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxmz7n0z4.php:13\n\
    Stack trace:\n#0 /tmp/tmpxmz7n0z4.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpxmz7n0z4.php\
    \ on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $v) {\n        if (in_array($v, $a)) {\n\
    \            continue;\n        }\n        $a[$v] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yd228bn.php:21\n\
    Stack trace:\n#0 /tmp/tmp0yd228bn.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0yd228bn.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkltm_nld.php:20\n\
    Stack trace:\n#0 /tmp/tmpkltm_nld.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpkltm_nld.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct058mnb.php:17\n\
    Stack trace:\n#0 /tmp/tmpct058mnb.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpct058mnb.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegun0knk.php:21\n\
    Stack trace:\n#0 /tmp/tmpegun0knk.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpegun0knk.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplw97mjto.php:21\n\
    Stack trace:\n#0 /tmp/tmplw97mjto.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplw97mjto.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $a)) {\n\t\t\t$a[$v]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp195wl0he.php:20\n\
    Stack trace:\n#0 /tmp/tmp195wl0he.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp195wl0he.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9h6qhv2y.php:21\n\
    Stack trace:\n#0 /tmp/tmp9h6qhv2y.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp9h6qhv2y.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxlsq706.php:20\n\
    Stack trace:\n#0 /tmp/tmpnxlsq706.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpnxlsq706.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3e51kh5.php:17\n\
    Stack trace:\n#0 /tmp/tmpz3e51kh5.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpz3e51kh5.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3f12a0jw.php:17\n\
    Stack trace:\n#0 /tmp/tmp3f12a0jw.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp3f12a0jw.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a)) {\n\
    \            $a[$e] = 1;\n        }\n    }\n    return array_keys($a);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_6zytnn.php:20\n\
    Stack trace:\n#0 /tmp/tmp3_6zytnn.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3_6zytnn.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpomtebni6.php:14\n\
    Stack trace:\n#0 /tmp/tmpomtebni6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpomtebni6.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphacdwavm.php:21\n\
    Stack trace:\n#0 /tmp/tmphacdwavm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphacdwavm.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6ifkb8l.php:14\n\
    Stack trace:\n#0 /tmp/tmpf6ifkb8l.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpf6ifkb8l.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) {\n\
    \            continue;\n        }\n        $a[$e] = 1;\n    }\n    return array_keys($a);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplw3tmgdj.php:21\n\
    Stack trace:\n#0 /tmp/tmplw3tmgdj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplw3tmgdj.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        if (in_array($e, $a)) continue;\n\
    \        $a[$e] = 1;\n    }\n    return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkr4dnzj1.php:19\n\
    Stack trace:\n#0 /tmp/tmpkr4dnzj1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpkr4dnzj1.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  $a\
    \ = array();\n  foreach ($l as $e) {\n    if (in_array($e, $a)) {\n      continue;\n\
    \    }\n    $a[$e] = 1;\n  }\n  return array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzc9j6w3t.php:21\n\
    Stack trace:\n#0 /tmp/tmpzc9j6w3t.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzc9j6w3t.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $a)) {\n\t\t\t$a[$v]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8_cf3cd.php:20\n\
    Stack trace:\n#0 /tmp/tmpl8_cf3cd.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpl8_cf3cd.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n\t\
    $a = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $a)) {\n\t\t\t$a[$v]\
    \ = 1;\n\t\t}\n\t}\n\treturn array_keys($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfeuufalg.php:20\n\
    Stack trace:\n#0 /tmp/tmpfeuufalg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfeuufalg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  $a = array();\n    foreach ($l as $e) {\n        $a[$e] = 1;\n    }\n    return\
    \ array_keys($a);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_q3t74_l.php:18\n\
    Stack trace:\n#0 /tmp/tmp_q3t74_l.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp_q3t74_l.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpetu252k8.php:14\n\
    Stack trace:\n#0 /tmp/tmpetu252k8.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpetu252k8.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Return sorted unique elements in a list\n// >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique($l) {\n  \
    \  return array_unique(array_map('intval', $l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo4v3dbx6.php:14\n\
    Stack trace:\n#0 /tmp/tmpo4v3dbx6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpo4v3dbx6.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception

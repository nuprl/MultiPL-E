name: HumanEval_9_rolling_max
language: php
results:
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gvgyfvl.php:25\n\
    Stack trace:\n#0 /tmp/tmp9gvgyfvl.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9gvgyfvl.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    $max_index\
    \ = array_search($max_value, $numbers);\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[$i] = $numbers[$i];\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = count($numbers); $i > 0; $i--) {\n        $result[$i]\
    \ = $max_value;\n        if ($numbers[$i] > $max_value) {\n            $max_value\
    \ = $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulhzjg39.php:33\n\
    Stack trace:\n#0 /tmp/tmpulhzjg39.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpulhzjg39.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = 0;\n        }\n    \
    \    $result[$max_index] = $number;\n        $max_index++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6q6x9jo.php:27\n\
    Stack trace:\n#0 /tmp/tmpq6q6x9jo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpq6q6x9jo.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_oyougf.php:25\n\
    Stack trace:\n#0 /tmp/tmpl_oyougf.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl_oyougf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcz5w7i4k.php:21\n\
    Stack trace:\n#0 /tmp/tmpcz5w7i4k.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcz5w7i4k.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexs = [];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $max_indexs[] = $max_index;\n    $max_indexs[] = count($numbers)\
    \ - 1;\n    $max_indexs[] = count($numbers) - 2;\n    $max_indexs[] = count($numbers)\
    \ - 3;\n    $max_indexs[] = count($numbers) - 4;\n    $max_indexs[] = count($numbers)\
    \ - 5;\n    $max_indexs[] = count($numbers) - 6;\n    $max_indexs[] = count($numbers)\
    \ - 7;\n    $max_indexs[] = count($numbers) - 8;\n    $max_indexs[] = count($numbers)\
    \ - 9;\n    $max_indexs[] = count($numbers) - 10;\n    $max_indexs[] = count($numbers)\
    \ - 11;\n    $max_indexs[] = count($numbers) - 12;\n    $max_indexs[] = count($numbers)\
    \ - 13;\n    $max_indexs[] = count($numbers) - 14;\n    $max_indexs[] = count($numbers)\
    \ - 15;\n    $max_indexs[] = count($numbers) - 16;\n    $max_indexs[] = count($numbers)\
    \ - 17;\n    $max_indexs[] = count($numbers) - 18;\n    $max_indexs[] = count($numbers)\
    \ - 19;\n    $max_indexs[] = count($numbers) - 20;\n    $max_indexs[] = count($numbers)\
    \ - 21;\n    $max_indexs[] = count($numbers) - 22;\n    $max_indexs[] = count($numbers)\
    \ - 23;\n    $max_indexs[] = count($numbers) - 24;\n    $max_indexs[] = count($numbers)\
    \ - 25;\n    $max_indexs[] = count($numbers) - 26;\n    $max_indexs[] = count($numbers)\
    \ - 27;\n    $max_indexs[] = count($numbers) - 28;\n    $max_indexs[] = count($numbers)\
    \ - 29;\n    $max_indexs[] = count($numbers) - 30;\n    $max_indexs[] = count($numbers)\
    \ - 31;\n    $max_indexs[] = count($numbers) - 32;\n    $max_indexs[] = count($numbers)\
    \ - 33;\n    $max_indexs[] = count($numbers) - 34;\n    $max_indexs[] = count($numbers)\
    \ - 35;\n    $max_indexs[] = count($numbers) - 36;\n    $max_indexs[] = count($numbers)\
    \ - 37;\n    $max_indexs[] = count($numbers) - 38;\n    $max_indexs[\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyilvwx9r.php on line 56\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycnt8ie2.php:21\n\
    Stack trace:\n#0 /tmp/tmpycnt8ie2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpycnt8ie2.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_ani1s6.php:24\n\
    Stack trace:\n#0 /tmp/tmpd_ani1s6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpd_ani1s6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9awl0st.php:25\n\
    Stack trace:\n#0 /tmp/tmpc9awl0st.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpc9awl0st.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max < $number) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n</code>\n<|/ a\
    \ tags=php,arrays,algorithm |>\n<| c |>\nThis doesn't seem to work. `rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])` returns `[1, 2, 3, 3, 3, 4, 4]` instead of `[1, 2, 3, 3,\
    \ 3, 4, 2]`.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and it works. I edited\
    \ my answer to include the code I tested with.\n<|/ c |>\n<| c |>\nI tested it\
    \ on PHP 5.6 and it works. I edited my answer to include the code I tested with.\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.6 and it works. I edited my answer to\
    \ include the code I tested with.\n<|/ c |>\n<| c |>\nI tested it on PHP 5.6 and\
    \ it works. I edited my answer to include the code I tested with.\n<|/ c |>\n\
    <| a tags=php,arrays,algorithm |>\n<code>\nfunction candidate(...$args) {\n  \
    \  return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdaxam_7m.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i\
    \ == $max_index) {\n            $result[] = $numbers[$i];\n        } else {\n\
    \            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7c3596ip.php:33\n\
    Stack trace:\n#0 /tmp/tmp7c3596ip.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7c3596ip.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = $max_index; $i >= 0; $i--) {\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThanks for your answer. Can you please explain me how this works?\n<|/\
    \ c |>\n<| c |>\nI added some comments to explain how it works. I hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. Can you please explain me how this\
    \ works?\n<|/ c |>\n<| c |>\nI added some comments to explain how it works. I\
    \ hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\n$numbers = [1,\
    \ 2, 3, 2, 3, 4, 2];\n$max_value = max($numbers);\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n$max_index = array_search($max_value,\
    \ $numbers);\n$max_value = $numbers[$max_index];\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzgfmydd3.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzuenc4_m.php:21\n\
    Stack trace:\n#0 /tmp/tmpzuenc4_m.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzuenc4_m.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = 0;\n        } elseif ($number == $max) {\n            $max_index++;\n    \
    \    }\n    }\n    return array_slice($numbers, 0, $max_index);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa291a4eh.php:26\n\
    Stack trace:\n#0 /tmp/tmpa291a4eh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa291a4eh.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $rolling_max) {\n            $rolling_max\
    \ = $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpih3x7gf4.php:23\n\
    Stack trace:\n#0 /tmp/tmpih3x7gf4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpih3x7gf4.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv67e34qp.php:21\n\
    Stack trace:\n#0 /tmp/tmpv67e34qp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv67e34qp.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdlwm86z1.php:25\n\
    Stack trace:\n#0 /tmp/tmpdlwm86z1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdlwm86z1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $i;\n        }\n   \
    \     $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp796uq9ly.php:27\n\
    Stack trace:\n#0 /tmp/tmp796uq9ly.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp796uq9ly.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = 0;\n        }\n    \
    \    if ($number == $max_value) {\n            $max_index++;\n        }\n    \
    \    $result[$max_index] = $max_value;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\nI wrote a recursive function which returns\
    \ the max value of a given array without using any loops or recursion.\n<code>\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmph160f_x_.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = reset($numbers);\n    $max_index = count($numbers) - 1;\n    foreach\
    \ ($numbers as $index => $number) {\n        if ($number > $max) {\n         \
    \   $max = $number;\n            $max_index = $index;\n        }\n    }\n    return\
    \ $numbers[$max_index];\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxz3dvgo.php:23\n\
    Stack trace:\n#0 /tmp/tmpwxz3dvgo.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwxz3dvgo.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx9h7x6jh.php:27\n\
    Stack trace:\n#0 /tmp/tmpx9h7x6jh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx9h7x6jh.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjjv74qqe.php:25\n\
    Stack trace:\n#0 /tmp/tmpjjv74qqe.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjjv74qqe.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $result[] = $numbers[0];\n    $max_value = $numbers[0];\n\
    \    $max_index = 0;\n    foreach ($numbers as $number) {\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n            $max_index =\
    \ $i;\n        }\n        $result[] = $number;\n    }\n    return $result;\n}\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppcgfjioj.php:25\n\
    Stack trace:\n#0 /tmp/tmppcgfjioj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppcgfjioj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyt22u3a4.php:24\n\
    Stack trace:\n#0 /tmp/tmpyt22u3a4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyt22u3a4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    $max_index = 0;\n    $i = 0;\n    foreach ($numbers as $number) {\n     \
    \   if ($number > $max_value) {\n            $max_value = $number;\n         \
    \   $max_index = $i;\n        }\n        $i++;\n    }\n    $max_element = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $max_value;\n\
    \    $max_index = $max_index;\n    $max_value = $max_value;\n    $max_index =\
    \ $max_index;\n    $max_value = $max_value;\n    $max_index = $max_index;\n  \
    \  $max_value = $max_value;\n    $max_index = $max_index;\n    $max_value = $\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvy6wt9dy.php on line 84\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = 0;\n        }\n    \
    \    if ($number == $max_value) {\n            $max_index++;\n        }\n    \
    \    $result[] = $max_value;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprzwzmxci.php:25\n\
    Stack trace:\n#0 /tmp/tmprzwzmxci.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprzwzmxci.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexed = false;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \          $max_indexed = true;\n        }\n    }\n    if ($max_indexed) {\n \
    \       $numbers[$max_index] = $max_value;\n    }\n    return $numbers;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm59dvotz.php:30\n\
    Stack trace:\n#0 /tmp/tmpm59dvotz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpm59dvotz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = $max_index; $i >= 0; $i--) {\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsdhcbb4.php:27\n\
    Stack trace:\n#0 /tmp/tmppsdhcbb4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppsdhcbb4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    $max_rolling_number_index\
    \ = 0;\n    $max_rolling_number_indexes = [];\n    $max_rolling_number_indexes[]\
    \ = 0;\n    $max_rolling_number_indexes[] = 1;\n    $max_rolling_number_indexes[]\
    \ = 2;\n    $max_rolling_number_indexes[] = 3;\n    $max_rolling_number_indexes[]\
    \ = 4;\n    $max_rolling_number_indexes[] = 5;\n    $max_rolling_number_indexes[]\
    \ = 6;\n    $max_rolling_number_indexes[] = 7;\n    $max_rolling_number_indexes[]\
    \ = 8;\n    $max_rolling_number_indexes[] = 9;\n    $max_rolling_number_indexes[]\
    \ = 10;\n    $max_rolling_number_indexes[] = 11;\n    $max_rolling_number_indexes[]\
    \ = 12;\n    $max_rolling_number_indexes[] = 13;\n    $max_rolling_number_indexes[]\
    \ = 14;\n    $max_rolling_number_indexes[] = 15;\n    $max_rolling_number_indexes[]\
    \ = 16;\n    $max_rolling_number_indexes[] = 17;\n    $max_rolling_number_indexes[]\
    \ = 18;\n    $max_rolling_number_indexes[] = 19;\n    $max_rolling_number_indexes[]\
    \ = 20;\n    $max_rolling_number_indexes[] = 21;\n    $max_rolling_number_indexes[]\
    \ = 22;\n    $max_rolling_number_indexes[] = 23;\n    $max_rolling_number_indexes[]\
    \ = 24;\n    $max_rolling_number_indexes[] = 25;\n    $max_rolling_number_indexes[]\
    \ = 26;\n    $max_rolling_number_indexes[] = 27;\n    $max_rolling_number_indexes[]\
    \ = 28;\n    $max_rolling_number_indexes[] = 29;\n    $max_rolling_number_indexes[]\
    \ = 30;\n    $max_rolling_number_indexes[] = 31;\n    $max_rolling_number_indexes[]\
    \ = 32;\n    $max_rolling_number_indexes[] = 33;\n    $max_rolling_number_indexes[]\
    \ = 34;\n    $max_rolling_number_indexes[] = 35;\n    $max_rolling_number_indexes[]\
    \ = 36;\n    $max_rolling_number_indexes[] = 37;\n    $max_rolling_number_indexes[]\
    \ = 38;\n    $max_rolling_number_indexes[] = 39;\n    $max_rolling_number_indexes[]\
    \ = 40;\n    $max_rolling_number_indexes[\nfunction candidate(...$args) {\n  \
    \  return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf0lc49_p.php on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    $max_element = $numbers[$max_index];\n    return\
    \ $max_element;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprer2s75d.php:25\n\
    Stack trace:\n#0 /tmp/tmprer2s75d.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprer2s75d.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    $rolling_max_value = null;\n    $rolling_max_value_index = 0;\n    $rolling_max_value_length\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($rolling_max === null)\
    \ {\n            $rolling_max = $number;\n            $rolling_max_index = 0;\n\
    \            $rolling_max_value = $number;\n            $rolling_max_value_index\
    \ = 0;\n            $rolling_max_value_length = 1;\n        } else {\n       \
    \     if ($number > $rolling_max) {\n                $rolling_max = $number;\n\
    \                $rolling_max_index = 0;\n                $rolling_max_value =\
    \ $number;\n                $rolling_max_value_index = 0;\n                $rolling_max_value_length\
    \ = 1;\n            } else {\n                if ($number == $rolling_max) {\n\
    \                    $rolling_max_value_index++;\n                }\n        \
    \        if ($number > $rolling_max_value) {\n                    $rolling_max_value\
    \ = $number;\n                    $rolling_max_value_index = 0;\n            \
    \        $rolling_max_value_length = 1;\n                }\n            }\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($rolling_max_value_index == $rolling_max_value_length)\
    \ {\n            $result[] = $rolling_max_value;\n            $rolling_max_value_index\
    \ = 0;\n            $rolling_max_value = null;\n            $rolling_max_value_index\
    \ = 0;\n            $rolling_max_value_length = 0;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayjpuyxz.php:57\n\
    Stack trace:\n#0 /tmp/tmpayjpuyxz.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpayjpuyxz.php\
    \ on line 57\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    $max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = 0;\n        }\n        $result[$index++] = $max;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpln9hjxic.php:26\n\
    Stack trace:\n#0 /tmp/tmpln9hjxic.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpln9hjxic.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = null;\n    $max_value = null;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($max_value == null\
    \ || $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    if ($max_value != null) {\n        $max_element\
    \ = $max_value;\n        $max_index = $max_index;\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnca5yjm_.php:28\n\
    Stack trace:\n#0 /tmp/tmpnca5yjm_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnca5yjm_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmzzuicyx.php:25\n\
    Stack trace:\n#0 /tmp/tmpmzzuicyx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmzzuicyx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = reset($numbers);\n    $max_index = count($numbers) - 1;\n    foreach\
    \ ($numbers as $index => $number) {\n        if ($number > $max) {\n         \
    \   $max = $number;\n            $max_index = $index;\n        }\n    }\n    return\
    \ array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpc0cdzk.php:25\n\
    Stack trace:\n#0 /tmp/tmpcpc0cdzk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcpc0cdzk.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz90c40j4.php:25\n\
    Stack trace:\n#0 /tmp/tmpz90c40j4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz90c40j4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $max_value = null;\n    $i\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_value)\
    \ {\n            $max_value = $number;\n            $max_index = $i;\n       \
    \ }\n        $i++;\n    }\n    return $numbers[$max_index];\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6js3yh9t.php:26\n\
    Stack trace:\n#0 /tmp/tmp6js3yh9t.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6js3yh9t.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpve0e88kg.php:21\n\
    Stack trace:\n#0 /tmp/tmpve0e88kg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpve0e88kg.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdyqhom9.php:25\n\
    Stack trace:\n#0 /tmp/tmpxdyqhom9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxdyqhom9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $rolling_max = $number;\n        } else {\n            $rolling_max\
    \ = $rolling_max > $number ? $rolling_max : $number;\n        }\n    }\n    return\
    \ $rolling_max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ts2_fjm.php:25\n\
    Stack trace:\n#0 /tmp/tmp7ts2_fjm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7ts2_fjm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $i = 0;\n    foreach ($numbers as $number) {\n   \
    \     if ($number > $result[$i]) {\n            $result[$i] = $number;\n     \
    \   }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwccwwkmr.php:25\n\
    Stack trace:\n#0 /tmp/tmpwccwwkmr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwccwwkmr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wn476qa.php:25\n\
    Stack trace:\n#0 /tmp/tmp8wn476qa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8wn476qa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $value) {\n        if ($value > $max_value) {\n     \
    \       $max_value = $value;\n            $max_index = $i;\n        }\n      \
    \  $result[$i] = $value;\n        $i++;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxy3z3yv.php:27\n\
    Stack trace:\n#0 /tmp/tmprxy3z3yv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprxy3z3yv.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $value) {\n        if ($max_element === null || $value > $max_element) {\n\
    \            $max_element = $value;\n            $max_index = $index;\n      \
    \  }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3x7yjz3.php:25\n\
    Stack trace:\n#0 /tmp/tmpx3x7yjz3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx3x7yjz3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkibs43ex.php:25\n\
    Stack trace:\n#0 /tmp/tmpkibs43ex.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkibs43ex.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $result[] = $max_value;\n\
    \            $max_value = $numbers[$i];\n            $max_index = $i;\n      \
    \  }\n    }\n    $result[] = $max_value;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74x9n4bd.php:33\n\
    Stack trace:\n#0 /tmp/tmp74x9n4bd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp74x9n4bd.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = $numbers[0];\n    $rolling_max_index\
    \ = 0;\n    foreach ($numbers as $number) {\n        if ($number > $rolling_max)\
    \ {\n            $rolling_max = $number;\n            $rolling_max_index = 0;\n\
    \        }\n        if ($number == $rolling_max) {\n            $rolling_max_index++;\n\
    \        }\n        $result[] = $rolling_max;\n        $rolling_max = $numbers[$rolling_max_index];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr5jjfh6h.php:31\n\
    Stack trace:\n#0 /tmp/tmpr5jjfh6h.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr5jjfh6h.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $result[] = $current;\n  \
    \          $current = $number;\n        } else {\n            $current = $number;\n\
    \        }\n    }\n    $result[] = $current;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr5k5ycol.php:26\n\
    Stack trace:\n#0 /tmp/tmpr5k5ycol.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpr5k5ycol.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk9cco_7.php:21\n\
    Stack trace:\n#0 /tmp/tmpzk9cco_7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzk9cco_7.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $rolling_max) {\n            $rolling_max\
    \ = $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3o4mzi_7.php:23\n\
    Stack trace:\n#0 /tmp/tmp3o4mzi_7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3o4mzi_7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch95p8dd.php:25\n\
    Stack trace:\n#0 /tmp/tmpch95p8dd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpch95p8dd.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $i;\n        }\n   \
    \     $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpspjnwoq_.php:27\n\
    Stack trace:\n#0 /tmp/tmpspjnwoq_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpspjnwoq_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $number;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbc2xwsu.php:25\n\
    Stack trace:\n#0 /tmp/tmpqbc2xwsu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqbc2xwsu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxalcd4s.php:25\n\
    Stack trace:\n#0 /tmp/tmprxalcd4s.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprxalcd4s.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdvhkx4k.php:25\n\
    Stack trace:\n#0 /tmp/tmpbdvhkx4k.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbdvhkx4k.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8ftvz9r.php:28\n\
    Stack trace:\n#0 /tmp/tmps8ftvz9r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps8ftvz9r.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n        $result[] = $rolling_max;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \            continue;\n        }\n        if ($number > $rolling_max) {\n   \
    \         $rolling_max = $number;\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9zzt1hqq.php:27\n\
    Stack trace:\n#0 /tmp/tmp9zzt1hqq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9zzt1hqq.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i\
    \ == $max_index) {\n            $result[] = $numbers[$i];\n        } else {\n\
    \            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz0f8l5n.php:33\n\
    Stack trace:\n#0 /tmp/tmpkz0f8l5n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkz0f8l5n.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1n5hcsq.php:25\n\
    Stack trace:\n#0 /tmp/tmpf1n5hcsq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf1n5hcsq.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    $result[] = $max_value;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max_value) {\n            $result[] = $max_value;\n\
    \            $max_value = $numbers[$i];\n            $max_index = $i;\n      \
    \  }\n    }\n    $result[] = $max_value;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo69h6wh7.php:33\n\
    Stack trace:\n#0 /tmp/tmpo69h6wh7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpo69h6wh7.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $i;\n        }\n   \
    \     $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays,algorithm |>\n<| c |>\nI like this solution. Very elegant\
    \ and simple. Thank you!\n<|/ c |>\n<| a tags=php,arrays,algorithm |>\n<code>\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4dzlh17j.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqjl0zcx.php:25\n\
    Stack trace:\n#0 /tmp/tmpyqjl0zcx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyqjl0zcx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphq31qzxa.php:25\n\
    Stack trace:\n#0 /tmp/tmphq31qzxa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphq31qzxa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1r972z5r.php:25\n\
    Stack trace:\n#0 /tmp/tmp1r972z5r.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1r972z5r.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    $rolling_max_value = null;\n    foreach ($numbers as $number) {\n       \
    \ if ($rolling_max === null) {\n            $rolling_max = $number;\n        \
    \    $rolling_max_index = 0;\n            $rolling_max_value = $number;\n    \
    \    } else {\n            if ($number > $rolling_max) {\n                $rolling_max\
    \ = $number;\n                $rolling_max_index = 0;\n                $rolling_max_value\
    \ = $number;\n            } else {\n                $rolling_max_index++;\n  \
    \              if ($rolling_max_index == $rolling_max) {\n                   \
    \ $rolling_max_value = $rolling_max;\n                }\n            }\n     \
    \   }\n        $result[] = $rolling_max_value;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__nf25__.php:25\n\
    Stack trace:\n#0 /tmp/tmp__nf25__.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp__nf25__.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rollingMax = array_shift($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $rollingMax) {\n            $rollingMax\
    \ = $number;\n        }\n        $result[] = $rollingMax;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nc838zn.php:24\n\
    Stack trace:\n#0 /tmp/tmp2nc838zn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2nc838zn.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_mklc9qw.php:25\n\
    Stack trace:\n#0 /tmp/tmp_mklc9qw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_mklc9qw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    $rolling_max_value = null;\n    foreach ($numbers as $index => $value) {\n\
    \        if ($rolling_max === null) {\n            $rolling_max = $value;\n  \
    \          $rolling_max_index = $index;\n            $rolling_max_value = $value;\n\
    \        } else {\n            if ($rolling_max > $value) {\n                $rolling_max\
    \ = $value;\n                $rolling_max_index = $index;\n                $rolling_max_value\
    \ = $value;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    $result[] = $rolling_max_index;\n    $result[] = $rolling_max_value;\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0eqt0ehh.php:35\n\
    Stack trace:\n#0 /tmp/tmp0eqt0ehh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0eqt0ehh.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    $rolling_max_index = 0;\n \
    \   $rolling_max_value = $numbers[0];\n    foreach ($numbers as $number) {\n \
    \       if ($number > $rolling_max_value) {\n            $rolling_max_value =\
    \ $number;\n            $rolling_max_index = $i;\n        }\n        $result[$i]\
    \ = $number;\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7pbkmzu.php:28\n\
    Stack trace:\n#0 /tmp/tmpj7pbkmzu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpj7pbkmzu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $max_value = null;\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max_value) {\n     \
    \       $rolling_max = $max_value;\n            $max_value = $number;\n      \
    \  } else {\n            $rolling_max = $number;\n        }\n        $result[]\
    \ = $rolling_max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaw7nzpmm.php:28\n\
    Stack trace:\n#0 /tmp/tmpaw7nzpmm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaw7nzpmm.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdscwqf9y.php:25\n\
    Stack trace:\n#0 /tmp/tmpdscwqf9y.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdscwqf9y.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $i;\n        }\n        $i++;\n    }\n    return $numbers[$max_index];\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_gjtzaz.php:24\n\
    Stack trace:\n#0 /tmp/tmpi_gjtzaz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi_gjtzaz.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $rolling_max) {\n            $rolling_max\
    \ = $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n\
    $array = [1, 2, 3, 2, 3, 4, 2];\n$result = [];\n$rolling_max = $array[0];\nforeach\
    \ ($array as $number) {\n    if ($number > $rolling_max) {\n        $rolling_max\
    \ = $number;\n    }\n    $result[] = $rolling_max;\n}\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array = [1, 2, 3, 2, 3, 4, 2];\n\
    $result = [];\n$rolling_max = $array[0];\nforeach ($array as $number) {\n    if\
    \ ($number > $rolling_max) {\n        $rolling_max = $number;\n    }\n    $result[]\
    \ = $rolling_max;\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<|\
    \ a dscore=0 |>\n<code>\n$array = [1, 2, 3, 2, 3, 4, 2];\n$result = [];\n$rolling_max\
    \ = $array[0];\nforeach ($array as $number) {\n    if ($number > $rolling_max)\
    \ {\n        $rolling_max = $number;\n    }\n    $result[] = $rolling_max;\n}\n\
    print_r($result);\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n$array = [1, 2, 3, 2, 3, 4, 2];\n$result = [];\n$rolling_max = $array[0];\n\
    foreach ($array as $number) {\n    if ($number > $rolling_max) {\n        $rolling_max\
    \ = $number;\n    }\n    $result[] = $rolling_max;\n}\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $array = [1, 2, 3, 2, 3, 4, 2];\n$result = [];\n$rolling_max = $array[0];\nforeach\
    \ ($array as $number) {\n    if ($number > $rolling_max) {\n        $rolling_max\
    \ = $number;\n    }\n    $result[] = $rolling_max;\n}\nprint_r($result);\n</code>\n\
    <|/ a tag\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr6csgqk3.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    $rolling_max_value = null;\n    foreach ($numbers as $number) {\n       \
    \ if ($rolling_max === null) {\n            $rolling_max = $number;\n        \
    \    $rolling_max_index = 0;\n            $rolling_max_value = $number;\n    \
    \    } else {\n            if ($number > $rolling_max) {\n                $rolling_max\
    \ = $number;\n                $rolling_max_index = 0;\n                $rolling_max_value\
    \ = $number;\n            } else {\n                $rolling_max_index++;\n  \
    \          }\n        }\n        if ($rolling_max_index >= $numbers) {\n     \
    \       $result[] = $rolling_max_value;\n            $rolling_max = null;\n  \
    \          $rolling_max_index = 0;\n            $rolling_max_value = null;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0owi05l.php:41\n\
    Stack trace:\n#0 /tmp/tmph0owi05l.php(46): test()\n#1 {main}\n  thrown in /tmp/tmph0owi05l.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05g9grep.php:25\n\
    Stack trace:\n#0 /tmp/tmp05g9grep.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp05g9grep.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sz08u6a.php:25\n\
    Stack trace:\n#0 /tmp/tmp7sz08u6a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7sz08u6a.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $i;\n        }\n   \
    \     $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx2bkx5_.php:27\n\
    Stack trace:\n#0 /tmp/tmptx2bkx5_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptx2bkx5_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nI like this solution, however it only works with integers.\
    \ If you try to use it with floats, it will return an array with floats instead\
    \ of integers.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(1,2,3,4,5,6,7,8,9,10);\n\
    $max = 0;\n$result = [];\nforeach($array as $key => $value) {\n    if($value >\
    \ $max) {\n        $max = $value;\n        $result[$key] = $max;\n    }\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_nvqqk9q.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $result[] = $current;\n  \
    \      }\n        $current = $number;\n    }\n    $result[] = $current;\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3o1q5hm9.php:24\n\
    Stack trace:\n#0 /tmp/tmp3o1q5hm9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3o1q5hm9.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   $i = 0;\n    foreach ($numbers as $number) {\n        if ($number > $max_value)\
    \ {\n            $max_value = $number;\n            $max_index = $i;\n       \
    \ }\n        $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcd_e7ere.php:29\n\
    Stack trace:\n#0 /tmp/tmpcd_e7ere.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcd_e7ere.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max < $number) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = -PHP_INT_MAX;\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = 0;\n        } elseif ($number == $max) {\n            $max_index++;\n    \
    \    }\n    }\n    return array_slice($numbers, 0, $max_index);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ydnkjna.php:26\n\
    Stack trace:\n#0 /tmp/tmp3ydnkjna.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3ydnkjna.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i\
    \ == $max_index) {\n            $result[] = $max_value;\n        } else {\n  \
    \          $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9uehnfv5.php:33\n\
    Stack trace:\n#0 /tmp/tmp9uehnfv5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9uehnfv5.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $numbers[$max_index];\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplg9pfy5k.php:24\n\
    Stack trace:\n#0 /tmp/tmplg9pfy5k.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplg9pfy5k.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_number = $number;\n        } else {\n \
    \           $max_rolling += $number;\n        }\n    }\n    return $max_rolling;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgc3s0_n.php:25\n\
    Stack trace:\n#0 /tmp/tmphgc3s0_n.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphgc3s0_n.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = 0;\n        }\n    \
    \    $result[$max_index++] = $number;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79znoai4.php:26\n\
    Stack trace:\n#0 /tmp/tmp79znoai4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp79znoai4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $value) {\n        if ($value > $max_value) {\n     \
    \       $max_value = $value;\n            $max_index = $i;\n        }\n      \
    \  $result[$i] = $value;\n        $i++;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdrwk76y_.php:27\n\
    Stack trace:\n#0 /tmp/tmpdrwk76y_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdrwk76y_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b9l37bm.php:25\n\
    Stack trace:\n#0 /tmp/tmp5b9l37bm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5b9l37bm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    return $rolling_max;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi846n1uu.php:24\n\
    Stack trace:\n#0 /tmp/tmpi846n1uu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi846n1uu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = array_shift($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n        }\n        $result[] = $max_value;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbljae9or.php:24\n\
    Stack trace:\n#0 /tmp/tmpbljae9or.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbljae9or.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $value) {\n        if ($value > $max_value) {\n     \
    \       $max_value = $value;\n            $max_index = $i;\n        }\n      \
    \  $result[$i] = $value;\n        $i++;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12jdtl0e.php:27\n\
    Stack trace:\n#0 /tmp/tmp12jdtl0e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp12jdtl0e.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $result[] = $max_value;\n    for ($i = $max_index + 1; $i\
    \ < count($numbers); $i++) {\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslqn0x04.php:28\n\
    Stack trace:\n#0 /tmp/tmpslqn0x04.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpslqn0x04.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    foreach ($numbers as $number) {\n        if ($number == $max) {\n \
    \           $result[] = $max;\n        } else {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\nI used a recursive function and array_reduce:\n<code>\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpobwgdv68.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6sjq2opy.php:25\n\
    Stack trace:\n#0 /tmp/tmp6sjq2opy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6sjq2opy.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index2 = 0;\n\
    \    foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n        if ($value == $max_value) {\n            $max_index2 = $index;\n\
    \        }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsd4mlio3.php:29\n\
    Stack trace:\n#0 /tmp/tmpsd4mlio3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsd4mlio3.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ix36lr.php:26\n\
    Stack trace:\n#0 /tmp/tmpb4ix36lr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpb4ix36lr.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpedd9z5gh.php:23\n\
    Stack trace:\n#0 /tmp/tmpedd9z5gh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpedd9z5gh.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexs = [];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $max_indexs[] = $max_index;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $max_indexs[]\
    \ = $i;\n        }\n    }\n    return $max_indexs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp58ed_vai.php:30\n\
    Stack trace:\n#0 /tmp/tmp58ed_vai.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp58ed_vai.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n    }\n    return $rolling_max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk96fyqw0.php:24\n\
    Stack trace:\n#0 /tmp/tmpk96fyqw0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk96fyqw0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_pos = 0;\n    $max_rolling_neg =\
    \ 0;\n    $max_rolling_neg_inc = 0;\n    $max_rolling_neg_inc_pos = 0;\n    $max_rolling_neg_inc_neg\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc = 0;\n    $max_rolling_neg_inc_neg_inc_pos\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_pos = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_pos\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_pos = 0;\n  \
    \  $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_pos =\
    \ 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg = 0;\n\
    \    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc = 0;\n\
    \    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_pos\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_pos\
    \ = 0;\n    $max_rolling_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg_inc_neg\
    \ = 0;\n    $max_rolling_neg_inc_neg\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcqglj6ss.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ == $max_value) {\n            $result[] = $max_value;\n            $max_index\
    \ = $i;\n        }\n    }\n    return array_slice($result, 0, $max_index + 1);\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmwoyg4y.php:31\n\
    Stack trace:\n#0 /tmp/tmpwmwoyg4y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwmwoyg4y.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu4rv4pk1.php:23\n\
    Stack trace:\n#0 /tmp/tmpu4rv4pk1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu4rv4pk1.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i\
    \ == $max_index) {\n            $result[] = $numbers[$i];\n        } else {\n\
    \            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphjj5pran.php:33\n\
    Stack trace:\n#0 /tmp/tmphjj5pran.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphjj5pran.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n    }\n    $result[] = $max_value;\n    $result[] = $numbers[$max_index];\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdsdqks22.php:26\n\
    Stack trace:\n#0 /tmp/tmpdsdqks22.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdsdqks22.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $i;\n        }\n   \
    \     $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4,\
    \ 5);\n$max = max($array);\n$result = array_filter($array, function($v) use ($max)\
    \ {\n    return $v > $max;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n$result = array_filter($array,\
    \ function($v) use ($max) {\n    return $v > $max;\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max =\
    \ max($array);\n$result = array_filter($array, function($v) use ($max) {\n   \
    \ return $v > $max;\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$max = max($array);\n$result = array_filter($array,\
    \ function($v) use ($max) {\n    return $v > $max;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $result = array_filter($array, function($v) use ($max) {\n    return $v > $max;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(1,\
    \ 2, 3, 4, 5);\n$max = max($array);\n$result = array_filter($array, function($v)\
    \ use ($max) {\n    return $v > $max;\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$max = max($array);\n\
    $result = array_filter($array, function($v) use ($max) {\n    return $v > $max;\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1,\
    \ 2, 3, 4, \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvv5pc2za.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        if ($numbers[$i] > $max_element) {\n   \
    \         $max_element = $numbers[$i];\n            $max_index = $i;\n       \
    \ }\n    }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza2clms3.php:25\n\
    Stack trace:\n#0 /tmp/tmpza2clms3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpza2clms3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tw2cx66.php:25\n\
    Stack trace:\n#0 /tmp/tmp6tw2cx66.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6tw2cx66.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcswjt_8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpcswjt_8b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcswjt_8b.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $i = 0;\n    foreach ($numbers as $number) {\n   \
    \     if ($number > $result[$i]) {\n            $result[$i] = $number;\n     \
    \   }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0371812.php:25\n\
    Stack trace:\n#0 /tmp/tmpq0371812.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq0371812.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9li1dd8.php:21\n\
    Stack trace:\n#0 /tmp/tmpk9li1dd8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk9li1dd8.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $rolling_max) {\n            $rolling_max\
    \ = $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the\
    \ question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26829144)\n<|/ c |>\n<| c |>\nI agree\
    \ with you, but I thought this was a good answer to the question. My answer was\
    \ a solution to the problem as stated in the question. How does this not provide\
    \ an answer?\n<|/ c |>\n<| c |>\nThe OP asked for a solution to his problem, not\
    \ for a solution to his problem. Your answer does not provide an answer to the\
    \ question asked. Your answer does not provide an answer to the question asked.\n\
    <|/ c |>\n<| c |>\nI agree with you, but I thought this was a good answer to the\
    \ question. My answer was a solution to the problem as stated in the question.\
    \ How does this not provide an answer?\n<|/ c |>\n<| c |>\nThe OP asked for a\
    \ solution to his problem, not for a solution to his problem. Your answer does\
    \ not provide an answer to the question asked. Your answer does not provide an\
    \ answer to the question asked.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr\
    \ = [1, 2, 3, 2, 3, 4, 2];\n$arr2 = [];\n$arr3 = [];\n$arr4 = [];\n$arr5 = [];\n\
    $arr6 = [];\n$arr7 = [];\n$arr8 = [];\n$arr9 = [];\n$arr10 = [];\n$arr11 = [];\n\
    $arr12 = [];\n$arr13 = [];\n$arr14 = [];\n$arr15 = [];\n$arr16 = [];\n$arr17 =\
    \ [];\n$arr18 = [];\n$arr19 = [];\n$arr20 = [];\n$arr21 = [];\n$arr22 = [];\n\
    $arr23 = [];\n$arr24\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpksyz30u_.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $result[] = $current;\n  \
    \      }\n        $current = $number;\n    }\n    $result[] = $current;\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeyc4p_j6.php:24\n\
    Stack trace:\n#0 /tmp/tmpeyc4p_j6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpeyc4p_j6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0fjhia6y.php:25\n\
    Stack trace:\n#0 /tmp/tmp0fjhia6y.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0fjhia6y.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to find the maximum\
    \ element in a rolling window of size `n`, not just a single element.\n<|/ c |>\n\
    <| c |>\nI agree with you, my answer is not the best one, but I thought it could\
    \ be helpful for someone. Thanks for your comment.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$numbers = [1, 2, 3, 2, 3, 4, 2];\n$max = null;\n$result = [];\n\
    $window = 3;\n$i = 0;\n$j = 0;\nforeach ($numbers as $number) {\n    if ($number\
    \ > $max) {\n        $max = $number;\n    }\n    if ($j == $window) {\n      \
    \  $result[] = $max;\n        $j = 0;\n        $i++;\n    }\n    $j++;\n}\nprint_r($result);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$numbers = [1, 2,\
    \ 3, 2, 3, 4, 2];\n$max = null;\n$result = [];\n$window = 3;\n$i = 0;\n$j = 0;\n\
    foreach ($numbers as $number) {\n    if ($number > $max) {\n        $max = $number;\n\
    \    }\n    if ($j == $window) {\n        $result[] = $max;\n        $j = 0;\n\
    \        $i++;\n    }\n    $j++;\n}\nprint_r($result);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$numbers = [1, 2, 3, 2, 3, 4, 2];\n\
    $max = null;\n$result = [];\n$window = 3;\n$i = 0;\n$j = 0;\nforeach ($numbers\
    \ as $number) {\n    if ($number > $max) {\n        $max = $number;\n    }\n \
    \   if ($j == $window) {\n        $result[] = $max;\n        $j = 0;\n       \
    \ $i++;\n    }\n    $j++;\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\n<?php\n$numbers = [1, 2, 3, 2, 3, 4, 2];\n$max = null;\n\
    $result = [];\n$window = 3;\n$i = 0;\n$j = 0;\nforeach ($numbers as $number) {\n\
    \    if ($number > $max) {\n        $max\nfunction candidate(...$args) {\n   \
    \ return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplfrzzvtq.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3, 2,\
    \ 3, 4, 2];\n$arr2 = array_chunk($arr, 3);\n$arr3 = array_map(function ($a) {\
    \ return max($a); }, $arr2);\n$arr4 = array_map(function ($a) { return array_sum($a);\
    \ }, $arr2);\n$arr5 = array_map(function ($a) { return array_sum($a); }, $arr2);\n\
    $arr6 = array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr7 = array_map(function\
    \ ($a) { return array_sum($a); }, $arr2);\n$arr8 = array_map(function ($a) { return\
    \ array_sum($a); }, $arr2);\n$arr9 = array_map(function ($a) { return array_sum($a);\
    \ }, $arr2);\n$arr10 = array_map(function ($a) { return array_sum($a); }, $arr2);\n\
    $arr11 = array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr12 =\
    \ array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr13 = array_map(function\
    \ ($a) { return array_sum($a); }, $arr2);\n$arr14 = array_map(function ($a) {\
    \ return array_sum($a); }, $arr2);\n$arr15 = array_map(function ($a) { return\
    \ array_sum($a); }, $arr2);\n$arr16 = array_map(function ($a) { return array_sum($a);\
    \ }, $arr2);\n$arr17 = array_map(function ($a) { return array_sum($a); }, $arr2);\n\
    $arr18 = array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr19 =\
    \ array_map(function ($a) { return array_sum($a); }, $arr2);\n$arr20 = array_map(function\
    \ ($a) { return array_sum($a); }, $arr2);\n$arr21 = array_map(function ($a) {\
    \ return array_sum($a); }, $arr2);\n$arr22 = array_map(function ($a) { return\
    \ array_sum($a); }, $arr2);\n$arr23 = array_map(function ($a) { return array_sum($a);\
    \ }, $\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpeefbk3az.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpperlzuck.php:27\n\
    Stack trace:\n#0 /tmp/tmpperlzuck.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpperlzuck.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfejtdq6x.php:25\n\
    Stack trace:\n#0 /tmp/tmpfejtdq6x.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpfejtdq6x.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $i = 0;\n    $j = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $result[$i]) {\n            $result[$j] = $number;\n\
    \            $j++;\n        } else {\n            $i++;\n        }\n    }\n  \
    \  return array_slice($result, 0, $j);\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnsd07foy.php:28\n\
    Stack trace:\n#0 /tmp/tmpnsd07foy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnsd07foy.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $numbers[$max_index];\n        }\n    }\n\
    \    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpun7l6z10.php:25\n\
    Stack trace:\n#0 /tmp/tmpun7l6z10.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpun7l6z10.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $result[] = $current;\n  \
    \      }\n        $current = $number;\n    }\n    $result[] = $current;\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9eg2g9e.php:24\n\
    Stack trace:\n#0 /tmp/tmpt9eg2g9e.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpt9eg2g9e.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $index = 0;\n    $max = $numbers[0];\n    foreach\
    \ ($numbers as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $index = 0;\n        }\n        $result[$index] = $max;\n       \
    \ $index++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjvvz8bt.php:27\n\
    Stack trace:\n#0 /tmp/tmptjvvz8bt.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptjvvz8bt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzuc8am8.php:25\n\
    Stack trace:\n#0 /tmp/tmpdzuc8am8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpdzuc8am8.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n            $max_index\
    \ = $i;\n        }\n        $i++;\n    }\n    return array_slice($numbers, 0,\
    \ $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvh6ldmqj.php:26\n\
    Stack trace:\n#0 /tmp/tmpvh6ldmqj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvh6ldmqj.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2b70bwq.php:25\n\
    Stack trace:\n#0 /tmp/tmpv2b70bwq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2b70bwq.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwc8e5f7h.php:23\n\
    Stack trace:\n#0 /tmp/tmpwc8e5f7h.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwc8e5f7h.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpszqncmmt.php:25\n\
    Stack trace:\n#0 /tmp/tmpszqncmmt.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpszqncmmt.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61vc5n0c.php:25\n\
    Stack trace:\n#0 /tmp/tmp61vc5n0c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp61vc5n0c.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp011fm98i.php:25\n\
    Stack trace:\n#0 /tmp/tmp011fm98i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp011fm98i.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    foreach ($numbers as $number) {\n        if\
    \ ($number > $max) {\n            $result[] = $number;\n        }\n    }\n   \
    \ return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n\
    $arr = [1, 2, 3, 2, 3, 4, 2];\n$max = $arr[0];\n$result = [];\nforeach ($arr as\
    \ $number) {\n    if ($number > $max) {\n        $max = $number;\n    }\n    $result[]\
    \ = $max;\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = $arr[0];\n$result = [];\n\
    foreach ($arr as $number) {\n    if ($number > $max) {\n        $max = $number;\n\
    \    }\n    $result[] = $max;\n}\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9ip4pej7.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bumxqun.php:21\n\
    Stack trace:\n#0 /tmp/tmp9bumxqun.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9bumxqun.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqn9zqoa.php:25\n\
    Stack trace:\n#0 /tmp/tmpiqn9zqoa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiqn9zqoa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n        $index++;\n    }\n    return\
    \ $numbers[$max_index];\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u5qkgrd.php:25\n\
    Stack trace:\n#0 /tmp/tmp9u5qkgrd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9u5qkgrd.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_e_728p.php:25\n\
    Stack trace:\n#0 /tmp/tmpc_e_728p.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc_e_728p.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ld3vjtg.php:27\n\
    Stack trace:\n#0 /tmp/tmp6ld3vjtg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6ld3vjtg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexs = [];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    $max_indexs[] = $max_index;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] == $max_value) {\n            $max_indexs[]\
    \ = $i;\n        }\n    }\n    return $max_indexs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6q7cd1m.php:30\n\
    Stack trace:\n#0 /tmp/tmpc6q7cd1m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc6q7cd1m.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i\
    \ == $max_index) {\n            $result[] = $numbers[$i];\n        } else {\n\
    \            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp931cjky.php:33\n\
    Stack trace:\n#0 /tmp/tmpp931cjky.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpp931cjky.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    $rolling_max_value = null;\n    foreach ($numbers as $index => $value) {\n\
    \        if ($rolling_max === null) {\n            $rolling_max = $value;\n  \
    \          $rolling_max_index = $index;\n            $rolling_max_value = $value;\n\
    \        } else {\n            if ($rolling_max < $value) {\n                $rolling_max\
    \ = $value;\n                $rolling_max_index = $index;\n                $rolling_max_value\
    \ = $value;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    $result[] = $rolling_max_value;\n    $result[] = $rolling_max_index;\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1b2c7hjo.php:35\n\
    Stack trace:\n#0 /tmp/tmp1b2c7hjo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1b2c7hjo.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = 0;\n    $max_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max === null || $value > $max)\
    \ {\n            $max = $value;\n            $max_index = $index;\n          \
    \  $max_value = $value;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwzxj_3p.php:25\n\
    Stack trace:\n#0 /tmp/tmpxwzxj_3p.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxwzxj_3p.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return $max_value;\n}\n\nfunction candidate(...$args) {\n    return\
    \ rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn09b10k3.php:23\n\
    Stack trace:\n#0 /tmp/tmpn09b10k3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpn09b10k3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $result[0] = $numbers[0];\n    $result[1] = $numbers[1];\n\
    \    $result[2] = $numbers[2];\n    $result[3] = $numbers[3];\n    $result[4]\
    \ = $numbers[4];\n    $result[5] = $numbers[5];\n    $result[6] = $numbers[6];\n\
    \    $result[7] = $numbers[7];\n    $result[8] = $numbers[8];\n    $result[9]\
    \ = $numbers[9];\n    $result[10] = $numbers[10];\n    $result[11] = $numbers[11];\n\
    \    $result[12] = $numbers[12];\n    $result[13] = $numbers[13];\n    $result[14]\
    \ = $numbers[14];\n    $result[15] = $numbers[15];\n    $result[16] = $numbers[16];\n\
    \    $result[17] = $numbers[17];\n    $result[18] = $numbers[18];\n    $result[19]\
    \ = $numbers[19];\n    $result[20] = $numbers[20];\n    $result[21] = $numbers[21];\n\
    \    $result[22] = $numbers[22];\n    $result[23] = $numbers[23];\n    $result[24]\
    \ = $numbers[24];\n    $result[25] = $numbers[25];\n    $result[26] = $numbers[26];\n\
    \    $result[27] = $numbers[27];\n    $result[28] = $numbers[28];\n    $result[29]\
    \ = $numbers[29];\n    $result[30] = $numbers[30];\n    $result[31] = $numbers[31];\n\
    \    $result[32] = $numbers[32];\n    $result[33] = $numbers[33];\n    $result[34]\
    \ = $numbers[34];\n    $result[35] = $numbers[35];\n    $result[36] = $numbers[36];\n\
    \    $result[37] = $numbers[37];\n    $result[38] = $numbers[38];\n    $result[39]\
    \ = $numbers[39];\n    $result[40] = $numbers[40];\n    $result[41] = $numbers[41];\n\
    \    $result[42] = $numbers[42];\n    $result[43] = $numbers[43];\n    $result[44]\
    \ = $numbers[44];\n    $result[45] = $numbers[45];\n    $result[46] = $numbers[46];\n\
    \    $result[47] = $numbers[47];\n    $result[48] = $numbers[48];\n    $result[49]\
    \ = $numbers[49];\n    $result[50] = $numbers[50];\n    $result[51] = $number\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppapfrgm6.php on line 60\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_value = $value;\n            $max_index\
    \ = $index;\n        }\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4_z4duk.php:24\n\
    Stack trace:\n#0 /tmp/tmpp4_z4duk.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpp4_z4duk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph00tgol1.php:27\n\
    Stack trace:\n#0 /tmp/tmph00tgol1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmph00tgol1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_number = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_rolling_number) {\n            $max_rolling\
    \ = $number;\n            $max_rolling_number = $number;\n        }\n    }\n \
    \   return $max_rolling;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdp1m6uue.php:23\n\
    Stack trace:\n#0 /tmp/tmpdp1m6uue.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpdp1m6uue.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $max_value = null;\n    foreach\
    \ ($numbers as $i => $number) {\n        if ($number > $max_value) {\n       \
    \     $max_value = $number;\n            $max_index = $i;\n        }\n    }\n\
    \    $max = $numbers[$max_index];\n    return $max;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3hni8ya5.php:25\n\
    Stack trace:\n#0 /tmp/tmp3hni8ya5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3hni8ya5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   $index = 0;\n    foreach ($numbers as $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n        $result[$index] = $max_value;\n        $index++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2rxb0xha.php:25\n\
    Stack trace:\n#0 /tmp/tmp2rxb0xha.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2rxb0xha.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hg4msub.php:25\n\
    Stack trace:\n#0 /tmp/tmp7hg4msub.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7hg4msub.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $index => $value) {\n        if ($value > $max_value) {\n            $max_value\
    \ = $value;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa9ewafa.php:25\n\
    Stack trace:\n#0 /tmp/tmpaa9ewafa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaa9ewafa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $max_value = null;\n   \
    \ foreach ($numbers as $number) {\n        if ($number > $max_value) {\n     \
    \       $rolling_max = $max_value;\n            $max_value = $number;\n      \
    \  } else {\n            $rolling_max = $rolling_max > $number ? $rolling_max\
    \ : $number;\n        }\n        $result[] = $rolling_max;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94dc4i2k.php:28\n\
    Stack trace:\n#0 /tmp/tmp94dc4i2k.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp94dc4i2k.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            $rolling_max = max($rolling_max, $number);\n  \
    \      }\n    }\n    $result[] = $rolling_max;\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9tf2cu6u.php:25\n\
    Stack trace:\n#0 /tmp/tmp9tf2cu6u.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9tf2cu6u.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = $max_index; $i >= 0; $i--) {\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpketflhm_.php:27\n\
    Stack trace:\n#0 /tmp/tmpketflhm_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpketflhm_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max_value) {\n            $max_value =\
    \ $number;\n            $max_index = $i;\n        }\n        $i++;\n    }\n  \
    \  return $max_value;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yggu0sp.php:24\n\
    Stack trace:\n#0 /tmp/tmp1yggu0sp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1yggu0sp.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqyf1va5.php:25\n\
    Stack trace:\n#0 /tmp/tmpoqyf1va5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpoqyf1va5.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5l_8_8x.php:25\n\
    Stack trace:\n#0 /tmp/tmpp5l_8_8x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpp5l_8_8x.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   foreach ($numbers as $index => $value) {\n        if ($max_value == null ||\
    \ $value > $max_value) {\n            $max_element = $value;\n            $max_index\
    \ = $index;\n            $max_value = $value;\n        }\n    }\n    return $max_element;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qs6tkmu.php:25\n\
    Stack trace:\n#0 /tmp/tmp4qs6tkmu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4qs6tkmu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    $result[] = $max;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5mx9n87.php:23\n\
    Stack trace:\n#0 /tmp/tmpe5mx9n87.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpe5mx9n87.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_rolling = 0;\n    $max_rolling_pos = 0;\n    $max_rolling_neg =\
    \ 0;\n    $max_rolling_neg_inc = 0;\n    $max_rolling_neg_inc_pos = 0;\n    $max_rolling_neg_inc_neg\
    \ = 0;\n    $max_rolling_neg_inc_pos_neg = 0;\n    $max_rolling_pos_neg_inc =\
    \ 0;\n    $max_rolling_pos_neg_inc_pos = 0;\n    $max_rolling_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_pos_neg_inc\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_pos_neg_inc_pos = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_neg\
    \ = 0;\n    $max_rolling_pos_pos_pos_pos_pos_neg_inc_pos_neg = 0;\n    $max_rolling_pos_pos_pos_pos_pos_\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphajs17kt.php on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max_element) {\n            $max_element\
    \ = $number;\n            $max_index = $index;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbb_20a3u.php:25\n\
    Stack trace:\n#0 /tmp/tmpbb_20a3u.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbb_20a3u.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8kr0wk9.php:25\n\
    Stack trace:\n#0 /tmp/tmpr8kr0wk9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpr8kr0wk9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $rolling_max) {\n            $rolling_max\
    \ = $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwo7wcn5.php:23\n\
    Stack trace:\n#0 /tmp/tmpkwo7wcn5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkwo7wcn5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    $max_value = null;\n    foreach\
    \ ($numbers as $index => $value) {\n        if ($max === null || $value > $max)\
    \ {\n            $max = $value;\n            $max_index = $index;\n          \
    \  $max_value = $value;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrbf1erd.php:25\n\
    Stack trace:\n#0 /tmp/tmpzrbf1erd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzrbf1erd.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $i = 0;\n    $j = 0;\n    $max = 0;\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        if ($number == $max) {\n            $result[$i] = $max;\n\
    \            $i++;\n        }\n        if ($number > $max) {\n            $result[$j]\
    \ = $max;\n            $j++;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7tjqdg8.php:34\n\
    Stack trace:\n#0 /tmp/tmpm7tjqdg8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm7tjqdg8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_indexs = [];\n\
    \    foreach ($numbers as $index => $value) {\n        if ($value > $max_value)\
    \ {\n            $max_value = $value;\n            $max_index = $index;\n    \
    \    }\n        if ($value == $max_value) {\n            $max_indexs[] = $max_index;\n\
    \        }\n    }\n    return $max_indexs;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4opywkgs.php:28\n\
    Stack trace:\n#0 /tmp/tmp4opywkgs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4opywkgs.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n</code>\n<|/ a\
    \ tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3, 2, 3,\
    \ 4, 2];\n$max = [];\n$i = 0;\nforeach ($arr as $value) {\n    if ($value > $max[$i])\
    \ {\n        $max[$i] = $value;\n    }\n    $i++;\n}\nprint_r($max);\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4,\
    \ 2];\n$max = [];\n$i = 0;\nforeach ($arr as $value) {\n    if ($value > $max[$i])\
    \ {\n        $max[$i] = $value;\n    }\n    $i++;\n}\nprint_r($max);\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4,\
    \ 2];\n$max = [];\n$i = 0;\nforeach ($arr as $value) {\n    if ($value > $max[$i])\
    \ {\n        $max[$i] = $value;\n    }\n    $i++;\n}\nprint_r($max);\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4,\
    \ 2];\n$max = [];\n$i = 0;\nforeach ($arr as $value) {\n    if ($value > $max[$i])\
    \ {\n        $max[$i] = $value;\n    }\n    $i++;\n}\nprint_r($max);\n</code>\n\
    <|/ a dscore=2 |>\n<| a |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = [];\n\
    $i = 0;\nforeach ($arr as $value) {\n    if ($value > $max[$i]) {\n        $max[$i]\
    \ = $value;\n    }\n    $i++;\n}\nprint_r($max);\n</code>\n<|/ a dscore=1 tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$arr = [1, 2, 3, 2, 3, 4, 2];\n$max = [];\n\
    $i = 0;\nforeach ($arr as $value) {\n    if ($value > $max[$i]) {\n        $max[$i]\
    \ = $value;\n    }\n    $i++;\n}\nprint_r($max);\n</code>\n<|/\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9lt5vcfe.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   foreach ($numbers as $number) {\n        if ($number > $max_value) {\n   \
    \         $max_value = $number;\n            $max_index = $i;\n        }\n   \
    \     $result[$i] = $number;\n        $i++;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdsdw2rr.php:27\n\
    Stack trace:\n#0 /tmp/tmpkdsdw2rr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkdsdw2rr.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index = 0;\n\
    \    foreach ($numbers as $number) {\n        if ($number > $max_value) {\n  \
    \          $max_value = $number;\n            $max_index = $i;\n        }\n  \
    \      $i++;\n    }\n    return $max_value;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewobm972.php:25\n\
    Stack trace:\n#0 /tmp/tmpewobm972.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpewobm972.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbs931udg.php:25\n\
    Stack trace:\n#0 /tmp/tmpbs931udg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbs931udg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_element = null;\n    $max_index = 0;\n    $max_value = null;\n \
    \   $max_count = 0;\n    foreach ($numbers as $index => $value) {\n        if\
    \ ($max_value == null || $value > $max_value) {\n            $max_value = $value;\n\
    \            $max_index = $index;\n        }\n        if ($max_count < $index)\
    \ {\n            $max_count = $index;\n        }\n    }\n    $max_element = $max_value;\n\
    \    $max_index = $max_index;\n    $max_count = $max_count;\n    $max_value =\
    \ $max_value;\n    return $max_element;\n}\n\nfunction candidate(...$args) {\n\
    \    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyyuqc7z.php:32\n\
    Stack trace:\n#0 /tmp/tmpyyyuqc7z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpyyyuqc7z.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $current = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $current) {\n            $current = $number;\n    \
    \        $result[] = $current;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
    \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26v7bavx.php:25\n\
    Stack trace:\n#0 /tmp/tmp26v7bavx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp26v7bavx.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    return array_slice($numbers,\
    \ 0, $max_index + 1);\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputrp2c9l.php:25\n\
    Stack trace:\n#0 /tmp/tmputrp2c9l.php(29): test()\n#1 {main}\n  thrown in /tmp/tmputrp2c9l.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max_value = $numbers[0];\n    $max_index = 0;\n \
    \   for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i\
    \ == $max_index) {\n            $result[] = $numbers[$i];\n        } else {\n\
    \            $result[] = $numbers[$i];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9lq6dmaw.php:33\n\
    Stack trace:\n#0 /tmp/tmp9lq6dmaw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9lq6dmaw.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = $numbers[0];\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \   }\n    array_push($result, $max);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6zleu0tb.php:23\n\
    Stack trace:\n#0 /tmp/tmp6zleu0tb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6zleu0tb.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = array_shift($numbers);\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    return $max;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh9f2gts.php:21\n\
    Stack trace:\n#0 /tmp/tmpxh9f2gts.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxh9f2gts.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    $max_index2 = 0;\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] > $max_value)\
    \ {\n            $max_value = $numbers[$i];\n            $max_index = $i;\n  \
    \      }\n    }\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ == $max_value) {\n            $max_index2 = $i;\n        }\n    }\n    return\
    \ array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpackn2vqo.php:31\n\
    Stack trace:\n#0 /tmp/tmpackn2vqo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpackn2vqo.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $rolling_max) {\n            $rolling_max\
    \ = $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_fwkg8s2.php:23\n\
    Stack trace:\n#0 /tmp/tmp_fwkg8s2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_fwkg8s2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = $numbers[0];\n    foreach ($numbers\
    \ as $number) {\n        if ($number > $rolling_max) {\n            $rolling_max\
    \ = $number;\n        }\n    }\n    $result[] = $rolling_max;\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmi9zetw.php:23\n\
    Stack trace:\n#0 /tmp/tmpbmi9zetw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbmi9zetw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = 0;\n    foreach ($numbers as $number)\
    \ {\n        if ($number > $rolling_max) {\n            $rolling_max = $number;\n\
    \        }\n        $result[] = $rolling_max;\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   $result[] = $max;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2a7p2_33.php:25\n\
    Stack trace:\n#0 /tmp/tmp2a7p2_33.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2a7p2_33.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    $rolling_max_index = 0;\n\
    \    $rolling_max_value = null;\n    foreach ($numbers as $number) {\n       \
    \ if ($rolling_max === null) {\n            $rolling_max = $number;\n        \
    \    $rolling_max_index = 0;\n            $rolling_max_value = $number;\n    \
    \    } else {\n            if ($rolling_max > $number) {\n                $rolling_max\
    \ = $number;\n                $rolling_max_index = 0;\n                $rolling_max_value\
    \ = $number;\n            } else {\n                $rolling_max = $rolling_max;\n\
    \                $rolling_max_index++;\n                $rolling_max_value = $number;\n\
    \            }\n        }\n    }\n    $result[] = $rolling_max;\n    for ($i =\
    \ 0; $i < $rolling_max_index; $i++) {\n        $result[] = $rolling_max_value;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyleuj7iw.php:40\n\
    Stack trace:\n#0 /tmp/tmpyleuj7iw.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpyleuj7iw.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpckrzy3ur.php:27\n\
    Stack trace:\n#0 /tmp/tmpckrzy3ur.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpckrzy3ur.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max_value = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n        if ($numbers[$i] > $max_value) {\n       \
    \     $max_value = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return array_slice($numbers, 0, $max_index + 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuuut2ioz.php:25\n\
    Stack trace:\n#0 /tmp/tmpuuut2ioz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpuuut2ioz.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $rolling_max = null;\n    foreach ($numbers as $number)\
    \ {\n        if ($rolling_max === null) {\n            $rolling_max = $number;\n\
    \        } else {\n            if ($number > $rolling_max) {\n               \
    \ $rolling_max = $number;\n            }\n        }\n    }\n    $result[] = $rolling_max;\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6syqb37.php:27\n\
    Stack trace:\n#0 /tmp/tmpl6syqb37.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl6syqb37.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $max = null;\n    $max_index = null;\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($number > $max) {\n            $max = $number;\n\
    \            $max_index = $index;\n        }\n    }\n    return $numbers[$max_index];\n\
    }\n\nfunction candidate(...$args) {\n    return rolling_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2,\
    \ 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpilikrvy5.php:23\n\
    Stack trace:\n#0 /tmp/tmpilikrvy5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpilikrvy5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n// in the sequence.\n// >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max($numbers)\
    \ {\n    $result = [];\n    $max = null;\n    foreach ($numbers as $number) {\n\
    \        if ($number > $max) {\n            $max = $number;\n            $result[]\
    \ = $max;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return rolling_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3,\
    \ 3, 100, 100)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpmppob9.php:25\n\
    Stack trace:\n#0 /tmp/tmpcpmppob9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcpmppob9.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception

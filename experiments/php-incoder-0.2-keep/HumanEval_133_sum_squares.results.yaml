name: HumanEval_133_sum_squares
language: php
results:
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpu_7lz0.php:24\n\
    Stack trace:\n#0 /tmp/tmpwpu_7lz0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwpu_7lz0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hhvsf9_.php:24\n\
    Stack trace:\n#0 /tmp/tmp1hhvsf9_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1hhvsf9_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo67hpt6u.php:24\n\
    Stack trace:\n#0 /tmp/tmpo67hpt6u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo67hpt6u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkgo_5s2c.php:24\n\
    Stack trace:\n#0 /tmp/tmpkgo_5s2c.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkgo_5s2c.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzc5yduc8.php:24\n\
    Stack trace:\n#0 /tmp/tmpzc5yduc8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzc5yduc8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqnibvm0.php:23\n\
    Stack trace:\n#0 /tmp/tmpcqnibvm0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcqnibvm0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nkzn5qp.php:24\n\
    Stack trace:\n#0 /tmp/tmp5nkzn5qp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5nkzn5qp.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp92n02d6t.php:24\n\
    Stack trace:\n#0 /tmp/tmp92n02d6t.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp92n02d6t.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxzdz0mvf.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl2nzuw2.php:24\n\
    Stack trace:\n#0 /tmp/tmptl2nzuw2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmptl2nzuw2.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6v06nh_3.php:24\n\
    Stack trace:\n#0 /tmp/tmp6v06nh_3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6v06nh_3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks\
    \ for your answer. Your code is working fine, but I wanted to know why my code\
    \ is not working and why my code is not working with my code. Can you please explain\
    \ me why my code is not working and why my code is not working with your code?\n\
    <|/ c |>\n<| c |>\nYour code is not working because you were not passing the array\
    \ to the function and you were not using it properly. Your code was just printing\
    \ the array and not the sum of the squares. I hope you understood my explanation.\n\
    <|/ c |>\n<| c |>\nYes, I understood your explanation. Thanks for your help.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args) {\n  \
    \  return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkmz405qx.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7auh9f7.php:24\n\
    Stack trace:\n#0 /tmp/tmph7auh9f7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmph7auh9f7.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjynd5cd4.php:24\n\
    Stack trace:\n#0 /tmp/tmpjynd5cd4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjynd5cd4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,math |>\n<| a tags=php,math\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkdmhbq6f.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqb2rzo_.php:24\n\
    Stack trace:\n#0 /tmp/tmpeqb2rzo_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpeqb2rzo_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcrr4nowh.php:24\n\
    Stack trace:\n#0 /tmp/tmpcrr4nowh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcrr4nowh.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf06oh78y.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbfk_bh8.php:24\n\
    Stack trace:\n#0 /tmp/tmpvbfk_bh8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvbfk_bh8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmw98wi4l.php:24\n\
    Stack trace:\n#0 /tmp/tmpmw98wi4l.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmw98wi4l.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqct6pxhm.php:24\n\
    Stack trace:\n#0 /tmp/tmpqct6pxhm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqct6pxhm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz9gci619.php:24\n\
    Stack trace:\n#0 /tmp/tmpz9gci619.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz9gci619.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_nutjg4s.php:23\n\
    Stack trace:\n#0 /tmp/tmp_nutjg4s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_nutjg4s.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqw8pyvkl.php:24\n\
    Stack trace:\n#0 /tmp/tmpqw8pyvkl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqw8pyvkl.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj2xk9mvu.php:24\n\
    Stack trace:\n#0 /tmp/tmpj2xk9mvu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj2xk9mvu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpherg5uml.php:24\n\
    Stack trace:\n#0 /tmp/tmpherg5uml.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpherg5uml.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,math\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqvupo5nz.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcrarbvu4.php:24\n\
    Stack trace:\n#0 /tmp/tmpcrarbvu4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcrarbvu4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsnhpepd.php:24\n\
    Stack trace:\n#0 /tmp/tmptsnhpepd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmptsnhpepd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,arrays,loops |>\n\
    <| c |>\nI see you added the rounding in the loop. How would you do that without\
    \ looping?\n<|/ c |>\n<| c |>\nYou would need to loop through the array and add\
    \ each element to the sum. As you go through the array you would need to round\
    \ the sum to the nearest integer. There is no way to do this without looping.\n\
    <|/ c |>\n<| c |>\nI added a solution that does not require looping.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqtaezmg7.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8edl8loz.php:24\n\
    Stack trace:\n#0 /tmp/tmp8edl8loz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8edl8loz.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpem4ecg.php:24\n\
    Stack trace:\n#0 /tmp/tmpkpem4ecg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkpem4ecg.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c\
    \ |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26867532)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question. He asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the numbers in the array to the nearest integer. He also asked how to\
    \ round the \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsmh2byib.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5p6vphfq.php:24\n\
    Stack trace:\n#0 /tmp/tmp5p6vphfq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5p6vphfq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpxpmwza.php:24\n\
    Stack trace:\n#0 /tmp/tmpfpxpmwza.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfpxpmwza.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl40yhlh.php:24\n\
    Stack trace:\n#0 /tmp/tmpkl40yhlh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkl40yhlh.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbu9ncdck.php:24\n\
    Stack trace:\n#0 /tmp/tmpbu9ncdck.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbu9ncdck.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9dlmwta6.php:24\n\
    Stack trace:\n#0 /tmp/tmp9dlmwta6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9dlmwta6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktlavjy9.php:23\n\
    Stack trace:\n#0 /tmp/tmpktlavjy9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpktlavjy9.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphagc63gr.php:24\n\
    Stack trace:\n#0 /tmp/tmphagc63gr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphagc63gr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperjrqxad.php:24\n\
    Stack trace:\n#0 /tmp/tmperjrqxad.php(38): test()\n#1 {main}\n  thrown in /tmp/tmperjrqxad.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposs6iuad.php:24\n\
    Stack trace:\n#0 /tmp/tmposs6iuad.php(38): test()\n#1 {main}\n  thrown in /tmp/tmposs6iuad.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwm26kvsb.php:24\n\
    Stack trace:\n#0 /tmp/tmpwm26kvsb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwm26kvsb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfb0k024q.php:24\n\
    Stack trace:\n#0 /tmp/tmpfb0k024q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfb0k024q.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd9qxupwa.php:24\n\
    Stack trace:\n#0 /tmp/tmpd9qxupwa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd9qxupwa.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_kg52lh5.php:24\n\
    Stack trace:\n#0 /tmp/tmp_kg52lh5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_kg52lh5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgd_72z5c.php:24\n\
    Stack trace:\n#0 /tmp/tmpgd_72z5c.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgd_72z5c.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfr809ivv.php:24\n\
    Stack trace:\n#0 /tmp/tmpfr809ivv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfr809ivv.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0fokmvs.php:24\n\
    Stack trace:\n#0 /tmp/tmpl0fokmvs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpl0fokmvs.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpha2frlk4.php:24\n\
    Stack trace:\n#0 /tmp/tmpha2frlk4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpha2frlk4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktkc6tms.php:23\n\
    Stack trace:\n#0 /tmp/tmpktkc6tms.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpktkc6tms.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vawr6nq.php:24\n\
    Stack trace:\n#0 /tmp/tmp_vawr6nq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_vawr6nq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_b520mx5.php:24\n\
    Stack trace:\n#0 /tmp/tmp_b520mx5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_b520mx5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa08hng0h.php:24\n\
    Stack trace:\n#0 /tmp/tmpa08hng0h.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa08hng0h.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygnoaxxk.php:24\n\
    Stack trace:\n#0 /tmp/tmpygnoaxxk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpygnoaxxk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45o_vnwg.php:24\n\
    Stack trace:\n#0 /tmp/tmp45o_vnwg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp45o_vnwg.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe511kyla.php:24\n\
    Stack trace:\n#0 /tmp/tmpe511kyla.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe511kyla.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5d23vype.php:24\n\
    Stack trace:\n#0 /tmp/tmp5d23vype.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5d23vype.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8oty0zy.php:24\n\
    Stack trace:\n#0 /tmp/tmpj8oty0zy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj8oty0zy.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfa2dpr3.php:24\n\
    Stack trace:\n#0 /tmp/tmpnfa2dpr3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnfa2dpr3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhs2inhn.php:23\n\
    Stack trace:\n#0 /tmp/tmpyhs2inhn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyhs2inhn.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpputhz0sr.php:24\n\
    Stack trace:\n#0 /tmp/tmpputhz0sr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpputhz0sr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9zrbxiv.php:24\n\
    Stack trace:\n#0 /tmp/tmpi9zrbxiv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi9zrbxiv.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ctumd2e.php:24\n\
    Stack trace:\n#0 /tmp/tmp6ctumd2e.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6ctumd2e.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wridrre.php:24\n\
    Stack trace:\n#0 /tmp/tmp1wridrre.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1wridrre.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27859099)\n\
    <|/ c |>\n<| c |>\nI added an explanation to the answer\n<|/ c |>\n<| c |>\nThe\
    \ question was \"How to round the numbers to nearest integer?\", not \"How to\
    \ round the numbers to nearest integer?\". Your answer does not answer the question.\
    \ Your answer does not round the numbers to nearest integer. Your answer does\
    \ not provide an explanation to the question. Your answer does not provide an\
    \ explanation to the question. Your answer does not provide an explanation to\
    \ the question. Your answer does not provide an explanation to the question. Your\
    \ answer does not provide an explanation to the question. Your answer does not\
    \ provide an explanation to the question. Your answer does not provide an explanation\
    \ to the question. Your answer does not provide an explanation to the question.\
    \ Your answer does not provide an explanation to the question. Your answer does\
    \ not provide an explanation to the question. Your answer does not provide an\
    \ explanation to the question. Your answer does not provide an explanation to\
    \ the question. Your answer does not provide an explanation to the question. Your\
    \ answer does not provide an explanation to the question. Your answer does not\
    \ provide an explanation to the question. Your answer does not provide an explanation\
    \ to the question. Your answer does not provide an explanation to the question.\
    \ Your answer does not provide an explanation to the question. Your answer does\
    \ not provide an explanation to the question. Your answer does not provide an\
    \ explanation to the question. Your answer does not provide an explanation to\
    \ the question. Your answer does not provide an explanation to the question. Your\
    \ answer does not provide an explanation to the question. Your answer does not\
    \ provide an explanation to the question. Your answer does not provide an explanation\
    \ to the question. Your answer does not provide an explanation to the question.\
    \ Your answer does not provide an explanation to the question. Your answer does\
    \ not provide an explanation to the question. Your answer does not provide an\
    \ explanation to the question. Your answer does not provide an explanation to\
    \ the question. Your answer does not provide an explanation to the question. Your\
    \ answer does not provide an explanation to the question. Your answer does not\
    \ provide an explanation to the question. Your answer does not provide an explanation\
    \ to the question. Your answer does not provide an explan\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9picg5f8.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nThis\
    \ doesn't round the numbers to the nearest integer.\n<|/ c |>\n<| c |>\nI added\
    \ a round() call to the function\n<|/ c |>\n<| c |>\nThe OP said \"round each\
    \ element in the list to the upper int(Ceiling) first.\"\n<|/ c |>\n<| c |>\n\
    I added a ceiling call to the function\n<|/ c |>\n<| c |>\nThe OP said \"round\
    \ each element in the list to the upper int(Ceiling) first.\"\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplcvjhl33.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpso0trj2g.php:24\n\
    Stack trace:\n#0 /tmp/tmpso0trj2g.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpso0trj2g.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3y3671i.php:24\n\
    Stack trace:\n#0 /tmp/tmpt3y3671i.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt3y3671i.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbceb1c29.php:24\n\
    Stack trace:\n#0 /tmp/tmpbceb1c29.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbceb1c29.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp35pbf98g.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpqz96sf.php:23\n\
    Stack trace:\n#0 /tmp/tmpxpqz96sf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxpqz96sf.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq3my0mil.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,arrays,algorithm\
    \ |>\n<| a tags=php,arrays,algorithm |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzcplhf0w.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6ncpz00.php:24\n\
    Stack trace:\n#0 /tmp/tmpa6ncpz00.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa6ncpz00.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0jkcfcd.php:24\n\
    Stack trace:\n#0 /tmp/tmpl0jkcfcd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpl0jkcfcd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_wa__9f.php:24\n\
    Stack trace:\n#0 /tmp/tmpk_wa__9f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpk_wa__9f.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9erks7xm.php:24\n\
    Stack trace:\n#0 /tmp/tmp9erks7xm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9erks7xm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3a0sens.php:24\n\
    Stack trace:\n#0 /tmp/tmpx3a0sens.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpx3a0sens.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1axw6uam.php:24\n\
    Stack trace:\n#0 /tmp/tmp1axw6uam.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1axw6uam.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2o49i0gx.php:24\n\
    Stack trace:\n#0 /tmp/tmp2o49i0gx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2o49i0gx.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddml9ru6.php:24\n\
    Stack trace:\n#0 /tmp/tmpddml9ru6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpddml9ru6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lfld6p1.php:24\n\
    Stack trace:\n#0 /tmp/tmp_lfld6p1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_lfld6p1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jt_ajvy.php:24\n\
    Stack trace:\n#0 /tmp/tmp6jt_ajvy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6jt_ajvy.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7q5vnusv.php:24\n\
    Stack trace:\n#0 /tmp/tmp7q5vnusv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7q5vnusv.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7potut1j.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,math\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqe8qdybd.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidgvby82.php:24\n\
    Stack trace:\n#0 /tmp/tmpidgvby82.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpidgvby82.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmph64pm1hp.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxqvq_me.php:24\n\
    Stack trace:\n#0 /tmp/tmpxxqvq_me.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxxqvq_me.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl0j02tu.php:24\n\
    Stack trace:\n#0 /tmp/tmpsl0j02tu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsl0j02tu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqclex4jt.php:24\n\
    Stack trace:\n#0 /tmp/tmpqclex4jt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqclex4jt.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgyd_e_he.php:24\n\
    Stack trace:\n#0 /tmp/tmpgyd_e_he.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgyd_e_he.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ tags=php,arrays |>\n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpayjnksgk.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpthoxoiaf.php:24\n\
    Stack trace:\n#0 /tmp/tmpthoxoiaf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpthoxoiaf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpufzwhcsv.php:23\n\
    Stack trace:\n#0 /tmp/tmpufzwhcsv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpufzwhcsv.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx4yp3s_.php:24\n\
    Stack trace:\n#0 /tmp/tmpnx4yp3s_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnx4yp3s_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jfjndjc.php:23\n\
    Stack trace:\n#0 /tmp/tmp5jfjndjc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5jfjndjc.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yaysqxd.php:24\n\
    Stack trace:\n#0 /tmp/tmp5yaysqxd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5yaysqxd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqdqprcf.php:24\n\
    Stack trace:\n#0 /tmp/tmplqdqprcf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplqdqprcf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3d4yezf.php:24\n\
    Stack trace:\n#0 /tmp/tmpe3d4yezf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe3d4yezf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1krkfr7.php:23\n\
    Stack trace:\n#0 /tmp/tmpf1krkfr7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf1krkfr7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a\
    \ tags=php,arrays |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpn5yezub6.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,arrays,function\
    \ |>\n<| c |>\nThank you for this! I appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp51noijfp.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpky2x0g3e.php:24\n\
    Stack trace:\n#0 /tmp/tmpky2x0g3e.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpky2x0g3e.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7iuvdnlh.php:24\n\
    Stack trace:\n#0 /tmp/tmp7iuvdnlh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7iuvdnlh.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26ia9r2n.php:24\n\
    Stack trace:\n#0 /tmp/tmp26ia9r2n.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp26ia9r2n.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sum\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpk_nw1g4u.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdpqqrja.php:24\n\
    Stack trace:\n#0 /tmp/tmpmdpqqrja.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmdpqqrja.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2u18rid.php:24\n\
    Stack trace:\n#0 /tmp/tmp_2u18rid.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_2u18rid.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__5vdlom.php:24\n\
    Stack trace:\n#0 /tmp/tmp__5vdlom.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp__5vdlom.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7j6qpg4t.php:23\n\
    Stack trace:\n#0 /tmp/tmp7j6qpg4t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7j6qpg4t.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6p4wmes5.php:24\n\
    Stack trace:\n#0 /tmp/tmp6p4wmes5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6p4wmes5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lt5f9tj.php:24\n\
    Stack trace:\n#0 /tmp/tmp6lt5f9tj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6lt5f9tj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuz_9aiy_.php:23\n\
    Stack trace:\n#0 /tmp/tmpuz_9aiy_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuz_9aiy_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/16507257)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to round\
    \ the numbers to the nearest integer. He also wants to return the sum of the squares\
    \ of the numbers. I believe this does exactly that.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/16507257)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He wants to round\
    \ the numbers to the nearest integer. He also wants to return the sum of the squares\
    \ of the numbers. I believe this does exactly that.\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/16507257)\n\
    <|/ c |>\n<| a tags=php |>\n<code>\n<?php\nfunction candidate(...$args) {\n  \
    \  return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuo_frhd8.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmkap9r6.php:24\n\
    Stack trace:\n#0 /tmp/tmppmkap9r6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppmkap9r6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5ka7_ap.php:24\n\
    Stack trace:\n#0 /tmp/tmpi5ka7_ap.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi5ka7_ap.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1yc_clc.php:24\n\
    Stack trace:\n#0 /tmp/tmpx1yc_clc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpx1yc_clc.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a |>\n<| a tags=php,arrays\
    \ |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n$sum = 0;\nforeach($arr as\
    \ $val){\n    $sum += $val*$val;\n}\necho $sum;\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzojayeyd.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy2uyo6k.php:24\n\
    Stack trace:\n#0 /tmp/tmpsy2uyo6k.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsy2uyo6k.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3g0uyxo.php:23\n\
    Stack trace:\n#0 /tmp/tmpv3g0uyxo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv3g0uyxo.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphc1zmdu0.php:24\n\
    Stack trace:\n#0 /tmp/tmphc1zmdu0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphc1zmdu0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbtvh5rgk.php:24\n\
    Stack trace:\n#0 /tmp/tmpbtvh5rgk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbtvh5rgk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb7p06_m.php:24\n\
    Stack trace:\n#0 /tmp/tmprb7p06_m.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprb7p06_m.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejkz_j52.php:24\n\
    Stack trace:\n#0 /tmp/tmpejkz_j52.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpejkz_j52.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qx9941d.php:24\n\
    Stack trace:\n#0 /tmp/tmp4qx9941d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4qx9941d.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphf7megzq.php:24\n\
    Stack trace:\n#0 /tmp/tmphf7megzq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphf7megzq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6x9r0bmc.php:24\n\
    Stack trace:\n#0 /tmp/tmp6x9r0bmc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6x9r0bmc.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukvn1tr1.php:24\n\
    Stack trace:\n#0 /tmp/tmpukvn1tr1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpukvn1tr1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx9ga7k4x.php:24\n\
    Stack trace:\n#0 /tmp/tmpx9ga7k4x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpx9ga7k4x.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1_zuim8.php:24\n\
    Stack trace:\n#0 /tmp/tmpv1_zuim8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv1_zuim8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9dis0ts.php:24\n\
    Stack trace:\n#0 /tmp/tmpb9dis0ts.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb9dis0ts.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_ptzyyj.php:24\n\
    Stack trace:\n#0 /tmp/tmpz_ptzyyj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz_ptzyyj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpau1pgy1y.php:24\n\
    Stack trace:\n#0 /tmp/tmpau1pgy1y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpau1pgy1y.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2ruo6oy.php:24\n\
    Stack trace:\n#0 /tmp/tmpt2ruo6oy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt2ruo6oy.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cifyzap.php:24\n\
    Stack trace:\n#0 /tmp/tmp2cifyzap.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2cifyzap.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,math |>\n<| c |>\n\
    The OP wants to round the numbers to the nearest integer.\n<|/ c |>\n<| c |>\n\
    I know, I missed that part. I've updated my answer.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ round the numbers to the nearest integer.\n<|/ c |>\n<| c |>\nIt does round\
    \ the numbers to the nearest integer. Try it yourself.\n<|/ c |>\n<| c |>\nIt\
    \ does round the numbers to the nearest integer. Try it yourself.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpx_hr900w.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nThis doesn't\
    \ round the numbers to the ceiling first\n<|/ c |>\n<| c |>\nThis doesn't round\
    \ the numbers to the ceiling first\n<|/ c |>\n<| c |>\nThis doesn't round the\
    \ numbers to the ceiling first\n<|/ c |>\n<| c |>\nThis doesn't round the numbers\
    \ to the ceiling first\n<|/ c |>\n<| c |>\nThis doesn't round the numbers to the\
    \ ceiling first\n<|/ c |>\n<| a dscore=2 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1f3vync1.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpja4chgoo.php:24\n\
    Stack trace:\n#0 /tmp/tmpja4chgoo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpja4chgoo.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmintwuz4.php:24\n\
    Stack trace:\n#0 /tmp/tmpmintwuz4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmintwuz4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_msy87q1.php:24\n\
    Stack trace:\n#0 /tmp/tmp_msy87q1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_msy87q1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparxypmhm.php:24\n\
    Stack trace:\n#0 /tmp/tmparxypmhm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmparxypmhm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9f6wvjtw.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphruv9942.php:24\n\
    Stack trace:\n#0 /tmp/tmphruv9942.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphruv9942.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawge52sj.php:24\n\
    Stack trace:\n#0 /tmp/tmpawge52sj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpawge52sj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_kbpar_.php:24\n\
    Stack trace:\n#0 /tmp/tmpp_kbpar_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpp_kbpar_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmyq5p23a.php:24\n\
    Stack trace:\n#0 /tmp/tmpmyq5p23a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmyq5p23a.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvm6ka12v.php:24\n\
    Stack trace:\n#0 /tmp/tmpvm6ka12v.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvm6ka12v.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoefznhq6.php:24\n\
    Stack trace:\n#0 /tmp/tmpoefznhq6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoefznhq6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb04yhkk8.php:24\n\
    Stack trace:\n#0 /tmp/tmpb04yhkk8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb04yhkk8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkg4jqh9c.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9mycx5ly.php:24\n\
    Stack trace:\n#0 /tmp/tmp9mycx5ly.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9mycx5ly.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjjq8ewbu.php:24\n\
    Stack trace:\n#0 /tmp/tmpjjq8ewbu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjjq8ewbu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc0qlkrub.php:24\n\
    Stack trace:\n#0 /tmp/tmpc0qlkrub.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc0qlkrub.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9v3gf0u.php:24\n\
    Stack trace:\n#0 /tmp/tmpb9v3gf0u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb9v3gf0u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9tz0n_pz.php:24\n\
    Stack trace:\n#0 /tmp/tmp9tz0n_pz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9tz0n_pz.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n$sum = 0;\nforeach($arr as\
    \ $val){\n    $sum += $val*$val;\n}\necho $sum;\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n$sum =\
    \ 0;\nforeach($arr as $val){\n    $sum += $val*$val;\n}\necho $sum;\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\nforeach($arr as $val){\n    $sum += $val*$val;\n}\necho $sum;\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\nforeach($arr as $val){\n    $sum += $val*$val;\n}\necho $sum;\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\nforeach($arr as $val){\n    $sum += $val*$val;\n}\necho $sum;\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\nforeach($arr as $val){\n    $sum += $val*$val;\n}\necho $sum;\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\nforeach($arr as $val){\n    $sum += $val*$val;\n}\necho $sum;\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n<?php\n$arr = [1,2,3,4,5,6,7,8,9,10];\n\
    $sum = 0;\nforeach($arr as $\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1h27wpjx.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2dtknyx2.php:24\n\
    Stack trace:\n#0 /tmp/tmp2dtknyx2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2dtknyx2.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplut2o0v0.php:24\n\
    Stack trace:\n#0 /tmp/tmplut2o0v0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplut2o0v0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xyr8os5.php:24\n\
    Stack trace:\n#0 /tmp/tmp0xyr8os5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0xyr8os5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8bgz93ch.php:24\n\
    Stack trace:\n#0 /tmp/tmp8bgz93ch.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8bgz93ch.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,arrays,function\
    \ |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl2dk74th.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_p7g_r22.php:24\n\
    Stack trace:\n#0 /tmp/tmp_p7g_r22.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_p7g_r22.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjt29kf1.php:24\n\
    Stack trace:\n#0 /tmp/tmppjt29kf1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppjt29kf1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpflbqn360.php:24\n\
    Stack trace:\n#0 /tmp/tmpflbqn360.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpflbqn360.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9dzzhucc.php:23\n\
    Stack trace:\n#0 /tmp/tmp9dzzhucc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9dzzhucc.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdolxesye.php:23\n\
    Stack trace:\n#0 /tmp/tmpdolxesye.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdolxesye.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrj77miq.php:24\n\
    Stack trace:\n#0 /tmp/tmpwrj77miq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwrj77miq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26812327)\n\
    <|/ c |>\n<| c |>\nI added a code example to my answer. Hope it helps.\n<|/ c\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/26812327)\n<|/ c |>\n<| c |>\nI added a code\
    \ example to my answer. Hope it helps.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    <?php\n$numbers = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100);\n\
    $sum = 0;\nforeach($numbers as $number){\n    $sum += $number * $number;\n}\n\
    echo $sum;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3f7nf1gc.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ojlv22e.php:24\n\
    Stack trace:\n#0 /tmp/tmp3ojlv22e.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3ojlv22e.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdr5z7i2k.php:24\n\
    Stack trace:\n#0 /tmp/tmpdr5z7i2k.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdr5z7i2k.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmb4x0sna.php:24\n\
    Stack trace:\n#0 /tmp/tmpmb4x0sna.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmb4x0sna.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjguhmomo.php:24\n\
    Stack trace:\n#0 /tmp/tmpjguhmomo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjguhmomo.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wfwshhe.php:23\n\
    Stack trace:\n#0 /tmp/tmp9wfwshhe.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9wfwshhe.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbb4xq620.php:24\n\
    Stack trace:\n#0 /tmp/tmpbb4xq620.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbb4xq620.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpod97x8y9.php:24\n\
    Stack trace:\n#0 /tmp/tmpod97x8y9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpod97x8y9.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq84yur0k.php:23\n\
    Stack trace:\n#0 /tmp/tmpq84yur0k.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq84yur0k.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nThe\
    \ OP wants to round the numbers to the nearest integer.\n<|/ c |>\n<| c |>\nYes,\
    \ I know. That's why I added the comment \"// round each element in the list to\
    \ the upper int(Ceiling) first.\"\n<|/ c |>\n<| c |>\nI added a comment to the\
    \ OP's question to clarify what he means by \"ceiling\".\n<|/ c |>\n<| c |>\n\
    I added a comment to the OP's question to clarify what he means by \"ceiling\"\
    .\n<|/ c |>\n<| a tags=php |>\n<code>\n<?php\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3z3xzrdm.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9y6s45z.php:24\n\
    Stack trace:\n#0 /tmp/tmpj9y6s45z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj9y6s45z.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnhp97ri.php:24\n\
    Stack trace:\n#0 /tmp/tmpdnhp97ri.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdnhp97ri.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6stx1mry.php:24\n\
    Stack trace:\n#0 /tmp/tmp6stx1mry.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6stx1mry.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42a5o24u.php:24\n\
    Stack trace:\n#0 /tmp/tmp42a5o24u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp42a5o24u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56v_c0jd.php:24\n\
    Stack trace:\n#0 /tmp/tmp56v_c0jd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp56v_c0jd.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI believe\
    \ this answer doesn't answer the question. The question asks for an algorithm\
    \ to find the sum of squares of numbers in a list. Your answer doesn't do that.\n\
    <|/ c |>\n<| c |>\nThe question asks for an algorithm to find the sum of squares\
    \ of numbers in a list. Your answer doesn't do that. Your answer doesn't do that.\
    \ Your answer doesn't do that. Your answer doesn't do that. Your answer doesn't\
    \ do that. Your answer doesn't do that. Your answer doesn't do that. Your answer\
    \ doesn't do that. Your answer doesn't do that. Your answer doesn't do that. Your\
    \ answer doesn't do that. Your answer doesn't do that. Your answer doesn't do\
    \ that. Your answer doesn't do that. Your answer doesn't do that. Your answer\
    \ doesn't do that. Your answer doesn't do that. Your answer doesn't do that. Your\
    \ answer doesn't do that. Your answer doesn't do that. Your answer doesn't do\
    \ that. Your answer doesn't do that. Your answer doesn't do that. Your answer\
    \ doesn't do that. Your answer doesn't do that. Your answer doesn't do that. Your\
    \ answer doesn't do that. Your answer doesn't do that. Your answer doesn't do\
    \ that. Your answer doesn't do that. Your answer doesn't do that. Your answer\
    \ doesn't do that. Your answer doesn't do that. Your answer doesn't do that. Your\
    \ answer doesn't do that. Your answer doesn't do that. Your answer doesn't do\
    \ that. Your answer doesn't do that. Your answer doesn't do that. Your answer\
    \ doesn't do that. Your answer doesn't do that. Your answer doesn't do that. Your\
    \ answer doesn't do that. Your answer doesn't do that. Your answer doesn't do\
    \ that. Your answer doesn't do that. Your answer doesn't do that. Your answer\
    \ doesn't do that. Your answer doesn't do that. Your answer doesn't do that. Your\
    \ answer doesn't do that. Your answer doesn't do that. Your answer doesn't do\
    \ that. Your answer doesn't do that. Your answer doesn't do that. Your answer\
    \ doesn't do that. Your answer doesn't do that. Your answer doesn't do that. Your\
    \ answer doesn't do that. Your answer doesn't do that. Your answer doesn't do\
    \ that. Your answer doesn't do that. Your answer doesn't do that. Your answer\
    \ doesn't do that. Your answer doesn't do that. Your answer doesn't do that. Your\
    \ answer doesn't do that. Your answer doesn't do that. Your \nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkwz07m1l.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThe\
    \ question was about PHP. Your answer is for Python.\n<|/ c |>\n<| c |>\nThe question\
    \ was about PHP. Your answer is for Python.\n<|/ c |>\n<| a tags=php |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmbj619ec.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwvw12ac.php:24\n\
    Stack trace:\n#0 /tmp/tmpmwvw12ac.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmwvw12ac.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjekpfpei.php:24\n\
    Stack trace:\n#0 /tmp/tmpjekpfpei.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjekpfpei.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72inv7y0.php:24\n\
    Stack trace:\n#0 /tmp/tmp72inv7y0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp72inv7y0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsva2hrnr.php:24\n\
    Stack trace:\n#0 /tmp/tmpsva2hrnr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsva2hrnr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7zpher4.php:24\n\
    Stack trace:\n#0 /tmp/tmpm7zpher4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm7zpher4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gslab53.php:24\n\
    Stack trace:\n#0 /tmp/tmp1gslab53.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1gslab53.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzu40fbe8.php:24\n\
    Stack trace:\n#0 /tmp/tmpzu40fbe8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzu40fbe8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5qj9izf4.php:24\n\
    Stack trace:\n#0 /tmp/tmp5qj9izf4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5qj9izf4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuek6666g.php:24\n\
    Stack trace:\n#0 /tmp/tmpuek6666g.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuek6666g.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8oaz3fs.php:24\n\
    Stack trace:\n#0 /tmp/tmpz8oaz3fs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz8oaz3fs.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16y9dwz3.php:23\n\
    Stack trace:\n#0 /tmp/tmp16y9dwz3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp16y9dwz3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcs7z8_3.php:24\n\
    Stack trace:\n#0 /tmp/tmpmcs7z8_3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmcs7z8_3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a tags=php,arrays,function\
    \ |>\n<| c |>\nThis answer does not round the numbers to the ceiling first\n<|/\
    \ c |>\n<| c |>\nThe question was about rounding numbers to the ceiling first.\
    \ Your answer does not do that.\n<|/ c |>\n<| c |>\nThe question was about rounding\
    \ numbers to the ceiling first. Your answer does not do that.\n<|/ c |>\n<| c\
    \ |>\nThe question was about rounding numbers to the ceiling first. Your answer\
    \ does not do that.\n<|/ c |>\n<| c |>\nThe question was about rounding numbers\
    \ to the ceiling first. Your answer does not do that.\n<|/ c |>\n<| a dscore=5\
    \ tags=php,arrays,function |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzyz98klw.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvl82jblg.php:24\n\
    Stack trace:\n#0 /tmp/tmpvl82jblg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvl82jblg.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception

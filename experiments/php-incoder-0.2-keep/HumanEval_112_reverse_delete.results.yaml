name: HumanEval_112_reverse_delete
language: php
results:
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpu3yuiz9d.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphcqcv41x.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    return ($s, $s == $s);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6wtrm7n5.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnx4rsz57.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1c21wf8t.php:24\n\
    Stack trace:\n#0 /tmp/tmp1c21wf8t.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1c21wf8t.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    foreach (str_split($s) as $key => $value)\
    \ {\n        if ($value == $c) {\n            $result .= $value;\n           \
    \ $flag = true;\n        }\n    }\n    if ($flag) {\n        return array($result,\
    \ true);\n    } else {\n        return array($result, false);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57zsor7l.php:32\n\
    Stack trace:\n#0 /tmp/tmp57zsor7l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp57zsor7l.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpobaxpgn_.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $result = \"\";\n    $i = 0;\n \
    \   $j = 0;\n    $flag = false;\n    while($i < strlen($s) && $j < strlen($c))\
    \ {\n        if($s[$i] == $c[$j]) {\n            $result .= $s[$i];\n        \
    \    $i++;\n            $j++;\n        } else {\n            $flag = true;\n \
    \           $i++;\n        }\n    }\n    if($flag) {\n        return ($result,\
    \ true);\n    } else {\n        return ($result, false);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjt5qiy09.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = '';\n    $flag =\
    \ false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n        } else {\n            $result .=\
    \ $c[$key];\n            $flag = true;\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57he2fkw.php:32\n\
    Stack trace:\n#0 /tmp/tmp57he2fkw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp57he2fkw.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqa7_9kj.php:30\n\
    Stack trace:\n#0 /tmp/tmphqa7_9kj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphqa7_9kj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpx00dqs03.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tq0raw9.php:24\n\
    Stack trace:\n#0 /tmp/tmp8tq0raw9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8tq0raw9.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2w6nfhlg.php:30\n\
    Stack trace:\n#0 /tmp/tmp2w6nfhlg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2w6nfhlg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($s[$i] == $c) {\n            $result .= $s[$i];\n           \
    \ $flag = true;\n        }\n    }\n    if ($flag) {\n        return ($result,\
    \ true);\n    } else {\n        return ($result, false);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2pfiwllz.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = \"\";\n    $flag\
    \ = false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n        } else {\n            $flag = true;\n\
    \        }\n    }\n    return array($result, $flag);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprukt850c.php:31\n\
    Stack trace:\n#0 /tmp/tmprukt850c.php(42): test()\n#1 {main}\n  thrown in /tmp/tmprukt850c.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    for($i=0; $i<strlen($s); $i++) {\n  \
    \      if($s[$i] == $c) {\n            $flag = true;\n        }\n        if($flag)\
    \ {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbf731m_m.php:30\n\
    Stack trace:\n#0 /tmp/tmpbf731m_m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbf731m_m.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, strcmp($s, $c) == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_m4ue21j.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkxm3kz99.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = str_replace('', '', $s);\n    return ($s, strrev($s) == $s);\n}\n\n\
    function candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"\
    b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp37po90o9.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3eyjjfp5.php:30\n\
    Stack trace:\n#0 /tmp/tmp3eyjjfp5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3eyjjfp5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgtpsk08q.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25o2r00e.php:30\n\
    Stack trace:\n#0 /tmp/tmp25o2r00e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp25o2r00e.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7uxqe94p.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlja5ikm.php:30\n\
    Stack trace:\n#0 /tmp/tmprlja5ikm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmprlja5ikm.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpime0bm9x.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0pd2ghhx.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppv7p7ed3.php:23\n\
    Stack trace:\n#0 /tmp/tmppv7p7ed3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppv7p7ed3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    foreach ($s as $key => $value) {\n  \
    \      if ($value == $c) {\n            $flag = true;\n            $result .=\
    \ $value;\n        } else {\n            $result .= $value;\n        }\n    }\n\
    \    if ($flag) {\n        return ($result, true);\n    } else {\n        return\
    \ ($result, false);\n    }\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa8q1g2no.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprtkzc7hw.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqy5sfmdn.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $len = strlen($s);\n    $i = 0;\n    $j = $len - 1;\n   \
    \ while($i < $len && $j < $len) {\n        if($s[$i] == $c[$j]) {\n          \
    \  $result .= $s[$i];\n            $i++;\n            $j--;\n        } else {\n\
    \            $i++;\n        }\n    }\n    return array($result, $i == $len);\n\
    }\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\"\
    , false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    , \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0l1r7o7d.php:33\n\
    Stack trace:\n#0 /tmp/tmp0l1r7o7d.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0l1r7o7d.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $result = \"\";\n    $i = 0;\n \
    \   $j = 0;\n    $flag = false;\n    while ($i < strlen($s) && $j < strlen($c))\
    \ {\n        if ($s[$i] == $c[$j]) {\n            $result .= $s[$i];\n       \
    \     $i++;\n            $j++;\n        } else {\n            if ($flag) {\n \
    \               $result .= $s[$i];\n                $i++;\n            } else\
    \ {\n                $result .= $c[$j];\n                $j++;\n            }\n\
    \        }\n    }\n    return array($result, $flag);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgg_40eim.php:41\n\
    Stack trace:\n#0 /tmp/tmpgg_40eim.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpgg_40eim.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = '';\n    $flag =\
    \ false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n            $flag = true;\n        }\n  \
    \  }\n    if ($flag) {\n        return array($result, true);\n    } else {\n \
    \       return array($result, false);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdbdi6i9p.php:33\n\
    Stack trace:\n#0 /tmp/tmpdbdi6i9p.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdbdi6i9p.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    $s = str_replace($s, '', $s);\n    return ($s, $s ==\
    \ $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpacgpjrol.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $result = \"\";\n    $flag = false;\n\
    \    for($i = 0; $i < strlen($s); $i++) {\n        if($s[$i] == $c[$i]) {\n  \
    \          $result .= $s[$i];\n        } else {\n            $flag = true;\n \
    \       }\n    }\n    return array($result, $flag);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8a4tk5ef.php:31\n\
    Stack trace:\n#0 /tmp/tmp8a4tk5ef.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8a4tk5ef.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppyrae_i5.php:30\n\
    Stack trace:\n#0 /tmp/tmppyrae_i5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppyrae_i5.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcvgc5muw.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwn122_kk.php:30\n\
    Stack trace:\n#0 /tmp/tmpwn122_kk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwn122_kk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6htn810s.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach (str_split($s) as $char) {\n\
    \        if ($char == $c) {\n            $flag = true;\n        }\n        if\
    \ ($flag) {\n            $result .= $char;\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_yp3fz4.php:30\n\
    Stack trace:\n#0 /tmp/tmpa_yp3fz4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpa_yp3fz4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $result .= $value;\n            $flag\
    \ = true;\n        }\n    }\n    if ($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjy1lrptu.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = \"\";\n    $flag\
    \ = false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n        } else {\n            $flag = true;\n\
    \        }\n    }\n    if ($flag) {\n        return ($result, true);\n    } else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgxpvjwio.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_rhtydhf.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = '';\n    $flag =\
    \ false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n        } else {\n            $flag = true;\n\
    \        }\n    }\n    return array($result, $flag);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3x6xamw.php:31\n\
    Stack trace:\n#0 /tmp/tmpx3x6xamw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx3x6xamw.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = str_replace($s, '', $c);\n    return ($s, $s == $c);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2t_37z0e.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpybu7m8_u.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    for($i=0; $i<strlen($s); $i++) {\n  \
    \      if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag =\
    \ true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq2jtjn2_.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    foreach ($s as $key => $val) {\n    \
    \    if ($val == $c) {\n            $result .= $val;\n            $flag = true;\n\
    \        }\n    }\n    if ($flag) {\n        return ($result, true);\n    } else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxebo_45v.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpusecrwxo.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach (str_split($s) as $char) {\n\
    \        if ($char == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $char;\n    }\n    if ($flag) {\n        return ($result, true);\n    } else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4ayoem63.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = '';\n    $flag =\
    \ false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n        } else {\n            $result .=\
    \ $c[$key];\n            $flag = true;\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5delmz3w.php:32\n\
    Stack trace:\n#0 /tmp/tmp5delmz3w.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5delmz3w.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = '';\n    $flag =\
    \ false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n            $flag = true;\n        } else\
    \ {\n            $result .= $c[$key];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpuls2z_.php:32\n\
    Stack trace:\n#0 /tmp/tmpbpuls2z_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbpuls2z_.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1_elv5w.php:24\n\
    Stack trace:\n#0 /tmp/tmpa1_elv5w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpa1_elv5w.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $result = \"\";\n    $flag = false;\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if ($s[$i] == $c[$i]) {\n\
    \            $result .= $s[$i];\n        } else {\n            $flag = true;\n\
    \        }\n    }\n    return array($result, $flag);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9l2_1sqw.php:31\n\
    Stack trace:\n#0 /tmp/tmp9l2_1sqw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9l2_1sqw.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm5gu6y05.php:30\n\
    Stack trace:\n#0 /tmp/tmpm5gu6y05.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm5gu6y05.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgf94ld07.php:30\n\
    Stack trace:\n#0 /tmp/tmpgf94ld07.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgf94ld07.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        } else {\n            $result .= $c;\n        }\n    }\n  \
    \  if($flag) {\n        return ($result, true);\n    } else {\n        return\
    \ ($result, false);\n    }\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe7y6z425.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl3rb_682.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++) {\n\
    \        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    }\n    $result = '';\n    for($i = 0; $i < strlen($s); $i++) {\n        if($s[$i]\
    \ != $c) {\n            $result .= $s[$i];\n        }\n    }\n    return ($result,\
    \ false);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpaty4mtrg.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i=0; $i<strlen($s); $i++) {\n\
    \        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result,$flag);\n\
    \    } else {\n        return ($result,false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpizci3hdp.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($s[$i] == $c) {\n            $result .= $s[$i];\n           \
    \ $flag = true;\n        }\n    }\n    if ($flag) {\n        return ($result,\
    \ true);\n    } else {\n        return ($result, false);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpghlqeiwg.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby9dtdth.php:30\n\
    Stack trace:\n#0 /tmp/tmpby9dtdth.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpby9dtdth.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n        } else\
    \ {\n            $result .= $c;\n            $flag = true;\n        }\n    }\n\
    \    return array($result, $flag);\n}\n\nfunction candidate(...$args) {\n    return\
    \ reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"ab\"\
    ) !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"\") !==\
    \ array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"v\") !==\
    \ array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fv61nv_.php:30\n\
    Stack trace:\n#0 /tmp/tmp8fv61nv_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8fv61nv_.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach (str_split($s) as $char) {\n\
    \        if ($char == $c) {\n            $flag = true;\n        } else {\n   \
    \         $result .= $char;\n        }\n    }\n    if ($flag) {\n        return\
    \ array($result, true);\n    } else {\n        return array($result, false);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyltt1bxi.php:33\n\
    Stack trace:\n#0 /tmp/tmpyltt1bxi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpyltt1bxi.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjrtgw1i3.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach (str_split($s) as $char) {\n\
    \        if ($char == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $char;\n    }\n    if ($flag) {\n        return ($result, true);\n    } else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbea85kbh.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe91atbmx.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = str_replace($s, '', $s);\n    $s = strrev($s);\n    return array($s,\
    \ strlen($s) == 0);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9v66oua.php:25\n\
    Stack trace:\n#0 /tmp/tmpl9v66oua.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl9v66oua.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmd6dxoo4.php:30\n\
    Stack trace:\n#0 /tmp/tmpmd6dxoo4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmd6dxoo4.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $val) {\n  \
    \      if ($val == $c) {\n            $flag = true;\n            $result .= $val;\n\
    \        }\n    }\n    if ($flag) {\n        return ($result, true);\n    } else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqclugsl3.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($s[$i] == $c) {\n            $flag = true;\n        }\n     \
    \   if ($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ array($result, !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_z3s1kuv.php:30\n\
    Stack trace:\n#0 /tmp/tmp_z3s1kuv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_z3s1kuv.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50ail9dm.php:30\n\
    Stack trace:\n#0 /tmp/tmp50ail9dm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp50ail9dm.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpry3pibg6.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl3k4eram.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($s[$i] == $c) {\n            $flag = true;\n        }\n     \
    \   if ($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ array($result, !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwu6rbq2w.php:30\n\
    Stack trace:\n#0 /tmp/tmpwu6rbq2w.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwu6rbq2w.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxku_cksz.php:30\n\
    Stack trace:\n#0 /tmp/tmpxku_cksz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxku_cksz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $result = \"\";\n    $flag = false;\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if ($s[$i] == $c[$i]) {\n\
    \            $result .= $s[$i];\n        } else {\n            if ($flag) {\n\
    \                $result .= $s[$i];\n            } else {\n                $flag\
    \ = true;\n            }\n        }\n    }\n    return ($result, $flag);\n}\n\n\
    function candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"\
    b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpggic6jk5.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n            $result\
    \ .= $s[$i];\n        }\n        else {\n            $result .= $s[$i];\n    \
    \    }\n    }\n    if($flag) {\n        return ($result, true);\n    }\n    else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2ld1ierw.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9j0c1s63.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp31xt_xgb.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplmzfkp1j.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpild0x9l4.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpendhqfxi.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    }\n    else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp947wjnft.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_dsaabv.php:24\n\
    Stack trace:\n#0 /tmp/tmpd_dsaabv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpd_dsaabv.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    $s = str_replace($s, '', $s);\n    return array($s,\
    \ strcmp($s, $c) == 0);\n}\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1ke0osw.php:24\n\
    Stack trace:\n#0 /tmp/tmpe1ke0osw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpe1ke0osw.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $result = \"\";\n    $flag = false;\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if ($s[$i] == $c[$i]) {\n\
    \            $result .= $s[$i];\n        } else {\n            $flag = true;\n\
    \        }\n    }\n    return array($result, $flag);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4oxpiuw.php:31\n\
    Stack trace:\n#0 /tmp/tmpa4oxpiuw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpa4oxpiuw.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $c);\n}\n</code>\n<|/ a |>\n\
    <| c |>\nThis doesn't work. Try it with `reverse_delete(\"abcde\", \"ae\")`\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test cases in the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test cases in the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test cases in the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added the test cases in the answer.\n\
    <|/ c |>\n<| a tags=php,algorithm |>\n<code>\nfunction candidate(...$args) {\n\
    \    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"ab\"\
    ) !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"\") !==\
    \ array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"v\") !==\
    \ array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxu2dj7h1.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    $s = str_replace($s, '', $s);\n    return ($s, strrev($s)\
    \ == $s);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_jzvh7gs.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $len = strlen($s);\n    $i = 0;\n    $j = 0;\n    while($i\
    \ < $len) {\n        if($s[$i] == $c[$j]) {\n            $result .= $s[$i];\n\
    \            $i++;\n            $j++;\n        } else {\n            $j++;\n \
    \       }\n    }\n    return array($result, $i == $len);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpurg_n8wq.php:30\n\
    Stack trace:\n#0 /tmp/tmpurg_n8wq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpurg_n8wq.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wtxzqsp.php:30\n\
    Stack trace:\n#0 /tmp/tmp4wtxzqsp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4wtxzqsp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa13gvtk.php:30\n\
    Stack trace:\n#0 /tmp/tmpaa13gvtk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpaa13gvtk.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpweqyjnqe.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = '';\n    $flag =\
    \ false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n        } else {\n            $flag = true;\n\
    \        }\n    }\n    if ($flag) {\n        return array($result, true);\n  \
    \  } else {\n        return array($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmui5ici5.php:35\n\
    Stack trace:\n#0 /tmp/tmpmui5ici5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmui5ici5.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg6uz1hzv.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $result = \"\";\n    $flag = false;\n\
    \    for($i = 0; $i < strlen($s); $i++) {\n        if($s[$i] == $c[$i]) {\n  \
    \          $result .= $s[$i];\n        } else {\n            $flag = true;\n \
    \       }\n    }\n    return array($result, $flag);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n54k2pj.php:31\n\
    Stack trace:\n#0 /tmp/tmp9n54k2pj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9n54k2pj.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkwz6wfwf.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    foreach ($s as $key => $value) {\n  \
    \      if ($value == $c) {\n            $result .= $value;\n            $flag\
    \ = true;\n        }\n    }\n    if ($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphim6eqfy.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbvk2_kme.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        if\
    \ ($flag) {\n            $result .= $value;\n        }\n    }\n    return ($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5yud53dy.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw0994erc.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4tuf7un.php:30\n\
    Stack trace:\n#0 /tmp/tmpr4tuf7un.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr4tuf7un.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ry_ceji.php:30\n\
    Stack trace:\n#0 /tmp/tmp0ry_ceji.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0ry_ceji.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $result .= $value;\n            $flag\
    \ = true;\n        }\n    }\n    if ($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq_6egbff.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, strlen($s) == 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"ab\"\
    ) !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"\") !==\
    \ array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"v\") !==\
    \ array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpln6vl_4_.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0e3_t0za.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ato0sls.php:30\n\
    Stack trace:\n#0 /tmp/tmp4ato0sls.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4ato0sls.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = '';\n    $flag =\
    \ false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n            $flag = true;\n        }\n  \
    \  }\n    if ($flag) {\n        return array($result, true);\n    } else {\n \
    \       return array($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_yf77mr.php:34\n\
    Stack trace:\n#0 /tmp/tmpy_yf77mr.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpy_yf77mr.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52v1lqxg.php:30\n\
    Stack trace:\n#0 /tmp/tmp52v1lqxg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp52v1lqxg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, (strcmp($s, $c) == 0));\n}\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7nyt5x96.php:23\n\
    Stack trace:\n#0 /tmp/tmp7nyt5x96.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7nyt5x96.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1c6xfpvg.php:30\n\
    Stack trace:\n#0 /tmp/tmp1c6xfpvg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1c6xfpvg.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i=0; $i<strlen($s); $i++) {\n\
    \        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj59ddmgv.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($s[$i] == $c) {\n            $flag = true;\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if ($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpour5lzzf.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy130kfv8.php:24\n\
    Stack trace:\n#0 /tmp/tmpy130kfv8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy130kfv8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfh9fg3di.php:24\n\
    Stack trace:\n#0 /tmp/tmpfh9fg3di.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfh9fg3di.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = \"\";\n    $flag\
    \ = false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n        } else {\n            $result .=\
    \ $c[$key];\n            $flag = true;\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplesjdra4.php:32\n\
    Stack trace:\n#0 /tmp/tmplesjdra4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplesjdra4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5moxjepz.php:30\n\
    Stack trace:\n#0 /tmp/tmp5moxjepz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5moxjepz.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe920t_db.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $result = \"\";\n    $flag = false;\n\
    \    for($i = 0; $i < strlen($s); $i++) {\n        if($s[$i] == $c[$i]) {\n  \
    \          $result .= $s[$i];\n        } else {\n            $flag = true;\n \
    \       }\n    }\n    if($flag) {\n        return ($result, true);\n    } else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5hfoeesf.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp693jbi80.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpo7bfe8ja.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        } else {\n\
    \            $result .= $s[$i];\n        }\n    }\n    if($flag) {\n        return\
    \ ($result, true);\n    } else {\n        return ($result, false);\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\"\
    , false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    , \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp74z5_y7g.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($s[$i] == $c) {\n            $flag = true;\n        }\n     \
    \   if ($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ array($result, !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0nqf1ppj.php:30\n\
    Stack trace:\n#0 /tmp/tmp0nqf1ppj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0nqf1ppj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, strrev($s) == $s);\n}\nfunction candidate(...$args) {\n    return\
    \ reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"ab\"\
    ) !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"\") !==\
    \ array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"v\") !==\
    \ array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpsv_8orsv.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($s[$i] == $c) {\n            $flag = true;\n        }\n     \
    \   if ($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ array($result, $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ls9xabb.php:30\n\
    Stack trace:\n#0 /tmp/tmp8ls9xabb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8ls9xabb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7tykerb_.php:24\n\
    Stack trace:\n#0 /tmp/tmp7tykerb_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7tykerb_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, strcmp($s, $c) == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2_67elae.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    return ($s, strrev($s) == $s);\n}\n\nfunction candidate(...$args) {\n   \
    \ return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"ab\"\
    ) !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"\") !==\
    \ array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"v\") !==\
    \ array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcsiujb_s.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzf6_ea_b.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    foreach (str_split($s) as $char) {\n\
    \        if ($char == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $char;\n    }\n    if ($flag) {\n        return ($result, true);\n    } else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg37fm893.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2s1fgq9e.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5me_u10n.php:24\n\
    Stack trace:\n#0 /tmp/tmp5me_u10n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5me_u10n.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibkgmi5i.php:24\n\
    Stack trace:\n#0 /tmp/tmpibkgmi5i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpibkgmi5i.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = '';\n    $flag =\
    \ false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n            unset($s[$key]);\n          \
    \  unset($c[$key]);\n            $flag = true;\n        }\n    }\n    if ($flag)\
    \ {\n        return array($result, true);\n    } else {\n        return array($result,\
    \ false);\n    }\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu034v8ws.php:36\n\
    Stack trace:\n#0 /tmp/tmpu034v8ws.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpu034v8ws.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp19fq4gpr.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if ($s[$i] == $c) {\n            $flag = true;\n        }\n        if\
    \ ($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrs91cw1.php:30\n\
    Stack trace:\n#0 /tmp/tmpqrs91cw1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqrs91cw1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5w9zojx0.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo6e4x9fn.php:30\n\
    Stack trace:\n#0 /tmp/tmpo6e4x9fn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpo6e4x9fn.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, (strrev($s) == $s));\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitfi5q5j.php:24\n\
    Stack trace:\n#0 /tmp/tmpitfi5q5j.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpitfi5q5j.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zry8i3s.php:24\n\
    Stack trace:\n#0 /tmp/tmp1zry8i3s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1zry8i3s.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0cydrjo.php:24\n\
    Stack trace:\n#0 /tmp/tmpf0cydrjo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpf0cydrjo.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i=0; $i<strlen($s); $i++) {\n\
    \        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9jfx9cck.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    return ($s, strcmp($s, $c) == 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"ab\"\
    ) !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"\") !==\
    \ array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"v\") !==\
    \ array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr33eeng0.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9xa5p6do.php:30\n\
    Stack trace:\n#0 /tmp/tmp9xa5p6do.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9xa5p6do.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return ($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbzradqnu.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjf982oyj.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $val) {\n  \
    \      if ($val == $c) {\n            $result .= $val;\n            $flag = true;\n\
    \        }\n    }\n    if ($flag) {\n        return ($result, true);\n    } else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppipz81uq.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        } else {\n\
    \            $result .= $s[$i];\n        }\n    }\n    if($flag) {\n        return\
    \ ($result, true);\n    } else {\n        return ($result, false);\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\"\
    , false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    , \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9seo0wo7.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvw84qnt.php:24\n\
    Stack trace:\n#0 /tmp/tmpfvw84qnt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfvw84qnt.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf8rp7o_5.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysz3mpxy.php:24\n\
    Stack trace:\n#0 /tmp/tmpysz3mpxy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpysz3mpxy.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpspzciwq1.php:30\n\
    Stack trace:\n#0 /tmp/tmpspzciwq1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpspzciwq1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw_5j_8qf.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpip9gdzfv.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xrgsyw4.php:24\n\
    Stack trace:\n#0 /tmp/tmp8xrgsyw4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8xrgsyw4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp85hyvl53.php:30\n\
    Stack trace:\n#0 /tmp/tmp85hyvl53.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp85hyvl53.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp09fwo3qt.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        } else {\n\
    \            $result .= $s[$i];\n        }\n    }\n    if($flag) {\n        return\
    \ ($result, true);\n    } else {\n        return ($result, false);\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\"\
    , false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    , \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_x64p15x.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = '';\n    $flag =\
    \ false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n            $flag = true;\n        }\n  \
    \  }\n    if ($flag) {\n        return array($result, true);\n    } else {\n \
    \       return array($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgknfaog.php:34\n\
    Stack trace:\n#0 /tmp/tmpzgknfaog.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzgknfaog.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n            $result .=\
    \ $value;\n        }\n    }\n    if ($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxtzgd622.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    $s = str_replace('', '', $s);\n    $s = strrev($s);\n\
    \    $s = str_replace('', '', $s);\n    $s = strrev($s);\n    $s = str_replace('',\
    \ '', $s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0sktgvjq.php:29\n\
    Stack trace:\n#0 /tmp/tmp0sktgvjq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0sktgvjq.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj0r2ku4d.php:30\n\
    Stack trace:\n#0 /tmp/tmpj0r2ku4d.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpj0r2ku4d.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4vty2lj.php:24\n\
    Stack trace:\n#0 /tmp/tmp_4vty2lj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_4vty2lj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpoi6hsv20.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmmmntep.php:24\n\
    Stack trace:\n#0 /tmp/tmpqmmmntep.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqmmmntep.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach (str_split($s) as $char) {\n\
    \        if ($char == $c) {\n            $flag = true;\n        }\n        if\
    \ ($flag) {\n            $result .= $char;\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg189t88t.php:30\n\
    Stack trace:\n#0 /tmp/tmpg189t88t.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpg189t88t.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if ($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        } else {\n            $result .= $c;\n        }\n    }\n  \
    \  if ($flag) {\n        return ($result, true);\n    } else {\n        return\
    \ ($result, false);\n    }\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5xabhjgb.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($s[$i] == $c) {\n            $flag = true;\n        }\n     \
    \   if ($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return\
    \ ($result, $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkwp18ck2.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = str_replace($s, '', $c);\n    return ($s, $s == $c);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpen4ylqmc.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3hut19mq.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnsd50xi.php:30\n\
    Stack trace:\n#0 /tmp/tmpxnsd50xi.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxnsd50xi.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    foreach (str_split($s) as $char) {\n\
    \        if ($char == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $char;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\n\
    \    $result = '';\n    foreach (str_split($s) as $char) {\n        if ($char\
    \ != $c) {\n            $result .= $char;\n        }\n    }\n    return ($result,\
    \ false);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpexw1b9dw.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8x38k_t.php:24\n\
    Stack trace:\n#0 /tmp/tmpt8x38k_t.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt8x38k_t.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8ms8ia4.php:24\n\
    Stack trace:\n#0 /tmp/tmpj8ms8ia4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpj8ms8ia4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp05muks6d.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpns0zngrv.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2yx_o_g0.php:30\n\
    Stack trace:\n#0 /tmp/tmp2yx_o_g0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2yx_o_g0.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp18tu1n5z.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = str_replace($s, '', $s);\n    return ($s, $s == $c);\n}\n</code>\n<|/\
    \ a tags=php,algorithm |>\n<| c |>\nThis is not the most efficient solution. `strrev`\
    \ will reverse the string twice.\n<|/ c |>\n<| c |>\nYes, but this is O(n^2) solution.\
    \ Not sure if this is what OP wants.\n<|/ c |>\n<| c |>\nYes, but this is O(n^2)\
    \ solution. Not sure if this is what OP wants.\n<|/ c |>\n<| c |>\nYes, but this\
    \ is O(n^2) solution. Not sure if this is what OP wants.\n<|/ c |>\n<| c |>\n\
    Yes, but this is O(n^2) solution. Not sure if this is what OP wants.\n<|/ c |>\n\
    <| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzeq7j5xb.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        if\
    \ ($flag) {\n            $result .= $value;\n        }\n    }\n    return array($result,\
    \ $flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpor8gmu_y.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpor8gmu_y.php:30\n\
    Stack trace:\n#0 /tmp/tmpor8gmu_y.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpor8gmu_y.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, strrev($s) == $s);\n}\n\nfunction candidate(...$args) {\n   \
    \ return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"ab\"\
    ) !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"\") !==\
    \ array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"v\") !==\
    \ array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppiott5he.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        } else {\n            $result .= $c;\n        }\n    }\n  \
    \  return array($result, $flag);\n}\n\nfunction candidate(...$args) {\n    return\
    \ reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"ab\"\
    ) !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"\") !==\
    \ array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"v\") !==\
    \ array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0c3pe_28.php:30\n\
    Stack trace:\n#0 /tmp/tmp0c3pe_28.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0c3pe_28.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpha22ehsm.php:24\n\
    Stack trace:\n#0 /tmp/tmpha22ehsm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpha22ehsm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    return ($s, $s == $s);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3mvppvlj.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpszsj_62y.php:24\n\
    Stack trace:\n#0 /tmp/tmpszsj_62y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpszsj_62y.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzczqhe_i.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n            $result\
    \ .= $s[$i];\n        }\n    }\n    if($flag) {\n        return ($result, true);\n\
    \    } else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcayn11fp.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++)\
    \ {\n        if($s[$i] == $c) {\n            $flag = true;\n        }\n      \
    \  if($flag) {\n            $result .= $s[$i];\n        }\n    }\n    return array($result,\
    \ !$flag);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebgdxl4o.php:30\n\
    Stack trace:\n#0 /tmp/tmpebgdxl4o.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpebgdxl4o.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    return ($s, $s == $s);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdh2j88fw.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = '';\n    $flag = false;\n    for($i = 0; $i < strlen($s); $i++) {\n\
    \        if($s[$i] == $c) {\n            $result .= $s[$i];\n            $flag\
    \ = true;\n        } else {\n            if($flag) {\n                $result\
    \ .= $s[$i];\n            }\n        }\n    }\n    return array($result, $flag);\n\
    }\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\"\
    , false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    , \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m2in_kb.php:32\n\
    Stack trace:\n#0 /tmp/tmp1m2in_kb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1m2in_kb.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, $s == $c);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ozg_w0b.php:24\n\
    Stack trace:\n#0 /tmp/tmp6ozg_w0b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6ozg_w0b.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return ($s, $s == $s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkqr1e8xy.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $val) {\n  \
    \      if ($val == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $val;\n    }\n    if ($flag) {\n        return ($result, true);\n    } else\
    \ {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_qevf6mf.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwocm53b.php:24\n\
    Stack trace:\n#0 /tmp/tmpxwocm53b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxwocm53b.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, \"\", $s);\n\
    \    $s = strrev($s);\n    return array($s, strcmp($s, $c) == 0);\n}\nfunction\
    \ candidate(...$args) {\n    return reverse_delete(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !==\
    \ array(\"acdef\", false)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\")\
    \ !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\"\
    , true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\"\
    , \"v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeoq57ef6.php:23\n\
    Stack trace:\n#0 /tmp/tmpeoq57ef6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeoq57ef6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = str_split($s);\n    $c = str_split($c);\n    $result = \"\";\n    $flag\
    \ = false;\n    foreach ($s as $key => $value) {\n        if ($value == $c[$key])\
    \ {\n            $result .= $value;\n        } else {\n            $flag = true;\n\
    \        }\n    }\n    return array($result, $flag);\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2jhaxkx.php:31\n\
    Stack trace:\n#0 /tmp/tmpa2jhaxkx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpa2jhaxkx.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach (str_split($s) as $char) {\n\
    \        if ($char == $c) {\n            $flag = true;\n        } else {\n   \
    \         $result .= $char;\n        }\n    }\n    if ($flag) {\n        return\
    \ array($result, true);\n    } else {\n        return array($result, false);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibfmvf1c.php:33\n\
    Stack trace:\n#0 /tmp/tmpibfmvf1c.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpibfmvf1c.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $s = strrev($s);\n    $c = strrev($c);\n    $s = str_replace($c, '', $s);\n\
    \    return ($s, $s == $c);\n}\n\nfunction candidate(...$args) {\n    return reverse_delete(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"abcde\", \"ae\") !== array(\"\
    bcd\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\", \"b\") !== array(\"acdef\", false)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"ab\") !== array(\"cdedc\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"dwik\", \"w\") !== array(\"\
    dik\", false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    a\", \"a\") !== array(\"\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdedcba\", \"\") !== array(\"abcdedcba\", true)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\", \"v\")\
    \ !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"vabba\", \"v\") !== array(\"abba\", true)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"mamma\", \"mia\") !== array(\"\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa9wagkrb.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Task\n// We are given two strings s and c, you have to deleted\
    \ all the characters in s that are equal to any character in c\n// then check\
    \ if the result string is palindrome.\n// A string is called palindrome if it\
    \ reads the same backward as forward.\n// You should return a tuple containing\
    \ the result string and True/False for the check.\n// Example\n// For s = \"abcde\"\
    , c = \"ae\", the result should be ('bcd',False)\n// For s = \"abcdef\", c = \"\
    b\"  the result should be ('acdef',False)\n// For s = \"abcdedcba\", c = \"ab\"\
    , the result should be ('cdedc',True)\nfunction reverse_delete($s, $c) {\n   \
    \ $result = \"\";\n    $flag = false;\n    foreach ($s as $key => $value) {\n\
    \        if ($value == $c) {\n            $flag = true;\n        }\n        $result\
    \ .= $value;\n    }\n    if ($flag) {\n        return ($result, true);\n    }\
    \ else {\n        return ($result, false);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return reverse_delete(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"abcde\", \"ae\") !== array(\"bcd\", false)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\", \"b\") !== array(\"acdef\",\
    \ false)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"ab\") !== array(\"cdedc\", true)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"dwik\", \"w\") !== array(\"dik\", false)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"a\", \"a\") !== array(\"\
    \", true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdedcba\"\
    , \"\") !== array(\"abcdedcba\", true)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdedcba\", \"v\") !== array(\"abcdedcba\", true))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"vabba\", \"\
    v\") !== array(\"abba\", true)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"mamma\", \"mia\") !== array(\"\", true)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprojkgwrz.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception

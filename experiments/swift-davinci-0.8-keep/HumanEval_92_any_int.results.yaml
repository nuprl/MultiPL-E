language: swift
name: HumanEval_92_any_int
results:
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x == y + z || y == x + z || z == x + y {\n       \
    \ return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpfxpd9gn7/tmpfxpd9gn7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63d9023c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63d8d1ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63d8d1a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63d8d197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfxpd9gn7                        0x000056123ab6a2d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b63d920f460 __libc_start_main +
    245

    6    tmpfxpd9gn7                        0x000056123ab69e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    let result: Bool\n    if x == y + z || y == x + z ||\
    \ z == x + y {\n        result = true\n    } else {\n        result = false\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpj1ofc7os/tmpj1ofc7os.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba45a476c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba45a16db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba45a16d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba45a16c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj1ofc7os                        0x0000564682a572d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ba45a662460 __libc_start_main +
    245

    6    tmpj1ofc7os                        0x0000564682a56e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (Int(x) == Int(y) + Int(z)) || (Int(y) == Int(x)\
    \ + Int(z)) || (Int(z) == Int(x) + Int(y))\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2,\
    \ z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmphh87nhh_/tmphh87nhh_.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b697cd5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b697ca54b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b697ca54988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b697ca537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphh87nhh_                        0x000055809b11772d <unavailable> + 5933

    5    libc.so.6                          0x00002b697cf49460 __libc_start_main +
    245

    6    tmphh87nhh_                        0x000055809b116ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x * y * z) == 0 && (x == (y + z) || y == (x +\
    \ z) || z == (x + y))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppfuem25j/tmppfuem25j.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab19c628c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab19c31fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab19c31f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab19c31e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppfuem25j                        0x00005583791741c4 <unavailable> + 4548

    5    libc.so.6                          0x00002ab19c814460 __libc_start_main +
    245

    6    tmppfuem25j                        0x0000558379173e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x == y + z && x.truncatingRemainder(dividingBy: 1)\
    \ == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        return true\n    } else if y == x + z && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        return true\n    } else if z == x + y && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0 {\n        return true\n    } else {\n        return false\n    }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5gduboq9/tmp5gduboq9.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9276f00c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9276bf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9276bf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9276bf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5gduboq9                        0x000055716090777d <unavailable> + 6013

    5    libc.so.6                          0x00002b92770ec460 __libc_start_main +
    245

    6    tmp5gduboq9                        0x0000557160906f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) == 0) && (y.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (z.truncatingRemainder(dividingBy: 1) == 0) {\n        if (x ==\
    \ y + z) || (y == x + z) || (z == x + y) {\n            return true\n        }\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp5mhzje5g/tmp5mhzje5g.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6475115c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6474e0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6474e0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6474e0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5mhzje5g                        0x0000560b29c2877d <unavailable> + 6013

    5    libc.so.6                          0x00002b6475301460 __libc_start_main +
    245

    6    tmp5mhzje5g                        0x0000560b29c27f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return abs(x.truncatingRemainder(dividingBy: 1)) == 0\
    \ && abs(y.truncatingRemainder(dividingBy: 1)) == 0 && abs(z.truncatingRemainder(dividingBy:\
    \ 1)) == 0 && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpmow6p1ji/tmpmow6p1ji.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b68aaf4fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b68aac46b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b68aac46988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b68aac457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmow6p1ji                        0x000055fae44f286d <unavailable> + 6253

    5    libc.so.6                          0x00002b68ab13b460 __libc_start_main +
    245

    6    tmpmow6p1ji                        0x000055fae44f2039 <unavailable> + 4153

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    let x_flr = floor(x)\n    let y_flr = floor(y)\n    let\
    \ z_flr = floor(z)\n    if (x_flr == y_flr + z_flr) || (y_flr == x_flr + z_flr)\
    \ || (z_flr == x_flr + y_flr) {\n        return true\n    } else {\n        return\
    \ false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp2hdpn0yl.swift:11:17: error: cannot find 'floor' in scope\n   \
    \ let x_flr = floor(x)\n                ^~~~~\n/tmp/tmp2hdpn0yl.swift:12:17: error:\
    \ cannot find 'floor' in scope\n    let y_flr = floor(y)\n                ^~~~~\n\
    /tmp/tmp2hdpn0yl.swift:13:17: error: cannot find 'floor' in scope\n    let z_flr\
    \ = floor(z)\n                ^~~~~\n"
  stdout: ''
  timestamp: 1659824615
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x+y == z || x+z == y || y+z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpimpedf43/tmpimpedf43.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af579d33c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af579a2ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af579a2a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af579a297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpimpedf43                        0x0000564fd079177d <unavailable> + 6013

    5    libc.so.6                          0x00002af579f1f460 __libc_start_main +
    245

    6    tmpimpedf43                        0x0000564fd0790f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && floor(x)\
    \ == x && floor(y) == y && floor(z) == z\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmppihnkvyk.swift:11:56: error: cannot find 'floor' in scope\n   \
    \ return (x == y + z || y == x + z || z == x + y) && floor(x) == x && floor(y)\
    \ == y && floor(z) == z\n                                                    \
    \   ^~~~~\n/tmp/tmppihnkvyk.swift:11:73: error: cannot find 'floor' in scope\n\
    \    return (x == y + z || y == x + z || z == x + y) && floor(x) == x && floor(y)\
    \ == y && floor(z) == z\n                                                    \
    \                    ^~~~~\n/tmp/tmppihnkvyk.swift:11:90: error: cannot find 'floor'\
    \ in scope\n    return (x == y + z || y == x + z || z == x + y) && floor(x) ==\
    \ x && floor(y) == y && floor(z) == z\n                                      \
    \                                                   ^~~~~\n"
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0, y.truncatingRemainder(dividingBy:\
    \ 1) == 0, z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y == z\
    \ || x + z == y || y + z == x {\n            return true\n        }\n    }\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpav9im7qr/tmpav9im7qr.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dac8eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dac5e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dac5e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dac5e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpav9im7qr                        0x00005653da1ba77d <unavailable> + 6013

    5    libc.so.6                          0x00002b6dacad6460 __libc_start_main +
    245

    6    tmpav9im7qr                        0x00005653da1b9f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n  return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpuye_86hr/tmpuye_86hr.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9472b96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b947288db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b947288d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b947288c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuye_86hr                        0x0000564a387f11c4 <unavailable> + 4548

    5    libc.so.6                          0x00002b9472d82460 __libc_start_main +
    245

    6    tmpuye_86hr                        0x0000564a387f0e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824614
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x + y == z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp70tkbx34/tmp70tkbx34.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b578646dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5786164b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5786164988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b57861637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70tkbx34                        0x0000561cc0f8177d <unavailable> + 6013

    5    libc.so.6                          0x00002b5786659460 __libc_start_main +
    245

    6    tmp70tkbx34                        0x0000561cc0f80f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return isInt(x) && isInt(y) && isInt(z) && (x == y +\
    \ z || x == y - z || x == z - y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp6obgbsmx.swift:11:12: error: cannot find 'isInt' in scope\n   \
    \ return isInt(x) && isInt(y) && isInt(z) && (x == y + z || x == y - z || x ==\
    \ z - y)\n           ^~~~~\n/tmp/tmp6obgbsmx.swift:11:24: error: cannot find 'isInt'\
    \ in scope\n    return isInt(x) && isInt(y) && isInt(z) && (x == y + z || x ==\
    \ y - z || x == z - y)\n                       ^~~~~\n/tmp/tmp6obgbsmx.swift:11:36:\
    \ error: cannot find 'isInt' in scope\n    return isInt(x) && isInt(y) && isInt(z)\
    \ && (x == y + z || x == y - z || x == z - y)\n                              \
    \     ^~~~~\n"
  stdout: ''
  timestamp: 1659824613
- exit_code: 1
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.isInteger && y.isInteger && z.isInteger && (x\
    \ == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3)\
    \ == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpbr0e1dit.swift:11:14: error: value of type 'Double' has no member\
    \ 'isInteger'\n    return x.isInteger && y.isInteger && z.isInteger && (x == y\
    \ + z || y == x + z || z == x + y)\n           ~ ^~~~~~~~~\n/tmp/tmpbr0e1dit.swift:11:29:\
    \ error: value of type 'Double' has no member 'isInteger'\n    return x.isInteger\
    \ && y.isInteger && z.isInteger && (x == y + z || y == x + z || z == x + y)\n\
    \                          ~ ^~~~~~~~~\n/tmp/tmpbr0e1dit.swift:11:44: error: value\
    \ of type 'Double' has no member 'isInteger'\n    return x.isInteger && y.isInteger\
    \ && z.isInteger && (x == y + z || y == x + z || z == x + y)\n               \
    \                          ~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824613
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527

name: HumanEval_122_add_elements
language: swift
prompt: "\n/// Given a non-empty array of integers arr and an integer k, return\n\
  /// the sum of the elements with at most two digits from the first k elements of\
  \ arr.\n/// Example:\n/// Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n/// Output:\
  \ 24 # sum of 21 + 3\n/// Constraints:\n/// 1. 1 <= len(arr) <= 100\n/// 2. 1 <=\
  \ k <= len(arr)\nfunc add_elements(arr: [Int], k: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(add_elements(arr: [1, -2, -3, 41, 57, 76,\
  \ 87, 88, 99], k: 3) == -4)\nassert(add_elements(arr: [111, 121, 3, 4000, 5, 6],\
  \ k: 2) == 0)\nassert(add_elements(arr: [11, 21, 3, 90, 5, 6, 7, 8, 9], k: 4) ==\
  \ 125)\nassert(add_elements(arr: [111, 21, 3, 4000, 5, 6, 7, 8, 9], k: 4) == 24)\n\
  assert(add_elements(arr: [1], k: 1) == 1)"
completions: ["    var result = 0\n    for i in 0..<arr.count {\n        if i == k\
    \ {\n            break\n        }\n        let s = String(arr[i])\n        if\
    \ s.count == 1 || s.count == 2 {\n            result += arr[i]\n        }\n  \
    \  }\n    return result", "    var sum = 0\n    for i in 0..<k {\n        let\
    \ n = arr[i]\n        if n < 10 {\n            sum += n\n        } else if n <\
    \ 100 {\n            sum += n/10 + n%10\n        } else {\n            sum +=\
    \ 1\n        }\n    }\n    return sum", "    var sum = 0\n    for i in 0..<k {\n\
    \        if arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum", "    var k = k\n    var sum = 0\n    for elem in arr {\n        if elem\
    \ < 100 {\n            sum += elem\n            k -= 1\n        }\n        if\
    \ k == 0 {\n            break\n        }\n    }\n    return sum", "    var sum\
    \ = 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum", "    guard arr.count >= k else { return 0\
    \ }\n    guard arr.count > 0 else { return 0 }\n    var result = 0\n    for i\
    \ in 0..<k {\n        if arr[i] > 99 {\n            continue\n        }\n    \
    \    result += arr[i]\n    }\n    return result", "    var sum = 0\n    for i\
    \ in 0..<k {\n        let str = String(arr[i])\n        if str.count <= 2 {\n\
    \            sum += arr[i]\n        }\n    }\n    return sum", "    var sum =\
    \ 0\n    for i in 0..<k {\n        let num = arr[i]\n        if num <= 99 {\n\
    \            sum += num\n        }\n    }\n    return sum", "    var result =\
    \ 0\n    var i = 0\n    while i < arr.count && k > 0 {\n        let element =\
    \ arr[i]\n        if element >= 100 {\n            i += 1\n            continue\n\
    \        }\n        result += element\n        i += 1\n        k -= 1\n    }\n\
    \    return result", "    guard arr.count > 0 else { return 0 }\n    guard arr.count\
    \ > k else { return arr.reduce(0, +) }\n    var sum = 0\n    for i in 0..<k {\n\
    \        if arr[i] >= 10 && arr[i] < 100 {\n            sum += arr[i]\n      \
    \  }\n    }\n    return sum", '    return arr.prefix(k).filter({ $0 < 100 }).reduce(0,
    +)', "    var sum = 0\n    for i in 0..<k {\n        let curr = arr[i]\n     \
    \   if curr > 99 {\n            continue\n        }\n        sum += curr\n   \
    \ }\n    return sum", "    var result = 0\n    for i in 0..<k {\n        let num\
    \ = arr[i]\n        if num < 10 {\n            result += num\n        } else if\
    \ num < 100 {\n            result += num / 10 + num % 10\n        } else {\n \
    \           result += 1\n        }\n    }\n    return result", "    var sum =\
    \ 0\n    for i in 0..<k {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum", "    var sum = 0\n    for i in 0..<k {\n \
    \       let num = arr[i]\n        if num < 10 {\n            sum += num\n    \
    \    } else if num < 100 {\n            sum += num / 10 + num % 10\n        }\
    \ else {\n            sum += num / 100 + (num % 100) / 10 + num % 10\n       \
    \ }\n    }\n    return sum", "    var sum = 0\n    for i in 0..<k {\n        if\
    \ arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum",
  "    var sum = 0\n    for i in 0 ..< k {\n        if arr[i] < 100 {\n          \
    \  sum += arr[i]\n        }\n    }\n    return sum", '    return arr.filter {
    $0 > 99 || $0 < 10 }.prefix(k).reduce(0, +)', "    var sum = 0\n    var k = k\n\
    \    var i = 0\n    while k > 0 {\n        var x = arr[i]\n        while x > 9\
    \ {\n            x /= 10\n        }\n        sum += arr[i]\n        i += 1\n \
    \       k -= 1\n    }\n    return sum", "    var sum = 0\n    for i in 0..<k {\n\
    \        let str = \"\\(arr[i])\"\n        if str.count <= 2 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum"]
stop_tokens:
- "\n}"

name: HumanEval_97_multiply
language: swift
prompt: "\n/// Complete the function that takes two integers and returns \n/// the\
  \ product of their unit digits.\n/// Assume the input is always valid.\n/// Examples:\n\
  /// multiply(148, 412) should return 16.\n/// multiply(19, 28) should return 72.\n\
  /// multiply(2020, 1851) should return 0.\n/// multiply(14,-15) should return 20.\n\
  func multiply(a: Int, b: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a:\
  \ 19, b: 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a:\
  \ 14, b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
  \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
  \ == 0)"
completions: ['    return (a%10) * (b%10)', "    let aStr = String(a)\n    let bStr\
    \ = String(b)\n    if aStr.isEmpty || bStr.isEmpty {\n        return 0\n    }\n\
    \    let aLast = aStr.last!\n    let bLast = bStr.last!\n    return Int(String(aLast))!\
    \ * Int(String(bLast))!", '    return abs(a) % 10 * abs(b) % 10', "    var a =\
    \ a\n    var b = b\n    if a < 0 {\n        a *= -1\n    }\n    if b < 0 {\n \
    \       b *= -1\n    }\n    return (a % 10) * (b % 10)", '    return (a % 10)
    * (b % 10)', '    return (a % 10) * (b % 10)', '  return (a % 10) * (b % 10)',
  "    let aString = String(a)\n    let bString = String(b)\n    return Int(String(aString.last!))!\
    \ * Int(String(bString.last!))!", '    return a % 10 * b % 10', '    return String(a).last!
    * String(b).last!', "    let a = a % 10\n    let b = b % 10\n    return a * b",
  '    return (a % 10) * (b % 10)', '  return (a % 10) * (b % 10)', "    let aUnit\
    \ = a % 10\n    let bUnit = b % 10\n    return aUnit * bUnit", "    var firstNum\
    \ = a\n    var secondNum = b\n    if a < 0 {\n        firstNum = abs(a)\n    }\n\
    \    if b < 0 {\n        secondNum = abs(b)\n    }\n    return (firstNum % 10)\
    \ * (secondNum % 10)", "    var t = a\n    var u = b\n    t = t % 10\n    u =\
    \ u % 10\n    if t < 0 {\n        t = t * -1\n    }\n    if u < 0 {\n        u\
    \ = u * -1\n    }\n    return t * u", "    let nums = [a, b]\n    var mult = 1\n\
    \    for num in nums {\n        mult *= num % 10\n    }\n    return mult", " \
    \   // your code here\n    return ((a%10) * (b%10))", "    var sum = a * b\n \
    \   while (sum > 99) {\n        sum = sum / 10\n    }\n    return sum % 10", '    return
    abs(a)%10 * abs(b)%10']
stop_tokens:
- "\n}"

name: HumanEval_108_count_nums
language: swift
prompt: "\n/// Write a function count_nums which takes an array of integers and returns\n\
  /// the number of elements which has a sum of digits > 0.\n/// If a number is negative,\
  \ then its first signed digit will be negative:\n/// e.g. -123 has signed digits\
  \ -1, 2, and 3.\n/// >>> count_nums([]) == 0\n/// >>> count_nums([-1, 11, -11])\
  \ == 1\n/// >>> count_nums([1, 1, 2]) == 3\nfunc count_nums(arr: [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(count_nums(arr: [] as [Int]) == 0)\nassert(count_nums(arr:\
  \ [-1, -2, 0]) == 0)\nassert(count_nums(arr: [1, 1, 2, -2, 3, 4, 5]) == 6)\nassert(count_nums(arr:\
  \ [1, 6, 9, -6, 0, 1, 5]) == 5)\nassert(count_nums(arr: [1, 100, 98, -7, 1, -1])\
  \ == 4)\nassert(count_nums(arr: [12, 23, 34, -45, -56, 0]) == 5)\nassert(count_nums(arr:\
  \ [0, 1]) == 1)\nassert(count_nums(arr: [1]) == 1)"
completions: ["    return arr.filter{\n        var sum = 0\n        var val = $0\n\
    \        if val < 0 {\n            val = -val\n        }\n        while val >\
    \ 0 {\n            sum += val % 10\n            val /= 10\n        }\n       \
    \ return sum > 0\n    }.count", '    return arr.filter { abs($0).digits.reduce(0,
    +) > 0 }.count', "    return arr.filter({ (a) -> Bool in\n        return abs(a)\
    \ > 9 &&\n            Double(a).sign() != Double(Int(String(abs(a)).characters.dropFirst().reduce(0,\
    \ +))).sign()\n    }).count", '    return 0', "\tlet arrSum = arr.map({ a in abs(a)\
    \ })\n\t\t.map({ Int(String($0).characters.map({ Int(String($0))! }).reduce(0,\
    \ +))! })\n\treturn arrSum.reduce(0, +) > 0 ? arr.count : 0", "  var result =\
    \ 0\n  for i in arr {\n    var abs = i\n    if abs < 0 {\n      abs = -abs\n \
    \   }\n    if abs < 10 {\n      result += 1\n    } else {\n      while abs >=\
    \ 10 {\n        var sum = 0\n        while abs >= 10 {\n          sum += abs %\
    \ 10\n          abs /= 10\n        }\n        sum += abs\n        abs = sum\n\
    \      }\n      result += 1\n    }\n  }\n  return result", '    return arr.filter
    { abs($0) > 0 && String(abs($0)).reduce(0, {$0 + Int(String($1))!}) > 0 }.count',
  "    var count = 0;\n    for number in arr {\n        var sum = 0;\n        var\
    \ temp = number;\n        if temp < 0 {\n            temp = -temp;\n        }\n\
    \        while temp > 0 {\n            sum += temp % 10;\n            temp /=\
    \ 10;\n        }\n        if sum > 0 {\n            count += 1;\n        }\n \
    \   }\n    return count;", '    return arr.filter{abs($0) % 10 != 0}.count', " \
    \   var count = 0\n    for num in arr {\n        var sum = 0\n        if num <\
    \ 0 {\n            sum += -1\n        }\n        var nextNum = abs(num)\n    \
    \    while nextNum != 0 {\n            sum += nextNum % 10\n            nextNum\
    \ /= 10\n        }\n        if sum > 0 {\n            count += 1\n        }\n\
    \    }\n    return count", "    var count = 0\n    var sum = 0\n    for num in\
    \ arr {\n        var tmp = num\n        if tmp < 0 {\n            tmp = abs(tmp)\n\
    \        }\n        while tmp != 0 {\n            sum += tmp % 10\n          \
    \  tmp /= 10\n        }\n        if sum > 0 {\n            count += 1\n      \
    \  }\n        sum = 0\n    }\n    return count", '    return arr.filter{sum_digits($0)
    > 0}.count', "\treturn arr.filter({ is_num($0) }).count", "    return arr.filter\
    \ {\n        $0 != 0 && $0.numbers.map { abs($0) }.reduce(0, +) > 0\n    }.count",
  "    // TODO: Implement count_nums\n    return 0", "    var result = 0\n    for\
    \ item in arr {\n        var abs_item = abs(item)\n        var sum = 0\n     \
    \   while (abs_item > 0) {\n            sum += abs_item % 10\n            abs_item\
    \ /= 10\n        }\n        if (sum > 0) {\n            result += 1\n        }\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return 0\n    }\n \
    \   var count = 0\n    for element in arr {\n        var el = element\n      \
    \  var sum = 0\n        if el < 0 {\n            el = abs(el)\n            sum\
    \ += 1\n        }\n        for _ in String(el) {\n            sum += el % 10\n\
    \            el /= 10\n        }\n        if sum > 0 {\n            count += 1\n\
    \        }\n    }\n    return count", "    var sum = 0\n    var count = 0\n  \
    \  for num in arr {\n        if (num < 0) {\n            sum = sum + -1*(num%10)\n\
    \        } else {\n            sum = sum + num%10\n        }\n    }\n    if (sum\
    \ > 0) {\n        count = count + 1\n    }\n    return count", "    var result\
    \ = 0\n    for num in arr {\n        if sum_digits(num) > 0 {\n            result\
    \ += 1\n        }\n    }\n    return result", "    var count = 0\n    for x in\
    \ arr {\n        var y = x\n        if x < 0 {\n            y = -x\n        }\n\
    \        if get_signed_sum(y) > 0 {\n            count += 1\n        }\n    }\n\
    \    return count"]
stop_tokens:
- "\n}"

name: HumanEval_64_vowels_count
language: swift
prompt: "\n/// Write a function vowels_count which takes a string representing\n///\
  \ a word as input and returns the number of vowels in the string.\n/// Vowels in\
  \ this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but only\
  \ when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(\"\
  abcde\")\n/// 2\n/// >>> vowels_count(\"ACEDY\")\n/// 3\nfunc vowels_count(s: String)\
  \ -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
  \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
  \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
  \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
completions: ["    var vCount = 0\n    for c in s {\n        if (c == \"a\" || c ==\
    \ \"e\" || c == \"i\" || c == \"o\" || c == \"u\") {\n            vCount += 1\n\
    \        }\n    }\n    if (s.last == \"y\") {\n        vCount += 1\n    }\n  \
    \  return vCount", "    var vowelCount = 0\n    let vowel = \"aeiouy\"\n    for\
    \ char in s.lowercased() {\n        if vowel.contains(char) {\n            vowelCount\
    \ += 1\n        }\n    }\n    return vowelCount", "    return s.lowercased().characters.filter{\n\
    \        $0 == \"a\" || $0 == \"e\" || $0 == \"i\" || $0 == \"o\" || $0 == \"\
    u\"\n        }.count", "    return s.filter {\n        $0 == \"a\" || $0 == \"\
    e\" || $0 == \"i\" || $0 == \"o\" || $0 == \"u\" || $0 == \"y\"\n    }.count",
  "    let vowels = \"aeiouy\"\n    let charList = Array(s.lowercased())\n    var\
    \ result = 0\n    for char in charList {\n        if vowels.contains(char) {\n\
    \            result += 1\n        }\n    }\n    return result", "    var count\
    \ = 0\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ for char in s {\n        if vowels.contains(char) {\n            count += 1\n\
    \        }\n    }\n    return count", "    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s {\n        if (c == \"a\" || c == \"e\" || c == \"i\" ||\
    \ c == \"o\" || c == \"u\" || c == \"y\") {\n            count++\n        }\n\
    \    }\n    return count", "  let vowel = CharacterSet(charactersIn: \"aeiou\"\
    )\n  let word = s.lowercased()\n  var vowelCount = 0\n  for c in word {\n    if\
    \ vowel.contains(UnicodeScalar(String(c))!) {\n      vowelCount += 1\n    }\n\
    \  }\n  if word.last == \"y\" {\n    vowelCount += 1\n  }\n  return vowelCount",
  "    return s.characters.filter { (char: Character) -> Bool in\n        return char\
    \ == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\"\
    \ || char == \"y\"\n    }.count", "    var n = 0\n    let vowels = \"aeiouy\"\n\
    \    for c in s {\n        if vowels.contains(c) {\n            n += 1\n     \
    \   }\n    }\n    return n", "    let vowels: [Character] = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var counter = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            counter += 1\n        }\n    }\n    return counter", "    var\
    \ n = 0\n    let vowels = \"aeiouy\"\n    for i in s.lowercased() {\n        if\
    \ vowels.contains(i) {\n            n += 1\n        }\n    }\n    return n", '    return
    count_if(s.characters, { vowel($0) })', "    var vowelCount = 0\n    let vowels:\
    \ Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for char in s {\n\
    \        if vowels.contains(char) {\n            vowelCount += 1\n        }\n\
    \    }\n    let lastChar = s.last!\n    if vowels.contains(lastChar) {\n     \
    \   vowelCount += 1\n    }\n    return vowelCount", "    var count = 0\n    let\
    \ array = Array(s)\n    for letter in array {\n        switch letter {\n     \
    \   case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n        case\
    \ \"y\":\n            if array.last == letter {\n                count += 1\n\
    \            }\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    // your code goes here!\n    return 0", "  let vowels = \"aeiouy\"\
    \n  let sChars = Array(s.lowercased())\n  var vowelCount = 0\n  for i in 0..<sChars.count\
    \ {\n    if i == sChars.count - 1 && sChars[i] == \"y\" {\n      vowelCount +=\
    \ 1\n    } else if vowels.contains(sChars[i]) {\n      vowelCount += 1\n    }\n\
    \  }\n  return vowelCount", '    return s.count - s.uppercased().filter({ "AEIOUY".contains($0)
    }).count', "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var count = 0\n    for char in s {\n        if vowels.contains(char) {\n\
    \            count += 1\n        }\n    }\n    return count"]
stop_tokens:
- "\n}"

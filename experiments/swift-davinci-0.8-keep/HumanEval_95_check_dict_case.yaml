name: HumanEval_95_check_dict_case
language: swift
prompt: "\n/// Given a dictionary, return True if all keys are strings in lower \n\
  /// case or all keys are strings in upper case, else return False.\n/// The function\
  \ should return False is the given dictionary is empty.\n/// Examples:\n/// check_dict_case({\"\
  a\":\"apple\", \"b\":\"banana\"}) should return True.\n/// check_dict_case({\"a\"\
  :\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n/// check_dict_case({\"\
  a\":\"apple\", \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n/// check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n///\
  \ check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  func check_dict_case(dict: [String : String]) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(check_dict_case(dict: [\"p\" : \"pineapple\"\
  , \"b\" : \"banana\"]) == true)\nassert(check_dict_case(dict: [\"p\" : \"pineapple\"\
  , \"A\" : \"banana\", \"B\" : \"banana\"]) == false)\nassert(check_dict_case(dict:\
  \ [\"p\" : \"pineapple\", \"5\" : \"banana\", \"a\" : \"apple\"]) == false)\nassert(check_dict_case(dict:\
  \ [\"Name\" : \"John\", \"Age\" : \"36\", \"City\" : \"Houston\"]) == false)\nassert(check_dict_case(dict:\
  \ [\"STATE\" : \"NC\", \"ZIP\" : \"12345\"]) == true)\nassert(check_dict_case(dict:\
  \ [\"fruit\" : \"Orange\", \"taste\" : \"Sweet\"]) == true)\nassert(check_dict_case(dict:\
  \ [:] as [String : String]) == false)"
completions: ["    if dict.count == 0 {\n        return false\n    }\n    else {\n\
    \        var uppercase = false\n        var lowercase = false\n        for (key,_)\
    \ in dict {\n            if key.uppercased() == key {\n                uppercase\
    \ = true\n            }\n            else if key.lowercased() == key {\n     \
    \           lowercase = true\n            }\n            else {\n            \
    \    return false\n            }\n        }\n        if uppercase == true && lowercase\
    \ == true {\n            return false\n        }\n        else {\n           \
    \ return true\n        }\n    }", "    var keys_are_upper = true\n    var keys_are_lower\
    \ = true\n    for key in dict.keys {\n        keys_are_upper = keys_are_upper\
    \ && key.uppercased() == key\n        keys_are_lower = keys_are_lower && key.lowercased()\
    \ == key\n    }\n    return keys_are_upper || keys_are_lower", "    var upper\
    \ = true\n    var lower = true\n    for (key, _) in dict {\n        upper = upper\
    \ && key.isUppercase\n        lower = lower && key.isLowercase\n    }\n    return\
    \ upper || lower", "    var lowerCaseCount = 0\n    var upperCaseCount = 0\n \
    \   for (key, _) in dict {\n        if key.lowercased() == key {\n           \
    \ lowerCaseCount += 1\n        } else if key.uppercased() == key {\n         \
    \   upperCaseCount += 1\n        }\n    }\n    return (lowerCaseCount == dict.count\
    \ || upperCaseCount == dict.count)", "    if dict.isEmpty {\n        return false\n\
    \    }\n    var isAllUpperCase = true\n    var isAllLowerCase = true\n    var\
    \ isAllString = true\n    for (key, value) in dict {\n        if key.uppercased()\
    \ != key {\n            isAllUpperCase = false\n        }\n        if key.lowercased()\
    \ != key {\n            isAllLowerCase = false\n        }\n        if value.uppercased()\
    \ != value {\n            isAllUpperCase = false\n        }\n        if value.lowercased()\
    \ != value {\n            isAllLowerCase = false\n        }\n        if !key.isAlpha\
    \ {\n            isAllString = false\n        }\n        if !value.isAlpha {\n\
    \            isAllString = false\n        }\n    }\n    return isAllUpperCase\
    \ || isAllLowerCase", "    if dict.isEmpty {\n        return false\n    }\n  \
    \  let upperKeys = dict.keys.filter { $0.isUppercase }\n    let lowerKeys = dict.keys.filter\
    \ { $0.isLowercase }\n    return !upperKeys.isEmpty && !lowerKeys.isEmpty ? false\
    \ : true", "    if dict.count == 0 {\n        return false\n    }\n\n    if dict.count\
    \ == 1 {\n        return true\n    }\n\n    var caseType: String.Element.CaseIterable\n\
    \    let firstKey = dict.keys.first!\n    if firstKey.lowercased() == firstKey\
    \ {\n        caseType = String.Element.lowercaseLetters\n    } else {\n      \
    \  caseType = String.Element.uppercaseLetters\n    }\n\n    for key in dict.keys\
    \ {\n        for letter in key {\n            if !caseType.contains(letter) {\n\
    \                return false\n            }\n        }\n    }\n\n    return true",
  "    let lowerKeys = dict.keys.filter { $0.lowercased() == $0 }\n    let upperKeys\
    \ = dict.keys.filter { $0.uppercased() == $0 }\n    return lowerKeys.count > 0\
    \ && upperKeys.count == 0 ||\n        upperKeys.count > 0 && lowerKeys.count ==\
    \ 0", "  // your code here\n  var isUpper = true\n  var isLower = true\n  for\
    \ (key,_) in dict {\n    if !key.lowercased().elementsEqual(key) {\n      isLower\
    \ = false\n    }\n    if !key.uppercased().elementsEqual(key) {\n      isUpper\
    \ = false\n    }\n  }\n  return isUpper || isLower", "    var lower_case = true\n\
    \    var upper_case = true\n    var result = false\n    for item in dict {\n \
    \       let key = item.key\n        let value = item.value\n        if key !=\
    \ key.lowercased() {\n            lower_case = false\n        }\n        if key\
    \ != key.uppercased() {\n            upper_case = false\n        }\n    }\n  \
    \  if lower_case || upper_case {\n        result = true\n    }\n    return result",
  "    var lowerCaseKeys = 0\n    var upperCaseKeys = 0\n    for key in dict.keys\
    \ {\n        if key.lowercased() == key {\n            lowerCaseKeys += 1\n  \
    \      } else if key.uppercased() == key {\n            upperCaseKeys += 1\n \
    \       }\n    }\n    if lowerCaseKeys == dict.count || upperCaseKeys == dict.count\
    \ {\n        return true\n    }\n    return false", "    var has_lower = false\n\
    \    var has_upper = false\n    for (key, _) in dict {\n        if key.lowercased()\
    \ == key {\n            has_lower = true\n        } else if key.uppercased() ==\
    \ key {\n            has_upper = true\n        } else {\n            return false\n\
    \        }\n    }\n    return dict.count == 0 ? false : has_lower != has_upper",
  "    var capCount = 0\n    var lowCount = 0\n    for key in dict.keys {\n      \
    \  if key.uppercased() == key {\n            capCount += 1\n        } else {\n\
    \            lowCount += 1\n        }\n    }\n    return (lowCount == 0) || (capCount\
    \ == 0)", '    return true', "    var lowerCaseCount = 0\n    var upperCaseCount\
    \ = 0\n    for key in dict.keys {\n        let thisKey = key\n        let firstChar\
    \ = thisKey.first!\n        if firstChar.isUppercase {\n            upperCaseCount\
    \ += 1\n        } else {\n            lowerCaseCount += 1\n        }\n    }\n\
    \    if lowerCaseCount == 0 || upperCaseCount == 0 {\n        return true\n  \
    \  } else {\n        return false\n    }", "    \n    // Check if dictionary is\
    \ empty\n    if dict.isEmpty {\n        return false\n    }\n    \n    // Iterate\
    \ over elements\n    for (key, _) in dict {\n        \n        // If key is uppercase\
    \ but there is a lowercase key\n        if key.uppercased() == key && dict.contains(where:\
    \ { $0.key.lowercased() == $0.key }) {\n            return false\n        }\n\
    \        \n        // If key is lowercase but there is an uppercase key\n    \
    \    if key.lowercased() == key && dict.contains(where: { $0.key.uppercased()\
    \ == $0.key }) {\n            return false\n        }\n    }\n    \n    return\
    \ true", "    var i = 1\n    var isUpper = false\n    var isLower = false\n  \
    \  let dictKey = dict.keys\n    if dictKey.count == 0 {\n        return false\n\
    \    }\n    while i < dictKey.count {\n        if dictKey[i] == dictKey[i].uppercased()\
    \ {\n            isUpper = true\n        } else if dictKey[i] == dictKey[i].lowercased()\
    \ {\n            isLower = true\n        } else {\n            return false\n\
    \        }\n        i += 1\n    }\n    if isUpper && isLower {\n        return\
    \ false\n    }\n    return true", "    \n    if dict.isEmpty {\n        return\
    \ false\n    }\n    \n    var isUpperCase = true\n    var isLowerCase = true\n\
    \    \n    for key in dict.keys {\n        if key != key.uppercased() {\n    \
    \        isUpperCase = false\n        }\n        if key != key.lowercased() {\n\
    \            isLowerCase = false\n        }\n    }\n    \n    return isUpperCase\
    \ || isLowerCase", "    //<-- your code goes here\n    return false", "    var\
    \ containsLowerCase: Bool = false\n    var containsUpperCase: Bool = false\n \
    \   var key: String\n    var value: String\n    var count: Int = 0\n    \n   \
    \ for (key, value) in dict {\n        if key == key.lowercased() {\n         \
    \   containsLowerCase = true\n        }\n        if key == key.uppercased() {\n\
    \            containsUpperCase = true\n        }\n        count += 1\n    }\n\
    \    \n    if count == 0 {\n        return false\n    }\n    \n    if containsLowerCase\
    \ && containsUpperCase {\n        return false\n    }\n    \n    return true"]
stop_tokens:
- "\n}"

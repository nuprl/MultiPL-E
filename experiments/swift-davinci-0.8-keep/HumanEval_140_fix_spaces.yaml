name: HumanEval_140_fix_spaces
language: swift
prompt: "\n/// Given a string text, replace all spaces in it with underscores, \n\
  /// and if a string has more than 2 consecutive spaces, \n/// then replace all consecutive\
  \ spaces with - \n/// fix_spaces(\"Example\") == \"Example\"\n/// fix_spaces(\"\
  Example 1\") == \"Example_1\"\n/// fix_spaces(\" Example 2\") == \"_Example_2\"\n\
  /// fix_spaces(\" Example   3\") == \"_Example-3\"\nfunc fix_spaces(text: String)\
  \ -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fix_spaces(text: \"Example\") == \"Example\"\
  )\nassert(fix_spaces(text: \"Mudasir Hanif \") == \"Mudasir_Hanif_\")\nassert(fix_spaces(text:\
  \ \"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\nassert(fix_spaces(text:\
  \ \"Exa   mple\") == \"Exa-mple\")\nassert(fix_spaces(text: \"   Exa 1 2 2 mple\"\
  ) == \"-Exa_1_2_2_mple\")"
completions: ["\tlet re = Regex(\"\\\\s{2,}\")\n\treturn re.replace(text, with: \"\
    -\")\n\t\t.split(\" \")\n\t\t.joinWithSeparator(\"_\")", "    return text.replacingOccurrences(of:\
    \ \"\\\\s{2,}\", with: \"-\", options: .regularExpression)\n        .replacingOccurrences(of:\
    \ \" \", with: \"_\")", "    let r = text.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \        .replacingOccurrences(of: \" \", with: \"_\")\n        .replacingOccurrences(of:\
    \ \"__\", with: \"-\")\n        .replacingOccurrences(of: \"__\", with: \"-\"\
    )\n    return r", '    return text.replacingOccurrences(of: "  ", with: "-").replacingOccurrences(of:
    " ", with: "_")', "    return text.replacingOccurrences(of: \" {2,}\", with: \"\
    -\", options: .regularExpression)\n        .replacingOccurrences(of: \" \", with:\
    \ \"_\")", "    let regex = try! NSRegularExpression(pattern: \" +\", options:\
    \ .CaseInsensitive)\n    return regex.stringByReplacingMatchesInString(text, options:\
    \ [], range: NSMakeRange(0, text.characters.count), withTemplate: \"_\")", '  return
    text.replacingOccurrences(of: "  ", with: "-").replacingOccurrences(of: " ", with:
    "_")', '    return "Not implemented"', "    let regexp = try! NSRegularExpression(pattern:\
    \ \"\\\\s+\", options: [])\n    return regexp.stringByReplacingMatches(in: text,\
    \ options: [], range: NSMakeRange(0, text.count), withTemplate: \"_\")", '    return
    text.replacingOccurrences(of: "  ", with: "-").replacingOccurrences(of: " ", with:
    "_")', "    let result = text.replacingOccurrences(of: \"  \", with: \"-\")\n\
    \    return result.replacingOccurrences(of: \" \", with: \"_\")", "    let underscore\
    \ = \"_\"\n    let dash = \"-\"\n    return text.replacingOccurrences(of: \" \
    \ \", with: dash).replacingOccurrences(of: \" \", with: underscore)", '    return
    text.replacingOccurrences(of: "\\s{2,}", with: "-", options: .regularExpression).replacingOccurrences(of:
    " ", with: "_")', "\treturn text.replacingOccurrences(of: \"  \", with: \"-\"\
    ).replacingOccurrences(of: \" \", with: \"_\")", "    // ref: https://stackoverflow.com/questions/47852864/swift-4-how-to-replace-spaces-with-underscores-in-a-string\n\
    \    let replaced = text.replacingOccurrences(of: \" \", with: \"_\", options:\
    \ .literal, range: nil)\n    return replaced.replacingOccurrences(of: \"__\",\
    \ with: \"-\", options: .literal, range: nil)", '    return text.replacingOccurrences(of:
    " +", with: "_", options: .regularExpression)', '    return text.replacingOccurrences(of:
    " +", with: "-", options: .regularExpression, range: nil).replacingOccurrences(of:
    " ", with: "_")', "    let text = text.replacingOccurrences(of: \" \", with: \"\
    _\")\n    return text.replacingOccurrences(of: \"__\", with: \"-\")", "  return\
    \ text.replacingOccurrences(of: \" \", with: \"_\")\n            .replacingOccurrences(of:\
    \ \"  \", with: \"-\")", "    var result = \"\"\n    var counter = 0\n    for\
    \ character in text {\n        if String(character) == \" \" {\n            if\
    \ counter > 0 {\n                result += \"-\"\n            } else {\n     \
    \           result += \"_\"\n            }\n            counter += 1\n       \
    \ } else {\n            result += String(character)\n            counter = 0\n\
    \        }\n    }\n    return result"]
stop_tokens:
- "\n}"

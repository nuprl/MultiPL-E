name: HumanEval_81_numerical_letter_grade
language: swift
prompt: "\n/// It is the last week of the semester and the teacher has to give the\
  \ grades\n/// to students. The teacher has been making her own algorithm for grading.\n\
  /// The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you a list of GPAs for some students and you have to write \n/// a function\
  \ that can output a list of letter grades using the following table:\n/// GPA  \
  \     |    Letter grade\n/// 4.0                A+\n/// > 3.7                A \n\
  /// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7           \
  \     B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7  \
  \              C\n/// > 1.3                C-\n/// > 1.0                D+ \n///\
  \ > 0.7                D \n/// > 0.0                D-\n/// 0.0                E\n\
  /// Example:\n/// grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C',\
  \ 'A-']\nfunc numerical_letter_grade(grades: [Double]) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(numerical_letter_grade(grades: [4.0, 3,\
  \ 1.7, 2, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"])\nassert(numerical_letter_grade(grades:\
  \ [1.2]) == [\"D+\"])\nassert(numerical_letter_grade(grades: [0.5]) == [\"D-\"])\n\
  assert(numerical_letter_grade(grades: [0.0]) == [\"E\"])\nassert(numerical_letter_grade(grades:\
  \ [1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"])\nassert(numerical_letter_grade(grades:\
  \ [0.0, 0.7]) == [\"E\", \"D-\"])"
completions: ["    let letter_grades = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\"\
    , \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"]\n    var output: [String]\
    \ = []\n    let letter_grade_beginnings = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0,\
    \ 1.7, 1.3, 1.0, 0.7, 0.0]\n    for grade in grades {\n        for i in 0..<letter_grade_beginnings.count\
    \ - 1 {\n            if grade >= letter_grade_beginnings[i] && grade < letter_grade_beginnings[i\
    \ + 1] {\n                output.append(letter_grades[i])\n            }\n   \
    \     }\n        if grade == 0.0 {\n            output.append(letter_grades[letter_grades.count\
    \ - 1])\n        }\n    }\n    return output", "    return grades.map {\n    \
    \    let grade = Int($0)\n        switch grade {\n        case 4:\n          \
    \  return \"A+\"\n        case 3:\n            let gpa = Double($0)\n        \
    \    switch gpa {\n            case 3.7..<4.0:\n                return \"A\"\n\
    \            case 3.3..<3.7:\n                return \"A-\"\n            case\
    \ 3.0..<3.3:\n                return \"B+\"\n            case 2.7..<3.0:\n   \
    \             return \"B\"\n            case 2.3..<2.7:\n                return\
    \ \"B-\"\n            case 2.0..<2.3:\n                return \"C+\"\n       \
    \     case 1.7..<2.0:\n                return \"C\"\n            case 1.3..<1.7:\n\
    \                return \"C-\"\n            case 1.0..<1.3:\n                return\
    \ \"D+\"\n            case 0.7..<1.0:\n                return \"D\"\n        \
    \    case 0.0..<0.7:\n                return \"D-\"\n            default:\n  \
    \              return \"E\"\n            }\n        case 2:\n            let gpa\
    \ = Double($0)\n            switch gpa {\n            case 2.7..<3.0:\n      \
    \          return \"B\"\n            case 2.3..<2.7:\n                return \"\
    B-\"\n            case 2.0..<2.3:\n                return \"C+\"\n           \
    \ case 1.7..<2.0:\n                return \"C\"\n            case 1.3..<1.7:\n\
    \                return \"C-\"\n            case 1.0..<1.3:\n                return\
    \ \"D+\"\n            case 0.7..<1.0:\n                return \"D\"\n        \
    \    case 0.0..<0.7:\n                return \"D-\"\n            default:\n  \
    \              return \"E\"\n            }\n        case 1:\n            let gpa\
    \ = Double($0)\n            switch gpa {\n            case 1.7..<2.0:\n      \
    \          return \"C\"\n            case 1.3..<1.7:\n                return \"\
    C-\"\n            case 1.0..", "    return grades.map {\n        switch $0 {\n\
    \        case 4.0:\n            return \"A+\"\n        case 3.7..<4.0:\n     \
    \       return \"A\"\n        case 3.3..<3.7:\n            return \"A-\"\n   \
    \     case 3.0..<3.3:\n            return \"B+\"\n        case 2.7..<3.0:\n  \
    \          return \"B\"\n        case 2.3..<2.7:\n            return \"B-\"\n\
    \        case 2.0..<2.3:\n            return \"C+\"\n        case 1.7..<2.0:\n\
    \            return \"C\"\n        case 1.3..<1.7:\n            return \"C-\"\n\
    \        case 1.0..<1.3:\n            return \"D+\"\n        case 0.7..<1.0:\n\
    \            return \"D\"\n        case 0.0..<0.7:\n            return \"D-\"\n\
    \        default:\n            return \"E\"\n        }\n    }", "    let letterGrade\
    \ = [\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\"\
    , \"D\", \"D-\", \"E\"]\n    let gradeLevels = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3,\
    \ 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0]\n    var letterGrades: [String] = []\n  \
    \  for i in grades {\n        for j in 0..<gradeLevels.count {\n            if\
    \ i >= gradeLevels[j] {\n                letterGrades.append(letterGrade[j])\n\
    \                break\n            }\n        }\n    }\n    return letterGrades",
  "    let grade_conversion = [4.0: \"A+\", 3.7: \"A\", 3.3: \"A-\", 3.0: \"B+\",\
    \ 2.7: \"B\", 2.3: \"B-\", 2.0: \"C+\", 1.7: \"C\", 1.3: \"C-\", 1.0: \"D+\",\
    \ 0.7: \"D\", 0.0: \"D-\", -1.0: \"E\"]\n    return grades.map { grade in\n  \
    \      return grade_conversion.filter { key, _ in grade >= key }.values.first\
    \ ?? \"E\"\n    }", "    var nl_grades: [String] = []\n    var letter_grade: String\
    \ = \"\"\n    for grade in grades {\n        switch grade {\n        case 4.0:\n\
    \            letter_grade = \"A+\"\n        case 3.7..<4.0:\n            letter_grade\
    \ = \"A\"\n        case 3.3..<3.7:\n            letter_grade = \"A-\"\n      \
    \  case 3.0..<3.3:\n            letter_grade = \"B+\"\n        case 2.7..<3.0:\n\
    \            letter_grade = \"B\"\n        case 2.3..<2.7:\n            letter_grade\
    \ = \"B-\"\n        case 2.0..<2.3:\n            letter_grade = \"C+\"\n     \
    \   case 1.7..<2.0:\n            letter_grade = \"C\"\n        case 1.3..<1.7:\n\
    \            letter_grade = \"C-\"\n        case 1.0..<1.3:\n            letter_grade\
    \ = \"D+\"\n        case 0.7..<1.0:\n            letter_grade = \"D\"\n      \
    \  case 0.0..<0.7:\n            letter_grade = \"D-\"\n        case 0.0:\n   \
    \         letter_grade = \"E\"\n        default:\n            print(\"ERROR\"\
    )\n        }\n        nl_grades.append(letter_grade)\n    }\n    return nl_grades",
  "    var letter_grades: [String] = []\n    for grade in grades {\n        switch\
    \ grade {\n        case 4.0:\n            letter_grades.append(\"A+\")\n     \
    \   case 3.7...:\n            letter_grades.append(\"A\")\n        case 3.3...:\n\
    \            letter_grades.append(\"A-\")\n        case 3.0...:\n            letter_grades.append(\"\
    B+\")\n        case 2.7...:\n            letter_grades.append(\"B\")\n       \
    \ case 2.3...:\n            letter_grades.append(\"B-\")\n        case 2.0...:\n\
    \            letter_grades.append(\"C+\")\n        case 1.7...:\n            letter_grades.append(\"\
    C\")\n        case 1.3...:\n            letter_grades.append(\"C-\")\n       \
    \ case 1.0...:\n            letter_grades.append(\"D+\")\n        case 0.7...:\n\
    \            letter_grades.append(\"D\")\n        case 0.0...:\n            letter_grades.append(\"\
    D-\")\n        default:\n            letter_grades.append(\"E\")\n        }\n\
    \    }\n    return letter_grades", "    var grading = [String]()\n    for grade\
    \ in grades {\n        switch grade {\n        case 4.0:\n            grading.append(\"\
    A+\")\n        case grade where grade > 3.7:\n            grading.append(\"A\"\
    )\n        case grade where grade > 3.3:\n            grading.append(\"A-\")\n\
    \        case grade where grade > 3.0:\n            grading.append(\"B+\")\n \
    \       case grade where grade > 2.7:\n            grading.append(\"B\")\n   \
    \     case grade where grade > 2.3:\n            grading.append(\"B-\")\n    \
    \    case grade where grade > 2.0:\n            grading.append(\"C+\")\n     \
    \   case grade where grade > 1.7:\n            grading.append(\"C\")\n       \
    \ case grade where grade > 1.3:\n            grading.append(\"C-\")\n        case\
    \ grade where grade > 1.0:\n            grading.append(\"D+\")\n        case grade\
    \ where grade > 0.7:\n            grading.append(\"D\")\n        case grade where\
    \ grade > 0.0:\n            grading.append(\"D-\")\n        default:\n       \
    \     grading.append(\"E\")\n        }\n    }\n    return grading", "    return\
    \ grades.map {\n        switch $0 {\n        case 4.0:\n            return \"\
    A+\"\n        case 3.7..<4.0:\n            return \"A\"\n        case 3.3..<3.7:\n\
    \            return \"A-\"\n        case 3.0..<3.3:\n            return \"B+\"\
    \n        case 2.7..<3.0:\n            return \"B\"\n        case 2.3..<2.7:\n\
    \            return \"B-\"\n        case 2.0..<2.3:\n            return \"C+\"\
    \n        case 1.7..<2.0:\n            return \"C\"\n        case 1.3..<1.7:\n\
    \            return \"C-\"\n        case 1.0..<1.3:\n            return \"D+\"\
    \n        case 0.7..<1.0:\n            return \"D\"\n        case 0.0..<0.7:\n\
    \            return \"D-\"\n        default:\n            return \"E\"\n     \
    \   }\n    }", "    return grades.map{\n        if $0 >= 4.0 { return \"A+\" }\n\
    \        else if $0 >= 3.7 { return \"A\" }\n        else if $0 >= 3.3 { return\
    \ \"A-\" }\n        else if $0 >= 3.0 { return \"B+\" }\n        else if $0 >=\
    \ 2.7 { return \"B\" }\n        else if $0 >= 2.3 { return \"B-\" }\n        else\
    \ if $0 >= 2.0 { return \"C+\" }\n        else if $0 >= 1.7 { return \"C\" }\n\
    \        else if $0 >= 1.3 { return \"C-\" }\n        else if $0 >= 1.0 { return\
    \ \"D+\" }\n        else if $0 >= 0.7 { return \"D\" }\n        else if $0 >=\
    \ 0.0 { return \"D-\" }\n        else { return \"E\" }\n    }", "    return grades.map\
    \ { g in\n        switch g {\n        case 4.0:\n            return \"A+\"\n \
    \       case 3.7..<4.0:\n            return \"A\"\n        case 3.3..<3.7:\n \
    \           return \"A-\"\n        case 3.0..<3.3:\n            return \"B+\"\n\
    \        case 2.7..<3.0:\n            return \"B\"\n        case 2.3..<2.7:\n\
    \            return \"B-\"\n        case 2.0..<2.3:\n            return \"C+\"\
    \n        case 1.7..<2.0:\n            return \"C\"\n        case 1.3..<1.7:\n\
    \            return \"C-\"\n        case 1.0..<1.3:\n            return \"D+\"\
    \n        case 0.7..<1.0:\n            return \"D\"\n        case 0.0..<0.7:\n\
    \            return \"D-\"\n        default:\n            return \"E\"\n     \
    \   }\n    }", "    var letter_grades: [String] = []\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            letter_grades.append(\"A+\")\n   \
    \     } else if grade >= 3.7 {\n            letter_grades.append(\"A\")\n    \
    \    } else if grade >= 3.3 {\n            letter_grades.append(\"A-\")\n    \
    \    } else if grade >= 3.0 {\n            letter_grades.append(\"B+\")\n    \
    \    } else if grade >= 2.7 {\n            letter_grades.append(\"B\")\n     \
    \   } else if grade >= 2.3 {\n            letter_grades.append(\"B-\")\n     \
    \   } else if grade >= 2.0 {\n            letter_grades.append(\"C+\")\n     \
    \   } else if grade >= 1.7 {\n            letter_grades.append(\"C\")\n      \
    \  } else if grade >= 1.3 {\n            letter_grades.append(\"C-\")\n      \
    \  } else if grade >= 1.0 {\n            letter_grades.append(\"D+\")\n      \
    \  } else if grade >= 0.7 {\n            letter_grades.append(\"D\")\n       \
    \ } else if grade >= 0.0 {\n            letter_grades.append(\"D-\")\n       \
    \ } else {\n            letter_grades.append(\"E\")\n        }\n    }\n    return\
    \ letter_grades", "    var letter_grades = [String]()\n    for grade in grades\
    \ {\n        if grade == 4.0 {\n            letter_grades.append(\"A+\")\n   \
    \     } else if grade > 3.7 {\n            letter_grades.append(\"A\")\n     \
    \   } else if grade > 3.3 {\n            letter_grades.append(\"A-\")\n      \
    \  } else if grade > 3.0 {\n            letter_grades.append(\"B+\")\n       \
    \ } else if grade > 2.7 {\n            letter_grades.append(\"B\")\n        }\
    \ else if grade > 2.3 {\n            letter_grades.append(\"B-\")\n        } else\
    \ if grade > 2.0 {\n            letter_grades.append(\"C+\")\n        } else if\
    \ grade > 1.7 {\n            letter_grades.append(\"C\")\n        } else if grade\
    \ > 1.3 {\n            letter_grades.append(\"C-\")\n        } else if grade >\
    \ 1.0 {\n            letter_grades.append(\"D+\")\n        } else if grade > 0.7\
    \ {\n            letter_grades.append(\"D\")\n        } else if grade > 0.0 {\n\
    \            letter_grades.append(\"D-\")\n        } else {\n            letter_grades.append(\"\
    E\")\n        }\n    }\n    return letter_grades", "    var letterGrades: [String]\
    \ = []\n    let letterGradesWithValues = [\n        \"A+\": 4.0,\n        \"A\"\
    : 3.7,\n        \"A-\": 3.3,\n        \"B+\": 3.0,\n        \"B\": 2.7,\n    \
    \    \"B-\": 2.3,\n        \"C+\": 2.0,\n        \"C\": 1.7,\n        \"C-\":\
    \ 1.3,\n        \"D+\": 1.0,\n        \"D\": 0.7,\n        \"D-\": 0.0,\n    \
    \    \"E\": 0.0\n    ]\n    for grade in grades {\n        for (letterGrade, gradeValue)\
    \ in letterGradesWithValues {\n            if grade >= gradeValue {\n        \
    \        letterGrades.append(letterGrade)\n                break\n           \
    \ }\n        }\n    }\n    return letterGrades", "    return grades.map { gpa\
    \ in\n        switch gpa {\n        case 0.0:\n            return \"E\"\n    \
    \    case 0.0..<0.7:\n            return \"D-\"\n        case 0.7..<1.0:\n   \
    \         return \"D\"\n        case 1.0..<1.3:\n            return \"D+\"\n \
    \       case 1.3..<1.7:\n            return \"C-\"\n        case 1.7..<2.0:\n\
    \            return \"C\"\n        case 2.0..<2.3:\n            return \"C+\"\n\
    \        case 2.3..<2.7:\n            return \"B-\"\n        case 2.7..<3.0:\n\
    \            return \"B\"\n        case 3.0..<3.3:\n            return \"B+\"\n\
    \        case 3.3..<3.7:\n            return \"A-\"\n        case 3.7..<4.0:\n\
    \            return \"A\"\n        default:\n            return \"A+\"\n     \
    \   }\n    }", "  var grade_conversion: [Double: String] = [\n    4.0: \"A+\"\
    ,\n    3.7: \"A\",\n    3.3: \"A-\",\n    3.0: \"B+\",\n    2.7: \"B\",\n    2.3:\
    \ \"B-\",\n    2.0: \"C+\",\n    1.7: \"C\",\n    1.3: \"C-\",\n    1.0: \"D+\"\
    ,\n    0.7: \"D\",\n    0.0: \"D-\",\n    -1.0: \"E\"\n  ]\n  let sorted_keys\
    \ = grade_conversion.keys.sorted().reverse()\n  var converted_grades: [String]\
    \ = []\n  for grade in grades {\n    for key in sorted_keys {\n      if grade\
    \ >= key {\n        converted_grades.append(grade_conversion[key]!)\n        break\n\
    \      }\n    }\n  }\n  return converted_grades", "    var letter_grades = [String]()\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.append(\"\
    A+\")\n        } else if grade >= 3.7 {\n            letter_grades.append(\"A\"\
    )\n        } else if grade >= 3.3 {\n            letter_grades.append(\"A-\")\n\
    \        } else if grade >= 3.0 {\n            letter_grades.append(\"B+\")\n\
    \        } else if grade >= 2.7 {\n            letter_grades.append(\"B\")\n \
    \       } else if grade >= 2.3 {\n            letter_grades.append(\"B-\")\n \
    \       } else if grade >= 2.0 {\n            letter_grades.append(\"C+\")\n \
    \       } else if grade >= 1.7 {\n            letter_grades.append(\"C\")\n  \
    \      } else if grade >= 1.3 {\n            letter_grades.append(\"C-\")\n  \
    \      } else if grade >= 1.0 {\n            letter_grades.append(\"D+\")\n  \
    \      } else if grade >= 0.7 {\n            letter_grades.append(\"D\")\n   \
    \     } else if grade >= 0.0 {\n            letter_grades.append(\"D-\")\n   \
    \     } else {\n            letter_grades.append(\"E\")\n        }\n    }\n  \
    \  return letter_grades", "  func grade(gpa: Double) -> String {\n    switch gpa\
    \ {\n    case 4.0:\n      return \"A+\"\n    case 3.7..<4.0:\n      return \"\
    A\"\n    case 3.3..<3.7:\n      return \"A-\"\n    case 3.0..<3.3:\n      return\
    \ \"B+\"\n    case 2.7..<3.0:\n      return \"B\"\n    case 2.3..<2.7:\n     \
    \ return \"B-\"\n    case 2.0..<2.3:\n      return \"C+\"\n    case 1.7..<2.0:\n\
    \      return \"C\"\n    case 1.3..<1.7:\n      return \"C-\"\n    case 1.0..<1.3:\n\
    \      return \"D+\"\n    case 0.7..<1.0:\n      return \"D\"\n    case 0.0..<0.7:\n\
    \      return \"D-\"\n    default:\n      return \"E\"\n    }\n  }\n  return grades.map(grade)",
  "    var grades_arr = [String]()\n    for i in grades {\n        if i >= 4.0 {\n\
    \            grades_arr.append(\"A+\")\n        }\n        else if i > 3.7 {\n\
    \            grades_arr.append(\"A\")\n        }\n        else if i > 3.3 {\n\
    \            grades_arr.append(\"A-\")\n        }\n        else if i > 3.0 {\n\
    \            grades_arr.append(\"B+\")\n        }\n        else if i > 2.7 {\n\
    \            grades_arr.append(\"B\")\n        }\n        else if i > 2.3 {\n\
    \            grades_arr.append(\"B-\")\n        }\n        else if i > 2.0 {\n\
    \            grades_arr.append(\"C+\")\n        }\n        else if i > 1.7 {\n\
    \            grades_arr.append(\"C\")\n        }\n        else if i > 1.3 {\n\
    \            grades_arr.append(\"C-\")\n        }\n        else if i > 1.0 {\n\
    \            grades_arr.append(\"D+\")\n        }\n        else if i > 0.7 {\n\
    \            grades_arr.append(\"D\")\n        }\n        else if i > 0.0 {\n\
    \            grades_arr.append(\"D-\")\n        }\n        else {\n          \
    \  grades_arr.append(\"E\")\n        }\n    }\n    return grades_arr", "  return\
    \ grades.map {\n    if $0 == 4.0 {\n      return \"A+\"\n    } else if $0 > 3.7\
    \ {\n      return \"A\"\n    } else if $0 > 3.3 {\n      return \"A-\"\n    }\
    \ else if $0 > 3.0 {\n      return \"B+\"\n    } else if $0 > 2.7 {\n      return\
    \ \"B\"\n    } else if $0 > 2.3 {\n      return \"B-\"\n    } else if $0 > 2.0\
    \ {\n      return \"C+\"\n    } else if $0 > 1.7 {\n      return \"C\"\n    }\
    \ else if $0 > 1.3 {\n      return \"C-\"\n    } else if $0 > 1.0 {\n      return\
    \ \"D+\"\n    } else if $0 > 0.7 {\n      return \"D\"\n    } else if $0 > 0.0\
    \ {\n      return \"D-\"\n    } else {\n      return \"E\"\n    }\n  }"]
stop_tokens:
- "\n}"

language: swift
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: [\".\",\"!\",\"?\"]).reduce(0, { ($1.hasPrefix(\"\
    I\") ? $0 + 1 : $0 ) } )\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwbpb02fk.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: [\".\",\"!\",\"?\"]).reduce(0,\
    \ { ($1.hasPrefix(\"I\") ? $0 + 1 : $0 ) } )\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824498
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let boring = String(S.filter { $0 == \"I\" })\n    return boring.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpqev7c5vl/tmpqev7c5vl.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b21b618ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b21b5e85b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b21b5e85988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b21b5e847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqev7c5vl                        0x000055996000463b <unavailable> + 5691

    5    libc.so.6                          0x00002b21b637a460 __libc_start_main +
    245

    6    tmpqev7c5vl                        0x0000559960004219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824498
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let split = S.components(separatedBy: \".!?\")\n    var num = 0\n    for\
    \ i in split {\n        if i.hasPrefix(\"I\") {\n            num += 1\n      \
    \  }\n    }\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8_e32ii6.swift:11:19: error: value of type 'String' has no member\
    \ 'components'\n    let split = S.components(separatedBy: \".!?\")\n         \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.split(separator: \".\")\n        .map({ $0.split(separator: \"?\"\
    )})\n        .flatMap({ $0 })\n        .map({ $0.split(separator: \"!\")})\n \
    \       .flatMap({ $0 })\n        .filter({ $0.starts(with: \"I\") })\n      \
    \  .count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmpopgig3pv/tmpopgig3pv.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7746924c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b774661bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b774661b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b774661a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpopgig3pv                        0x000055c4b0b9889b <unavailable> + 6299

    5    libc.so.6                          0x00002b7746b10460 __libc_start_main +
    245

    6    tmpopgig3pv                        0x000055c4b0b98479 <unavailable> + 5241

    '
  stdout: ''
  timestamp: 1659824498
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let words = S.components(separatedBy: \".?!\")\n    var count = 0\n    for\
    \ word in words {\n        if word.trimmingCharacters(in: .whitespacesAndNewlines).hasPrefix(\"\
    I\") {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg308ad6n.swift:11:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = S.components(separatedBy: \".?!\")\n         \
    \       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    return sentences.reduce(0)\
    \ {\n        var count = $0\n        if $1.first == \"I\" {\n            count\
    \ += 1\n        }\n        return count\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmprk_6gs09.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmp_qaajzmo/tmp_qaajzmo.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5ba6836c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5ba652db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5ba652d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5ba652c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_qaajzmo                        0x0000564a96fd53b2 <unavailable> + 5042

    5    libc.so.6                          0x00002b5ba6a22460 __libc_start_main +
    245

    6    tmp_qaajzmo                        0x0000564a96fd4ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824498
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".?!\")\n    var count = 0\n \
    \   for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 {\n            if words[0] == \"I\" {\n \
    \               count += 1\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxfqhm8sh.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".?!\")\n     \
    \               ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var res = 0\n    var tmp = \"\"\n    for c in S {\n        if c == \".\"\
    \ || c == \"?\" || c == \"!\" {\n            if tmp.hasPrefix(\"I\") {\n     \
    \           res += 1\n            }\n            tmp = \"\"\n        } else {\n\
    \            tmp.append(c)\n        }\n    }\n    return res\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpabx75fq7/tmpabx75fq7.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9c5eb67c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9c5e85eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9c5e85e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9c5e85d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpabx75fq7                        0x0000564dca77b56b <unavailable> + 5483

    5    libc.so.6                          0x00002b9c5ed53460 __libc_start_main +
    245

    6    tmpabx75fq7                        0x0000564dca77b149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824498
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var a = S.components(separatedBy: \".\")\n    var b = S.components(separatedBy:\
    \ \"?\")\n    var c = S.components(separatedBy: \"!\")\n    var count = 0\n  \
    \  for i in a {\n        if i.hasPrefix(\"I\") {\n            count += 1\n   \
    \     }\n    }\n    for i in b {\n        if i.hasPrefix(\"I\") {\n          \
    \  count += 1\n        }\n    }\n    for i in c {\n        if i.hasPrefix(\"I\"\
    ) {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp9b5d5lui.swift:11:15: error: value of type 'String' has no member\
    \ 'components'\n    var a = S.components(separatedBy: \".\")\n            ~ ^~~~~~~~~~\n\
    /tmp/tmp9b5d5lui.swift:12:15: error: value of type 'String' has no member 'components'\n\
    \    var b = S.components(separatedBy: \"?\")\n            ~ ^~~~~~~~~~\n/tmp/tmp9b5d5lui.swift:13:15:\
    \ error: value of type 'String' has no member 'components'\n    var c = S.components(separatedBy:\
    \ \"!\")\n            ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.split(separator: \".\").reduce(0) { (r, s) -> Int in\n        let\
    \ w = s.split(separator: \" \")\n        return r + (w.count > 0 && w[0] == \"\
    I\" ? 1 : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824498
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.split(separator: \".\").filter { $0.split(separator: \" \").first\
    \ == \"I\" }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824498
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let S = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var count =\
    \ 0\n    for i in S {\n        if i.prefix(1) == \"I\" {\n            count +=\
    \ 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxmy00qbv.swift:11:15: error: value of type 'String' has no member\
    \ 'components'\n    let S = S.components(separatedBy: [\".\", \"?\", \"!\"])\n\
    \            ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    // your code here\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: '/tmp/tmp1ewbjsj1.swift:12:1: error: missing return in global function expected
    to return ''Int''

    }

    ^

    '
  stdout: ''
  timestamp: 1659824497
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.split(separator: \"!\").joined(separator: \"!\").split(separator:\
    \ \".\").joined(separator: \".\").split(separator: \"?\").joined(separator: \"\
    ?\").split(separator: \" \").filter({ $0 == \"I\" }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpf88sv52w/tmpf88sv52w.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afabc381c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afabc078b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afabc078988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afabc0777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf88sv52w                        0x000055dd7c876a28 <unavailable> + 6696

    5    libc.so.6                          0x00002afabc56d460 __libc_start_main +
    245

    6    tmpf88sv52w                        0x000055dd7c876329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659824498
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \  let split = S.split(separator: \".\").map { String($0) }\n  return split.map(is_bored_sentence).reduce(0,\
    \ +)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello world\")\
    \ == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"\
    I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S: \"\
    I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpo6ypydmn.swift:12:20: error: cannot find 'is_bored_sentence' in\
    \ scope\n  return split.map(is_bored_sentence).reduce(0, +)\n                \
    \   ^~~~~~~~~~~~~~~~~\n/tmp/tmpo6ypydmn.swift:12:20: error: converting non-escaping\
    \ value to '(String) throws -> Int' may allow it to escape\n  return split.map(is_bored_sentence).reduce(0,\
    \ +)\n                   ^\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var count = 0\n    let characters = Array(S.characters)\n    var string =\
    \ \"\"\n    for i in 0..<characters.count {\n        if characters[i] == \".\"\
    \ || characters[i] == \"?\" || characters[i] == \"!\" {\n            let sentence\
    \ = String(string.characters.dropFirst())\n            if sentence.hasPrefix(\"\
    I\") {\n                count += 1\n            }\n            string = \"\"\n\
    \        } else {\n            string.append(characters[i])\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_dvnmwck.swift:12:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    let characters = Array(S.characters)\n            \
    \                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmp_dvnmwck.swift:16:42: error: 'characters' is unavailable: Please\
    \ use String directly\n            let sentence = String(string.characters.dropFirst())\n\
    \                                         ^~~~~~~~~~\nSwift.String:5:16: note:\
    \ 'characters' was obsoleted in Swift 5.0\n    public var characters: String {\
    \ get set }\n               ^\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let s = S.trimmingCharacters(in: .whitespacesAndNewlines)\n    let sArr =\
    \ s.components(separatedBy: \".\")\n    var ret: Int = 0\n    for s in sArr {\n\
    \        if s.starts(with: \"I\") {\n            ret += 1\n        }\n    }\n\
    \    return ret\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp499jc49u.swift:11:15: error: value of type 'String' has no member\
    \ 'trimmingCharacters'\n    let s = S.trimmingCharacters(in: .whitespacesAndNewlines)\n\
    \            ~ ^~~~~~~~~~~~~~~~~~\n/tmp/tmp499jc49u.swift:11:39: error: cannot\
    \ infer contextual base in reference to member 'whitespacesAndNewlines'\n    let\
    \ s = S.trimmingCharacters(in: .whitespacesAndNewlines)\n                    \
    \                 ~^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    \n    let sentences = S.components(separatedBy: \".\")\n    var boredoms\
    \ = 0\n    \n    for sentence in sentences {\n        if sentence.count > 0 {\n\
    \            let firstLetter = sentence.prefix(1)\n            if firstLetter\
    \ == \"I\" {\n                boredoms += 1\n            }\n        }\n    }\n\
    \    \n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmps3_4wlt1.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824497
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    // Enter your code here\n    var sentence = 0\n    var capital = 0\n    var\
    \ iterator = S.makeIterator()\n    while let char = iterator.next() {\n      \
    \  if (char == \"I\") {\n            capital += 1\n        }\n        if (char\
    \ == \".\" || char == \"?\" || char == \"!\") {\n            sentence += 1\n \
    \       }\n    }\n    if (capital == 0) {\n        return 0\n    }\n    if (capital\
    \ > sentence) {\n        return sentence\n    }\n    return capital\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpciz46k34/tmpciz46k34.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba32eff2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba32ece9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba32ece9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba32ece87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpciz46k34                        0x00005654353d34bb <unavailable> + 5307

    5    libc.so.6                          0x00002ba32f1de460 __libc_start_main +
    245

    6    tmpciz46k34                        0x00005654353d3099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824498

language: swift
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // your code\n    return\
    \ n % 2 == 0 && n % 4 != 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpnlmk13r4/tmpnlmk13r4.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b25eeb2bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b25ee822b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b25ee822988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b25ee8217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnlmk13r4                        0x00005630cf38b2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b25eed17460 __libc_start_main +
    245

    6    tmpnlmk13r4                        0x00005630cf38aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    let maxN = n / 4\n    for i in 1..<maxN + 1 {\n        let maxJ = n / 3\n\
    \        for j in 1..<maxJ + 1 {\n            let maxK = n / 2\n            for\
    \ k in 1..<maxK + 1 {\n                let maxL = n\n                for l in\
    \ 1..<maxL + 1 {\n                    if i + j + k + l == n {\n              \
    \          result = true\n                    }\n                }\n         \
    \   }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpkrqemowt/tmpkrqemowt.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab237abbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2377b2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2377b2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2377b17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkrqemowt                        0x00005590b6687333 <unavailable> + 4915

    5    libc.so.6                          0x00002ab237ca7460 __libc_start_main +
    245

    6    tmpkrqemowt                        0x00005590b6686fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let evenArr = Array(1...n/2).filter\
    \ { $0 % 2 == 0 }\n    for i in evenArr {\n        for j in evenArr {\n      \
    \      for k in evenArr {\n                for l in evenArr {\n              \
    \      if i + j + k + l == n {\n                        return true\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820572
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 8 {\n        return true\n    }\n    if\
    \ n < 8 {\n        return false\n    }\n    return is_equal_to_sum_even(n: n -\
    \ 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n: 4) ==\
    \ false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 1
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let fourZeros = [0, 0,\
    \ 0, 0]\n    return solve(n: n, zeros: fourZeros, sum: 0)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: SyntaxError
  stderr: "/tmp/tmp5tp13as4.swift:9:12: error: cannot find 'solve' in scope\n    return\
    \ solve(n: n, zeros: fourZeros, sum: 0)\n           ^~~~~\n"
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n % 2 == 0 &&\
    \ n >= 8 && n <= 40 && n % 4 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp3vnmzeqd/tmp3vnmzeqd.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae28e863c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae28e55ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae28e55a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae28e5597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3vnmzeqd                        0x00005579554723a1 <unavailable> + 5025

    5    libc.so.6                          0x00002ae28ea4f460 __libc_start_main +
    245

    6    tmp3vnmzeqd                        0x0000557955471ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n\tfor i in 1..<n-5 {\n\t\t\
    for j in 1..<n-4 {\n\t\t\tfor k in 1..<n-3 {\n\t\t\t\tfor p in 1..<n-2 {\n\t\t\
    \t\t\tif i+j+k+p == n {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'Swift/Range.swift:743: Fatal error: Range requires lowerBound <= upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d461f1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d45ee8561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2d45ee8286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2d45ee813c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2d45ee7bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpjzlvi2p9                        0x000055f3b9b8c7f4 <unavailable> + 6132

    6    tmpjzlvi2p9                        0x000055f3b9b8c2cb <unavailable> + 4811

    7    libc.so.6                          0x00002b2d463dd460 __libc_start_main +
    245

    8    tmpjzlvi2p9                        0x000055f3b9b8bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var array = [0, 0, 0,\
    \ 0]\n    for i in 0..<n / 2 {\n        array[0] = i\n        for j in i..<n /\
    \ 2 {\n            array[1] = j\n            for k in j..<n / 2 {\n          \
    \      array[2] = k\n                for l in k..<n / 2 {\n                  \
    \  array[3] = l\n                    if array.reduce(0, +) == n {\n          \
    \              return true\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpwpm4i96l/tmpwpm4i96l.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8a11bbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8a118b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8a118b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8a118b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwpm4i96l                        0x0000557af0768503 <unavailable> + 5379

    5    libc.so.6                          0x00002b8a11dab460 __libc_start_main +
    245

    6    tmpwpm4i96l                        0x0000557af07681b9 <unavailable> + 4537

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // Write your code here\n\
    \    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n \
    \   var f = 0\n    for a in 0...n/2 {\n        for b in 0...n/2 {\n          \
    \  for c in 0...n/2 {\n                for d in 0...n/2 {\n                  \
    \  for e in 0...n/2 {\n                        for f in 0...n/2 {\n          \
    \                  if a+b+c+d+e+f == n && (a%2==0) && (b%2==0) && (c%2==0) &&\
    \ (d%2==0) && (e%2==0) && (f%2==0) {\n                                return true\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return false\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpgcukgi1w/tmpgcukgi1w.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3fd5695c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3fd538cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3fd538c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3fd538b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcukgi1w                        0x00005583ecab2333 <unavailable> + 4915

    5    libc.so.6                          0x00002b3fd5881460 __libc_start_main +
    245

    6    tmpgcukgi1w                        0x00005583ecab1fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    guard n % 2 == 0 else\
    \ { return false }\n    let a = n / 4\n    let b = n / 2\n    let c = n / 2\n\
    \    let d = n / 2\n    return (a + b + c + d) == n\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpg0k1qcnd/tmpg0k1qcnd.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af8b9d0ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af8b9a05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af8b9a05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8b9a047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg0k1qcnd                        0x00005576dd65232d <unavailable> + 4909

    5    libc.so.6                          0x00002af8b9efa460 __libc_start_main +
    245

    6    tmpg0k1qcnd                        0x00005576dd651ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n  return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpjmwgg8hb/tmpjmwgg8hb.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13e1d7dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13e1a74b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13e1a74988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13e1a737b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmwgg8hb                        0x0000558e33bc129d <unavailable> + 4765

    5    libc.so.6                          0x00002b13e1f69460 __libc_start_main +
    245

    6    tmpjmwgg8hb                        0x0000558e33bc0e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n < 8 { return false\
    \ }\n    return n % 2 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n\treturn false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp5licqc_n/tmp5licqc_n.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4e24475c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4e2416cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4e2416c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4e2416b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5licqc_n                        0x00005566329a929d <unavailable> + 4765

    5    libc.so.6                          0x00002b4e24661460 __libc_start_main +
    245

    6    tmp5licqc_n                        0x00005566329a8e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var even_numbers = [Int]()\n    if n % 2 == 0 {\n        for i in 1...n/2\
    \ {\n            if i % 2 == 0 {\n                even_numbers.append(i)\n   \
    \         }\n        }\n        for i in 0..<even_numbers.count {\n          \
    \  for j in i..<even_numbers.count {\n                for k in j..<even_numbers.count\
    \ {\n                    for l in k..<even_numbers.count {\n                 \
    \       if even_numbers[i] + even_numbers[j] + even_numbers[k] + even_numbers[l]\
    \ == n {\n                            result = true\n                        }\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n\tif n % 2 != 0 {\n\t\treturn\
    \ false\n\t}\n\t\n\tvar res = false\n\tvar max = n / 2\n\tvar sum = 0\n\tfor i\
    \ in 1...max {\n\t\tsum += i * 2\n\t\tif sum == n {\n\t\t\tres = true\n\t\t\t\
    break\n\t\t}\n\t}\n\treturn res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpzkby8b9b/tmpzkby8b9b.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af41571ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af415411b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af415411988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af4154107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzkby8b9b                        0x00005650caa123a9 <unavailable> + 5033

    5    libc.so.6                          0x00002af415906460 __libc_start_main +
    245

    6    tmpzkby8b9b                        0x00005650caa11fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820572
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474

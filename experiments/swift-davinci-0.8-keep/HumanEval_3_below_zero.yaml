name: HumanEval_3_below_zero
language: swift
prompt: "\n/// You're given a list of deposit and withdrawal operations on a bank\
  \ account that starts with\n/// zero balance. Your task is to detect if at any point\
  \ the balance of account fallls below zero, and\n/// at that point function should\
  \ return True. Otherwise it should return False.\n/// >>> below_zero([1, 2, 3])\n\
  /// False\n/// >>> below_zero([1, 2, -4, 5])\n/// True\nfunc below_zero(operations:\
  \ [Int]) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(below_zero(operations: [] as [Int]) == false)\n\
  assert(below_zero(operations: [1, 2, -3, 1, 2, -3]) == false)\nassert(below_zero(operations:\
  \ [1, 2, -4, 5, 6]) == true)\nassert(below_zero(operations: [1, -1, 2, -2, 5, -5,\
  \ 4, -4]) == false)\nassert(below_zero(operations: [1, -1, 2, -2, 5, -5, 4, -5])\
  \ == true)\nassert(below_zero(operations: [1, -2, 2, -2, 5, -5, 4, -4]) == true)"
completions: ["    var balance = 0\n    for op in operations {\n        balance +=\
    \ op\n        if balance < 0 {\n            return true\n        }\n    }\n  \
    \  return false", "    var total = 0\n    for o in operations {\n        total\
    \ += o\n        if total < 0 {\n            return true\n        }\n    }\n  \
    \  return false", "    var sum = 0\n    for op in operations {\n        sum +=\
    \ op\n        if sum < 0 {\n            return true\n        }\n    }\n    return\
    \ false", "    var balance = 0\n    for operation in operations {\n        balance\
    \ += operation\n        if balance < 0 {\n            return true\n        }\n\
    \    }\n    return false", '    return operations.reduce(0, combine: +) < 0',
  "    let sum = operations.reduce(0, +)\n    return sum < 0", '    return false',
  "    var sum = 0\n    for num in operations {\n        sum += num\n        if sum\
    \ < 0 {\n            return true\n        }\n    }\n    return false", "    var\
    \ sum = 0\n    for op in operations {\n        sum += op\n        if sum < 0 {\n\
    \            return true\n        }\n    }\n    return false", "    var balance\
    \ = 0\n    for operation in operations {\n        balance += operation\n     \
    \   if balance < 0 {\n            return true\n        }\n    }\n    return false",
  "    var balance = 0\n    for operation in operations {\n        balance += operation\n\
    \        if balance < 0 {\n            return true\n        }\n    }\n    return\
    \ false", "    var balance = 0\n    for operation in operations {\n        balance\
    \ += operation\n        if balance < 0 {\n            return true\n        }\n\
    \    }\n    return false", "    var balance = 0\n    for operation in operations\
    \ {\n        balance += operation\n        if balance < 0 {\n            return\
    \ true\n        }\n    }\n    return false", '    return operations.reduce(0,
    { $0 + $1 }) < 0', "    var deposit = 0\n    for op in operations {\n        deposit\
    \ += op\n        if deposit < 0 {\n            return true\n        }\n    }\n\
    \    return false", "    var balance = 0\n    for operation in operations {\n\
    \        balance += operation\n        if balance < 0 {\n            return true\n\
    \        }\n    }\n    return false", "    var balance = 0\n    for operation\
    \ in operations {\n        balance += operation\n        if balance < 0 {\n  \
    \          return true\n        }\n    }\n    return false", "    var balance\
    \ = 0\n    for operation in operations {\n        balance += operation\n     \
    \   if balance < 0 {\n            return true\n        }\n    }\n    return false",
  "    var balance = 0\n    for i in operations {\n        balance += i\n        if\
    \ balance < 0 {\n            return true\n        }\n    }\n    return false",
  "    var balance = 0\n    for operation in operations {\n        balance += operation\n\
    \        if balance < 0 {\n            return true\n        }\n    }\n    return\
    \ false"]
stop_tokens:
- "\n}"

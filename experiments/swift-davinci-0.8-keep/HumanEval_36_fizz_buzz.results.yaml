language: swift
name: HumanEval_36_fizz_buzz
results:
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp2ejhgm_0/tmp2ejhgm_0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61076b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61073b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61073b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61073af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ejhgm_0                        0x00005595463a5233 <unavailable> + 4659

    5    libc.so.6                          0x00002b61078a5460 __libc_start_main +
    245

    6    tmp2ejhgm_0                        0x00005595463a4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013817
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 == 0 || i\
    \ % 13 == 0 {\n            var integer = i\n            while integer > 0 {\n\
    \                if integer % 10 == 7 {\n                    count += 1\n    \
    \            }\n                integer /= 10\n            }\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    let str = String(n)\n    return str.characters.reduce(0) {\n    \
    \    let digit = Int(String($1))!\n        if digit == 7 {\n            return\
    \ $0 + 1\n        }\n        return $0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpe7g4zs_n.swift:11:16: error: 'characters' is unavailable: Please\
    \ use String directly\n    return str.characters.reduce(0) {\n               ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n  var count = 0\n  for i in 1..<n {\n    if i % 11 == 0 || i % 13 ==\
    \ 0 {\n      count += count_digit(i, 7)\n    }\n  }\n  return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp0egp2tpz.swift:13:16: error: cannot find 'count_digit' in scope\n\
    \      count += count_digit(i, 7)\n               ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp2ejhgm_0/tmp2ejhgm_0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61076b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61073b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61073b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61073af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ejhgm_0                        0x00005595463a5233 <unavailable> + 4659

    5    libc.so.6                          0x00002b61078a5460 __libc_start_main +
    245

    6    tmp2ejhgm_0                        0x00005595463a4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013817
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp2ejhgm_0/tmp2ejhgm_0.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b61076b9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b61073b0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b61073b0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b61073af7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ejhgm_0                        0x00005595463a5233 <unavailable> + 4659

    5    libc.so.6                          0x00002b61078a5460 __libc_start_main +
    245

    6    tmp2ejhgm_0                        0x00005595463a4e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013817
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for i in 1..<n {\n        if i % 11 == 0 {\n \
    \           count += count_sevens(n: i)\n        } else if i % 13 == 0 {\n   \
    \         count += count_sevens(n: i)\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpn83mejfu.swift:13:22: error: cannot find 'count_sevens' in scope\n\
    \            count += count_sevens(n: i)\n                     ^~~~~~~~~~~~\n\
    /tmp/tmpn83mejfu.swift:15:22: error: cannot find 'count_sevens' in scope\n   \
    \         count += count_sevens(n: i)\n                     ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var result = 0\n    for i in 1..<n {\n        if i % 11 == 0 || i\
    \ % 13 == 0 {\n            let j = i\n            while j > 0 {\n            \
    \    if j % 10 == 7 {\n                    result += 1\n                }\n  \
    \              j /= 10\n            }\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpkca8rk3c.swift:18:19: error: left side of mutating operator isn't\
    \ mutable: 'j' is a 'let' constant\n                j /= 10\n                ~\
    \ ^\n/tmp/tmpkca8rk3c.swift:13:13: note: change 'let' to 'var' to make it mutable\n\
    \            let j = i\n            ^~~\n            var\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for i in 1..<n {\n        if (i % 11 == 0 || i\
    \ % 13 == 0) && String(i).contains(\"7\") {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp9i6whvao/tmp9i6whvao.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac071305c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac070ffcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac070ffc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac070ffb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9i6whvao                        0x000056387b47c633 <unavailable> + 5683

    5    libc.so.6                          0x00002ac0714f1460 __libc_start_main +
    245

    6    tmp9i6whvao                        0x000056387b47c269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var ret = 0\n    for i in 1..<n {\n        if i % 11 == 0 || i %\
    \ 13 == 0 {\n            let ns = String(i)\n            for ch in ns.characters\
    \ {\n                if ch == \"7\" {\n                    ret += 1\n        \
    \        }\n            }\n        }\n    }\n    return ret\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptk1ire61.swift:14:26: error: 'characters' is unavailable: Please\
    \ use String directly\n            for ch in ns.characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var sum = 0\n    for i in 1..<n {\n        if (i % 11 == 0 || i %\
    \ 13 == 0) && i % 10 == 7 {\n            sum += 1\n        }\n        if i % 10\
    \ == 7 && (i / 10) % 10 == 7 {\n            sum += 1\n        }\n    }\n    return\
    \ sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpe4mb8bbu/tmpe4mb8bbu.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb26950c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb26647b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb26647988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb266467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe4mb8bbu                        0x0000559ba0f1642e <unavailable> + 5166

    5    libc.so.6                          0x00002afb26b3c460 __libc_start_main +
    245

    6    tmpe4mb8bbu                        0x0000559ba0f15fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014112
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var result = 0\n    for i in 1...n {\n        if (i % 11 == 0 ||\
    \ i % 13 == 0) && i % 7 == 0 {\n            result += 1\n        }\n    }\n  \
    \  return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpeab0875o/tmpeab0875o.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b28bf864c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b28bf55bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b28bf55b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b28bf55a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeab0875o                        0x000055b22f41e3b3 <unavailable> + 5043

    5    libc.so.6                          0x00002b28bfa50460 __libc_start_main +
    245

    6    tmpeab0875o                        0x000055b22f41dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var result = 0\n    for i in 1..<n {\n        if i % 11 == 0 || i\
    \ % 13 == 0 {\n            var str = \"\\(i)\"\n            for j in str.characters\
    \ {\n                if j == \"7\" {\n                    result += 1\n      \
    \          }\n            }\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp5a95czkb.swift:14:26: error: 'characters' is unavailable: Please\
    \ use String directly\n            for j in str.characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n\
    /tmp/tmp5a95czkb.swift:13:17: warning: variable 'str' was never mutated; consider\
    \ changing to 'let' constant\n            var str = \"\\(i)\"\n            ~~~\
    \ ^\n            let\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var s = 0\n    for i in 1..<n {\n        let l = \"\\(i)\".characters.map\
    \ { String($0) }\n        if i % 11 == 0 || i % 13 == 0 {\n            for c in\
    \ l {\n                if c == \"7\" {\n                    s += 1\n         \
    \       }\n            }\n        }\n    }\n    return s\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp1663up2c.swift:12:24: error: 'characters' is unavailable: Please\
    \ use String directly\n        let l = \"\\(i)\".characters.map { String($0) }\n\
    \                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was\
    \ obsoleted in Swift 5.0\n    public var characters: String { get set }\n    \
    \           ^\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    if n <= 6 {\n        return 0\n    } else if n < 11 {\n        return\
    \ 1\n    } else if n == 11 {\n        return 1\n    } else if n < 13 {\n     \
    \   return 2\n    } else if n == 13 {\n        return 2\n    } else if n < 18\
    \ {\n        return 3\n    } else if n < 22 {\n        return 4\n    } else if\
    \ n < 26 {\n        return 5\n    } else if n < 28 {\n        return 6\n    }\
    \ else if n < 29 {\n        return 7\n    } else if n < 31 {\n        return 8\n\
    \    } else if n < 33 {\n        return 9\n    } else if n < 34 {\n        return\
    \ 10\n    } else if n < 36 {\n        return 11\n    } else if n < 39 {\n    \
    \    return 12\n    } else if n < 42 {\n        return 13\n    } else if n < 44\
    \ {\n        return 14\n    } else if n < 45 {\n        return 15\n    } else\
    \ if n < 47 {\n        return 16\n    } else if n < 48 {\n        return 17\n\
    \    } else if n < 50 {\n        return 18\n    } else if n < 51 {\n        return\
    \ 19\n    } else if n < 53 {\n        return 20\n    } else if n < 54 {\n    \
    \    return 21\n    } else if n < 56 {\n        return 22\n    } else if n < 58\
    \ {\n        return 23\n    } else if n < 59 {\n        return 24\n    } else\
    \ if n < 61 {\n        return 25\n    } else if n < 62 {\n        return 26\n\
    \    } else if n < 64 {\n        return 27\n    } else if n < 66 {\n        return\
    \ 28\n    } else if n < 67 {\n        return 29\n    } else if n < 69 {\n    \
    \    return 30\n    } else if n < 71 {\n        return 31\n    } else if n < 72\
    \ {\n        return 32\n    } else if n < 74 {\n        return 33\n    } else\
    \ if n < 75 {\n        return 34\n    } else if n < 77 {\n        return 35\n\
    \    } else if n < 78 {\n        return 36\n    } else if n <\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: '/tmp/tmp8ihbkfh_.swift:89:1: error: expected expression after operator

    }

    ^

    '
  stdout: ''
  timestamp: 1660014112
- exit_code: 0
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count = 0\n    for i in 1..<n {\n        let i_str = String(i)\n\
    \        if i % 11 == 0 || i % 13 == 0 {\n            for c in i_str {\n     \
    \           if c == \"7\" {\n                    count += 1\n                }\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    \n    var total = 0\n    \n    for i in 1...n-1 {\n        if (i\
    \ % 11 == 0 || i % 13 == 0) && i.toString().contains(\"7\") {\n            total++\n\
    \        }\n    }\n    \n    return total\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpymi8onow.swift:14:46: error: value of type 'Int' has no member\
    \ 'toString'\n        if (i % 11 == 0 || i % 13 == 0) && i.toString().contains(\"\
    7\") {\n                                           ~ ^~~~~~~~\n/tmp/tmpymi8onow.swift:15:18:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  total++\n                 ^~\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var num = 0\n    for i in 1..<n {\n        if i % 11 == 0 || i %\
    \ 13 == 0 {\n            num += num_sevens(n: i)\n        }\n    }\n    return\
    \ num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpqs5weuoh.swift:13:20: error: cannot find 'num_sevens' in scope\n\
    \            num += num_sevens(n: i)\n                   ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    var count: Int = 0\n    for i in 0..<n {\n        if i % 11 == 0\
    \ || i % 13 == 0 {\n            count += count_sevens(n: i)\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmphc918wlt.swift:13:22: error: cannot find 'count_sevens' in scope\n\
    \            count += count_sevens(n: i)\n                     ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014112
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(50)\n/// 0\n/// >>>\
    \ fizz_buzz(78)\n/// 2\n/// >>> fizz_buzz(79)\n/// 3\nfunc fizz_buzz(n: Int) ->\
    \ Int {\n    // your code here\n    var sum = 0\n    for i in 1...n {\n      \
    \  if i % 11 == 0 || i % 13 == 0 {\n            let temp = String(i)\n       \
    \     for c in temp {\n                if c == \"7\" {\n                    sum\
    \ += 1\n                }\n            }\n        }\n    }\n    return sum\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp2mx15932/tmp2mx15932.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1147b17c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b114780eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b114780e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b114780d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2mx15932                        0x0000558069afd623 <unavailable> + 5667

    5    libc.so.6                          0x00002b1147d03460 __libc_start_main +
    245

    6    tmp2mx15932                        0x0000558069afd259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1660014112

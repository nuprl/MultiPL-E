name: HumanEval_105_by_length
language: swift
prompt: "\n/// Given an array of integers, sort the integers that are between 1 and\
  \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
  \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// arr = [2, 1, 1,\
  \ 4, 5, 8, 2, 3]   \n/// -> sort arr -> [1, 1, 2, 2, 3, 4, 5, 8] \n/// -> reverse\
  \ arr -> [8, 5, 4, 3, 2, 2, 1, 1]\n/// return [\"Eight\", \"Five\", \"Four\", \"\
  Three\", \"Two\", \"Two\", \"One\", \"One\"]\n/// If the array is empty, return\
  \ an empty array:\n/// arr = []\n/// return []\n/// If the array has any strange\
  \ number ignore it:\n/// arr = [1, -1 , 55] \n/// -> sort arr -> [-1, 1, 55]\n///\
  \ -> reverse arr -> [55, 1, -1]\n/// return = ['One']\nfunc by_length(arr: [Int])\
  \ -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(by_length(arr: [2, 1, 1, 4, 5, 8, 2, 3])\
  \ == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"\
  ])\nassert(by_length(arr: [] as [Int]) == [] as [String])\nassert(by_length(arr:\
  \ [1, -1, 55]) == [\"One\"])\nassert(by_length(arr: [1, -1, 3, 2]) == [\"Three\"\
  , \"Two\", \"One\"])\nassert(by_length(arr: [9, 4, 8]) == [\"Nine\", \"Eight\",\
  \ \"Four\"])"
completions: ["    var sorted_arr = [Int]()\n    for number in arr {\n        if number\
    \ < 1 || number > 9 {\n            continue\n        }\n        sorted_arr.append(number)\n\
    \    }\n    sorted_arr.sortInPlace()\n    sorted_arr.reverse()\n    var ans =\
    \ [String]()\n    for number in sorted_arr {\n        switch number {\n      \
    \  case 1:\n            ans.append(\"One\")\n        case 2:\n            ans.append(\"\
    Two\")\n        case 3:\n            ans.append(\"Three\")\n        case 4:\n\
    \            ans.append(\"Four\")\n        case 5:\n            ans.append(\"\
    Five\")\n        case 6:\n            ans.append(\"Six\")\n        case 7:\n \
    \           ans.append(\"Seven\")\n        case 8:\n            ans.append(\"\
    Eight\")\n        case 9:\n            ans.append(\"Nine\")\n        default:\n\
    \            continue\n        }\n    }\n    return ans", "    let dictionary\
    \ = [1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\", 5: \"Five\", 6: \"Six\"\
    , 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"]\n    let sorted = arr.sorted { $0 <\
    \ $1 }\n    let reversed = sorted.reversed()\n    let filtered = reversed.filter\
    \ { $0 >= 1 && $0 <= 9 }\n    let array = filtered.map { dictionary[$0] ?? \"\"\
    \ }\n    return array", "    let new_arr = arr.filter({ $0 >= 1 && $0 <= 9 }).sorted().reversed()\n\
    \    let str_arr = new_arr.map({\n        switch $0 {\n        case 1:\n     \
    \       return \"One\"\n        case 2:\n            return \"Two\"\n        case\
    \ 3:\n            return \"Three\"\n        case 4:\n            return \"Four\"\
    \n        case 5:\n            return \"Five\"\n        case 6:\n            return\
    \ \"Six\"\n        case 7:\n            return \"Seven\"\n        case 8:\n  \
    \          return \"Eight\"\n        case 9:\n            return \"Nine\"\n  \
    \      default:\n            return \"\"\n        }\n    })\n    return str_arr",
  "    var result = [String]()\n    let sorted = arr.sorted()\n    let reversed =\
    \ sorted.reversed()\n    for item in reversed {\n        switch item {\n     \
    \   case 1:\n            result.append(\"One\")\n        case 2:\n           \
    \ result.append(\"Two\")\n        case 3:\n            result.append(\"Three\"\
    )\n        case 4:\n            result.append(\"Four\")\n        case 5:\n   \
    \         result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            continue\n        }\n    }\n    return\
    \ result", "    var new_arr = Array(repeating: \"\", count: arr.count)\n    let\
    \ num_words = [\"\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\"]\n    var str = \"\"\n    for i in stride(from:\
    \ arr.count - 1, through: 0, by: -1) {\n        if arr[i] >= 1 && arr[i] <= 9\
    \ {\n            new_arr[arr.count - 1 - i] = num_words[arr[i]]\n        }\n \
    \   }\n    return new_arr", "    if arr.count == 0 {\n        return []\n    }\n\
    \    let valid = arr.filter { $0 >= 1 && $0 <= 9 }\n    let sorted = valid.sorted()\n\
    \    let reversed = sorted.reversed()\n    return reversed.map { \"\\($0)\" }",
  '    // Your code here', "    let str = [\"One\", \"Two\", \"Three\", \"Four\",\
    \ \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"]\n    var result = [String]()\n\
    \    let set = Set(arr)\n    for i in set {\n        if i >= 1 && i <= 9 {\n \
    \           result.append(str[i - 1])\n        }\n    }\n    return result.reversed()",
  "    let result = arr.sorted(by: <).filter {$0 >= 1 && $0 <= 9}.reversed().map {\
    \ number -> String in\n        switch number {\n        case 1:\n            return\
    \ \"One\"\n        case 2:\n            return \"Two\"\n        case 3:\n    \
    \        return \"Three\"\n        case 4:\n            return \"Four\"\n    \
    \    case 5:\n            return \"Five\"\n        case 6:\n            return\
    \ \"Six\"\n        case 7:\n            return \"Seven\"\n        case 8:\n  \
    \          return \"Eight\"\n        case 9:\n            return \"Nine\"\n  \
    \      default:\n            return \"\"\n        }\n    }\n    return result",
  "    var numbers : [Int] = []\n    var result : [String] = []\n    for item in arr\
    \ {\n        if (1 ... 9).contains(item) {\n            numbers.append(item)\n\
    \        }\n    }\n    numbers.sort()\n    numbers.reverse()\n    for item in\
    \ numbers {\n        switch item {\n        case 1:\n            result.append(\"\
    One\")\n        case 2:\n            result.append(\"Two\")\n        case 3:\n\
    \            result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            continue\n\
    \        }\n    }\n    return result", "    let sorted = Array(Set(arr)).sorted(by:\
    \ <)\n    let map = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\"]\n    return sorted.reversed().filter {$0 > 0\
    \ && $0 < 10}.map {map[$0 - 1]}", "    let sorted = arr.filter({ $0 > 0 && $0\
    \ < 10 }).sorted()\n    let reversed = sorted.reversed()\n    let names = reversed.map({\
    \ num in\n        switch num {\n        case 1: return \"One\"\n        case 2:\
    \ return \"Two\"\n        case 3: return \"Three\"\n        case 4: return \"\
    Four\"\n        case 5: return \"Five\"\n        case 6: return \"Six\"\n    \
    \    case 7: return \"Seven\"\n        case 8: return \"Eight\"\n        case\
    \ 9: return \"Nine\"\n        default: return \"\"\n        }\n    })\n    return\
    \ names", "  let sorted = arr.filter({$0 > 0 && $0 < 10}).sorted()\n  let reversed\
    \ = sorted.reversed()\n  let mapped = reversed.map({String($0)})\n  return mapped",
  "    let arr = arr.filter { $0 >= 1 && $0 <= 9 }.sorted(by: <).reversed()\n    let\
    \ dic = [1:\"One\", 2:\"Two\", 3:\"Three\", 4:\"Four\", 5:\"Five\", 6:\"Six\"\
    , 7:\"Seven\", 8:\"Eight\", 9:\"Nine\"]\n    var output: [String] = []\n    for\
    \ num in arr {\n        output.append(dic[num]!)\n    }\n    return output", " \
    \   var arr = arr.filter({ $0 > 0 && $0 < 10 }).sorted().reversed()\n    var dic:\
    \ [Int: String] = [1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\", 5: \"Five\"\
    , 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"]\n    for i in 0..<arr.count\
    \ {\n        arr[i] = dic[arr[i]]!\n    }\n    return arr", "    var result =\
    \ [String]()\n    let sorted = arr.sorted()\n    let reversed = sorted.reversed()\n\
    \    let filtered = reversed.filter { $0 >= 1 && $0 <= 9 }\n    for item in filtered\
    \ {\n        result.append(convert(item: item))\n    }\n    return result", '    //
    your code', "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n   \
    \ let reversed = sorted.reversed()\n    let result = reversed.map { (num) -> String\
    \ in\n        switch num {\n        case 1:\n            return \"One\"\n    \
    \    case 2:\n            return \"Two\"\n        case 3:\n            return\
    \ \"Three\"\n        case 4:\n            return \"Four\"\n        case 5:\n \
    \           return \"Five\"\n        case 6:\n            return \"Six\"\n   \
    \     case 7:\n            return \"Seven\"\n        case 8:\n            return\
    \ \"Eight\"\n        case 9:\n            return \"Nine\"\n        default:\n\
    \            return \"\"\n        }\n    }\n    return result", "    let words\
    \ = [1: \"One\", 2: \"Two\", 3: \"Three\", 4: \"Four\", 5: \"Five\", 6: \"Six\"\
    , 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"]\n    var result = [String]()\n    var\
    \ sorted = arr.filter({$0 >= 1 && $0 <= 9}).sorted(by: <)\n    sorted.reverse()\n\
    \    sorted.forEach({ result.append(words[$0]!) })\n    return result", "    var\
    \ arr_str = [String]()\n    var arr_int = [Int]()\n    for i in arr {\n      \
    \  if i >= 1 && i <= 9 {\n            arr_int.append(i)\n        }\n    }\n  \
    \  arr_int.sort(by: <)\n    arr_int.reverse()\n    for i in arr_int {\n      \
    \  switch i {\n        case 1:\n            arr_str.append(\"One\")\n        case\
    \ 2:\n            arr_str.append(\"Two\")\n        case 3:\n            arr_str.append(\"\
    Three\")\n        case 4:\n            arr_str.append(\"Four\")\n        case\
    \ 5:\n            arr_str.append(\"Five\")\n        case 6:\n            arr_str.append(\"\
    Six\")\n        case 7:\n            arr_str.append(\"Seven\")\n        case 8:\n\
    \            arr_str.append(\"Eight\")\n        case 9:\n            arr_str.append(\"\
    Nine\")\n        default:\n            break\n        }\n    }\n    return arr_str"]
stop_tokens:
- "\n}"

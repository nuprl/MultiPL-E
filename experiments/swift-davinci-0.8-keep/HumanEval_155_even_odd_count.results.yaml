language: swift
name: HumanEval_155_even_odd_count
results:
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    return (0, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvrn27lw5/tmpvrn27lw5.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a9d99ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a9d695b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a9d695988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a9d6947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvrn27lw5                        0x00005566a83f2264 <unavailable> + 4708

    5    libc.so.6                          0x00002b7a9db8a460 __libc_start_main +
    245

    6    tmpvrn27lw5                        0x00005566a83f1ec9 <unavailable> + 3785

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    return (0, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvrn27lw5/tmpvrn27lw5.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a9d99ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a9d695b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a9d695988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a9d6947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvrn27lw5                        0x00005566a83f2264 <unavailable> + 4708

    5    libc.so.6                          0x00002b7a9db8a460 __libc_start_main +
    245

    6    tmpvrn27lw5                        0x00005566a83f1ec9 <unavailable> + 3785

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var sumOfEven = 0\n    var sumOfOdd = 0\n    var tempNum = num\n    if\
    \ num < 0 {\n        tempNum = -tempNum\n    }\n    for index in String(tempNum)\
    \ {\n        if Int(String(index))! % 2 == 0 {\n            sumOfEven += 1\n \
    \       } else {\n            sumOfOdd += 1\n        }\n    }\n    return (sumOfEven,\
    \ sumOfOdd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013679
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    let t = String(num).flatMap { Int(String($0))\
    \ }\n    for i in t {\n        if i % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013679
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    let digits = String(num).map{Int(String($0))!}\n    var evenCount = 0\n\
    \    var oddCount = 0\n    for digit in digits {\n        if digit % 2 == 0 {\n\
    \            evenCount += 1\n        } else {\n            oddCount += 1\n   \
    \     }\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmp_1xtkfdd/tmp_1xtkfdd.swift:7: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b8539ca7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b853999e561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b853999e286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b853999e13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b853999dbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp_1xtkfdd                        0x00005594d8205141 <unavailable> + 8513

    6    libswiftCore.so                    0x00002b8539986820 Collection.map<A>(_:)
    + 426

    7    tmp_1xtkfdd                        0x00005594d8204dda <unavailable> + 7642

    8    tmp_1xtkfdd                        0x00005594d8204764 <unavailable> + 5988

    9    libc.so.6                          0x00002b8539e93460 __libc_start_main +
    245

    10   tmp_1xtkfdd                        0x00005594d82043b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1660013679
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var num = num\n    var even_count = 0\n    var odd_count = 0\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        even_count += 1\n        } else {\n            odd_count += 1\n     \
    \   }\n        num /= 10\n    }\n    return (even_count, odd_count)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpuxk29g96/tmpuxk29g96.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b873cedbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b873cbd2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b873cbd2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b873cbd17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuxk29g96                        0x00005600c16228ed <unavailable> + 6381

    5    libc.so.6                          0x00002b873d0c7460 __libc_start_main +
    245

    6    tmpuxk29g96                        0x00005600c1621f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013679
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    if num < 0 {\n\
    \        num = -num\n    }\n    while num > 0 {\n        let digit = num % 10\n\
    \        if digit % 2 == 0 {\n            even += 1\n        } else {\n      \
    \      odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpq4aqh0nn/tmpq4aqh0nn.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9900efc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad98fde6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad98fde6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad98fde57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq4aqh0nn                        0x000055ad10de28ed <unavailable> + 6381

    5    libc.so.6                          0x00002ad9902db460 __libc_start_main +
    245

    6    tmpq4aqh0nn                        0x000055ad10de1f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013679
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    return (0, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvrn27lw5/tmpvrn27lw5.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a9d99ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a9d695b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a9d695988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a9d6947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvrn27lw5                        0x00005566a83f2264 <unavailable> + 4708

    5    libc.so.6                          0x00002b7a9db8a460 __libc_start_main +
    245

    6    tmpvrn27lw5                        0x00005566a83f1ec9 <unavailable> + 3785

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    // CODE GOES HERE\n    var even_count = 0\n    var odd_count = 0\n  \
    \  var number = abs(num)\n    while number > 0 {\n        if number % 2 == 0 {\n\
    \            even_count += 1\n        } else {\n            odd_count += 1\n \
    \       }\n        number /= 10\n    }\n    return (even_count, odd_count)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpcsbs8rjl/tmpcsbs8rjl.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d8980ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d89501b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d89501988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d895007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcsbs8rjl                        0x0000563ad578a9cd <unavailable> + 6605

    5    libc.so.6                          0x00002b3d899f6460 __libc_start_main +
    245

    6    tmpcsbs8rjl                        0x0000563ad578a049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1660013679
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    let digits = abs(num).description.characters.map{String($0)}\n    var\
    \ evenCount = 0\n    var oddCount = 0\n    for c in digits {\n        if Int(c)!\
    \ % 2 == 0 {\n            evenCount += 1\n        } else {\n            oddCount\
    \ += 1\n        }\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpebtd2kb3.swift:7:39: error: 'characters' is unavailable: Please\
    \ use String directly\n    let digits = abs(num).description.characters.map{String($0)}\n\
    \                                      ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1660013679
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    let digits = String(num).compactMap{ Int(String($0)) }\n    let even\
    \ = digits.filter{ $0 % 2 == 0 }.count\n    let odd = digits.filter{ $0 % 2 !=\
    \ 0 }.count\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013679
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var absNum = abs(num)\n    while absNum\
    \ > 0 {\n        let digit = absNum % 10\n        if digit % 2 == 0 {\n      \
    \      even += 1\n        } else {\n            odd += 1\n        }\n        absNum\
    \ /= 10\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpjwouvsec/tmpjwouvsec.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b11fb126c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b11fae1db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b11fae1d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b11fae1c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjwouvsec                        0x000055c1fc8a19cd <unavailable> + 6605

    5    libc.so.6                          0x00002b11fb312460 __libc_start_main +
    245

    6    tmpjwouvsec                        0x000055c1fc8a1049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1660013679
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).compactMap({\
    \ Int(String($0)) }) {\n        if i % 2 == 0 {\n            even += 1\n     \
    \   } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013679
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    let numString = String(num)\n    var even = 0\n    var odd = 0\n    for\
    \ char in numString {\n        if String(char).toInt()! % 2 == 0 {\n         \
    \   even++\n        } else {\n            odd++\n        }\n    }\n    return\
    \ (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmp14bheq52.swift:11:25: error: value of type 'String' has no member\
    \ 'toInt'\n        if String(char).toInt()! % 2 == 0 {\n           ~~~~~~~~~~~~\
    \ ^~~~~\n/tmp/tmp14bheq52.swift:12:17: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            even++\n                ^~\n/tmp/tmp14bheq52.swift:14:16:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  odd++\n               ^~\n"
  stdout: ''
  timestamp: 1660013679
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    return (0, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvrn27lw5/tmpvrn27lw5.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a9d99ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a9d695b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a9d695988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a9d6947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvrn27lw5                        0x00005566a83f2264 <unavailable> + 4708

    5    libc.so.6                          0x00002b7a9db8a460 __libc_start_main +
    245

    6    tmpvrn27lw5                        0x00005566a83f1ec9 <unavailable> + 3785

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n  var evenCount = 0\n  var oddCount = 0\n  var numCopy = num\n  while numCopy\
    \ != 0 {\n    let r = numCopy % 10\n    if r % 2 == 0 {\n      evenCount += 1\n\
    \    } else {\n      oddCount += 1\n    }\n    numCopy /= 10\n  }\n  return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpbm7qnzu3/tmpbm7qnzu3.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae5eaee4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae5eabdbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae5eabdb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae5eabda7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbm7qnzu3                        0x000055852051f8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae5eb0d0460 __libc_start_main +
    245

    6    tmpbm7qnzu3                        0x000055852051ef69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013679
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var number = num\n    if\
    \ number < 0 {\n        number *= -1\n    }\n    while number > 0 {\n        let\
    \ remainder = number % 10\n        if remainder % 2 == 0 {\n            evenCount\
    \ += 1\n        } else {\n            oddCount += 1\n        }\n        number\
    \ /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvka4efc5/tmpvka4efc5.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b46cb317c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b46cb00eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b46cb00e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46cb00d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvka4efc5                        0x00005651647be8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b46cb503460 __libc_start_main +
    245

    6    tmpvka4efc5                        0x00005651647bdf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013679
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for n in String(num).compactMap({Int(String($0))})\
    \ {\n        if n % 2 == 0 {\n            evenCount += 1\n        } else {\n \
    \           oddCount += 1\n        }\n    }\n    return (evenCount, oddCount)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013679
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evens = 0\n    var odds = 0\n    for n in String(num).compactMap({\
    \ Int(String($0)) }) {\n        if n % 2 == 0 {\n            evens += 1\n    \
    \    } else {\n            odds += 1\n        }\n    }\n    return (evens, odds)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013679
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    let evens = num.magnitude.description.split(separator: \"\").filter({\
    \ Int(String($0))! % 2 == 0 }).count\n    let odds = num.magnitude.description.split(separator:\
    \ \"\").filter({ Int(String($0))! % 2 != 0 }).count\n    return (evens, odds)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013679

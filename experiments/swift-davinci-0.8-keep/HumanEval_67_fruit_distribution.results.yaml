language: swift
name: HumanEval_67_fruit_distribution
results:
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    var ans = n\n    var allFruits = s.split(separator: \" \")\n    for fruit\
    \ in allFruits {\n        if fruit.last == \"s\" {\n            fruit.removeLast()\n\
    \        }\n        guard let num = Int(fruit) else {\n            continue\n\
    \        }\n        ans -= num\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmps_67uv_g.swift:17:19: error: cannot use mutating member on immutable\
    \ value: 'fruit' is a 'let' constant\n            fruit.removeLast()\n       \
    \     ~~~~~ ^\n"
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    /// Write your code here.\n    return n\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpscism646/tmpscism646.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8dcb781c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8dcb478b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8dcb478988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8dcb4777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpscism646                        0x0000557587f59269 <unavailable> + 4713

    5    libc.so.6                          0x00002b8dcb96d460 __libc_start_main +
    245

    6    tmpscism646                        0x0000557587f58ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    var amount: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ z: Int = 0\n    for char in s.characters {\n        if char == \"a\" {\n   \
    \         x += 1\n        }\n        if char == \"r\" {\n            y += 1\n\
    \        }\n        if char == \"g\" {\n            z += 1\n        }\n    }\n\
    \    amount = n - x - y\n    return amount\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpptu857_b.swift:17:19: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in s.characters {\n                  ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    // Write Your Code Here.\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmp730xojyf/tmp730xojyf.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b364b6a9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b364b3a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b364b3a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b364b39f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp730xojyf                        0x000055575368a269 <unavailable> + 4713

    5    libc.so.6                          0x00002b364b895460 __libc_start_main +
    245

    6    tmp730xojyf                        0x0000555753689ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpoc2jab7e/tmpoc2jab7e.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaef860dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaef8304b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaef8304988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaef83037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoc2jab7e                        0x000056471702e269 <unavailable> + 4713

    5    libc.so.6                          0x00002aaef87f9460 __libc_start_main +
    245

    6    tmpoc2jab7e                        0x000056471702dee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824691
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n\t//Write your code here\n\treturn 0\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpqp_38iej/tmpqp_38iej.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba5f6f61c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba5f6c58b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba5f6c58988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba5f6c577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqp_38iej                        0x00005573cedd9269 <unavailable> + 4713

    5    libc.so.6                          0x00002ba5f714d460 __libc_start_main +
    245

    6    tmpqp_38iej                        0x00005573cedd8ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    let x = s.split(separator: \" \")\n    let y = Int(x[0])!\n    let z\
    \ = Int(x[2])!\n    return n - y - z\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0\
    \ apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpk0mo150x/tmpk0mo150x.swift:15: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002ac7ccb35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac7cc82c561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ac7cc82c286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ac7cc82c13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ac7cc82bbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpk0mo150x                        0x0000560856bf8eaa <unavailable> + 7850

    6    tmpk0mo150x                        0x0000560856bf85fb <unavailable> + 5627

    7    libc.so.6                          0x00002ac7ccd21460 __libc_start_main +
    245

    8    tmpk0mo150x                        0x0000560856bf82f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n  return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpieaxysps/tmpieaxysps.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c3c0ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c3901b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c3901988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c39007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpieaxysps                        0x000055b8438fc269 <unavailable> + 4713

    5    libc.so.6                          0x00002b13c3df6460 __libc_start_main +
    245

    6    tmpieaxysps                        0x000055b8438fbee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    let arr = s.components(separatedBy: \" \")\n    let apple = Int(arr[0])!\n\
    \    let orange = Int(arr[2])!\n    let fruits = n - apple - orange\n    return\
    \ fruits\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmpcnpdzrgi.swift:13:17: error: value of type 'String' has no member\
    \ 'components'\n    let arr = s.components(separatedBy: \" \")\n             \
    \ ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpoc2jab7e/tmpoc2jab7e.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaef860dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaef8304b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaef8304988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaef83037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoc2jab7e                        0x000056471702e269 <unavailable> + 4713

    5    libc.so.6                          0x00002aaef87f9460 __libc_start_main +
    245

    6    tmpoc2jab7e                        0x000056471702dee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824691
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    //Write your solution here\n    var myString = s\n    var result = n\n\
    \    var numberString = \"\"\n    var finalNumber = 0\n    while myString.count\
    \ > 0 {\n        let character = myString.first\n        if character == \" \"\
    \ {\n            if finalNumber == 0 {\n                result -= Int(numberString)!\n\
    \            }\n            finalNumber += 1\n            numberString = \"\"\n\
    \        } else {\n            numberString.append(character!)\n        }\n  \
    \      myString.removeFirst()\n    }\n    result -= Int(numberString)!\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmp_wndkvao/tmp_wndkvao.swift:31: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b8ab0440c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ab0137561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b8ab0137286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b8ab013713c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b8ab0136bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp_wndkvao                        0x000055c8593ad257 <unavailable> + 8791

    6    tmp_wndkvao                        0x000055c8593ac63b <unavailable> + 5691

    7    libc.so.6                          0x00002b8ab062c460 __libc_start_main +
    245

    8    tmp_wndkvao                        0x000055c8593ac339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    // write code here\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19) == 8)\n\
    assert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s:\
    \ \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples\
    \ and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3\
    \ oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\"\
    , n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120)\
    \ == 19)"
  status: Exception
  stderr: 'tmpgw2yumm1/tmpgw2yumm1.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af51c625c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af51c31cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af51c31c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af51c31b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgw2yumm1                        0x000055d86311e269 <unavailable> + 4713

    5    libc.so.6                          0x00002af51c811460 __libc_start_main +
    245

    6    tmpgw2yumm1                        0x000055d86311dee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    var basket: [Int] = []\n    var indices = s.indices\n    var first =\
    \ indices.startIndex\n    for index in indices {\n        if s[index] == \" \"\
    \ {\n            basket.append(Int(s[first..<index])!)\n            first = index\n\
    \        }\n    }\n    print(basket)\n    return n - basket[0] - basket[1]\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpvkdm9yfu/tmpvkdm9yfu.swift:18: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b4965e95c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4965b8c561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b4965b8c286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b4965b8c13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b4965b8bbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpvkdm9yfu                        0x000056198634f508 <unavailable> + 9480

    6    tmpvkdm9yfu                        0x000056198634eadb <unavailable> + 6875

    7    libc.so.6                          0x00002b4966081460 __libc_start_main +
    245

    8    tmpvkdm9yfu                        0x000056198634e7d9 <unavailable> + 6105

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    let numbers = s.components(separatedBy: \"and\")\n    let apples = Int(numbers[0].trimmingCharacters(in:\
    \ CharacterSet.whitespaces))!\n    let oranges = Int(numbers[1].trimmingCharacters(in:\
    \ CharacterSet.whitespaces))!\n    return n - apples - oranges\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmp8di0lil8.swift:13:21: error: value of type 'String' has no member\
    \ 'components'\n    let numbers = s.components(separatedBy: \"and\")\n       \
    \           ~ ^~~~~~~~~~\n/tmp/tmp8di0lil8.swift:14:56: error: cannot find 'CharacterSet'\
    \ in scope\n    let apples = Int(numbers[0].trimmingCharacters(in: CharacterSet.whitespaces))!\n\
    \                                                       ^~~~~~~~~~~~\n/tmp/tmp8di0lil8.swift:15:57:\
    \ error: cannot find 'CharacterSet' in scope\n    let oranges = Int(numbers[1].trimmingCharacters(in:\
    \ CharacterSet.whitespaces))!\n                                              \
    \          ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    let sArr = s.split(separator: \" \")\n    let appleCount = Int(sArr[0])\
    \ ?? 0\n    let orangeCount = Int(sArr[2]) ?? 0\n    return n - appleCount - orangeCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\"\
    , n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21)\
    \ == 10)\nassert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\n\
    assert(fruit_distribution(s: \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"2 apples and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"\
    2 apples and 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples\
    \ and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpwsykt0of/tmpwsykt0of.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae609e7ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae609b71b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae609b71988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae609b707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwsykt0of                        0x000055c97e85e5e9 <unavailable> + 5609

    5    libc.so.6                          0x00002ae60a066460 __libc_start_main +
    245

    6    tmpwsykt0of                        0x000055c97e85e269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n  //TODO: Write your solution here\n  return 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmpcuhyovm_/tmpcuhyovm_.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc6772bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc67422b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc67422988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc674217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcuhyovm_                        0x000055d78210c269 <unavailable> + 4713

    5    libc.so.6                          0x00002afc67917460 __libc_start_main +
    245

    6    tmpcuhyovm_                        0x000055d78210bee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    // write your code here\n    \n    \n    return 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: Exception
  stderr: 'tmp5wl_t_x0/tmp5wl_t_x0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b608c30cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b608c003b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b608c003988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b608c0027b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5wl_t_x0                        0x000055747ce16269 <unavailable> + 4713

    5    libc.so.6                          0x00002b608c4f8460 __libc_start_main +
    245

    6    tmp5wl_t_x0                        0x000055747ce15ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824791
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    let numberString = s.components(separatedBy: \" \").filter({!$0.contains(\"\
    and\")}).map({Int($0)!})\n    let apples = numberString[0]\n    let oranges =\
    \ numberString[1]\n    return n - apples - oranges\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmptiplysw8.swift:13:26: error: value of type 'String' has no member\
    \ 'components'\n    let numberString = s.components(separatedBy: \" \").filter({!$0.contains(\"\
    and\")}).map({Int($0)!})\n                       ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824791
- exit_code: -4
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fruit_distribution(s:\
    \ \"5 apples and 6 oranges\", n: 19) == 8)\nassert(fruit_distribution(s: \"5 apples\
    \ and 6 oranges\", n: 21) == 10)\nassert(fruit_distribution(s: \"0 apples and\
    \ 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"1 apples and 0 oranges\"\
    , n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 100)\
    \ == 95)\nassert(fruit_distribution(s: \"2 apples and 3 oranges\", n: 5) == 0)\n\
    assert(fruit_distribution(s: \"1 apples and 100 oranges\", n: 120) == 19)"
  status: Exception
  stderr: 'tmpoc2jab7e/tmpoc2jab7e.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaef860dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaef8304b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaef8304988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaef83037b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoc2jab7e                        0x000056471702e269 <unavailable> + 4713

    5    libc.so.6                          0x00002aaef87f9460 __libc_start_main +
    245

    6    tmpoc2jab7e                        0x000056471702dee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824691
- exit_code: 1
  program: "\n/// In this task, you will be given a string that represents a number\
    \ of apples and oranges \n/// that are distributed in a basket of fruit this basket\
    \ contains \n/// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n/// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n/// in the basket return the number of the\
    \ mango fruits in the basket.\n/// for examble:\n/// fruit_distribution(\"5 apples\
    \ and 6 oranges\", 19) ->19 - 5 - 6 = 8\n/// fruit_distribution(\"0 apples and\
    \ 1 oranges\",3) -> 3 - 0 - 1 = 2\n/// fruit_distribution(\"2 apples and 3 oranges\"\
    , 100) -> 100 - 2 - 3 = 95\n/// fruit_distribution(\"100 apples and 1 oranges\"\
    ,120) -> 120 - 100 - 1 = 19\nfunc fruit_distribution(s: String, n: Int) -> Int\
    \ {\n    //your code here\n    var total = n\n    let sub = s.components(separatedBy:\
    \ \" and \")\n    let apple = Int(sub[0])!\n    let orange = Int(sub[1])!\n  \
    \  total -= apple\n    total -= orange\n    return total\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 19)\
    \ == 8)\nassert(fruit_distribution(s: \"5 apples and 6 oranges\", n: 21) == 10)\n\
    assert(fruit_distribution(s: \"0 apples and 1 oranges\", n: 3) == 2)\nassert(fruit_distribution(s:\
    \ \"1 apples and 0 oranges\", n: 3) == 2)\nassert(fruit_distribution(s: \"2 apples\
    \ and 3 oranges\", n: 100) == 95)\nassert(fruit_distribution(s: \"2 apples and\
    \ 3 oranges\", n: 5) == 0)\nassert(fruit_distribution(s: \"1 apples and 100 oranges\"\
    , n: 120) == 19)"
  status: SyntaxError
  stderr: "/tmp/tmp3u_w1zgb.swift:15:17: error: value of type 'String' has no member\
    \ 'components'\n    let sub = s.components(separatedBy: \" and \")\n         \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824791

language: swift
name: HumanEval_34_unique
results:
- exit_code: -4
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    return Array(Set(l))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(unique(l:\
    \ [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: Exception
  stderr: 'tmpyd55t_ge/tmpyd55t_ge.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af388d8fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af388a86b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af388a86988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af388a857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyd55t_ge                        0x000055e72d11b575 <unavailable> + 5493

    5    libc.so.6                          0x00002af388f7b460 __libc_start_main +
    245

    6    tmpyd55t_ge                        0x000055e72d11b129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013622
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var r = [Int]()\n    for i in l {\n        if !contains(r, i) {\n   \
    \         r.append(i)\n        }\n    }\n    return r\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmp7hqzprnl.swift:8:13: error: cannot find 'contains' in scope\n \
    \       if !contains(r, i) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013735
- exit_code: -4
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var seen: [Int:Bool] = [:]\n    return l.filter {seen.updateValue(true,\
    \ forKey: $0) == nil}\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(unique(l:\
    \ [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: Exception
  stderr: 'tmppkvq5gvb/tmppkvq5gvb.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5eec95fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5eec656b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5eec656988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5eec6557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppkvq5gvb                        0x000055f87e7b1625 <unavailable> + 5669

    5    libc.so.6                          0x00002b5eecb4b460 __libc_start_main +
    245

    6    tmppkvq5gvb                        0x000055f87e7b11d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013736
- exit_code: 0
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var uniq = [Int]()\n    for el in l {\n        if !uniq.contains(el)\
    \ {\n            uniq.append(el)\n        }\n    }\n    return uniq.sorted()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013736
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var list = l\n    return list.uniq().sorted()\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5,\
    \ 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmpet8sur9z.swift:7:17: error: value of type '[Int]' has no member\
    \ 'uniq'\n    return list.uniq().sorted()\n           ~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660013735
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var arr = l\n    arr.sort(<)\n    var res: [Int] = []\n    var last =\
    \ arr[0]\n    res.append(last)\n    for num in arr {\n        if last != num {\n\
    \            res.append(num)\n            last = num\n        }\n    }\n    return\
    \ res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(unique(l: [5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmpsg2d56ab.swift:7:14: error: missing argument label 'by:' in call\n\
    \    arr.sort(<)\n             ^\n             by: \n"
  stdout: ''
  timestamp: 1660013735
- exit_code: -4
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    return Array(Set(l))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(unique(l:\
    \ [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: Exception
  stderr: 'tmpyd55t_ge/tmpyd55t_ge.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af388d8fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af388a86b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af388a86988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af388a857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyd55t_ge                        0x000055e72d11b575 <unavailable> + 5493

    5    libc.so.6                          0x00002af388f7b460 __libc_start_main +
    245

    6    tmpyd55t_ge                        0x000055e72d11b129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013622
- exit_code: -4
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var seen: [Int:Bool] = [:]\n    return l.filter({(x: Int) -> Bool in\n\
    \        if seen[x] != nil {\n            return false\n        } else {\n   \
    \         seen[x] = true\n            return true\n        }\n    })\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: Exception
  stderr: 'tmpog_r7_s_/tmpog_r7_s_.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a5c3d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a5c0cab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a5c0ca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a5c0c97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog_r7_s_                        0x000055a5440d8665 <unavailable> + 5733

    5    libc.so.6                          0x00002b3a5c5bf460 __libc_start_main +
    245

    6    tmpog_r7_s_                        0x000055a5440d8219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1660013736
- exit_code: 0
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var set = Set<Int>()\n    l.forEach { set.insert($0) }\n    return Array(set).sorted()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013736
- exit_code: -4
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n  return Array(Set(l))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(unique(l:\
    \ [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: Exception
  stderr: 'tmppdbe7vfh/tmppdbe7vfh.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad925efcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad925bf3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad925bf3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad925bf27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppdbe7vfh                        0x000055af2d964575 <unavailable> + 5493

    5    libc.so.6                          0x00002ad9260e8460 __libc_start_main +
    245

    6    tmppdbe7vfh                        0x000055af2d964129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013736
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    let sorted = sorted(l)\n    var result: [Int] = []\n    var last: Int?\n\
    \    for i in sorted {\n        if last != i {\n            result.append(i)\n\
    \            last = i\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3,\
    \ 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmpzs0cea8m.swift:6:18: error: use of local variable 'sorted' before\
    \ its declaration\n    let sorted = sorted(l)\n                 ^\n/tmp/tmpzs0cea8m.swift:6:9:\
    \ note: 'sorted' declared here\n    let sorted = sorted(l)\n        ^\n"
  stdout: ''
  timestamp: 1660013735
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var j = 0\n    for i in 1..<l.count {\n        if l[i] != l[j] {\n  \
    \          j += 1\n            l[j] = l[i]\n        }\n    }\n    return Array(l[0...j])\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmpszwrwprg.swift:10:14: error: cannot assign through subscript: 'l'\
    \ is a 'let' constant\n            l[j] = l[i]\n            ~^\n"
  stdout: ''
  timestamp: 1660013735
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    return Set(l).sort()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(unique(l:\
    \ [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmpyv86qisp.swift:6:19: error: value of type 'Set<Int>' has no member\
    \ 'sort'\n    return Set(l).sort()\n           ~~~~~~ ^~~~\n"
  stdout: ''
  timestamp: 1660013735
- exit_code: -4
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    return l.reduce([Int]()) { result, e in\n        if result.contains(e)\
    \ {\n            return result\n        } else {\n            return result +\
    \ [e]\n        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(unique(l:\
    \ [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: Exception
  stderr: 'tmp4lcfwwks/tmp4lcfwwks.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b825da59c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b825d750b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b825d750988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b825d74f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4lcfwwks                        0x000055ac9234f5a5 <unavailable> + 5541

    5    libc.so.6                          0x00002b825dc45460 __libc_start_main +
    245

    6    tmp4lcfwwks                        0x000055ac9234f159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1660013736
- exit_code: 0
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for i in l {\n        if !result.contains(i)\
    \ {\n            result.append(i)\n        }\n    }\n    return result.sorted()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013622
- exit_code: 0
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for i in l {\n        if !result.contains(i)\
    \ {\n            result.append(i)\n        }\n    }\n    return result.sorted()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013622
- exit_code: 0
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    return Array(Set(l)).sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013622
- exit_code: -4
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    return Array(Set(l))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(unique(l:\
    \ [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: Exception
  stderr: 'tmpyd55t_ge/tmpyd55t_ge.swift:22: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af388d8fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af388a86b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af388a86988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af388a857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyd55t_ge                        0x000055e72d11b575 <unavailable> + 5493

    5    libc.so.6                          0x00002af388f7b460 __libc_start_main +
    245

    6    tmpyd55t_ge                        0x000055e72d11b129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660013622
- exit_code: 0
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    return Array(Set(l)).sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013622
- exit_code: 1
  program: "\n/// Return sorted unique elements in a list\n/// >>> unique([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123])\n/// [0, 2, 3, 5, 9, 123]\nfunc unique(l: [Int]) -> [Int]\
    \ {\n    var l2 = l\n    l2.sort()\n    let result = l2.reduce([]) {\n       \
    \ acc, x in\n        if acc.last != x {\n            return acc + [x]\n      \
    \  } else {\n            return acc\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(unique(l: [5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123])"
  status: SyntaxError
  stderr: "/tmp/tmpincldhuh.swift:10:21: error: type '((Any) throws -> Bool) throws\
    \ -> Any?' cannot conform to 'BinaryInteger'\n        if acc.last != x {\n   \
    \                 ^\n/tmp/tmpincldhuh.swift:10:21: note: only concrete types such\
    \ as structs, enums and classes can conform to protocols\n        if acc.last\
    \ != x {\n                    ^\n/tmp/tmpincldhuh.swift:10:21: note: required\
    \ by referencing operator function '!=' on 'BinaryInteger' where 'Self' = '((Any)\
    \ throws -> Bool) throws -> Any?'\n        if acc.last != x {\n              \
    \      ^\n"
  stdout: ''
  timestamp: 1660013735

name: HumanEval_117_select_words
language: r
prompt: "# Given a string s and a natural number n, you have been tasked to implement\
  \ \n# a function that returns a list of all words from string s that contain exactly\
  \ \n# n consonants, in order these words appear in the string s.\n# If the string\
  \ s is empty then the function should return an empty list.\n# Note: you may assume\
  \ the input string contains only letters and spaces.\n# Examples:\n# >>> select_words('Mary\
  \ had a little lamb', 4)\n# list('little')\n# >>> select_words('Mary had a little\
  \ lamb', 3)\n# list('Mary', 'lamb')\n# >>> select_words('simple white space', 2)\n\
  # list()\n# >>> select_words('Hello world', 4)\n# list('world')\n# >>> select_words('Uncle\
  \ sam', 3)\n# list('Uncle')\nselect_words <- function(s, n) {"
tests: "test_humaneval <- function() {\ncandidate <- select_words\n    if(!identical(candidate('Mary\
  \ had a little lamb', 4), list('little'))){quit('no', 1)}\n    if(!identical(candidate('Mary\
  \ had a little lamb', 3), list('Mary', 'lamb'))){quit('no', 1)}\n    if(!identical(candidate('simple\
  \ white space', 2), list())){quit('no', 1)}\n    if(!identical(candidate('Hello\
  \ world', 4), list('world'))){quit('no', 1)}\n    if(!identical(candidate('Uncle\
  \ sam', 3), list('Uncle'))){quit('no', 1)}\n    if(!identical(candidate('', 4),\
  \ list())){quit('no', 1)}\n    if(!identical(candidate('a b c d e f', 1), list('b',\
  \ 'c', 'd', 'f'))){quit('no', 1)}\n}\ntest_humaneval()"
completions: []
stop_tokens:
- "\n#"
- "\n```"

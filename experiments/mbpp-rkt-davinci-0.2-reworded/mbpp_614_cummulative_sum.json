{
  "name": "mbpp_614_cummulative_sum",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function to find the cumulative sum of all the values that are present in the given list list.\n(define (cummulative_sum test_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_614_cummulative_sum.py",
  "prompt_terminology": "reworded",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate cummulative_sum))\n    (check-equal? (candidate (list (list 1 3) (list 5 6 7) (list 2 6))) 30)\n    (check-equal? (candidate (list (list 2 4) (list 6 7 8) (list 3 7))) 37)\n    (check-equal? (candidate (list (list 3 5) (list 7 8 9) (list 4 8))) 44)\n))\n\n(test-humaneval)",
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ],
  "completions": [
    "  (if (null? test_list)\n      0\n      (+ (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      0\n      (+ (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      0\n      (+ (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      0\n      (+ (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list)\n            (map + (cdr test_list) (cummulative_sum (cdr test_list))))))\n</code>\nI am getting the following error:\n<code>cummulative_sum: expects argument of type &lt;listof number&gt;; given '(1 2 3 4 5 6 7 8 9 10)\n</code>\nI am not sure what I am doing wrong.\n\n\nA:\n\nYou're using <code>map</code> incorrectly, it's not a function that takes two lists as arguments, it's a function that takes a function and a list as arguments.\n<code>(define (cummulative_sum test_list)\n  (if (null? test_list)\n      '()\n      (cons (car test_list)\n            (map + (cdr test_list) (cummulative_sum (cdr test_list))))))\n</code>\nShould be:\n<code>(define (cummulative_sum test_list)\n  (if (null? test_list)\n      '()\n      (cons (car test_list)\n            (map + (cdr test_list) (cummulative_sum (cdr test_list))))))\n</code>\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      0\n      (+ (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list)\n            (map + (cdr test_list) (cummulative_sum (cdr test_list))))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list)\n            (map + (cdr test_list)\n                  (cummulative_sum (cdr test_list))))))\n",
    "  (if (null? test_list)\n      0\n      (+ (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (cond\n    [(empty? test_list) empty]\n    [else (cons (car test_list) (cummulative_sum (cdr test_list)))]))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n",
    "  (if (null? test_list)\n      '()\n      (cons (car test_list) (cummulative_sum (cdr test_list)))))\n"
  ]
}